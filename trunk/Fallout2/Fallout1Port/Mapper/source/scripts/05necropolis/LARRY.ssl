#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure talk_p_proc;//    script_action == 11
procedure mutant00;
procedure mutant01;
procedure mutant02;
procedure combat;
procedure Critter_Action;//    script_action == 12
procedure destroy_p_proc;//    script_action == 18

variable Hostile;
variable init_teams := 0;
variable noevent;
variable loopcount;



procedure start
begin
//	variable LVar0 := 0;
//	variable LVar1 := 0;
//
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, PID_BAG) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BACKPACK) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BROWN_BAG) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if (not(init_teams)) then begin
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 34);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 79);
		set_local_var(1, 0);
		init_teams := 1;
	end
	else begin
		if ((script_action == 11) and (global_var(SUPER_MUTANTS_KILLED) < 1)) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
			if (global_var(WATERSHED_MUTANTS_LEAVE) == 0) then begin
				call talk_p_proc;
			end
			else begin
				display_msg(message_str(SCRIPT_LARRY, 108));
			end
		end
		else begin
			if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
				script_overrides;
				display_msg(message_str(SCRIPT_LARRY, 101));
			end
			else begin
				if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
					Hostile := 1;
				end
				else begin
					if (script_action == 12) then begin//<-- Critter_Action - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
						call Critter_Action;
					end
					else begin
						if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
							call destroy_p_proc;
						end
					end
				end
			end
		end
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	call mutant00;
end

procedure mutant00
begin
	float_msg(self_obj, message_str(SCRIPT_LARRY, 102), 3);
end

procedure mutant01
begin
	float_msg(self_obj, message_str(SCRIPT_LARRY, 103), 3);
	call combat;
end

procedure mutant02
begin
	float_msg(self_obj, message_str(SCRIPT_LARRY, 107), 3);
	call combat;
end

procedure combat
begin
	Hostile := 1;
end

procedure Critter_Action
begin
	if ((global_var(SUPER_MUTANTS_KILLED) > 0) and obj_can_see_obj(self_obj, dude_obj) and (global_var(WATERSHED_MUTANTS_LEAVE) < 1)) then begin
		Hostile := 1;
	end
	if (Hostile > 0) then begin
		Hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
	else begin
		if ((global_var(WATERSHED_MUTANTS_LEAVE) == 1) and (tile_num(self_obj) != 15507)) then begin
			animate_move_obj_to_tile(self_obj, 15507, 0);
		end
		else begin
			if ((global_var(WATERSHED_MUTANTS_LEAVE) == 1) and (tile_num(self_obj) == 15507)) then begin
				set_global_var(WATERSHED_MUTANTS_LEAVE, 2);
			end
			else begin
				if ((global_var(WATERSHED_MUTANTS_LEAVE) == 2) and (tile_num(self_obj) != 12536)) then begin
					animate_move_obj_to_tile(self_obj, 12536, 0);
				end
				else begin
					if ((tile_num(self_obj) == 12536) and (global_var(WATERSHED_MUTANTS_LEAVE) == 2)) then begin
						if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
					end
				end
			end
		end
	end
end

procedure destroy_p_proc
begin

	set_global_var(SUPER_MUTANTS_KILLED, global_var(SUPER_MUTANTS_KILLED) + 1);
	if (global_var(SUPER_MUTANTS_KILLED) >= global_var(MAX_MUTANTS)) then begin
		set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 3);
		set_global_var(NECROP_MUTANTS_KILLED, 2);
		if global_var(NECRO_30_DAYS_GVAR225) or global_var(FIXT_BUGFIXES_ONLY) then begin
			set_global_var(NECRO_MUTANTS_TIME_LEFT, game_time / (10 * 60 * 60 * 24));
			if (global_var(NECROPOLIS_INVADED_DATE) > (global_var(NECRO_MUTANTS_TIME_LEFT) + 30)) then begin
				set_global_var(NECROPOLIS_INVADED_DATE, global_var(NECRO_MUTANTS_TIME_LEFT) + 30);
			end
		end
	end
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
	end
end

