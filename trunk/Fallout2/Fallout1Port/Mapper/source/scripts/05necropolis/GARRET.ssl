/*

	Necropolis - Garret

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_GARRET
#define TOWN_REP_VAR            (GVAR_TOWN_REP_NECROPOLIS)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure garretend;
procedure garretcbt;
procedure goodstuff;
procedure neutstuff;
procedure badstuff;
procedure reward;
procedure done;
procedure garret00a;
procedure garret00b;
procedure garret00c;
procedure garret00ca;
procedure garret01a;
procedure garret01c;
procedure garret02a;
procedure garret02c;
procedure garret03c;
procedure garret04;
procedure give_flare;
procedure give_cola;

import variable Fridge_ptr;
import variable Garret_ptr;

variable Shotgun_ptr;
variable Shells_ptr;
variable Cola_ptr;
variable Flare_ptr;
variable Hostile;
variable init := 0;
variable maxleash := 9;
variable noevent;
variable loopcount;
variable new_tile;
variable gavelist;
variable moving;
variable stuff;
variable indlog;
variable robbed;
variable flare_count;
variable cola_count;
variable CASH;
variable THRONE;
variable target_hex := 20113;
variable my_hex;

procedure start
begin


	if (not(init)) then begin
		if (local_var(7) == 0) then begin
			set_local_var(7, tile_num(self_obj));
		end
		set_self_team(TEAM_NECROPOLIS_GANGER );
		set_self_ai( AI_GHOUL_NASTY );
		Garret_ptr := self_obj;
		init := 1;
	end
	else begin
		if (script_action == 14) then begin//<-- damage_p_proc - has this Critter or Object been shot, hit with TNT, punched, etc.
			call damage_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
					script_overrides;
					display_msg(message_str(SCRIPT_GARRET, 100));
				end
				else begin
					if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
						Hostile := 1;
					end
					else begin
						if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
							if (global_var( GVAR_ENEMY_NECROPOLIS ) and obj_can_see_obj(self_obj, dude_obj)) then begin
								attack(dude_obj);
							end
							else begin
								my_hex := tile_num(self_obj);
								if (Hostile > 0) then begin
									set_global_var( GVAR_ENEMY_NECROPOLIS, 1 );
									attack(dude_obj);
								end
								if (global_var( GVAR_SIGNAL_REWARD ) bwand 1) then begin
									if (local_var(5) == 0) then begin
										moving := 1;
										float_msg(self_obj, message_str(SCRIPT_GARRET, 114), 0);
										set_local_var(5, 1);
									end
									else begin
										if (local_var(5) == 1) then begin
											moving := 1;
											if (my_hex != target_hex) then begin
												animate_move_obj_to_tile(self_obj, target_hex, 0);
											end
											else begin
												set_local_var(5, 2);
												use_obj(Fridge_ptr);
											end
										end
										else begin
											if (local_var(5) == 2) then begin
												moving := 1;
												if (tile_distance_objs(self_obj, dude_obj) < 5) then begin
													call reward;
													set_local_var(5, 3);
													use_obj(Fridge_ptr);
												end
											end
											else begin
												if (local_var(5) == 3) then begin
													moving := 1;
													target_hex := local_var(7);
													if (my_hex != target_hex) then begin
														animate_move_obj_to_tile(self_obj, target_hex, 0);
													end
													else begin
														call done;
													end
												end
											end
										end
									end
								end
							end
						end
						else begin
							if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.

								set_global_var( GVAR_ENEMY_NECROPOLIS, 1 );
								set_global_var( GVAR_GARRET_STATUS, 3 );
								inc_evil_critter
							end
						end
					end
				end
			end
		end
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	if ((local_var(8) == 0) and (global_var( GVAR_SIGNAL_REWARD ) bwand 2)) then begin
		set_local_var(8, 1);
		float_msg(self_obj, message_str(SCRIPT_GARRET, 201), 0);
		display_msg(message_str(SCRIPT_GARRET, 202));
		stuff := create_object( PID_SMALL_ENERGY_CELL, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_MICRO_FUSION_CELL, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_BUFFOUT, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_MENTATS, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_STIMPAK, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_STIMPAK, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_FRAG_GRENADE, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_FRAG_GRENADE, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_PLASMA_GRENADE, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_PLASMA_GRENADE, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_PULSE_GRENADE, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_PULSE_GRENADE, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_5MM_JHP, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_5MM_JHP, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_5MM_JHP, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_5MM_JHP, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_5MM_AP, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_5MM_AP, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_5MM_AP, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
		stuff := create_object( PID_5MM_AP, 0, 0 );
		add_obj_to_inven(dude_obj, stuff);
	end
	else begin
		if (moving) then begin
			display_msg(message_str(SCRIPT_GARRET, 200));
		end
		else begin
			if ((game_time_hour >= 700) and (game_time_hour < 1800)) then begin
				get_reaction
				if (local_var(4)) then begin
					call garret02a;
				end
				else begin
					set_local_var(4, 1);
					if (local_var(1) >= 2) then begin
						call garret04;
					end
					else begin
						call garret01a;
					end
				end
			end
			else begin
				call garret00b;
			end
		end
	end
end

procedure garretend
begin
end

procedure garretcbt
begin
	Hostile := 1;
end

procedure goodstuff
begin
	CASH := CASH + 100;
	item_caps_adjust(dude_obj, 100);
	call neutstuff;
	call badstuff;
end

procedure neutstuff
begin
	CASH := CASH + 50;
	item_caps_adjust(dude_obj, 50);
	/* has how many? */    if (obj_is_carrying_obj_pid(Fridge_ptr, PID_SHOTGUN)) then begin
		display_msg(message_str(SCRIPT_GARRET, 204));
		Shotgun_ptr := obj_carrying_pid_obj(Fridge_ptr, PID_SHOTGUN);
		rm_obj_from_inven(Fridge_ptr, Shotgun_ptr);
		add_obj_to_inven(dude_obj, Shotgun_ptr);
	end
	else begin
		robbed := 1;
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(Fridge_ptr, PID_SHOTGUN_SHELLS)) then begin
		display_msg(message_str(SCRIPT_GARRET, 205));
		Shells_ptr := obj_carrying_pid_obj(Fridge_ptr, PID_SHOTGUN_SHELLS);
		rm_obj_from_inven(Fridge_ptr, Shells_ptr);
		add_obj_to_inven(dude_obj, Shells_ptr);
	end
	else begin
		robbed := 1;
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(Fridge_ptr, PID_SHOTGUN_SHELLS)) then begin
		Shells_ptr := obj_carrying_pid_obj(Fridge_ptr, PID_SHOTGUN_SHELLS);
		rm_obj_from_inven(Fridge_ptr, Shells_ptr);
		add_obj_to_inven(dude_obj, Shells_ptr);
	end
	else begin
		robbed := 1;
	end
end

procedure badstuff
begin
	CASH := CASH + 50;
	item_caps_adjust(dude_obj, 50);
	flare_count := 0;
	call give_flare;
	call give_flare;
	call give_flare;
	call give_flare;
	cola_count := 0;
	call give_cola;
	call give_cola;
	call give_cola;
	call give_cola;
end

procedure reward
begin
	CASH := 0;
	robbed := 0;
	display_msg(message_str(SCRIPT_GARRET, 203));
	if (local_var(1) >= 3) then begin
		call goodstuff;
	end
	else begin
		if (local_var(1) >= 2) then begin
			call neutstuff;
		end
		else begin
			call badstuff;
		end
	end
	if (flare_count) then begin
		if (flare_count > 1) then begin
			display_msg(message_str(SCRIPT_GARRET, 206));
		end
		else begin
			display_msg(message_str(SCRIPT_GARRET, 207));
		end
	end
	if (cola_count) then begin
		if (cola_count > 1) then begin
			display_msg(message_str(SCRIPT_GARRET, 208));
		end
		else begin
			display_msg(message_str(SCRIPT_GARRET, 209));
		end
	end
	display_msg(CASH + message_str(SCRIPT_GARRET, 210));
	if (robbed) then begin
		float_msg(self_obj, message_str(SCRIPT_GARRET, 121), 0);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_GARRET, 201), 0);
	end
end

procedure done
begin
	moving := 0;
	set_local_var(5, 4);
end

procedure garret00a
begin
	gsay_reply(102, 101);
	giq_option( 4, SCRIPT_GARRET, 102, garretend, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GARRET, 103, garret01a, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_GARRET, 104, garret02a, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_GARRET, 112, garretend, NEUTRAL_REACTION );
end

procedure garret00b
begin
	float_msg(self_obj, message_str(SCRIPT_GARRET, 105), 0);
	call garretend;
end

procedure garret00c
begin
	gsay_reply(102, 109);
	giq_option( 3, SCRIPT_GARRET, 110, garret01c, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_GARRET, 111, garret00ca, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_GARRET, 112, garret02c, NEUTRAL_REACTION );
end

procedure garret00ca
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call garret03c;
	end
	else begin
		call garret02c;
	end
end

procedure garret01a
begin
	if (indlog) then begin
		gsay_message(102, 113, 50);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_GARRET, 113), 0);
	end
	call garretend;
end

procedure garret01c
begin
	gsay_message(102, 115, 50);
	DownReact
	call garretend;
end

procedure garret02a
begin
	DownReact
	if (indlog) then begin
		gsay_message(102, 116, 50);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_GARRET, 116), 0);
	end
	call garretend;
end

procedure garret02c
begin
	gsay_message(102, 117, 50);
	call garretend;
end

procedure garret03c
begin
	gsay_message(102, 118, 50);
	display_msg(message_str(SCRIPT_GARRET, 119));
	gsay_message(102, 120, 50);
	call garretend;
end

procedure garret04
begin
	start_gdialog(102, self_obj, 4, -1, -1);
	gsay_start;
	indlog := 1;
	call garret00a;
	indlog := 0;
	gsay_end;
	end_dialogue;
end

procedure give_flare
begin
	/* has how many? */    if (obj_is_carrying_obj_pid(Fridge_ptr, PID_FLARE)) then begin
		flare_count := flare_count + 1;
		Flare_ptr := obj_carrying_pid_obj(Fridge_ptr, PID_FLARE);
		rm_obj_from_inven(Fridge_ptr, Flare_ptr);
		add_obj_to_inven(dude_obj, Flare_ptr);
	end
	else begin
		robbed := 1;
	end
end

procedure give_cola
begin
	/* has how many? */    if (obj_is_carrying_obj_pid(Fridge_ptr, PID_NUKA_COLA)) then begin
		cola_count := cola_count + 1;
		Cola_ptr := obj_carrying_pid_obj(Fridge_ptr, PID_NUKA_COLA);
		rm_obj_from_inven(Fridge_ptr, Cola_ptr);
		add_obj_to_inven(dude_obj, Cola_ptr);
	end
	else begin
		robbed := 1;
	end
end



procedure destroy_p_proc begin
	inc_neutral_critter
end

procedure damage_p_proc
begin
set_global_var( GVAR_ENEMY_NECROPOLIS, 1 );
end






