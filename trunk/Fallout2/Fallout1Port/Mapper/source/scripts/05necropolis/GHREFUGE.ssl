/*

	Necropolis - Refugee

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\mapnecro.h"

#define NAME                    SCRIPT_GHREFUGE
#define TOWN_REP_VAR            (GVAR_TOWN_REP_NECROPOLIS)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;

procedure ghoul00;
procedure ghoul00a;
procedure ghoul01;
procedure ghoul02;
procedure ghoul03;
procedure ghoul04;
procedure ghoul05;
procedure ghoul05a;
procedure ghoul06;
procedure ghoul07;
procedure ghoul07a;
procedure ghoul08;
procedure ghoul09;
procedure ghoul09a;
procedure ghoul10;
procedure ghoul11;
procedure ghoul12;
procedure ghoul13;
procedure ghoul14;
procedure ghoul15;
procedure ghoul16;

procedure ghoulend;
procedure ghoulcbt;
procedure timetomove;

variable tmp_hostile;
variable init := 0;
variable maxleash := 20;
variable noevent;
variable loopcount;
variable new_tile;
variable HENRY;

procedure start begin
	if (not(init)) then begin
		init := 1;
		if (local_var(7) == 0) then begin
			set_local_var(7, self_tile);
			set_local_var(5, 0);
		end
		set_self_team(TEAM_NECROPOLIS_GANGER );
		set_self_ai( AI_GHOUL_COWARD );
	end
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_GHREFUGE, 100));
end

procedure description_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_GHREFUGE, 100));
end

procedure combat_p_proc begin
end

procedure talk_p_proc begin
	dude_look_at_self;
	get_reaction
	start_gdialog(74, self_obj, 4, -1, -1);
	gsay_start;
	if (local_var(4)) then begin
		if (local_var(1) >= 2) then begin
			call ghoul14;
		end
		else begin
			call ghoul03;
		end
	end
	else if (local_var(1) >= 2) then begin
		set_local_var(4, 1);
		call ghoul00;
	end
	else begin
		set_local_var(4, 1);
		call ghoul03;
	end
	gsay_end;
	end_dialogue;
end

procedure ghoulend begin
end

procedure ghoulcbt
begin
	tmp_hostile := 1;
end

procedure ghoul00
begin
	gsay_reply(74, 101);
	giq_option( 4, SCRIPT_GHREFUGE, 102, ghoul00a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 103, ghoulend, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_GHREFUGE, 104, ghoul05, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_GHREFUGE, 105, ghoul01, NEUTRAL_REACTION );
end

procedure ghoul00a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call ghoul02;
	end
	else begin
		call ghoul01;
	end
end

procedure ghoul01
begin
	gsay_message(74, 106, 50);
	call ghoulcbt;
end

procedure ghoul02
begin
	gsay_reply(74, 107);
	giq_option( 4, SCRIPT_GHREFUGE, 108, ghoulend, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 109, ghoul04, NEUTRAL_REACTION );
end

procedure ghoul03
begin
	gsay_message(74, 110, 50);
	call ghoulcbt;
end

procedure ghoul04
begin
	gsay_reply(74, 111);
	giq_option( 4, SCRIPT_GHREFUGE, 112, ghoulcbt, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 113, ghoul05, NEUTRAL_REACTION );
end

procedure ghoul05
begin
	if (local_var(1) < 2) then begin
		gsay_reply(74, 114);
	end
	else begin
		gsay_reply(74, 115);
	end
	giq_option( 4, SCRIPT_GHREFUGE, 116, ghoul12, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 117, ghoul11, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_GHREFUGE, 118, ghoul05a, NEUTRAL_REACTION );
end

procedure ghoul05a
begin
	if (HENRY == 0) then begin
		call ghoul07;
	end
	else begin
		call ghoul06;
	end
end

procedure ghoul06
begin
	gsay_reply(74, 119);
	giq_option( 4, SCRIPT_GHREFUGE, 120, ghoulend, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 121, ghoul03, NEUTRAL_REACTION );
end

procedure ghoul07
begin
	gsay_reply(74, 122);
	giq_option( 4, SCRIPT_GHREFUGE, 123, ghoul07a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 124, ghoulend, NEUTRAL_REACTION );
end

procedure ghoul07a
begin
	if (local_var(1) < 2) then begin
		call ghoul08;
	end
	else begin
		call ghoul09;
	end
end

procedure ghoul08
begin
	gsay_reply(74, 125);
	giq_option( 4, SCRIPT_GHREFUGE, 126, ghoulend, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 127, ghoul03, NEUTRAL_REACTION );
end

procedure ghoul09
begin
	gsay_reply(74, 128);
	giq_option( 4, SCRIPT_GHREFUGE, 129, ghoulend, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 130, ghoul09a, NEUTRAL_REACTION );
end

procedure ghoul09a
begin
	DownReact
	if (local_var(1) < 2) then begin
		call ghoul03;
	end
	else begin
		call ghoul10;
	end
end

procedure ghoul10
begin
	gsay_reply(74, 131);
	giq_option( 4, SCRIPT_GHREFUGE, 132, ghoulend, NEUTRAL_REACTION );
end

procedure ghoul11
begin
	gsay_reply(74, 133);
	giq_option( 4, SCRIPT_GHREFUGE, 134, ghoul05a, NEUTRAL_REACTION );
end

procedure ghoul12
begin
	gsay_reply(74, 135);
	giq_option( 4, SCRIPT_GHREFUGE, 136, ghoul05a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 137, ghoul13, NEUTRAL_REACTION );
end

procedure ghoul13
begin
	gsay_reply(74, 138);
	giq_option( 4, SCRIPT_GHREFUGE, 139, ghoulcbt, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 140, ghoulend, NEUTRAL_REACTION );
end

procedure ghoul14
begin
	gsay_reply(74, 141);
	giq_option( 4, SCRIPT_GHREFUGE, 142, ghoul15, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 143, ghoul16, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_GHREFUGE, 105, ghoul01, NEUTRAL_REACTION );
end

procedure ghoul15
begin
	gsay_reply(74, 144);
	giq_option( 4, SCRIPT_GHREFUGE, 145, ghoulend, NEUTRAL_REACTION );
end

procedure ghoul16
begin
	gsay_message(74, 146, 50);
end

procedure critter_p_proc
begin
	if (tmp_hostile > 0) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (local_var(5)) then begin
			loopcount := loopcount + 1;
			if (loopcount > 40) then begin
				loopcount := 0;
				if (noevent == 0) then begin
					noevent := 1;
					add_timer_event(self_obj, game_ticks(random(5, 13)), 0);
				end
			end
		end
	end
end

procedure timetomove
begin
	noevent := 0;
	set_local_var(6, self_tile);
	new_tile := tile_num_in_direction(local_var(6), random(0, 5), 2);
	if (tile_distance(local_var(7), new_tile) < maxleash) then begin
		self_walk_to_tile( new_tile );
	end
end

procedure pickup_p_proc
begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end



procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	inc_good_critter
	rm_timer_event(self_obj);
end
