/*

	Necropolis - Refugee

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_GHREFUGE
#define TOWN_REP_VAR            (GVAR_TOWN_REP_NECROPOLIS)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure combat_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure combat_rads_inc;

procedure ghoul00;
procedure ghoul00a;
procedure ghoul01;
procedure ghoul02;
procedure ghoul03;
procedure ghoul04;
procedure ghoul05;
procedure ghoul05a;
procedure ghoul06;
procedure ghoul07;
procedure ghoul07a;
procedure ghoul08;
procedure ghoul09;
procedure ghoul09a;
procedure ghoul10;
procedure ghoul11;
procedure ghoul12;
procedure ghoul13;
procedure ghoul14;
procedure ghoul15;
procedure ghoul16;

procedure ghoulend;
procedure ghoulcbt;
procedure timetomove;

variable tmp_hostile;
variable init := 0;
variable maxleash := 20;
variable noevent;
variable loopcount;
variable new_tile;
variable HENRY;

variable rndRads;
variable rndx;

procedure start begin
	if (not(init)) then begin
		init := 1;
		if (local_var(7) == 0) then begin
			set_local_var(7, self_tile);
			set_local_var(5, 0);
		end
		set_self_team(TEAM_NECROPOLIS_GANGER );
		set_self_ai( AI_GHOUL_COWARD );
	end
	if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
		call talk_p_proc;
	end
	else begin
		if ((script_action == 21) or (script_action == 3)) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
			script_overrides;
			display_msg(message_str(SCRIPT_GHREFUGE, 100));
		end
	end
end

procedure combat_p_proc
begin
	if (fixed_param == 2) then begin
		if (target_obj == dude_obj) then begin
			if global_var( GVAR_DEBUG_MODE_MESSAGES_ON ) then begin
				debug_msg("Combat Rads From Irradiated Critters BEGINS");
			end
			if not(global_var( GVAR_FIXT_BUGFIXES_ONLY )) then begin
				variable cont := 0;// checked to see if continue to run the code after each stage
				variable CritterTYPE := 0;// 1 = Ghoul, 2 = Floater, 3 = Centaur, 4 = RadRat, 5 = GlowingOne
				if global_var( GVAR_HIT_GIVES_RADS_GHOULS ) > 0 then begin// HIT_GIVES_RADS_GHOULS
					if (obj_pid(self_obj) == (16777216 + 14)) or (obj_pid(self_obj) == (16777216 + 104)) or (obj_pid(self_obj) == (16777216 + 105)) or (obj_pid(self_obj) == (16777216 + 106)) or (obj_pid(self_obj) == (16777216 + 109)) or (obj_pid(self_obj) == (16777216 + 110)) or (obj_pid(self_obj) == (16777216 + 131)) or (obj_pid(self_obj) == (16777216 + 157)) or (obj_pid(self_obj) == (16777216 + 184)) then begin// 14 = Zombie Guard, 104 = Set, 105 = Garret, 106 = Zombie, 109 = Ghoul Guard, 110 = Undergrounder, 131 = Talius, 157 = Harold, 184 = Zombie
						CritterTYPE := 1;
						cont := 1;
					end
				end
				if not(continue) then begin
					if global_var( GVAR_HIT_GIVES_MORE_RADS_GLOW ) > 0 then begin// HIT_GIVES_MORE_RADS_GLOW
						if (obj_pid(self_obj) == (16777216 + 16)) or (obj_pid(self_obj) == (16777216 + 182)) or (obj_pid(self_obj) == (16777216 + 183)) then begin// 16 = Glowing One, 182 = Glower, 183 = Mad Glowing One
							CritterTYPE := 5;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var( GVAR_HIT_GIVES_MORE_RADS_RATS ) > 0 then begin// HIT_GIVES_MORE_RADS_RATS
						if (obj_pid(self_obj) == (16777216 + 160)) or (obj_pid(self_obj) == (16777216 + 161)) then begin//  160, 161 = Rad Rat
							CritterTYPE := 4;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var( GVAR_HIT_GIVES_RADS_FLOATERS ) > 0 then begin// HIT_GIVES_RADS_FLOATERS
						if (obj_pid(self_obj) == (16777216 + 45)) or (obj_pid(self_obj) == (16777216 + 167)) then begin//  45 = Floater, 167 = Bloody Floater
							CritterTYPE := 2;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var( GVAR_HIT_GIVES_RADS_CENTAURS ) > 0 then begin// HIT_GIVES_RADS_CENTAURS
						if (obj_pid(self_obj) == (16777216 + 43)) or (obj_pid(self_obj) == (16777216 + 168)) then begin//  43 = Lesser Centaur, 168 = Greater Centaur
							CritterTYPE := 3;
							cont := 1;
						end
					end
				end
				if continue then begin
					variable BonusRads := 0;
					if (CritterTYPE == 5) or (CritterTYPE == 4) then begin
						BonusRads := 1;
					end
					if (random(0, 3) + combat_difficulty + BonusRads) >= 3 then begin// CHANCE TO RUN = Easy: 25%, 50% if glowing/radrat - Normal: 50%, 75% if glowing - Brutal: 75%, 100% if glowing/radrat
						variable giveRads := 1;
						if self_right_hand then begin
							if (obj_pid(self_right_hand) != PID_BRASS_KNUCKLES) and (obj_pid(self_right_hand) != PID_SPIKED_KNUCKLES) and (obj_pid(self_right_hand) != PID_POWER_FIST) then begin// Brass Knuckles, Spiked Knuckles, Power Fist
								giveRads := 0;
							end
						end
						if self_left_hand then begin
							if (obj_pid(self_left_hand) != PID_BRASS_KNUCKLES) and (obj_pid(self_left_hand) != PID_SPIKED_KNUCKLES) and (obj_pid(self_left_hand) != PID_POWER_FIST) then begin// Brass Knuckles, Spiked Knuckles, Power Fist
								giveRads := 0;
							end
						end
						if giveRads == 1 then begin
							variable LuckRoll := 0;
							variable EnduranceRoll := 0;
							LuckRoll := do_check(dude_obj, STAT_lu, 0);
							EnduranceRoll := do_check(dude_obj, STAT_en, 0);
							rndRads := 0;
							if not(is_success(LuckRoll)) and not(is_success(EnduranceRoll)) then begin
								rndRads := random((2 + combat_difficulty + BonusRads), (3 + combat_difficulty + BonusRads));// EASY: 2-3 / 3-4 if glowing/radrat, NORMAL: 3-4 / 4-5 if glowing/radrat, BRUTAL: 4-5 / 5-6 if glowing/radrat
							end
							else begin
								if not(is_success(LuckRoll)) or not(is_success(EnduranceRoll)) then begin
									rndRads := random((1 + combat_difficulty + BonusRads), (2 + combat_difficulty + BonusRads));// EASY: 1-2 / 2-3 if glowing/radrat, NORMAL: 2-3 / 3-4 if glowing/radrat, BRUTAL: 3-4 / 4-5 if glowing/radrat
								end
								else begin
									if (random(0, 5) + BonusRads) >= 5 then begin// Chance to run if both stat checks pass: 16.67%, 33% if glowing/radrat
										rndRads := random((0 + combat_difficulty + BonusRads), (1 + combat_difficulty + BonusRads));// EASY: 0-1 / 1-2 if glowing/radrat, NORMAL: 1-2 / 2-3 if glowing/radrat, BRUTAL: 2-3 / 3-4 if glowing/radrat
									end
								end
							end
							if rndRads > 0 then begin
								call combat_rads_inc;
							end
						end
					end
				end
			end
			else begin// if (BUG_FIXES_ONLY == 1)
				if (obj_pid(self_obj) == PID_GLOWING_ONE) or (obj_pid(self_obj) == PID_RADIATED_RAT) or (obj_pid(self_obj) == PID_TOUGH_RADIATED_RAT) or (obj_pid(self_obj) == PID_GLOWER) or (obj_pid(self_obj) == PID_MAD_GLOWING_ONE) then begin
					variable rndx := 0;
					rndx := (random(1, 4) - 3);// was 1d6 - 5, is now 1d4 - 3
					if (rndx < 0) then begin
						rndx := 0;
					end
					if (rndx > 0) then begin
						radiation_inc(dude_obj, rndx);
						display_msg(message_str(SCRIPT_GENGHOUL, 1004));
					end
				end
			end
			if global_var( GVAR_DEBUG_MODE_MESSAGES_ON ) then begin
				debug_msg("Combat Rads From Irradiated Critters ENDS");
			end
		end
	end
end

procedure combat_rads_inc
begin
	radiation_inc(dude_obj, rndRads);
	if ((rndRads == 1) or (rndRads == 2)) then begin
		display_msg(message_str(SCRIPT_GENGHOUL, 1004));
	end
	else begin
		if ((rndRads > 2) and (rndRads <= 5)) then begin
			display_msg(message_str(SCRIPT_GENGHOUL, 1005));
		end
		else begin
			if ((rndRads > 5) and (rndRads < 10)) then begin
				display_msg(message_str(SCRIPT_GENGHOUL, 1006));
			end
		end
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	start_gdialog(74, self_obj, 4, -1, -1);
	gsay_start;
	if (local_var(4)) then begin
		if (local_var(1) >= 2) then begin
			call ghoul14;
		end
		else begin
			call ghoul03;
		end
	end
	else begin
		if (local_var(1) >= 2) then begin
			set_local_var(4, 1);
			call ghoul00;
		end
		else begin
			set_local_var(4, 1);
			call ghoul03;
		end
	end
	gsay_end;
	end_dialogue;
end

procedure ghoulend
begin
end

procedure ghoulcbt
begin
	tmp_hostile := 1;
end

procedure ghoul00
begin
	gsay_reply(74, 101);
	giq_option( 4, SCRIPT_GHREFUGE, 102, ghoul00a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 103, ghoulend, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_GHREFUGE, 104, ghoul05, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_GHREFUGE, 105, ghoul01, NEUTRAL_REACTION );
end

procedure ghoul00a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call ghoul02;
	end
	else begin
		call ghoul01;
	end
end

procedure ghoul01
begin
	gsay_message(74, 106, 50);
	call ghoulcbt;
end

procedure ghoul02
begin
	gsay_reply(74, 107);
	giq_option( 4, SCRIPT_GHREFUGE, 108, ghoulend, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 109, ghoul04, NEUTRAL_REACTION );
end

procedure ghoul03
begin
	gsay_message(74, 110, 50);
	call ghoulcbt;
end

procedure ghoul04
begin
	gsay_reply(74, 111);
	giq_option( 4, SCRIPT_GHREFUGE, 112, ghoulcbt, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 113, ghoul05, NEUTRAL_REACTION );
end

procedure ghoul05
begin
	if (local_var(1) < 2) then begin
		gsay_reply(74, 114);
	end
	else begin
		gsay_reply(74, 115);
	end
	giq_option( 4, SCRIPT_GHREFUGE, 116, ghoul12, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 117, ghoul11, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_GHREFUGE, 118, ghoul05a, NEUTRAL_REACTION );
end

procedure ghoul05a
begin
	if (HENRY == 0) then begin
		call ghoul07;
	end
	else begin
		call ghoul06;
	end
end

procedure ghoul06
begin
	gsay_reply(74, 119);
	giq_option( 4, SCRIPT_GHREFUGE, 120, ghoulend, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 121, ghoul03, NEUTRAL_REACTION );
end

procedure ghoul07
begin
	gsay_reply(74, 122);
	giq_option( 4, SCRIPT_GHREFUGE, 123, ghoul07a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 124, ghoulend, NEUTRAL_REACTION );
end

procedure ghoul07a
begin
	if (local_var(1) < 2) then begin
		call ghoul08;
	end
	else begin
		call ghoul09;
	end
end

procedure ghoul08
begin
	gsay_reply(74, 125);
	giq_option( 4, SCRIPT_GHREFUGE, 126, ghoulend, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 127, ghoul03, NEUTRAL_REACTION );
end

procedure ghoul09
begin
	gsay_reply(74, 128);
	giq_option( 4, SCRIPT_GHREFUGE, 129, ghoulend, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 130, ghoul09a, NEUTRAL_REACTION );
end

procedure ghoul09a
begin
	DownReact
	if (local_var(1) < 2) then begin
		call ghoul03;
	end
	else begin
		call ghoul10;
	end
end

procedure ghoul10
begin
	gsay_reply(74, 131);
	giq_option( 4, SCRIPT_GHREFUGE, 132, ghoulend, NEUTRAL_REACTION );
end

procedure ghoul11
begin
	gsay_reply(74, 133);
	giq_option( 4, SCRIPT_GHREFUGE, 134, ghoul05a, NEUTRAL_REACTION );
end

procedure ghoul12
begin
	gsay_reply(74, 135);
	giq_option( 4, SCRIPT_GHREFUGE, 136, ghoul05a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 137, ghoul13, NEUTRAL_REACTION );
end

procedure ghoul13
begin
	gsay_reply(74, 138);
	giq_option( 4, SCRIPT_GHREFUGE, 139, ghoulcbt, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 140, ghoulend, NEUTRAL_REACTION );
end

procedure ghoul14
begin
	gsay_reply(74, 141);
	giq_option( 4, SCRIPT_GHREFUGE, 142, ghoul15, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GHREFUGE, 143, ghoul16, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_GHREFUGE, 105, ghoul01, NEUTRAL_REACTION );
end

procedure ghoul15
begin
	gsay_reply(74, 144);
	giq_option( 4, SCRIPT_GHREFUGE, 145, ghoulend, NEUTRAL_REACTION );
end

procedure ghoul16
begin
	gsay_message(74, 146, 50);
end

procedure critter_p_proc
begin
	if (tmp_hostile > 0) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (local_var(5)) then begin
			loopcount := loopcount + 1;
			if (loopcount > 40) then begin
				loopcount := 0;
				if (noevent == 0) then begin
					noevent := 1;
					add_timer_event(self_obj, game_ticks(random(5, 13)), 0);
				end
			end
		end
	end
end

procedure timetomove
begin
	noevent := 0;
	set_local_var(6, self_tile);
	new_tile := tile_num_in_direction(local_var(6), random(0, 5), 2);
	if (tile_distance(local_var(7), new_tile) < maxleash) then begin
		animate_move_obj_to_tile(self_obj, new_tile, 0);
	end
end

procedure pickup_p_proc
begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end



procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	inc_good_critter		
	rm_timer_event(self_obj);
end
