#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure gameover;
procedure talk_p_proc;//    script_action == 11
procedure Critter_Action;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure destroy_p_proc;//    script_action == 18

procedure surprise;
procedure harryleave;
procedure harryend;
procedure harrycbt;
procedure harryturn;
procedure harryextra;
procedure harrytime;
procedure harrytime2;
procedure harry00;
procedure harry00a;
procedure harry00b;
procedure harry00_2;
procedure harry00_3;
procedure harry01;
procedure harry02;
procedure harry03;
procedure harry03_2;
procedure harry03_5;
procedure harry04;
procedure harry05;
procedure harry06;
procedure harry07;
procedure harry07b;
procedure harry08;
procedure harry08_2;
procedure harry09;
procedure harry10;
procedure harry11;
procedure harry12;
procedure harry12_2;
procedure harry12_3;
procedure harry13;
procedure harry13_2;
procedure harry14;
procedure harry14_2;
procedure harry15;
procedure harry16;
procedure harry17;
procedure harry18;
procedure harry19;
procedure harry19_2;
procedure harry20;
procedure harry21;
procedure harry22;
procedure harry23;
procedure harry24;
procedure harry25;
procedure harry26;
procedure harry27;
procedure harry200;
procedure harry201;
procedure harry202;
procedure harry203;
procedure harry204;
procedure harry205;
procedure harry206;
procedure harry207;
procedure harry300;
procedure harry301;
procedure harry302;
procedure harry303;
procedure harry304;
procedure harry305;
procedure harry306;
procedure harry307;
procedure harry308;
procedure harryxxx;

variable Hostile;
variable init_teams := 0;
variable noevent;
variable loopcount;
variable HarryThinks;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


//
//	SPEECH SHOULD POINT TO EITHER 16 OR 79
//

procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, 17) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, 17); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 2) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, 2); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 1) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, 1); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 74) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, 74); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 113) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, 113); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if (not(init_teams)) then begin
		init_teams := 1;
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 34);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 79);
		set_local_var(5, 0);
	end
	if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
		if (global_var(WATERSHED_MUTANTS_LEAVE) == 0) then begin
			call talk_p_proc;
		end
		else begin
			display_msg(message_str(16, 193));
		end
	end
	else begin
		if (script_action == 3) then begin// examine
			if local_var(6) then begin
				script_overrides;
				set_local_var(6, 1);
				display_msg(message_str(16, 100));
			end
		end
		else begin
			if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
				if (obj_can_see_obj(self_obj, dude_obj)) then begin
					if (fixed_param == 1) then begin
						call harry07b;
					end
					else begin
						if (fixed_param == 2) then begin
							call harry21;
						end
					end
				end
			end
			else begin
				if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
					call pickup_p_proc;
				end
				else begin
					if (script_action == 12) then begin//<-- Critter_Action - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
						if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance_objs(self_obj, dude_obj) < 8) and (global_var(WATERSHED_MUTANTS_LEAVE) < 1)) then begin
							if (local_var(4) == 0) then begin
								dialogue_system_enter;
							end
							else begin
								call Critter_Action;
							end
						end
						else begin
							call Critter_Action;
						end
					end
					else begin
						if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
							call destroy_p_proc;
						end
					end
				end
			end
		end
	end
end

procedure gameover
begin
	gsay_message(16, 191, 50);
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	call get_reaction;
	start_gdialog(16, self_obj, 4, 5, 4);
	gsay_start;
	if (global_var(VATS_BLOWN)) then begin
		call harry26;
	end
	else begin
		if (local_var(4)) then begin
			if (local_var(1) >= 2) then begin
				call harry19;
			end
			else begin
				call harry11;
			end
		end
		else begin
			set_local_var(4, 1);
			if (global_var(PLAYER_CAPTURED) == 1) then begin
				call harry23;
			end
			else begin
				if (global_var(SUPER_MUTANTS_KILLED) > 0) then begin
					call harry18;
				end
				else begin
					if ((local_var(1) >= 2) and (Hostile == 0)) then begin
						if (is_success(do_check(dude_obj, 3, 0)) and (get_critter_stat(dude_obj, 34) == 1)) then begin
							call harry12;
						end
						else begin
							call harry00;
						end
					end
					else begin
						call harry07;
					end
				end
			end
		end
	end
	gsay_end;
	end_dialogue;
	if ((HarryThinks != 1) and (global_var(WATERSHED_MUTANTS_LEAVE) != 1)) then begin
		Hostile := 1;
	end
end

procedure Critter_Action
begin
	if (Hostile > 0) then begin
		Hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
	else begin
		if ((global_var(WATERSHED_MUTANTS_LEAVE) == 1) and (tile_num(self_obj) != 15507)) then begin
			animate_move_obj_to_tile(self_obj, 15507, 0);
		end
		else begin
			if ((global_var(WATERSHED_MUTANTS_LEAVE) == 1) and (tile_num(self_obj) == 15507)) then begin
				set_global_var(WATERSHED_MUTANTS_LEAVE, 2);
			end
			else begin
				if ((global_var(WATERSHED_MUTANTS_LEAVE) == 2) and (tile_num(self_obj) != 12536)) then begin
					animate_move_obj_to_tile(self_obj, 12536, 0);
				end
				else begin
					if ((tile_num(self_obj) == 12536) and (global_var(WATERSHED_MUTANTS_LEAVE) == 2)) then begin
						if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
					end
				end
			end
		end
	end
end

procedure harryleave
begin
	set_global_var(WATERSHED_MUTANTS_LEAVE, 1);
end

procedure harryend
begin
end

procedure harrycbt
begin
	Hostile := 1;
end

procedure harryturn
begin
	Hostile := 1;
end

procedure harryextra
begin
	Hostile := 1;
end

procedure surprise
begin
	Hostile := 1;
end

procedure harrytime
begin
	HarryThinks := 1;
	add_timer_event(self_obj, game_ticks(30), 1);
end

procedure harrytime2
begin
	HarryThinks := 1;
	add_timer_event(self_obj, game_ticks(30), 2);
end

procedure harry00
begin
	gsay_reply(16, 101);
	giq_option(5, 16, 102, harry00_2, 50);
	giq_option(4, 16, 103, harry00_3, 50);
	giq_option(4, 16, 104, harry02, 51);
	giq_option(-3, 16, 105, harry00a, 50);
end

procedure harry00a
begin
	gsay_reply(16, 106);
	giq_option(-3, 16, 107, harry00b, 50);
end

procedure harry00b
begin
	gsay_reply(16, 108);
	giq_option(-3, 16, 109, harry02, 50);
end

procedure harry00_2
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -10))) then begin
		call harry01;
	end
	else begin
		call harry02;
	end
end

procedure harry00_3
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -20))) then begin
		call harry20;
	end
	else begin
		call harry02;
	end
end

procedure harry01
begin
	gsay_reply(16, 110);
	giq_option(5, 16, 111, harry02, 50);
	giq_option(5, 16, 112, harry04, 50);
end

procedure harry02
begin
	gsay_reply(16, 113);
	giq_option(4, 16, 114, harry03, 50);
	giq_option(4, 16, 115, harrycbt, 51);
	giq_option(-3, 16, 163, harrycbt, 51);
end

procedure harry03
begin
	gsay_reply(16, 116);
	giq_option(4, 16, 117, harry03_2, 50);
	giq_option(4, 16, 118, harry03_5, 50);
end

procedure harry03_2
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call harry04;
	end
	else begin
		call harry05;
	end
end

procedure harry03_5
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -20))) then begin
		call harry06;
	end
	else begin
		call harry07;
	end
end

procedure harry04
begin
	gsay_reply(16, 119);
	giq_option(4, 16, 120, harry08, 50);
	if (global_var(VATS_BLOWN) != 1) then begin
		giq_option(4, 16, 121, harryxxx, 50);
	end
	giq_option(4, 16, 122, harryturn, 50);
end

procedure harry05
begin
	gsay_reply(16, 123);
	if (global_var(VATS_BLOWN) != 1) then begin
		giq_option(4, 16, 192, harryxxx, 50);
	end
	giq_option(4, 16, 191, harrycbt, 50);
end

procedure harry06
begin
	gsay_message(16, 124, 50);
	call harrytime;
end

procedure harry07
begin
	gsay_message(16, 125, 51);
	call harrycbt;
end

procedure harry07b
begin
	float_msg(self_obj, message_str(16, 125), 2);
	call harrycbt;
end

procedure harry08
begin
	gsay_reply(16, 126);
	giq_option(4, 16, 127, harry09, 51);
	giq_option(4, 16, 128, harry08_2, 50);
	giq_option(4, 16, 129, harry07, 50);
end

procedure harry08_2
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -30))) then begin
		call harry10;
	end
	else begin
		call harry09;
	end
end

procedure harry09
begin
	gsay_message(16, 130, 51);
	call harrycbt;
end

procedure harry10
begin
	gsay_message(16, 131, 50);
	call harrytime;
end

procedure harry11
begin
	gsay_message(16, 132, 51);
	call harrycbt;
end

procedure harry12
begin
	gsay_reply(16, 133);
	giq_option(4, 16, 134, harry12_2, 50);
	giq_option(4, 16, 135, harry12_3, 50);
	giq_option(-3, 16, 105, harry00a, 50);
end

procedure harry12_2
begin
	if (is_success(do_check(dude_obj, 3, 1))) then begin
		call harry13;
	end
	else begin
		call harry14;
	end
end

procedure harry12_3
begin
	if (is_success(do_check(dude_obj, 3, 2))) then begin
		call harry17;
	end
	else begin
		call harry14;
	end
end

procedure harry13
begin
	gsay_reply(16, 136);
	giq_option(4, 16, 137, harry13_2, 50);
	giq_option(4, 16, 138, harry14, 50);
end

procedure harry13_2
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call harry16;
	end
	else begin
		call harry14;
	end
end

procedure harry14
begin
	gsay_reply(16, 139);
	if (global_var(VATS_BLOWN) != 1) then begin
		giq_option(4, 16, 121, harryxxx, 50);
	end
	giq_option(4, 16, 140, harry14_2, 50);
	giq_option(4, 16, 141, harryturn, 51);
end

procedure harry14_2
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call harry15;
	end
	else begin
		call harry07;
	end
end

procedure harry15
begin
	gsay_message(16, 142, 50);
	call harrytime;
end

procedure harry16
begin
	gsay_message(16, 143, 50);
	call harrytime;
end

procedure harry17
begin
	gsay_reply(16, 144);
	giq_option(4, 16, 145, surprise, 51);
	giq_option(4, 16, 146, harry14, 50);
end

procedure harry18
begin
	gsay_message(16, 147, 51);
	call harrycbt;
end

procedure harry19
begin
	gsay_reply(16, 148);
	if (global_var(VATS_BLOWN) != 1) then begin
		giq_option(4, 16, 149, harry22, 50);
	end
	giq_option(4, 16, 150, harry19_2, 50);
	giq_option(4, 16, 151, harrycbt, 51);
	giq_option(-3, 16, 105, harry00a, 50);
end

procedure harry19_2
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call harry20;
	end
	else begin
		call harry07;
	end
end

procedure harry20
begin
	gsay_message(16, 152, 50);
	call harrytime2;
end

procedure harry21
begin
	float_msg(self_obj, message_str(16, 153), 2);
	call harrycbt;
end

procedure harry22
begin
	gsay_message(16, 154, 51);
	call harryxxx;
end

procedure harry23
begin
	gsay_reply(16, 155);
	giq_option(5, 16, 156, harry24, 50);
	if (global_var(VATS_BLOWN) != 1) then begin
		giq_option(4, 16, 121, harryxxx, 50);
	end
	giq_option(4, 16, 157, harry25, 51);
end

procedure harry24
begin
	gsay_message(16, 158, 50);
	if (global_var(VATS_BLOWN) != 1) then begin
		giq_option(4, 16, 121, harryxxx, 50);
	end
	giq_option(4, 16, 191, harrycbt, 50);
end

procedure harry25
begin
	gsay_message(16, 159, 51);
	call harrycbt;
end

procedure harry26
begin
	gsay_reply(16, 160);
	giq_option(4, 16, 161, harryturn, 51);
	giq_option(4, 16, 162, harry27, 49);
	giq_option(-3, 16, 163, harry27, 50);
end

procedure harry27
begin
	gsay_reply(16, 164);
	giq_option(4, 16, 165, harryturn, 51);
	giq_option(4, 16, 166, harryleave, 50);
	giq_option(-3, 16, 167, harryleave, 50);
end

procedure harry200
begin
	gsay_message(16, 168, 50);
end

procedure harry201
begin
	gsay_message(16, 169, 50);
end

procedure harry202
begin
	gsay_message(16, 170, 50);
end

procedure harry203
begin
	gsay_message(16, 171, 50);
end

procedure harry204
begin
	gsay_message(16, 172, 50);
end

procedure harry205
begin
	gsay_message(16, 173, 50);
end

procedure harry206
begin
	gsay_message(16, 174, 50);
end

procedure harry207
begin
	gsay_message(16, 175, 50);
end

procedure harry300
begin
	gsay_message(16, 176, 50);
end

procedure harry301
begin
	gsay_message(16, 177, 50);
end

procedure harry302
begin
	gsay_message(16, 178, 50);
end

procedure harry303
begin
	gsay_message(16, 179, 50);
end

procedure harry304
begin
	gsay_message(16, 180, 50);
end

procedure harry305
begin
	gsay_message(16, 181, 50);
end

procedure harry306
begin
	gsay_message(16, 182, 50);
end

procedure harry307
begin
	gsay_message(16, 183, 50);
end

procedure harry308
begin
	gsay_message(16, 184, 50);
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		Hostile := 1;
	end
end

procedure harryxxx
begin
//	set_global_var(VAULT13_WATER_DAYS_LEFT, global_var(VAULT13_WATER_DAYS_LEFT) - 14);
//	set_global_var(FOLLOWERS_INVADED_DATE, global_var(FOLLOWERS_INVADED_DATE) - 14);
//	set_global_var(NECROPOLIS_INVADED_DATE, global_var(NECROPOLIS_INVADED_DATE) - 14);
//	set_global_var(THE_HUB_INVADED_DATE, global_var(THE_HUB_INVADED_DATE) - 14);
//	set_global_var(BROTHERHOOD_INVADED_DATE, global_var(BROTHERHOOD_INVADED_DATE) - 14);
//	set_global_var(JUNKTOWN_INVADED_DATE, global_var(JUNKTOWN_INVADED_DATE) - 14);
//	set_global_var(SHADY_SANDS_INVADED_DATE, global_var(SHADY_SANDS_INVADED_DATE) - 14);
//	set_global_var(VAULT_13_INVADED_DATE, global_var(VAULT_13_INVADED_DATE) - 14);
	set_global_var(ENTERING_VATS_HOW, 2);
	load_map(32, 5);
end

procedure destroy_p_proc
begin
	set_global_var(SUPER_MUTANTS_KILLED, global_var(SUPER_MUTANTS_KILLED) + 1);
	if (global_var(SUPER_MUTANTS_KILLED) >= global_var(MAX_MUTANTS)) then begin
		set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 3);
		set_global_var(NECROP_MUTANTS_KILLED, 2);
		if global_var(NECRO_30_DAYS_GVAR225) or global_var(FIXT_BUGFIXES_ONLY) then begin
			set_global_var(NECRO_MUTANTS_TIME_LEFT, game_time / (10 * 60 * 60 * 24));
			if (global_var(NECROPOLIS_INVADED_DATE) > (global_var(NECRO_MUTANTS_TIME_LEFT) + 30)) then begin
				set_global_var(NECROPOLIS_INVADED_DATE, global_var(NECRO_MUTANTS_TIME_LEFT) + 30);
			end
		end
	end
	rm_timer_event(self_obj);
//
//BEGIN WEAPON DROP MOD CODE
//--original code and mod by:--
// Josan12 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=18843) and 
// MIB88 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=4464)
//
	if global_var(WEAPONDROP_MOD_STATUS) and not(global_var(FIXT_BUGFIXES_ONLY)) and (critter_inven_obj(self_obj, 1) or critter_inven_obj(self_obj, 2)) then begin// only run if Weapon Drop is enabled, AND Fixes Only is disabled, AND actually holding something
		variable item1 := 0;  variable item2 := 0;  variable armor := 0;  variable item1PID := 0;  variable item2PID := 0;  variable armorPID := 0;  variable drophex := 0;  if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop BEGINS");  end
		if (critter_inven_obj(self_obj, 1) > 0) then begin  item1 := critter_inven_obj(self_obj, 1);  end    if (critter_inven_obj(self_obj, 2) > 0) then begin  item2 := critter_inven_obj(self_obj, 2);  end    if (critter_inven_obj(self_obj, 0) > 0) then begin  armor := critter_inven_obj(self_obj, 0);  end    if item1 then begin  item1PID := obj_pid(item1);  end    if item2 then begin  item2PID := obj_pid(item2);  end    if armor then begin  armorPID := obj_pid(armor);  end    drophex := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(global_var(WEAPONDROP_MOD_MINIMUM), global_var(WEAPONDROP_MOD_MAXIMUM)));
		if (item1PID != 19) and (item1PID != 21) and (item1PID != 79) and (item1PID != 205) and (item1PID != 234) and (item1PID != 235) and (item1PID != 244) and (item2PID != 19) and (item2PID != 21) and (item2PID != 79) and (item2PID != 205) and (item2PID != 234) and (item2PID != 235) and (item2PID != 244) then begin//Don't drop if:  Rock (19), Brass Knuckles (21), Flare (79), Lit Flare (205), Spiked Knuckles (234), Power Fist (235), or Gold Nugget (244)
			if (item1 > 0) then begin if (obj_item_subtype(item1) == 3) then begin
			rm_obj_from_inven(self_obj, item1);  move_to(item1, drophex, elevation(self_obj));  end  end
			if (item2 > 0) then begin if (obj_item_subtype(item2) == 3) then begin
			rm_obj_from_inven(self_obj, item2);  move_to(item2, drophex, elevation(self_obj));  end  end    if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop ENDS");  end
		end
	end
//END WEAPON DROP MOD CODE
//
	if source_obj == dude_obj then begin
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
	end
	rm_timer_event(self_obj);
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(634, random(100, 105));
end

