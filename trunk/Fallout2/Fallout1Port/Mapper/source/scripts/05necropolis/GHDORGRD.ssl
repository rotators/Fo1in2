/*

	Necropolis - Door guard

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_GHDORGRD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_NECROPOLIS)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;

import variable GhDorGrd_Ptr;

procedure ghoul00a;
procedure ghoul00b;
procedure ghoul01;
procedure ghoul02;
procedure ghoul03;
procedure ghoul03a;
procedure ghoulend;
procedure ghoulendFade;
procedure timed_event_p_proc;
procedure combat_rads_inc;

variable tmp_hostile;
variable init := 0;
variable maxleash := 9;
variable noevent;
variable loopcount;
variable new_tile;
variable Warned;

procedure start begin
	if (init == 0) then begin
		init := 1;
		if (local_var(7) == 0) then begin
			set_local_var(7, self_tile);
			set_local_var(5, 0);
		end
		set_self_team(TEAM_NECROPOLIS_GANGER );
		set_self_ai( AI_GHOUL_COWARD );
		GhDorGrd_Ptr := self_obj;
	end

	if (script_action == look_at_proc) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		script_overrides;
		display_msg(message_str(SCRIPT_GHDORGRD, 100));
	end
end

procedure pickup_p_proc begin
	tmp_hostile := 1;
end

procedure talk_p_proc begin
	get_reaction
	if (map_var(12) == 1) then begin
		display_msg(message_str(SCRIPT_GHDORGRD, 120));
	end
	else begin
		start_gdialog(70, self_obj, 4, -1, -1);
		gsay_start;
		if (local_var(4)) then begin
			set_map_var(11, 1);
			call ghoul02;// "I told you to leave. Your kind is not wanted here."
		end
		else begin
			if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
				if (local_var(1) >= 3) then begin
					set_map_var(11, 0);
					call ghoul00b;
				end
				else begin
					set_local_var(4, 1);
					set_map_var(11, 1);
					call ghoul03;
					end
			end
			else begin
				if (local_var(1) >= 3) then begin
					if (local_var(8) == 0) then begin
						set_local_var(8, 1);
						set_map_var(11, 1);
						call ghoul01;
					end
					else begin
						set_map_var(11, 1);
						call ghoul00a;
					end
				end
				else begin
					set_local_var(4, 1);
					set_map_var(11, 1);
					call ghoul03;
				end
			end
		end
		gsay_end;
		end_dialogue;
	end
end

procedure ghoulend
begin
end

procedure ghoul00a
begin
	gsay_reply(70, 111);
	giq_option( 4, SCRIPT_GHDORGRD, 102, ghoulend, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_GHDORGRD, 103, ghoulend, NEUTRAL_REACTION );
end

procedure ghoul00b
begin
	gsay_message(70, 104, 50);
	call ghoulend;
end

procedure ghoul01
begin
	gsay_reply(70, 105);
	giq_option( 4, SCRIPT_GHDORGRD, 106, ghoulend, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_GHDORGRD, 107, ghoulend, NEUTRAL_REACTION );
end

procedure ghoul02
begin
	gsay_reply(70, 108);
	giq_option( 4, SCRIPT_GHDORGRD, 109, ghoulend, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_GHDORGRD, 110, ghoulend, NEUTRAL_REACTION );
end

procedure ghoul03
begin
	gsay_reply(70, 101);
	if (map_var(12) == 0) then begin
		giq_option( 5, SCRIPT_GHDORGRD, 112, ghoul03a, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_GHDORGRD, 113, ghoulend, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_GHDORGRD, 114, ghoulend, NEUTRAL_REACTION );
end

procedure ghoul03a
begin
	if is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0)) then begin
		set_map_var(11, 0);
		set_map_var(12, 1);
		gsay_reply(70, 115);
		giq_option( 5, SCRIPT_GHDORGRD, 118, ghoulendFade, NEUTRAL_REACTION );
	end
	else begin
		set_map_var(11, 1);
		set_map_var(12, 2);
		gsay_reply(70, 116);
		giq_option( 5, SCRIPT_GHDORGRD, 117, ghoulend, NEUTRAL_REACTION );
		set_map_var(11, 1);
		set_map_var(12, 2);
	end
end

procedure ghoulendFade begin
	gfade_out(1);
	gfade_in(1);
	set_map_var(11, 0);
	set_map_var(12, 1);
end

procedure critter_p_proc begin
	if self_can_see_dude and global_var( GVAR_ENEMY_NECROPOLIS ) then begin
		tmp_hostile := 1;
		attack(dude_obj);
	end
	else begin
		if (global_var( GVAR_SET_DOOR_GUARD_WARNING ) != 0) then begin
			float_msg(self_obj, message_str(SCRIPT_GHDORGRD, 119), 2);
			set_global_var( GVAR_SET_DOOR_GUARD_WARNING, 0 );
			set_global_var( GVAR_ENEMY_NECROPOLIS, 1 );
			tmp_hostile := 1;
			attack(dude_obj);
		end
		else if (tmp_hostile > 0) then begin
			tmp_hostile := 0;
			attack(dude_obj);
		end
		else if (local_var(5)) then begin
			loopcount := loopcount + 1;
			if (loopcount > 40) then begin
				loopcount := 0;
				if (noevent == 0) then begin
					noevent := 1;
					add_timer_event(self_obj, game_ticks(random(5, 13)), 0);
				end
			end
		end
	end
end

procedure timed_event_p_proc begin
	noevent := 0;
	set_local_var(6, self_tile);
	new_tile := tile_num_in_direction(local_var(6), random(0, 5), 2);
	if (tile_distance(local_var(7), new_tile) < maxleash) then begin
		self_walk_to_tile( new_tile );
	end
end

procedure destroy_p_proc begin
	GhDorGrd_Ptr := 0;
	rm_timer_event(self_obj);
	inc_inv_evil_crit
	rm_timer_event(self_obj);
end

procedure combat_p_proc begin
end
