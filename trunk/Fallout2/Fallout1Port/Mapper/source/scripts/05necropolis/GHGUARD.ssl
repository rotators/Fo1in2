/*

	Necropolis - Guard

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\mapnecro.h"

#define NAME                    SCRIPT_GHGUARD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_NECROPOLIS)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;

procedure ghoulcbt;
procedure ghoul00;
procedure ghoul01;
procedure ghoul01a;
procedure ghoul02;
procedure ghoul03;
procedure ghoul03a;
procedure ghoul04;
procedure ghoul05;
procedure ghoul06;
procedure ghoulend;

procedure timetomove;

variable tmp_hostile;
variable init := 0;
variable maxleash := 9;
variable noevent;
variable loopcount;
variable new_tile;

procedure start begin
	if (not(init)) then begin
		init := 1;
		if (local_var(7) == 0) then begin
			set_local_var(7, self_tile);
			set_local_var(5, 0);
		end
		set_self_team(TEAM_NECROPOLIS_GANGER );
	end
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_GHGUARD, 100));
end

procedure description_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_GHGUARD, 100));
end

procedure pickup_p_proc begin
	tmp_hostile := 1;
end

procedure combat_p_proc begin
end

procedure talk_p_proc begin
	dude_look_at_critter;
	start_gdialog(72, self_obj, 4, -1, -1);
	gsay_start;
	if (local_var(4)) then begin
		call ghoul06;
	end
	else begin
		if (local_var(1) >= 2) then begin
			set_local_var(4, 1);
			call ghoul01;
		end
		else begin
			set_local_var(4, 1);
			call ghoul00;
		end
	end
	gsay_end;
	end_dialogue;
end

procedure ghoulend
begin
end

procedure ghoulcbt
begin
	tmp_hostile := 1;
end

procedure ghoul00
begin
	gsay_message(72, 101, 50);
	call ghoulcbt;
end

procedure ghoul01
begin
	gsay_reply(72, 102);
	giq_option( 6, SCRIPT_GHGUARD, 103, ghoul01a, NEUTRAL_REACTION );
	giq_option( 3, SCRIPT_GHGUARD, 104, ghoulend, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_GHGUARD, 105, ghoul00, NEUTRAL_REACTION );
end

procedure ghoul01a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call ghoul02;
	end
	else begin
		call ghoul03;
	end
end

procedure ghoul02
begin
	gsay_reply(72, 106);
	giq_option( 3, SCRIPT_GHGUARD, 107, ghoulcbt, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_GHGUARD, 108, ghoulend, NEUTRAL_REACTION );
end

procedure ghoul03
begin
	gsay_reply(72, 109);
	giq_option( 3, SCRIPT_GHGUARD, 110, ghoul03a, NEUTRAL_REACTION );
	giq_option( 3, SCRIPT_GHGUARD, 111, ghoul04, NEUTRAL_REACTION );
end

procedure ghoul03a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call ghoul05;
	end
	else begin
		call ghoul04;
	end
end

procedure ghoul04
begin
	gsay_message(72, 112, 50);
	call ghoulend;
end

procedure ghoul05
begin
	gsay_reply(72, 113);
	giq_option( 4, SCRIPT_GHGUARD, 114, ghoulend, NEUTRAL_REACTION );
end

procedure ghoul06
begin
	gsay_message(72, 115, 50);
	call ghoulend;
end

procedure critter_p_proc
begin
	if (tmp_hostile > 0) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (local_var(5)) then begin
			loopcount := loopcount + 1;
			if (loopcount > 40) then begin
				loopcount := 0;
				if (noevent == 0) then begin
					noevent := 1;
					add_timer_event(self_obj, game_ticks(random(5, 13)), 0);
				end
			end
		end
	end
end

procedure timetomove
begin
	noevent := 0;
	set_local_var(6, self_tile);
	new_tile := tile_num_in_direction(local_var(6), random(0, 5), 2);
	if (tile_distance(local_var(7), new_tile) < maxleash) then begin
		animate_move_obj_to_tile(self_obj, new_tile, 0);
	end
end



procedure destroy_p_proc begin
	rm_timer_event(self_obj);
	inc_inv_evil_crit
	rm_timer_event(self_obj);
end
