//
// ---TRAP SCRIPT---  Sduibek
//
#include "..\headers\define.h"
#include "..\headers\command.h"

procedure start;
procedure look_at_p_proc;//    script_action == 21
procedure description_p_proc;//    script_action == 3
procedure use_p_proc;//    script_action == 6
procedure use_skill_on_p_proc;//    script_action == 8
procedure use_obj_on_p_proc;//    script_action == 7
procedure map_enter_p_proc;//    script_action == 15
procedure map_update_p_proc;//    script_action == 23
procedure damage_p_proc;//    script_action == 14
procedure Locked_And_Trapped;
procedure Door_Locked;
procedure Door_Trapped;
variable Damage := 0;

variable Set_Off_Trap;

procedure start begin
end

procedure look_at_p_proc
begin
	script_overrides;
	if (is_success(do_check(dude_obj, STAT_pe, 0))) then begin
		display_msg(message_str(SCRIPT_SETDOOR, 101));
	end
	else begin
		display_msg(message_str(SCRIPT_SETDOOR, 100));
	end
end

procedure description_p_proc
begin
	script_overrides;
	if ((local_var(1) == 0) and (local_var(0) == 0)) then begin
		call Locked_And_Trapped;
	end
	else begin
		if (local_var(0) == 0) then begin
			call Door_Trapped;
		end
		else begin
			if (local_var(1) == 0) then begin
				call Door_Locked;
			end
			else begin
				display_msg(message_str(SCRIPT_SETDOOR, 102));
			end
		end
	end
end

procedure use_p_proc
begin
	variable LVar0 := 0;
	LVar0 := roll_vs_skill(source_obj, SKILL_TRAPS, 0);
	if ((local_var(1) == 0) and (local_var(0) == 0)) then begin
		script_overrides;
		if (is_success(LVar0)) then begin
			reg_anim_func(2, source_obj);
			if source_obj == dude_obj then begin
				display_msg(message_str(SCRIPT_SETDOOR, 106));
			end
			else begin
				display_msg(proto_data(obj_pid(source_obj), 1) + message_str(SCRIPT_SETDOOR, 105));
			end
		end
		else begin
			display_msg(message_str(SCRIPT_SETDOOR, 104));
			Set_Off_Trap := 1;
			Damage := random(2, 7) + random(2, 7) + random(2, 7) + random(2, 7) + random(2, 7) + (difficulty_level * random(5, 10));
			play_sfx("WHN1XXX1");
			critter_dmg( source_obj, Damage, DMG_explosion );
//			explosion(tile_num(source_obj), elevation(self_obj), random(10, 30));
			set_local_var(0, 1);
			set_local_var(2, local_var(2) + 1);
			display_msg(message_str(SCRIPT_SETDOOR, 103));
		end
	end
	else begin
		if (local_var(0) == 0) then begin
			if (is_success(LVar0)) then begin
				script_overrides;
				reg_anim_func(2, source_obj);
				if source_obj == dude_obj then begin
					display_msg(message_str(SCRIPT_SETDOOR, 106));
				end
				else begin
					display_msg(proto_data(obj_pid(source_obj), 1) + message_str(SCRIPT_SETDOOR, 105));
				end
			end
			else begin
				display_msg(message_str(SCRIPT_SETDOOR, 104));
				Set_Off_Trap := 1;
				Damage := random(2, 7) + random(2, 7) + random(2, 7) + random(2, 7) + random(2, 7) + (difficulty_level * random(5, 10));
				play_sfx("WHN1XXX1");
				critter_dmg( source_obj, Damage, DMG_explosion );
//				explosion(tile_num(source_obj), elevation(self_obj), random(10, 30));
				set_local_var(0, 1);
				set_local_var(2, local_var(2) + 1);
			end
		end
		else begin
			if (local_var(1) == 0) then begin
				script_overrides;
				display_msg(message_str(SCRIPT_SETDOOR, 103));
			end
		end
	end
end

procedure use_skill_on_p_proc
begin
	variable LVar0 := 0;
	if ((action_being_used == SKILL_TRAPS) and (local_var(0) == 0)) then begin//-- TRAPS
		script_overrides;
		LVar0 := roll_vs_skill(source_obj, action_being_used, 0);
		if (is_success(LVar0)) then begin
			reg_anim_func(2, source_obj);
			if source_obj == dude_obj then begin
				display_msg(message_str(SCRIPT_SETDOOR, 106));
				set_local_var(0, 1);
				display_msg(message_str(SCRIPT_GENCHAT, 103) + "50" + message_str(SCRIPT_GENCHAT, 104));
				give_exp_points(50);
			end
			else begin
				display_msg(proto_data(obj_pid(source_obj), 1) + message_str(SCRIPT_SETDOOR, 105));
			end
		end
		else begin
			display_msg(message_str(SCRIPT_SETDOOR, 104));
			Set_Off_Trap := 1;
			Damage := random(2, 7) + random(2, 7) + random(2, 7) + random(2, 7) + random(2, 7) + (difficulty_level * random(5, 10));
			play_sfx("WHN1XXX1");
			critter_dmg( source_obj, Damage, DMG_explosion );
//			explosion(tile_num(source_obj), elevation(self_obj), random(10, 30));
			set_local_var(0, 1);
			set_local_var(2, local_var(2) + 1);
		end
	end
	else begin
		if ((action_being_used == SKILL_LOCKPICK) and (local_var(1) == 0)) then begin//-- LOCKPICK
			script_overrides;
			LVar0 := roll_vs_skill(source_obj, action_being_used, -20);
			if (is_success(LVar0)) then begin
				set_local_var(1, 1);
				display_msg(message_str(SCRIPT_SETDOOR, 111));
				obj_unlock(self_obj);
				display_msg(message_str(SCRIPT_GENCHAT, 103) + "50" + message_str(SCRIPT_GENCHAT, 104));
				give_exp_points(50);
			end
			else begin
				if (is_critical(LVar0)) then begin
					jam_lock(self_obj);
					display_msg(message_str(SCRIPT_SETDOOR, 112));
				end
				else begin
					display_msg(message_str(SCRIPT_SETDOOR, 110));
				end
			end
		end
	end
end

procedure use_obj_on_p_proc
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;
	LVar0 := obj_pid(obj_being_used_with);
	LVar1 := roll_vs_skill(source_obj, SKILL_TRAPS, 0);
	LVar2 := roll_vs_skill(source_obj, SKILL_LOCKPICK, 0);
	if (LVar0 == 84) then begin
		if ((local_var(1) == 0) and (local_var(0) == 0)) then begin
			script_overrides;
			if (is_success(LVar1)) then begin
				reg_anim_func(2, source_obj);
				if source_obj == dude_obj then begin
					display_msg(message_str(SCRIPT_SETDOOR, 106));
				end
				else begin
					display_msg(proto_data(obj_pid(source_obj), 1) + message_str(SCRIPT_SETDOOR, 105));
				end
			end
			else begin
				display_msg(message_str(SCRIPT_SETDOOR, 104));
				Set_Off_Trap := 1;
				Damage := random(2, 7) + random(2, 7) + random(2, 7) + random(2, 7) + random(2, 7) + (difficulty_level * random(5, 10));
				play_sfx("WHN1XXX1");
				critter_dmg( source_obj, Damage, DMG_explosion );
//				explosion(tile_num(source_obj), elevation(self_obj), random(10, 30));
				set_local_var(0, 1);
				set_local_var(2, local_var(2) + 1);
			end
			display_msg(message_str(SCRIPT_SETDOOR, 108));
		end
		else begin
			if (local_var(0) == 0) then begin
				script_overrides;
				if (is_success(LVar1)) then begin
					reg_anim_func(2, source_obj);
					if source_obj == dude_obj then begin
						display_msg(message_str(SCRIPT_SETDOOR, 106));
					end
					else begin
						display_msg(proto_data(obj_pid(source_obj), 1) + message_str(SCRIPT_SETDOOR, 105));
					end
				end
				else begin
					display_msg(message_str(SCRIPT_SETDOOR, 104));
					Set_Off_Trap := 1;
					Damage := random(2, 7) + random(2, 7) + random(2, 7) + random(2, 7) + random(2, 7) + (difficulty_level * random(5, 10));
					play_sfx("WHN1XXX1");
					critter_dmg( source_obj, Damage, DMG_explosion );
//					explosion(tile_num(source_obj), elevation(self_obj), random(10, 30));
					set_local_var(0, 1);
					set_local_var(2, local_var(2) + 1);
				end
				display_msg(message_str(SCRIPT_SETDOOR, 108));
			end
			else begin
				if (local_var(1) == 0) then begin
					script_overrides;
					if (is_success(LVar2)) then begin
						set_local_var(1, 1);
						display_msg(message_str(SCRIPT_SETDOOR, 111));
						display_msg(message_str(SCRIPT_GENCHAT, 103) + "50" + message_str(SCRIPT_GENCHAT, 104));
						give_exp_points(50);
						obj_unlock(self_obj);
					end
					else begin
						if (is_critical(LVar2)) then begin
							rm_obj_from_inven(dude_obj, LVar0);
							destroy_object(LVar0);
							jam_lock(self_obj);
							display_msg(message_str(SCRIPT_SETDOOR, 109));
						end
						else begin
							display_msg(message_str(SCRIPT_SETDOOR, 110));
						end
					end
				end
			end
		end
	end
	else begin
		script_overrides;
		LVar1 := roll_vs_skill(source_obj, SKILL_TRAPS, 0);
		if ((local_var(1) == 0) and (local_var(0) == 0)) then begin
			script_overrides;
			if (is_success(LVar1)) then begin
				reg_anim_func(2, source_obj);
				if source_obj == dude_obj then begin
					display_msg(message_str(SCRIPT_SETDOOR, 106));
				end
				else begin
					display_msg(proto_data(obj_pid(source_obj), 1) + message_str(SCRIPT_SETDOOR, 105));
				end
			end
			else begin
				display_msg(message_str(SCRIPT_SETDOOR, 104));
				Set_Off_Trap := 1;
				Damage := random(2, 7) + random(2, 7) + random(2, 7) + random(2, 7) + random(2, 7) + (difficulty_level * random(5, 10));
				play_sfx("WHN1XXX1");
				critter_dmg( source_obj, Damage, DMG_explosion );
//				explosion(tile_num(source_obj), elevation(self_obj), random(10, 30));
				set_local_var(0, 1);
				set_local_var(2, local_var(2) + 1);
			end
		end
		else begin
			if (local_var(0) == 0) then begin
				if (is_success(LVar1)) then begin
					reg_anim_func(2, source_obj);
					if source_obj == dude_obj then begin
						display_msg(message_str(SCRIPT_SETDOOR, 106));
					end
					else begin
						display_msg(proto_data(obj_pid(source_obj), 1) + message_str(SCRIPT_SETDOOR, 105));
					end
				end
				else begin
					display_msg(message_str(SCRIPT_SETDOOR, 104));
					Set_Off_Trap := 1;
					Damage := random(2, 7) + random(2, 7) + random(2, 7) + random(2, 7) + random(2, 7) + (difficulty_level * random(5, 10));
					play_sfx("WHN1XXX1");
					critter_dmg( source_obj, Damage, DMG_explosion );
//					explosion(tile_num(source_obj), elevation(self_obj), random(10, 30));
					set_local_var(0, 1);
					set_local_var(2, local_var(2) + 1);
				end
			end
			else begin
				if (local_var(1) == 0) then begin
					script_overrides;
					display_msg(message_str(SCRIPT_SETDOOR, 107));
				end
			end
		end
	end
end

procedure map_enter_p_proc
begin
	if (local_var(1) == 0) then begin
		obj_lock(self_obj);
	end
	else begin
		obj_unlock(self_obj);
	end
end

procedure map_update_p_proc
begin
	if (local_var(1) == 0) then begin
		obj_lock(self_obj);
	end
	else begin
		obj_unlock(self_obj);
	end
end

procedure damage_p_proc begin
	if (weapon_dmg_type(target_obj) == DMG_explosion) then begin
		set_local_var(2, local_var(2) + 1);
		if (Set_Off_Trap == 0) then begin
			display_msg(message_str(SCRIPT_SETDOOR, 104));
			explosion(self_tile, self_elevation, 80);
			set_local_var(0, 1);
			Set_Off_Trap := 1;
		end
		if (local_var(2) > 1) then begin
			if not(is_loading_game) then begin    set_self_invisible;    end//  MAKE INVISIBLE
		end
	end
   else begin
		display_msg(message_str(SCRIPT_DOOR,193));
   end
end

procedure Locked_And_Trapped
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	LVar0 := roll_vs_skill(dude_obj, SKILL_TRAPS, 0);
	LVar1 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 0);
	if (is_success(LVar0)) then begin
		if (is_critical(LVar0)) then begin
			if (is_success(LVar1)) then begin
				display_msg(message_str(SCRIPT_SETDOOR, 113));
			end
			else begin
				if (is_critical(LVar1)) then begin
					display_msg(message_str(SCRIPT_SETDOOR, 114));
				end
			end
		end
		else begin
			if (is_success(LVar1)) then begin
				display_msg(message_str(SCRIPT_SETDOOR, 115));
			end
			else begin
				if (is_critical(LVar1)) then begin
					display_msg(message_str(SCRIPT_SETDOOR, 116));
				end
			end
		end
	end
	else begin
		if (is_critical(LVar0)) then begin
			if (is_success(LVar1)) then begin
				display_msg(message_str(SCRIPT_SETDOOR, 117));
			end
			else begin
				if (is_critical(LVar1)) then begin
					display_msg(message_str(SCRIPT_SETDOOR, 118));
				end
			end
		end
		else begin
			if (is_success(LVar1)) then begin
				display_msg(message_str(SCRIPT_SETDOOR, 117));
			end
			else begin
				if (is_critical(LVar1)) then begin
					display_msg(message_str(SCRIPT_SETDOOR, 118));
				end
			end
		end
	end
end

procedure Door_Locked
begin
	variable LVar0 := 0;
	LVar0 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 0);
	if (is_success(LVar0)) then begin
		display_msg(message_str(SCRIPT_SETDOOR, 117));
	end
	else begin
		if (is_critical(LVar0)) then begin
			display_msg(message_str(SCRIPT_SETDOOR, 117));
		end
	end
end

procedure Door_Trapped
begin
	variable LVar0 := 0;
	LVar0 := roll_vs_skill(dude_obj, SKILL_TRAPS, 0);
	if (is_success(LVar0)) then begin
		if (is_critical(LVar0)) then begin
			display_msg(message_str(SCRIPT_SETDOOR, 114));
		end
		else begin
			display_msg(message_str(SCRIPT_SETDOOR, 116));
		end
	end
	else begin
		if (is_critical(LVar0)) then begin
			display_msg(message_str(SCRIPT_SETDOOR, 118));
		end
		else begin
			display_msg(message_str(SCRIPT_SETDOOR, 118));
		end
	end
end
