/*

	Necropolis - Glowing Ghoul

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_TREAD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_NECROPOLIS)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure combat_p_proc;

procedure combat_rads_inc;

variable tmp_hostile;
variable Only_Once := 1;
variable rndx;

variable rndRads;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_NECROPOLIS_GANGER );
		set_self_ai( AI_GHOUL_NASTY );
	end
end

procedure combat begin
	tmp_hostile := 1;
end

procedure critter_p_proc begin
	if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance_objs(self_obj, dude_obj) < 6)) then begin
		float_msg(self_obj, message_str(SCRIPT_TREAD, 101), 2);
		tmp_hostile := 1;
	end
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	float_msg(self_obj, message_str(SCRIPT_TREAD, 101), 2);
end

procedure destroy_p_proc begin
	inc_inv_evil_crit
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_TREAD, 100));
end

procedure combat_p_proc
begin
	if (fixed_param == 2) then begin
		if (target_obj == dude_obj) then begin
			if global_var( GVAR_DEBUG_MODE_MESSAGES_ON ) then begin
				debug_msg("Combat Rads From Irradiated Critters BEGINS");
			end
			if not(global_var( GVAR_FIXT_BUGFIXES_ONLY )) then begin
				variable cont := 0;// checked to see if continue to run the code after each stage
				variable CritterTYPE := 0;// 1 = Ghoul, 2 = Floater, 3 = Centaur, 4 = RadRat, 5 = GlowingOne
				if global_var( GVAR_HIT_GIVES_RADS_GHOULS ) > 0 then begin// HIT_GIVES_RADS_GHOULS
					if (obj_pid(self_obj) == (16777216 + 14)) or (obj_pid(self_obj) == (16777216 + 104)) or (obj_pid(self_obj) == (16777216 + 105)) or (obj_pid(self_obj) == (16777216 + 106)) or (obj_pid(self_obj) == (16777216 + 109)) or (obj_pid(self_obj) == (16777216 + 110)) or (obj_pid(self_obj) == (16777216 + 131)) or (obj_pid(self_obj) == (16777216 + 157)) or (obj_pid(self_obj) == (16777216 + 184)) then begin// 14 = Zombie Guard, 104 = Set, 105 = Garret, 106 = Zombie, 109 = Ghoul Guard, 110 = Undergrounder, 131 = Talius, 157 = Harold, 184 = Zombie
						CritterTYPE := 1;
						cont := 1;
					end
				end
				if not(continue) then begin
					if global_var( GVAR_HIT_GIVES_MORE_RADS_GLOW ) > 0 then begin// HIT_GIVES_MORE_RADS_GLOW
						if (obj_pid(self_obj) == (16777216 + 16)) or (obj_pid(self_obj) == (16777216 + 182)) or (obj_pid(self_obj) == (16777216 + 183)) then begin// 16 = Glowing One, 182 = Glower, 183 = Mad Glowing One
							CritterTYPE := 5;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var( GVAR_HIT_GIVES_MORE_RADS_RATS ) > 0 then begin// HIT_GIVES_MORE_RADS_RATS
						if (obj_pid(self_obj) == (16777216 + 160)) or (obj_pid(self_obj) == (16777216 + 161)) then begin//  160, 161 = Rad Rat
							CritterTYPE := 4;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var( GVAR_HIT_GIVES_RADS_FLOATERS ) > 0 then begin// HIT_GIVES_RADS_FLOATERS
						if (obj_pid(self_obj) == (16777216 + 45)) or (obj_pid(self_obj) == (16777216 + 167)) then begin//  45 = Floater, 167 = Bloody Floater
							CritterTYPE := 2;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var( GVAR_HIT_GIVES_RADS_CENTAURS ) > 0 then begin// HIT_GIVES_RADS_CENTAURS
						if (obj_pid(self_obj) == (16777216 + 43)) or (obj_pid(self_obj) == (16777216 + 168)) then begin//  43 = Lesser Centaur, 168 = Greater Centaur
							CritterTYPE := 3;
							cont := 1;
						end
					end
				end
				if continue then begin
					variable BonusRads := 0;
					if (CritterTYPE == 5) or (CritterTYPE == 4) then begin
						BonusRads := 1;
					end
					if (random(0, 3) + combat_difficulty + BonusRads) >= 3 then begin// CHANCE TO RUN = Easy: 25%, 50% if glowing/radrat - Normal: 50%, 75% if glowing - Brutal: 75%, 100% if glowing/radrat
						variable giveRads := 1;
						if critter_inven_obj(self_obj, 1) then begin
							if (obj_pid(critter_inven_obj(self_obj, 1)) != PID_BRASS_KNUCKLES) and (obj_pid(critter_inven_obj(self_obj, 1)) != PID_SPIKED_KNUCKLES) and (obj_pid(critter_inven_obj(self_obj, 1)) != PID_POWER_FIST) then begin// Brass Knuckles, Spiked Knuckles, Power Fist
								giveRads := 0;
							end
						end
						if critter_inven_obj(self_obj, 2) then begin
							if (obj_pid(critter_inven_obj(self_obj, 2)) != PID_BRASS_KNUCKLES) and (obj_pid(critter_inven_obj(self_obj, 2)) != PID_SPIKED_KNUCKLES) and (obj_pid(critter_inven_obj(self_obj, 2)) != PID_POWER_FIST) then begin// Brass Knuckles, Spiked Knuckles, Power Fist
								giveRads := 0;
							end
						end
						if giveRads == 1 then begin
							variable LuckRoll := 0;
							variable EnduranceRoll := 0;
							LuckRoll := do_check(dude_obj, STAT_lu, 0);
							EnduranceRoll := do_check(dude_obj, STAT_en, 0);
							rndRads := 0;
							if not(is_success(LuckRoll)) and not(is_success(EnduranceRoll)) then begin
								rndRads := random((2 + combat_difficulty + BonusRads), (3 + combat_difficulty + BonusRads));// EASY: 2-3 / 3-4 if glowing/radrat, NORMAL: 3-4 / 4-5 if glowing/radrat, BRUTAL: 4-5 / 5-6 if glowing/radrat
							end
							else begin
								if not(is_success(LuckRoll)) or not(is_success(EnduranceRoll)) then begin
									rndRads := random((1 + combat_difficulty + BonusRads), (2 + combat_difficulty + BonusRads));// EASY: 1-2 / 2-3 if glowing/radrat, NORMAL: 2-3 / 3-4 if glowing/radrat, BRUTAL: 3-4 / 4-5 if glowing/radrat
								end
								else begin
									if (random(0, 5) + BonusRads) >= 5 then begin// Chance to run if both stat checks pass: 16.67%, 33% if glowing/radrat
										rndRads := random((0 + combat_difficulty + BonusRads), (1 + combat_difficulty + BonusRads));// EASY: 0-1 / 1-2 if glowing/radrat, NORMAL: 1-2 / 2-3 if glowing/radrat, BRUTAL: 2-3 / 3-4 if glowing/radrat
									end
								end
							end
							if rndRads > 0 then begin
								call combat_rads_inc;
							end
						end
					end
				end
			end
			else begin// if (BUG_FIXES_ONLY == 1)
				if (obj_pid(self_obj) == PID_GLOWING_ONE) or (obj_pid(self_obj) == PID_RADIATED_RAT) or (obj_pid(self_obj) == PID_TOUGH_RADIATED_RAT) or (obj_pid(self_obj) == PID_GLOWER) or (obj_pid(self_obj) == PID_MAD_GLOWING_ONE) then begin
					variable rndx := 0;
					rndx := (random(1, 4) - 3);// was 1d6 - 5, is now 1d4 - 3
					if (rndx < 0) then begin
						rndx := 0;
					end
					if (rndx > 0) then begin
						radiation_inc(dude_obj, rndx);
						display_msg(message_str(SCRIPT_GENGHOUL, 1004));
					end
				end
			end
			if global_var( GVAR_DEBUG_MODE_MESSAGES_ON ) then begin
				debug_msg("Combat Rads From Irradiated Critters ENDS");
			end
		end
	end
	else begin
		if (fixed_param == 4) then begin
			if ((global_var( GVAR_NECROP_WATER_CHIP_TAKEN ) != 0) and (global_var( GVAR_NECROP_WATER_PUMP_FIXED ) != 2)) then begin
				variable LVar1 := 0;
				LVar1 := random(0,25);
				if LVar1 == 1 then begin
					variable LVar0 := 0;
					LVar0 := random(2,5);
					if LVar0 == 2 then begin
						float_msg(self_obj, message_str(SCRIPT_VALTGLO, 102), 2);
					end
					else begin
						if LVar0 == 3 then begin
							float_msg(self_obj, message_str(SCRIPT_VALTGLO, 103), 2);
						end
						else begin
							if LVar0 == 4 then begin
								float_msg(self_obj, message_str(SCRIPT_VALTGLO, 104), 2);
							end
							else begin
								float_msg(self_obj, message_str(SCRIPT_VALTGLO, 105), 2);
							end
						end
					end
				end
			end
		end
	end
end

procedure combat_rads_inc
begin
	radiation_inc(dude_obj, rndRads);
	if ((rndRads == 1) or (rndRads == 2)) then begin
		display_msg(message_str(SCRIPT_GENGHOUL, 1004));
	end
	else begin
		if ((rndRads > 2) and (rndRads <= 5)) then begin
			display_msg(message_str(SCRIPT_GENGHOUL, 1005));
		end
		else begin
			if ((rndRads > 5) and (rndRads < 10)) then begin
				display_msg(message_str(SCRIPT_GENGHOUL, 1006));
			end
		end
	end
end


