#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure talk_p_proc;//    script_action == 11
procedure combat_p_proc;//    script_action == 13
procedure destroy_p_proc;
procedure combat_rads_inc;
variable hostile := 0;
variable init_teams := 0;
variable rndx;
variable rndRads;
variable AlreadyLooked := 0;


procedure start
begin
	fixt_critter_healing
	
	if (not(init_teams)) then begin
		init_teams := 1;
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 31);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 93);
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		script_overrides;
		if not(AlreadyLooked) then begin
			display_msg(message_str(SCRIPT_GLOWONE, 100));
		end
		else begin
			display_msg(message_str(SCRIPT_GLOWONE, 105));
		end
		script_overrides;
	end
	else begin
		if (script_action == 3) then begin//DETAILED ON-CLICK DESCRIPTION (Binoculars icon) - description_p_proc
			script_overrides;
			display_msg(message_str(SCRIPT_GENGHOUL, 204));
			script_overrides;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				script_overrides;
				call talk_p_proc;
				script_overrides;
			end
			else begin
				if (script_action == 14) then begin//damage
					if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
						hostile := 1;
					end
				end
				else begin
					if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
						hostile := 1;
					end
					else begin
						if (script_action == 13) then begin//<-- combat_p_proc , basically does combat_is_initialized == 1
							call combat_p_proc;
						end
						else begin
							if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
								if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
									hostile := 0;
									attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
								end
							end
							else begin
								if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
									call destroy_p_proc;
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure destroy_p_proc
begin

	inc_good_critter		
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	rndx := random(1, 4);
	if (rndx == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_GLOWONE, 101), 2);
	end
	else begin
		if (rndx == 2) then begin
			float_msg(self_obj, message_str(SCRIPT_GLOWONE, 102), 2);
		end
		else begin
			if (rndx == 3) then begin
				display_msg(message_str(SCRIPT_GLOWONE, 103));
			end
			else begin
				if (rndx == 4) then begin
					display_msg(message_str(SCRIPT_GLOWONE, 104));
				end
			end
		end
	end
end

procedure combat_p_proc
begin
	if (fixed_param == 2) then begin
		if (target_obj == dude_obj) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg("Combat Rads From Irradiated Critters BEGINS");
			end
			if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
				variable cont := 0;// checked to see if continue to run the code after each stage
				variable CritterTYPE := 0;// 1 = Ghoul, 2 = Floater, 3 = Centaur, 4 = RadRat, 5 = GlowingOne
				if global_var(HIT_GIVES_RADS_GHOULS) > 0 then begin// HIT_GIVES_RADS_GHOULS
					if (obj_pid(self_obj) == (16777216 + 14)) or (obj_pid(self_obj) == (16777216 + 104)) or (obj_pid(self_obj) == (16777216 + 105)) or (obj_pid(self_obj) == (16777216 + 106)) or (obj_pid(self_obj) == (16777216 + 109)) or (obj_pid(self_obj) == (16777216 + 110)) or (obj_pid(self_obj) == (16777216 + 131)) or (obj_pid(self_obj) == (16777216 + 157)) or (obj_pid(self_obj) == (16777216 + 184)) then begin// 14 = Zombie Guard, 104 = Set, 105 = Garret, 106 = Zombie, 109 = Ghoul Guard, 110 = Undergrounder, 131 = Talius, 157 = Harold, 184 = Zombie
						CritterTYPE := 1;
						cont := 1;
					end
				end
				if not(continue) then begin
					if global_var(HIT_GIVES_MORE_RADS_GLOW) > 0 then begin// HIT_GIVES_MORE_RADS_GLOW
						if (obj_pid(self_obj) == (16777216 + 16)) or (obj_pid(self_obj) == (16777216 + 182)) or (obj_pid(self_obj) == (16777216 + 183)) then begin// 16 = Glowing One, 182 = Glower, 183 = Mad Glowing One
							CritterTYPE := 5;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var(HIT_GIVES_MORE_RADS_RATS) > 0 then begin// HIT_GIVES_MORE_RADS_RATS
						if (obj_pid(self_obj) == (16777216 + 160)) or (obj_pid(self_obj) == (16777216 + 161)) then begin//  160, 161 = Rad Rat
							CritterTYPE := 4;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var(HIT_GIVES_RADS_FLOATERS) > 0 then begin// HIT_GIVES_RADS_FLOATERS
						if (obj_pid(self_obj) == (16777216 + 45)) or (obj_pid(self_obj) == (16777216 + 167)) then begin//  45 = Floater, 167 = Bloody Floater
							CritterTYPE := 2;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var(HIT_GIVES_RADS_CENTAURS) > 0 then begin// HIT_GIVES_RADS_CENTAURS
						if (obj_pid(self_obj) == (16777216 + 43)) or (obj_pid(self_obj) == (16777216 + 168)) then begin//  43 = Lesser Centaur, 168 = Greater Centaur
							CritterTYPE := 3;
							cont := 1;
						end
					end
				end
				if continue then begin
					variable BonusRads := 0;
					if (CritterTYPE == 5) or (CritterTYPE == 4) then begin
						BonusRads := 1;
					end
					if (random(0, 3) + combat_difficulty + BonusRads) >= 3 then begin// CHANCE TO RUN = Easy: 25%, 50% if glowing/radrat - Normal: 50%, 75% if glowing - Brutal: 75%, 100% if glowing/radrat
						variable giveRads := 1;
						if critter_inven_obj(self_obj, 1) then begin
							if (obj_pid(critter_inven_obj(self_obj, 1)) != PID_BRASS_KNUCKLES) and (obj_pid(critter_inven_obj(self_obj, 1)) != PID_SPIKED_KNUCKLES) and (obj_pid(critter_inven_obj(self_obj, 1)) != PID_POWER_FIST) then begin// Brass Knuckles, Spiked Knuckles, Power Fist
								giveRads := 0;
							end
						end
						if critter_inven_obj(self_obj, 2) then begin
							if (obj_pid(critter_inven_obj(self_obj, 2)) != PID_BRASS_KNUCKLES) and (obj_pid(critter_inven_obj(self_obj, 2)) != PID_SPIKED_KNUCKLES) and (obj_pid(critter_inven_obj(self_obj, 2)) != PID_POWER_FIST) then begin// Brass Knuckles, Spiked Knuckles, Power Fist
								giveRads := 0;
							end
						end
						if giveRads == 1 then begin
							variable LuckRoll := 0;
							variable EnduranceRoll := 0;
							LuckRoll := do_check(dude_obj, STAT_lu, 0);
							EnduranceRoll := do_check(dude_obj, STAT_en, 0);
							rndRads := 0;
							if not(is_success(LuckRoll)) and not(is_success(EnduranceRoll)) then begin
								rndRads := random((2 + combat_difficulty + BonusRads), (3 + combat_difficulty + BonusRads));// EASY: 2-3 / 3-4 if glowing/radrat, NORMAL: 3-4 / 4-5 if glowing/radrat, BRUTAL: 4-5 / 5-6 if glowing/radrat
							end
							else begin
								if not(is_success(LuckRoll)) or not(is_success(EnduranceRoll)) then begin
									rndRads := random((1 + combat_difficulty + BonusRads), (2 + combat_difficulty + BonusRads));// EASY: 1-2 / 2-3 if glowing/radrat, NORMAL: 2-3 / 3-4 if glowing/radrat, BRUTAL: 3-4 / 4-5 if glowing/radrat
								end
								else begin
									if (random(0, 5) + BonusRads) >= 5 then begin// Chance to run if both stat checks pass: 16.67%, 33% if glowing/radrat
										rndRads := random((0 + combat_difficulty + BonusRads), (1 + combat_difficulty + BonusRads));// EASY: 0-1 / 1-2 if glowing/radrat, NORMAL: 1-2 / 2-3 if glowing/radrat, BRUTAL: 2-3 / 3-4 if glowing/radrat
									end
								end
							end
							if rndRads > 0 then begin
								call combat_rads_inc;
							end
						end
					end
				end
			end
			else begin// if (BUG_FIXES_ONLY == 1)
				if (obj_pid(self_obj) == PID_GLOWING_ONE) or (obj_pid(self_obj) == PID_RADIATED_RAT) or (obj_pid(self_obj) == PID_TOUGH_RADIATED_RAT) or (obj_pid(self_obj) == PID_GLOWER) or (obj_pid(self_obj) == PID_MAD_GLOWING_ONE) then begin
					variable rndx := 0;
					rndx := (random(1, 4) - 3);// was 1d6 - 5, is now 1d4 - 3
					if (rndx < 0) then begin
						rndx := 0;
					end
					if (rndx > 0) then begin
						radiation_inc(dude_obj, rndx);
						display_msg(message_str(SCRIPT_GENGHOUL, 1004));
					end
				end
			end
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg("Combat Rads From Irradiated Critters ENDS");
			end
		end
	end
end

procedure combat_rads_inc
begin
	radiation_inc(dude_obj, rndRads);
	if ((rndRads == 1) or (rndRads == 2)) then begin
		display_msg(message_str(SCRIPT_GENGHOUL, 1004));
	end
	else begin
		if ((rndRads > 2) and (rndRads <= 5)) then begin
			display_msg(message_str(SCRIPT_GENGHOUL, 1005));
		end
		else begin
			if ((rndRads > 5) and (rndRads < 10)) then begin
				display_msg(message_str(SCRIPT_GENGHOUL, 1006));
			end
		end
	end
end
