/*

	Necropolis - Glowing Ghoul in Necropolis Vault

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_VALTGLO
#define TOWN_REP_VAR            (GVAR_TOWN_REP_NECROPOLIS)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure combat_p_proc;

variable tmp_hostile;
variable Only_Once := 1;
variable rndx;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_NECROPOLIS_GANGER );
		set_self_ai( AI_GHOUL_NORMAL );
	end
end

procedure critter_p_proc begin
	if ((global_var( GVAR_NECROP_WATER_CHIP_TAKEN ) != 0) and (global_var( GVAR_NECROP_WATER_PUMP_FIXED ) != 2)) then begin
		variable LVar0 := 0;
		LVar0 := random(2,5);
		if LVar0 == 2 then begin
			float_msg(self_obj, message_str(SCRIPT_VALTGLO, 102), 2);
		end
		else if LVar0 == 3 then begin
			float_msg(self_obj, message_str(SCRIPT_VALTGLO, 103), 2);
		end
		else if LVar0 == 4 then begin
			float_msg(self_obj, message_str(SCRIPT_VALTGLO, 104), 2);
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_VALTGLO, 105), 2);
		end
		tmp_hostile := 1;
	end
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc begin
	dude_look_at_critter;
	display_msg(message_str(SCRIPT_VALTGLO, 101));
end

procedure destroy_p_proc begin
	inc_inv_evil_crit
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_VALTGLO, 100));
end

procedure combat_p_proc begin
   if (fixed_param == 2) then begin
      rndx := random(1, 6) - 5;
      if (rndx < 0) then begin
         rndx := 0;
      end
      if (rndx > 0) then begin
         radiation_inc(target_obj, rndx);
      end
   end
end
