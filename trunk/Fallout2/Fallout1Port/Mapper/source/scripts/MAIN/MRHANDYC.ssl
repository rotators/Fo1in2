#include "..\headers\define.h"

#define NAME                    SCRIPT_MRHANDYC

#include "..\headers\command.h"

procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure push_p_proc;

import variable field_change;

procedure MrHandyC00;
procedure MrHandyC01;
procedure MrHandyC02;
procedure MrHandyC03;
procedure MrHandyC04;
procedure MrHandyC05;
procedure MrHandyC06;
procedure MrHandyC07;
procedure MrHandyC08;
procedure MrHandyC09;
procedure MrHandyC10;
procedure MrHandyC11;
procedure MrHandyC12;
procedure MrHandyC13;
procedure MrHandyC14;
procedure MrHandyC15;

procedure Node998;
procedure Node999;

procedure Node001;
procedure Node002;
procedure Node003;

procedure Node1001;
procedure Node1002;
procedure Node1003;
procedure Node1004;
procedure Node1005;
procedure Node1006;
procedure Node1007;
procedure Node1008;
procedure Node1009;
procedure Node1010;
procedure Node1011;
procedure Node1012;
procedure Node1013;
procedure Node1100;

procedure GetDate;

variable initial :=  0;
variable tmp_hostile := 0;

#define LVAR_IS_PHYSICAL_DAMAGE_FIXED		(0) // (repair)
#define LVAR_IS_COMPUTER_FIXED				(1) // (science)
#define LVAR_ALREADY_TALKED					(2)
#define LVAR_CLEANUP_BEGINS					(3) // (ordered him to continue with his procedures)
#define LVAR_IS_RADIO_FIXED					(4) // (repair or radio)
#define LVAR_ALREADY_STOOD_UP					(5)
#define LVAR_ALREADY_DESTROYED_ITEMS 		(6)
#define LVAR_DECLINED_REPROGRAMMING 		(7)
#define LVAR_WAITING                      (10)
#define LVAR_FOLLOW_DISTANCE              (11)
#define LVAR_TEAM                         (12)

#define float_handy(x)    						float_msg(self_obj, message_str(SCRIPT_GENCHAT, x), FLOAT_MSG_NORMAL)
#define handy_joins_party               	party_add_self;                                                   \
                                          add_timer_event(self_obj,game_ticks(1),2);                        \
                                          set_self_team(TEAM_PLAYER)
#define dude_has_free_slot_for_handy  		((dude_at_max_party_size == false) and (MrHandyC_In_Party == false) or unlimited_party_members)
#define EVENT_FLOAT_JOIN 						(2)

#define handy_is_fixed 							((local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 1) and (local_var(LVAR_IS_COMPUTER_FIXED) == 1) and (local_var(LVAR_IS_RADIO_FIXED) == 1))

#define set_default_party_follow             set_follow_medium
#define PARTY_NODE_X                      	Node001
#define def_follow_msg                       mstr(1020)
#define def_heal_msg                         mstr(1003)
#define def_gear_msg                         mstr(1004)

procedure Node998 begin
end
procedure Node999 begin
end

procedure push_p_proc begin
   if (MrHandyC_In_Party == false) then begin
      script_overrides;
   end
   else begin
      //float_mrhandy(random(122,123));
   end
end

procedure timed_event_p_proc begin
	if (fixed_param == EVENT_FLOAT_JOIN) then begin
		debug("handy is joining!");
	end
end


procedure start begin

end

procedure map_enter_p_proc begin
	if map_first_run then begin
		if global_var(GVAR_MR_HANDYC_HIRELING_INIT) != 1 then begin// init reset lvars
			set_global_var(GVAR_MR_HANDYC_HIRELING_INIT, 1);
			set_local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED, 0);
			set_local_var(LVAR_IS_COMPUTER_FIXED, 0);
			set_local_var(LVAR_ALREADY_TALKED, 0);
			set_local_var(LVAR_CLEANUP_BEGINS, 0);
			set_local_var(LVAR_IS_RADIO_FIXED, 0);
			set_local_var(LVAR_ALREADY_STOOD_UP, 0);
			set_local_var(LVAR_ALREADY_DESTROYED_ITEMS, 0);
			set_local_var(LVAR_DECLINED_REPROGRAMMING, 0);
		end

		// TODO: WHY?????
		if has_skill(self_obj, SKILL_SMALL_GUNS) < 50 then begin
			critter_mod_skill(self_obj, SKILL_SMALL_GUNS, 150);
		end

		if (global_var(GVAR_MR_HANDYC_HIRELING) == 1) and (global_var(GVAR_MR_HANDYC_HIRELING_STATUS) == 1) then begin
			set_self_team(TEAM_PLAYER);
			set_self_ai(AI_ROBOTS);
		end
		else begin
			set_self_team(TEAM_NECROPOLIS_MUTANT );
			set_self_ai(AI_ROBOTS);
		end
	end
end

procedure damage_p_proc begin
	if source_obj == dude_obj then begin
		if handy_is_fixed then begin
			set_global_var(GVAR_MR_HANDYC_HIRELING_STATUS, 2);
			if MrHandyC_In_Party then begin
				set_self_abandon_party;
			end
			tmp_hostile := 1;
		end
	end
end

procedure destroy_p_proc begin
	set_global_var(GVAR_MR_HANDYC_HIRELING_STATUS, 3);
end

procedure combat_p_proc begin
	if (fixed_param == 4) then begin
		if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) or (local_var(LVAR_IS_COMPUTER_FIXED) == 0) or (local_var(LVAR_IS_RADIO_FIXED) == 0) then begin// Don't do anything if not fixed.
			script_overrides;
		end
	end
end

procedure critter_p_proc begin
	if (MrHandyC_In_Party) then begin
      party_member_follow_dude
   end
   else begin
   	set_self_abandon_party;
   end

	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin

		if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) then begin
			script_overrides;
			anim(self_obj, 48, 0);
		end
		else if (local_var(LVAR_ALREADY_STOOD_UP) == 0) then begin
			set_local_var(LVAR_ALREADY_STOOD_UP, 1);
			play_sfx("MAHANDKD");// default Stand-Up sound is MAHANDCJ
			anim(self_obj, 37, 0);
		end
		else if (local_var(LVAR_ALREADY_TALKED) == 0) and (local_var(LVAR_CLEANUP_BEGINS) == 0) then begin
			if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
				if handy_is_fixed then begin
					set_local_var(LVAR_ALREADY_TALKED, 1);
					dialogue_system_enter;
				end
			end
		end
		else if (local_var(LVAR_CLEANUP_BEGINS) == 1) then begin
			if local_var(LVAR_ALREADY_DESTROYED_ITEMS) == 0 then begin
				variable KillBox_ptr := 0;
				set_local_var(LVAR_ALREADY_DESTROYED_ITEMS, 1);
				KillBox_ptr := create_object( PID_DEAD_TRAVELER, 0, 0 );// <-- Dead Traveler (Ghoul)  Was:  create_object( PID_IGUANA_STAND, 0, 0 );// <-- Bob's Iguana Stand. MAX_SIZE = 1000, biggest of all containers. -1 = NO SCRIPT ATTACHED.
				move_to(KillBox_ptr, 0, 0);
				//inven_unwield;
				move_obj_inven_to_obj(self_obj, KillBox_ptr);
				destroy_object(KillBox_ptr);
			end
			else begin
				if (tile_num(self_obj) != 20530) then begin
					animate_move_obj_to_tile(self_obj, 20530, 0);
				end
				else begin
					set_local_var(LVAR_CLEANUP_BEGINS, 2);
					set_global_var( GVAR_MRHANDYC_NO_DESTROY_MSG, 1 );
					set_global_var(GVAR_MR_HANDYC_HIRELING_STATUS, 3);
					field_change := "off";

					explosion(tile_num(self_obj), self_elevation, 0);
					explosion(tile_num_in_direction(tile_num(self_obj), 5, 1), self_elevation, 0);
					explosion(tile_num_in_direction(tile_num(self_obj), 0, 1), self_elevation, 0);
					explosion(tile_num_in_direction(tile_num(self_obj), 5, 2), self_elevation, 0);
					explosion(tile_num_in_direction(tile_num(self_obj), 0, 2), self_elevation, 0);

					display_msg(message_str(SCRIPT_MRHANDYC, 117));//{117}{}{You earn 1000 experience points for doing a little clean-up work.}
					give_exp_points(EXP_HANDYC_CLEANUP);

					critter_dmg( self_obj, random(256, 384), DMG_explosion );
				end
			end
		end

	end
end

procedure description_p_proc begin
	script_overrides;
//	if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) and (local_var(LVAR_IS_COMPUTER_FIXED) == 0) then begin// neither fixed
//		script_overrides;
//
	if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) then begin// still need physical fix
		script_overrides;
		display_msg(message_str(SCRIPT_MRHANDYC, 100));//{100}{}{This robot is non-functional. The layer of dust on it suggests that it hasn't been active in a while.}
	end
	else begin
		if (local_var(LVAR_IS_COMPUTER_FIXED) == 0) then begin// still need software fix
			script_overrides;
			if (dude_iq > (dude_perception + dude_awareness)) then begin
				if (is_success(do_check(dude_obj, STAT_iq, 0))) then begin
					display_msg(message_str(SCRIPT_MRHANDYC, 102));//{102}{}{The hardware is not a problem; it must be the software.}
				end
			end
			else begin
				if (is_success(do_check(dude_obj, STAT_pe, dude_awareness))) then begin
					display_msg(message_str(SCRIPT_MRHANDYC, 102));//{102}{}{The hardware is not a problem; it must be the software.}
				end
				else begin
					display_msg(message_str(SCRIPT_MRHANDYC, 101));//{101}{}{The robot is now powered on, but is still not functional.}
				end
			end
		end
		else begin
			if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 1) and (local_var(LVAR_IS_COMPUTER_FIXED) == 1) and (local_var(LVAR_IS_RADIO_FIXED) == 0) then begin// not fixed radio
				script_overrides;
				display_msg(message_str(SCRIPT_MRHANDYC, 123));//{123}{}{The robot's radio is broken.}
			end
			else begin
				display_msg(message_str(SCRIPT_MRHANDYC, 119));//{119}{}{This Mr. Handy robot is in moderate shape, but is functional.}
			end
		end
	end
	script_overrides;
end

procedure talk_p_proc begin
	dude_look_at_critter;

	if (MrHandyC_In_Party) then begin
		start_dialog_at_node(PARTY_NODE_X);
	end
	else if (not(MrHandyC_In_Party) and (global_var(GVAR_MR_HANDYC_HIRELING_STATUS) == 1)) then begin
		start_dialog_at_node(Node002);
	end
	else begin

		if (local_var(LVAR_CLEANUP_BEGINS) > 0) then begin
			script_overrides;
			display_msg(message_str(SCRIPT_MRHANDYC, 150));
		end
		else if (global_var(GVAR_MR_HANDYC_HIRELING_STATUS) > 0) and (global_var(GVAR_MR_HANDYC_HIRELING_STATUS) < 3)  then begin
			script_overrides;
			float_msg(self_obj, message_str(SCRIPT_MRHANDYC, 151), 0);
		end
		else begin
			if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) then begin
				script_overrides;
				display_msg(message_str(SCRIPT_MRHANDYC, 103));//{103}{}{You cannot access the robot's functions, as it is disabled.}
			end
			else if handy_is_fixed then begin
				start_gdialog(631, self_obj, 4, -1, -1);
				gsay_start;
				call MrHandyC00;
				gsay_end;
				end_dialogue;
			end
			else begin
				script_overrides;
				display_msg(message_str(SCRIPT_MRHANDYC, 122));//{122}{}{The interface systems are not responding to your input.}
			end
		end

	end

end

procedure use_skill_on_p_proc begin
	if (action_being_used == SKILL_STEAL) then begin
		if not(MrHandyC_In_Party) then begin
			script_overrides;
			display_msg(message_str(SCRIPT_GENCHAT, 211));
		end
	end
	else begin

		if (action_being_used == SKILL_SCIENCE) then begin

			if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) then begin// still need physical fix
				script_overrides;
				display_msg(message_str(SCRIPT_MRHANDYC, 103));//{103}{}{You cannot access the robot's functions, as it is disabled.}
			end
			else if (local_var(LVAR_IS_COMPUTER_FIXED) == 0) and (local_var(LVAR_IS_RADIO_FIXED) == 0) then begin// not already software fixed
				script_overrides;
				game_time_advance(game_ticks(300));

				if is_success(roll_vs_skill(dude_obj, SKILL_SCIENCE, 0)) then begin
					display_msg(message_str(SCRIPT_MRHANDYC, 105));//{105}{}{You reboot the onboard computer, and successfully restart the robot. You notice that the robot's radio is broken.}
					set_local_var(LVAR_IS_COMPUTER_FIXED, 1);
				end
				else begin
					display_msg(message_str(SCRIPT_MRHANDYC, 106));//{106}{}{You spend some time working on the robot's computer, but cannot get it restarted.}
				end

			end
			else if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 1) and (local_var(LVAR_IS_COMPUTER_FIXED) == 1) and (local_var(LVAR_IS_RADIO_FIXED) == 0) then begin// not fixed radio
				script_overrides;
				display_msg(message_str(SCRIPT_MRHANDYC, 123));//{123}{}{The robot's radio is broken.}
			end

		end
		else if (action_being_used == SKILL_REPAIR) then begin
			if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) then begin
				script_overrides;
				game_time_advance(game_ticks(12000));

				if is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 0)) then begin
					display_msg(message_str(SCRIPT_MRHANDYC, 101));//{101}{}{The robot is now powered on, but is still not functional.}
					set_local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED, 1);
				end
				else begin
					display_msg(message_str(SCRIPT_MRHANDYC, 104));//{104}{}{You tinker with the malfunctioning components, but need more time to make the fix.}
				end
			end
			else begin
				if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 1) and (local_var(LVAR_IS_COMPUTER_FIXED) == 1) and (local_var(LVAR_IS_RADIO_FIXED) == 0) then begin// not fixed radio
					script_overrides;
					game_time_advance(game_ticks(6000));

					if is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 0)) then begin
						display_msg(message_str(SCRIPT_MRHANDYC, 120));//{120}{}{You jury-rig the robot's radio system; it should be usable now.}
						set_local_var(LVAR_IS_RADIO_FIXED, 1);
					end
					else begin
						display_msg(message_str(SCRIPT_MRHANDYC, 104));//{104}{}{You tinker with the malfunctioning components, but need more time to make the fix.}
					end
				end
			end
		end

	end
end

procedure use_obj_on_p_proc begin
	if (obj_pid(obj_being_used_with) == PID_MULTI_TOOL) then begin
		if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) then begin
			script_overrides;
			game_time_advance(game_ticks(12000));

			if is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 20)) then begin
				display_msg(message_str(SCRIPT_MRHANDYC, 101));//{101}{}{The robot is now powered on, but is still not functional.}
				set_local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED, 1);
			end
			else begin
				display_msg(message_str(SCRIPT_MRHANDYC, 104));//{104}{}{You tinker with the malfunctioning components, but need more time to make the fix.}
			end
		end
		else if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 1) and (local_var(LVAR_IS_COMPUTER_FIXED) == 1)  and (local_var(LVAR_IS_RADIO_FIXED) == 0) then begin// not fixed radio
			script_overrides;
			game_time_advance(game_ticks(6000));

			if is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 20)) then begin
				display_msg(message_str(SCRIPT_MRHANDYC, 120));//{120}{}{You jury-rig the robot's radio system; it should be usable now.}
				set_local_var(LVAR_IS_RADIO_FIXED, 1);
			end
			else begin
				display_msg(message_str(SCRIPT_MRHANDYC, 104));//{104}{}{You tinker with the malfunctioning components, but need more time to make the fix.}
			end

		end
	end
	else if (obj_pid(obj_being_used_with) == PID_RADIO) then begin
		if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 1) and (local_var(LVAR_IS_COMPUTER_FIXED) == 1) and (local_var(LVAR_IS_RADIO_FIXED) == 0) then begin// not fixed radio
			script_overrides;

			game_time_advance(game_ticks(3000));

			rm_obj_from_inven(source_obj, obj_being_used_with);
			destroy_object(obj_being_used_with);

			display_msg(message_str(SCRIPT_MRHANDYC, 121));//{121}{}{You successfully replace the robot's radio .}
			set_local_var(LVAR_IS_RADIO_FIXED, 1);
		end
	end
end

procedure MrHandyC00 begin
	gsay_reply(631, 107);
	giq_option( -3, SCRIPT_MRHANDYC, 108, MrHandyC01, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MRHANDYC, 109, MrHandyC02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MRHANDYC, 110, MrHandyC01, NEUTRAL_REACTION );
	if (global_var(GVAR_MR_HANDYC_HIRELING) == 1) then begin
		giq_option( 6, SCRIPT_MRHANDYC, 124, MrHandyC04, NEUTRAL_REACTION );
	end
end

procedure MrHandyC01 begin
	gsay_message(631, 111, 50);
	set_local_var(LVAR_CLEANUP_BEGINS, 1);
end

procedure MrHandyC02 begin
	gsay_reply(631, 112);
	giq_option( 4, SCRIPT_MRHANDYC, 132, Node999, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_MRHANDYC, 114, MrHandyC03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MRHANDYC, 113, MrHandyC01, NEUTRAL_REACTION );
	if (local_var(LVAR_DECLINED_REPROGRAMMING) == 0) then begin
		giq_option( 6, SCRIPT_MRHANDYC, 139, MrHandyC10, NEUTRAL_REACTION );
	end
end

procedure MrHandyC15 begin
	gsay_reply(631, 112);
	giq_option( 6, SCRIPT_MRHANDYC, 114, MrHandyC03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MRHANDYC, 113, MrHandyC01, NEUTRAL_REACTION );
	if (local_var(LVAR_DECLINED_REPROGRAMMING) == 0) then begin
		giq_option( 6, SCRIPT_MRHANDYC, 139, MrHandyC10, NEUTRAL_REACTION );
	end
end

procedure MrHandyC03 begin
	gsay_reply(631, 115);
	giq_option( 6, SCRIPT_MRHANDYC, 116, MrHandyC01, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MRHANDYC, 132, Node999, NEUTRAL_REACTION );
end

procedure MrHandyC04 begin
	gsay_reply(631, 125);
	giq_option( 4, SCRIPT_MRHANDYC, 126, MrHandyC05, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MRHANDYC, 127, MrHandyC06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MRHANDYC, 132, MrHandyC15, NEUTRAL_REACTION );
end

procedure MrHandyC05 begin
	gsay_reply(631, 130);
	giq_option( 4, SCRIPT_MRHANDYC, 131, MrHandyC07, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MRHANDYC, 132, MrHandyC15, NEUTRAL_REACTION );
end

procedure MrHandyC06 begin
	gsay_reply(631, 128);
	giq_option( 4, SCRIPT_MRHANDYC, 129, MrHandyC05, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MRHANDYC, 132, MrHandyC15, NEUTRAL_REACTION );
end

procedure MrHandyC07 begin
	gsay_reply(631, 133);
	giq_option( 4, SCRIPT_MRHANDYC, 134, MrHandyC08, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MRHANDYC, 132, MrHandyC15, NEUTRAL_REACTION );
end

procedure MrHandyC08 begin
	gsay_reply(631, 135);
	giq_option( 4, SCRIPT_MRHANDYC, 136, MrHandyC09, NEUTRAL_REACTION );
end

procedure MrHandyC09 begin
	gsay_reply(631, 137);

	if not(MrHandyC_In_Party) then begin
		giq_option( 4, SCRIPT_MRHANDYC, 138, MrHandyC02, NEUTRAL_REACTION );
		giq_option( 4, SCRIPT_MRHANDYC, 140, MrHandyC10, NEUTRAL_REACTION );
		giq_option( 4, SCRIPT_MRHANDYC, 141, MrHandyC02, NEUTRAL_REACTION );
	end

	if (MrHandyC_In_Party) then
		NOption(1030,Node999,004);
end

procedure MrHandyC10 begin
	set_local_var(LVAR_DECLINED_REPROGRAMMING, 1);
	gsay_reply(631, 142);
	giq_option( 4, SCRIPT_MRHANDYC, 132, MrHandyC15, NEUTRAL_REACTION );
	if (global_var(GVAR_MR_HANDYC_HIRELING) == 1) then begin
		giq_option( 7, SCRIPT_MRHANDYC, 143, MrHandyC11, NEUTRAL_REACTION );
	end
	set_local_var(LVAR_DECLINED_REPROGRAMMING, 1);
end

procedure MrHandyC11 begin
	if is_success(roll_vs_skill(dude_obj, SKILL_SCIENCE, -30)) then begin
		gsay_reply(631, 144);
		giq_option( 4, SCRIPT_MRHANDYC, 136, MrHandyC13, NEUTRAL_REACTION );
	end
	else begin
		gsay_reply(631, 148);
		giq_option( 4, SCRIPT_MRHANDYC, 136, MrHandyC12, NEUTRAL_REACTION );
	end
end

procedure MrHandyC12 begin
	gsay_message(631, 149, 51);
	tmp_hostile := 1;
end

procedure MrHandyC13 begin
	gsay_reply(631, 145);
	giq_option( 4, SCRIPT_MRHANDYC, 146, MrHandyC14, NEUTRAL_REACTION );
end

procedure MrHandyC14 begin
	if dude_has_free_slot_for_handy then begin
		gsay_message(631, 147, 49);
		set_global_var(GVAR_MR_HANDYC_HIRELING_STATUS, 1);
		set_self_team( TEAM_50 );
		handy_joins_party;
	end
	else begin
		set_global_var(GVAR_MR_HANDYC_HIRELING_STATUS, 1);
		set_self_team( TEAM_50 );
		set_party_waiting;

		Reply(2000);
		NOption(2010,Node999,004);
	end
end

// Primary party node
procedure Node001 begin
	call GetDate;
   party_member_default_options;
end

procedure Node002 begin
	call GetDate;
	NOption(1040,Node003,004);
	NOption(1060,Node999,004);
end

// Handy rejoin:
procedure Node003 begin
	if dude_has_free_slot_for_handy then begin
		handy_joins_party;

		Reply(2002);
		NOption(1050,Node999,004);
	end
	else begin
		Reply(2000);
		NOption(2010,Node999,004);
	end
end

procedure GetDate begin
variable time1, time2, time3, time4;
variable time, date;
   time1:=floor(game_time_hour/1000);
   time2:=floor(game_time_hour/100)%10;
   time3:=floor(game_time_hour/10)%10;
   time4:=floor(game_time_hour%10);
   time := time1 + "" + time2 + ":" + time3 + "" + time4;
   date := get_month + "/" + get_day + "/" + get_year;

   Reply(mstr(1001) + time + " - " + date + ". " + mstr(1000));
end

procedure Node1001 begin
   // heal yourself
   obj_heal(self_obj)
   if (party_healed_max) then begin
      Reply(1100);
   end else if (party_healed_good) then begin
      Reply(1200);
   end else if (party_healed_hurt) then begin
      Reply(1300);
   end else begin
      Reply(1400);
   end
   party_member_default_options;
end

procedure Node1002 begin
   // wait here
   set_party_waiting;
   Reply(1501);
   party_member_default_options;
end

procedure Node1003 begin
   // put your weapon away
   inven_unwield(self_obj);
   Reply(1600);
   party_member_default_options;
end

procedure Node1004 begin
   // follow close
   set_follow_close;
   Reply(1700);
   party_member_default_options;
end

procedure Node1005 begin
   // follow medium
   set_follow_medium;
   Reply(1800);
   party_member_default_options;
end

procedure Node1006 begin
   // follow far
   set_follow_far;
   Reply(1900);
   party_member_default_options;
end

procedure Node1007 begin
   // distance
   Reply(1007);
   party_member_def_follow_options;
end

procedure Node1008 begin
   // gear
   Reply(1008);
   party_member_def_gear_options;
end

procedure Node1009 begin
   // remove armor
   remove_armor(self_obj)
   Reply(1009);
   party_member_default_options;
end

procedure Node1010 begin
   // weapons that can be used
   Reply(1010);
   party_member_default_options;
   NOption(1011,Node1011,004);
end

procedure Node1011 begin
	Reply(1012);
	NOption(1013,Node1012,004);
	NOption(1014,Node1013,004);
end

procedure Node1012 begin
	Reply(1016);
	NOption(1017,MrHandyC08,004);
end

procedure Node1013 begin
	Reply(1015);
	party_member_default_options;
end

procedure Node1100 begin
   if (dude_at_max_party_size) then begin
      set_self_abandon_party;
      Reply(2000);
      NOption(g_mstr(10007),Node999,004);
   end
   else begin
      end_party_waiting;
      Reply(2001);
      party_member_default_options;
   end
end
