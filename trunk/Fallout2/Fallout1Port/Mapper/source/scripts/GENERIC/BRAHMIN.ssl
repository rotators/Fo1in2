#include "..\headers\define.h"

#define NAME                    SCRIPT_BRAHMIN

#include "..\headers\command.h"

procedure start;
procedure description_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure push_p_proc;

procedure PickDeadBodyType;

variable critter_tile;
variable initial :=  0;
variable temp_hostile := 0;
variable DeathType := 56;

#define EVENT_WALK 				(1)
#define EVENT_FLOAT 				(2)
#define EVENT_POOP 				(3)

#define EVENT_STAND_UP 4

#define float(x)                           float_msg(self_obj, mstr(x), FLOAT_COLOR_NORMAL)

////////////////////////////////////////
//	COW SCRIPTS
////////////////////////////////////////

//	cow		5
//	BRAHMIN		34	<-- USE THIS ONE FOR DIALOG
//	carcow		966

////////////////////////////////////////

procedure start begin
	if shady_invaded then begin
		if (CUR_MAP_SHADYE) or (CUR_MAP_SHADYW) then begin
			if (local_var(4) != 1) then begin
				set_local_var(4, 1);
				call PickDeadBodyType;
				kill_critter(self_obj, DeathType);
			end
		end
	end
	else begin
		if not(initial) then begin
			initial :=  1;
			set_self_ai( AI_COW );
			set_self_team( TEAM_4 );
		end
	end
end

procedure map_enter_p_proc begin
	flush_add_timer_event_sec(self_obj, random(15, 90), EVENT_WALK);
	flush_add_timer_event_sec(self_obj, random(5, 15), EVENT_FLOAT);
	flush_add_timer_event_sec(self_obj, random(0, 300), EVENT_POOP);
end

procedure push_p_proc begin
   if (obj_in_party(source_obj)) then begin
      if (stat_success(source_obj, STAT_st, 0)) then begin
         if ((critter_state(self_obj) bwand DAM_KNOCKED_DOWN) == FALSE) then begin
            reg_anim_clear(self_obj);
            reg_anim_begin();
               reg_anim_animate(self_obj,ANIM_hit_from_front,-1);
               reg_anim_animate(self_obj,ANIM_fall_back,5);
               reg_anim_animate(self_obj,ANIM_fall_back_sf,-1);
            reg_anim_end();
            critter_injure(self_obj,DAM_KNOCKED_DOWN);
            add_timer_event(self_obj, game_ticks(Random(10, 30)), EVENT_STAND_UP);
            debug_msg("ZCBRAHMN: ahh Cow TIPPED you get +10 Hick Experience Points.");
         end
      end
   end
end

procedure critter_p_proc begin
	if (temp_hostile) then begin
		temp_hostile := 0;
		attack(dude_obj);
	end
end

procedure description_p_proc begin
	display_msg(message_str(SCRIPT_BRAHMIN, 100));
end

procedure talk_p_proc begin
	dude_look_at_self;
	display_msg(message_str(SCRIPT_BRAHMIN, random(102, 105)));
end

procedure timed_event_p_proc begin
variable temp_poo;

   if (fixed_param == EVENT_WALK) then begin
      if ((critter_state(self_obj) bwand DAM_KNOCKED_DOWN) == FALSE) then begin
         self_walk_to_tile( tile_num_in_direction(self_tile,random(0,5),3) );
      end
      flush_add_timer_event_sec(self_obj, random(45, 90), EVENT_WALK);
   end
   else if (fixed_param == EVENT_FLOAT) then begin
      float(random(201, 205));
      flush_add_timer_event_sec(self_obj, random(30, 45), EVENT_FLOAT);
   end
   else if (fixed_param == EVENT_POOP) then begin
      if (random(1,3) == 1) then begin
         float(206);
         debug("BRAHMIN IS POOING!!! hehehehe");
         temp_poo := create_object_sid(random(PID_SMALL_GOO_1, PID_SMALL_GOO_3), 0, 0, SCRIPT_ZIBRAPOO);
         move_to(temp_poo, tile_num_in_direction(self_tile, self_inv_rot, 1), 0);
      end
      flush_add_timer_event_sec(self_obj, random(120, 300), EVENT_POOP);
   end
   else if (fixed_param == EVENT_STAND_UP) then begin
      reg_anim_clear(self_obj);
      reg_anim_begin();
      reg_anim_animate_reverse(self_obj, ANIM_fall_back, -1);
      reg_anim_end();
      critter_uninjure(self_obj, DAM_KNOCKED_DOWN);
   end
end

procedure use_obj_on_p_proc begin
	variable Item := 0;
	if ((obj_pid(obj_being_used_with) == PID_BEER) or (obj_pid(obj_being_used_with) == PID_BOOZE)) then begin
		script_overrides;
		Item := obj_being_used_with;
		rm_obj_from_inven(source_obj, obj_being_used_with);
		destroy_object(Item);
		play_sfx("MABROMAQ");
		
		reg_anim_clear( self_obj );
		reg_anim_begin();
		reg_anim_animate(self_obj, 14, -1);
		reg_anim_animate(self_obj, 20, 5);
		reg_anim_animate(self_obj, 48, -1);
		reg_anim_end();
		
		critter_injure(self_obj, 2);//    DAM_KNOCKED_DOWN       2		<-- DOES NOT WORK!!!
		critter_injure(dude_obj, 4);//    DAM_CRIP_LEG_LEFT      4
		critter_injure(dude_obj, 8);//    DAM_CRIP_LEG_RIGHT     8
	end
end

procedure use_skill_on_p_proc begin
	if (action_being_used == SKILL_SCIENCE) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_BRAHMIN, 101));
	end
	else if (action_being_used == SKILL_STEAL) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_GENCHAT, 211));
		script_overrides;
	end
end

procedure damage_p_proc begin
	if obj_in_party(source_obj) then begin
		if (CUR_MAP_HUBENT) or (CUR_MAP_HUBDWNTN) or (CUR_MAP_HUBHEIGT) or (CUR_MAP_HUBOLDTN) or (CUR_MAP_HUBWATER) or (CUR_MAP_HUBMIS0) then begin //  THE HUB - ANY MAPS
			set_global_var( GVAR_ENEMY_HUB, 1 );
		end
		else if (CUR_MAP_JUNKENT) or (CUR_MAP_JUNKCSNO) or (CUR_MAP_JUNKKILL) then begin //  JUNKTOWN - ANY MAPS //  JUNKTOWN MAPS
			set_global_var( GVAR_ENEMY_JUNKTOWN, 1 );
		end
		else if (CUR_MAP_SHADYE) or (CUR_MAP_SHADYW) then begin //  SHADY SANDS - EAST OR WEST
			set_global_var( GVAR_ENEMY_SHADY_SANDS, 1 );//Set ENEMY_SHADY_SANDS to True
		end
		party_remove(self_obj);
		set_self_team( TEAM_4 );/* TEAM_NUM */
		temp_hostile := 1;
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);
	if (source_obj == dude_obj) then begin
		if (CUR_MAP_HUBENT) or (CUR_MAP_HUBDWNTN) or (CUR_MAP_HUBHEIGT) or (CUR_MAP_HUBOLDTN) or (CUR_MAP_HUBWATER) or (CUR_MAP_HUBMIS0) then begin //  THE HUB - ANY MAPS
			set_global_var( GVAR_ENEMY_HUB, 1 );
		end
		else if (CUR_MAP_JUNKENT) or (CUR_MAP_JUNKCSNO) or (CUR_MAP_JUNKKILL) then begin //  JUNKTOWN - ANY MAPS //  JUNKTOWN MAPS
			set_global_var( GVAR_ENEMY_JUNKTOWN, 1 );
		end
		else if (CUR_MAP_SHADYE) or (CUR_MAP_SHADYW) then begin //  SHADY SANDS - EAST OR WEST
			set_global_var( GVAR_ENEMY_SHADY_SANDS, 1 );//Set ENEMY_SHADY_SANDS to True
		end
	end
	rm_timer_event(self_obj);
end

procedure PickDeadBodyType begin
	pick_dead_body_type
end
