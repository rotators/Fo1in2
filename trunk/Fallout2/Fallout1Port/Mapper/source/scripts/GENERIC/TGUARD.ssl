#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat_p_proc;//    script_action == 13
procedure critter_p_proc;//    script_action == 12
procedure description_p_proc;//    script_action == 3
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure timed_event_p_proc;//    script_action == 22

procedure guard00;
procedure guard01;
procedure guard02;
procedure guard03;
procedure guard04;
procedure guard05;
procedure guard06;
procedure guard06a;
procedure guard07a;
procedure guard07_1;
procedure guard07;
procedure guard08;
procedure guard09;
procedure guard10;
procedure guard11;
procedure guard12;
procedure guard13;
procedure guardend;
procedure guardDownReact;

procedure set_sleep_tile;

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;

variable tmp_hostile;
variable initial :=  0;
variable round_counter;
variable Warned_Tile;

procedure PickDeadBodyType;
variable DeathType := 56;

#define LVAR_Sleeping 							(9)

procedure start
begin
/*	if (map_first_run) then begin
		if tile_num(self_obj) == 18931 then begin
			variable KillBox_ptr := 0;
			KillBox_ptr := create_object_sid(PID_DEAD_TRAVELER, 0, 0, -1);// <-- Dead Traveler (Ghoul)  Was:  create_object_sid(PID_IGUANA_STAND, 0, 0, -1);// <-- Bob's Iguana Stand. MAX_SIZE = 1000, biggest of all containers. -1 = NO SCRIPT ATTACHED.
			move_to(KillBox_ptr, 0, 0);
			//inven_unwield;
			move_obj_inven_to_obj(self_obj, KillBox_ptr);
			destroy_object(KillBox_ptr);
			move_to(self_obj, 0, 0);
			destroy_object(self_obj);
		end
	end*/
	if global_var(SHADY_SANDS_WAS_INVADED) then begin
		if (cur_map_index == MAP_SHADYE) or (cur_map_index == MAP_SHADYW) then begin //  SHADY SANDS - EAST OR WEST
			if (local_var(6) != 1) then begin
				set_local_var(6, 1);
				call PickDeadBodyType;
				kill_critter(self_obj, DeathType);
			end
		end
	end
	

	if not(initial) then begin
		initial :=  1;
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 2);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 4);
		if (local_var(10) == 0) then begin
			set_local_var(10, tile_num(self_obj));
		end
		home_tile := local_var(10);
	end
	if (script_action == 13) then begin//<-- combat_p_proc , basically does combat_is_initialized == 1
		call combat_p_proc;
	end
	else begin
		if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
			call critter_p_proc;
		end
		else begin
			if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
				call destroy_p_proc;
			end
			else begin
				if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
					call look_at_p_proc;
				end
				else begin
					if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
						call pickup_p_proc;
					end
					else begin
						if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
							call talk_p_proc;
						end
						else begin
							if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
								call timed_event_p_proc;
							end
						end
					end
				end
			end
		end
	end
end



procedure combat_p_proc
begin
	if (fixed_param == 4) then begin
		round_counter := round_counter + 1;
	end
	if (round_counter > 3) then begin
		if not(global_var(ENEMY_SHADY_SANDS)) then begin//Shady Sands is NOT tmp_hostile to player;  i.e. globalvar ENEMY_SHADY_SANDS is not enabled
			set_global_var(ENEMY_SHADY_SANDS, 1);//Set ENEMY_SHADY_SANDS to True
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) - 5);
		end
	end
end

procedure critter_p_proc
begin
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if global_var(ENEMY_SHADY_SANDS) then begin//   Is Shady Sands tmp_hostile to player?
			tmp_hostile := 1;
		end
		else begin

			if (dude_is_armed) then begin
				if (map_var(0) == 0) then begin
					call guard11;
				end
			end
		end
	end
	if (local_var(7) == 1) then begin
		if (tile_distance(tile_num(self_obj), tile_num(dude_obj)) < tile_distance(tile_num(self_obj), Warned_Tile)) then begin
			tmp_hostile := 1;
		end
	end
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure description_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_TGUARD, 100));
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_SHADY_SANDS, 1);//Set ENEMY_SHADY_SANDS to True
	end
	inc_good_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_TGUARD, 100));
end

procedure pickup_p_proc
begin
	tmp_hostile := 1;
end

procedure talk_p_proc
begin
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		set_global_var(BERSERKER_REPUTATION, 1);
		set_global_var(CHAMPION_REPUTATION, 0);
	end
	get_reaction
	if (local_var(9) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_GENVAULT, 166), 0);
	end
	else begin
		if global_var(ENEMY_SHADY_SANDS) then begin//  Is player ENEMY_SHADY_SANDS?
			set_local_var(4, 1);
			call guard00;
		end
		else begin
			if (global_var(TANDI_HIRELING_STATUS) == 1) then begin
				set_local_var(4, 1);
				call guard01;
			end
			else begin
				if ((global_var(TANDI_HIRELING_STATUS) == 2) and (local_var(8) == 0)) then begin
					set_local_var(4, 1);
					call guard02;
				end
				else begin
					if (global_var(TANDI_HIRELING_STATUS) == 3) then begin
						set_local_var(4, 1);
						call guard03;
					end
					else begin
						if (local_var(4) == 1) then begin
							if (local_var(1) < 2) then begin
								call guard13;
							end
							else begin
								call guard12;
							end
						end
						else begin
							set_local_var(4, 1);
							if (local_var(1) < 2) then begin
								call guard10;
							end
							else begin
								start_gdialog(113, self_obj, 4, -1, -1);
								gsay_start;
								call guard04;
								gsay_end;
								end_dialogue;
							end
						end
					end
				end
			end
		end
	end
end

procedure timed_event_p_proc
begin

	if (dude_is_armed) then begin
		tmp_hostile := 1;
	end
	else begin
		set_map_var(0, 0);
	end
end

procedure guard00
begin
	float_msg(self_obj, message_str(SCRIPT_TGUARD, 101), 7);
	Warned_Tile := tile_num(dude_obj);
	set_local_var(7, 1);
end

procedure guard01
begin
	float_msg(self_obj, message_str(SCRIPT_TGUARD, 102), 8);
end

procedure guard02
begin
	float_msg(self_obj, message_str(SCRIPT_TGUARD, 103), 8);
	set_local_var(8, 1);
	TopReact
end

procedure guard03
begin
	float_msg(self_obj, message_str(SCRIPT_TGUARD, 104), 8);
end

procedure guard04
begin
	gsay_reply(113, 105);
	giq_option(4, 113, 106, guard05, 50);
	giq_option(5, 113, 107, guard07, 50);
	giq_option(-3, 113, 108, guard05, 50);
end

procedure guard05
begin
	gsay_reply(113, 109);
	giq_option(4, 113, 110, guard06, 50);
	giq_option(-3, 113, 111, guardend, 50);
end

procedure guard06
begin
	gsay_reply(113, 112);
	giq_option(4, 113, 114, guard06a, 50);
	giq_option(4, 113, 113, guardend, 50);
end

procedure guard07
begin
	gsay_reply(113, 115);
	gsay_option(113, 126, guard07_1, 50);
end

procedure guard08
begin
	gsay_reply(113, 118);
	giq_option(4, 113, 120, guardDownReact, 50);
	giq_option(4, 113, 119, guardend, 50);
end

procedure guardDownReact begin
	DownReact
end

procedure guard09
begin
	gsay_reply(113, 121);
	Goodbyes;
	giq_option(4, 113, exit_line, guardend, 50);
end

procedure guard10
begin
	float_msg(self_obj, message_str(SCRIPT_TGUARD, 122), 7);
end

procedure guard11
begin
	float_msg(self_obj, message_str(SCRIPT_TGUARD, 123), 7);
	add_timer_event(self_obj, game_ticks(10), 1);
	set_map_var(0, 1);
end

procedure guard12
begin
	float_msg(self_obj, message_str(SCRIPT_TGUARD, 124), 8);
end

procedure guard13
begin
	float_msg(self_obj, message_str(SCRIPT_TGUARD, 125), 7);
end

procedure guard06a
begin
	tmp_hostile := 1;
	BottomReact
end

procedure guard07a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call guard09;
	end
	else begin
		call guard08;
	end
end

procedure guard07_1
begin
	gsay_reply(113, 116);
	giq_option(5, 113, 117, guard07a, 50);
end

procedure guardend
begin
end

procedure set_sleep_tile
begin
	if (home_tile == 15283) then begin
		sleep_tile := 14685;
	end
	else begin
		if (home_tile == 15886) then begin
			sleep_tile := 14479;
		end
		else begin
			if (home_tile == 15881) then begin
				sleep_tile := 15479;
			end
		end
	end
	wake_time := random(610, 650);
	sleep_time := random(2110, 2150);
end

procedure PickDeadBodyType
begin
	pick_dead_body_type
end
