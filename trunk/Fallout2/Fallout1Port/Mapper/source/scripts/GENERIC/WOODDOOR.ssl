#include "..\headers\define.h"

procedure start;
procedure damage_p_proc;//    script_action == 14
procedure use_p_proc;//    script_action == 6
procedure use_skill_on_p_proc;//    script_action == 8
procedure description_p_proc;//    script_action == 3
procedure use_obj_on_p_proc;//    script_action == 7
procedure map_update_p_proc;//    script_action == 23
procedure map_enter_p_proc;//    script_action == 15
//local_var(4) == HALLDED | self is Hallded locked door
//local_var(5) == HALLDED | Hallded lock was picked?
//local_var(6) == HALLDED | has init Hallded door?
//local_var(7) == GotExpForPicking (NOT USED)
import variable GhDorGrd_Ptr;

procedure start
begin
	if (tile_num(self_obj) == 17128) and (cur_map_index == 3) then begin
		set_local_var(4, 1);//  HALLDED | self is Hallded locked door
		if (local_var(6) != 1) and (map_first_run) then begin
			set_local_var(5, 0);
			set_map_var(11, 1);
			set_local_var(6, 1);
		end
	end
	if (script_action == 3) then begin// 21 is look_at, 3 is description (Binoculars)
		call description_p_proc;
	end
	else begin
		if (script_action == 6) then begin//use_p_proc - Use, Activate, or Manipulate the Object or Critter or Item
			call use_p_proc;
		end
		else begin
			if (script_action == 8) then begin//<-- use_skill_on_p_proc
				call use_skill_on_p_proc;
			end
			else begin
				if (script_action == 7) then begin//<-- use_obj_on_p_proc
					call use_obj_on_p_proc;
				end
				else begin
					if (script_action == 14) then begin//<-- damage_p_proc - has this Critter or Object been shot, hit with TNT, punched, etc.
						call damage_p_proc;
					end
					else begin
						if (script_action == 23) then begin//map_update_p_proc -- called every dozen seconds or so, & additionally on certain events (exit dialog, end combat, load map, etc)
							call map_update_p_proc;
						end
						else begin
							if (script_action == 15) then begin
								call map_enter_p_proc;
							end
						end
					end
				end
			end
		end
	end
end

procedure map_enter_p_proc
begin
	if local_var(4) then begin//  HALLDED | self is Hallded locked door
		if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
			if ((map_var(11) == 0) or (local_var(5) == 1) or (map_var(12) == 1)) then begin
				obj_unlock(self_obj);
			end
		end
		else begin
			if (local_var(5) == 1) then begin
				obj_unlock(self_obj);
			end
			else begin
				if (local_var(5) == 0) and (map_var(12) != 1) then begin
					obj_close(self_obj);
					obj_lock(self_obj);
				end
			end
		end
	end
end

procedure map_update_p_proc
begin
	if local_var(4) then begin//  HALLDED | self is Hallded locked door
		if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
			if ((map_var(11) == 0) or (local_var(5) == 1) or (map_var(12) == 1)) then begin
				obj_unlock(self_obj);
			end
		end
		else begin
			if (local_var(5) == 1) then begin
				obj_unlock(self_obj);
			end
			else begin
				if (local_var(5) == 0) and (map_var(12) != 1) then begin
					obj_close(self_obj);
					obj_lock(self_obj);
				end
			end
		end
	end
end

procedure use_p_proc
begin
	if local_var(4) then begin//  HALLDED | self is Hallded locked door
//		if (map_var(11) == 1) then begin
//			obj_lock(self_obj);
//		end
//		else begin
//			if (map_var(11) == 0) then begin
//				obj_unlock(self_obj);
//			end
//		end
		if ((map_var(11) == 1) and (source_obj == dude_obj)) then begin
			if (local_var(5) == 0) then begin
				if (GhDorGrd_Ptr != 0) and not(combat_is_initialized) then begin
					float_msg(GhDorGrd_Ptr, message_str(SCRIPT_GHDORGRD, 101), 0);
					obj_lock(self_obj);
					script_overrides;
					display_msg(message_str(SCRIPT_DOOR, 104));//{104}{}{The door is locked.}
				end
				else begin
					obj_lock(self_obj);
					script_overrides;
					display_msg(message_str(SCRIPT_DOOR, 104));//{104}{}{The door is locked.}
				end
			end
			else begin
				if (local_var(5) == 1) then begin
					if (GhDorGrd_Ptr != 0) then begin
						if not(using_skill(dude_obj, 8)) and (source_obj == dude_obj) then begin
							script_overrides;
							set_global_var(SET_DOOR_GUARD_WARNING, 1);
						end
						else begin
							if using_skill(dude_obj, 8) and is_success(roll_vs_skill(dude_obj, SKILL_SNEAK, 0)) and (source_obj == dude_obj) then begin
								obj_unlock(self_obj);
							end
						end
					end
					else begin
						obj_unlock(self_obj);
					end
				end
			end
		end
	end
end

procedure use_skill_on_p_proc
begin
	if local_var(4) then begin//  HALLDED | self is Hallded locked door
		variable LVar0 := 0;
		if (map_var(11) == 1) and (local_var(5) == 0) then begin
			if (action_being_used == SKILL_LOCKPICK) then begin//-- LOCKPICK
				script_overrides;
				LVar0 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 0);
				if (is_success(LVar0)) then begin
					obj_unlock(self_obj);
					set_local_var(5, 1);
					display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
					give_exp_points(25);
					display_msg(message_str(SCRIPT_GENCHAT, 103) + "25" + message_str(SCRIPT_GENCHAT, 104));
				end
				else begin
					if (is_critical(LVar0)) then begin
						jam_lock(self_obj);
						display_msg(message_str(SCRIPT_DOOR, 110));//{110}{}{The lock is beyond your ability to pick.}
					end
					else begin
						display_msg(message_str(SCRIPT_DOOR, 103));//{103}{}{You were not able to pick the lock.}
					end
				end
			end
		end
		else begin
			display_msg(message_str(SCRIPT_DOOR, 109));//{109}{}{The door is already unlocked.}
		end
	end
end

procedure use_obj_on_p_proc
begin
	if local_var(4) then begin//  HALLDED | self is Hallded locked door
		variable LVar0 := 0;
		variable LVar1 := 0;
		LVar0 := obj_being_used_with;
		LVar1 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 20);
		if ((obj_pid(LVar0) == 84) and (map_var(11) == 1)) then begin
			if (local_var(5) == 0) then begin
				script_overrides;
				if (is_success(LVar1)) then begin
					obj_unlock(self_obj);
					set_local_var(5, 1);
					display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
					display_msg(message_str(SCRIPT_GENCHAT, 103) + "25" + message_str(SCRIPT_GENCHAT, 104));
					give_exp_points(25);
				end
				else begin
					if (is_critical(LVar1)) then begin
						rm_obj_from_inven(dude_obj, LVar0);
						destroy_object(LVar0);
						display_msg(message_str(SCRIPT_DOOR, 101));//{101}{}{You broke your lockpicks!}
					end
					else begin
						display_msg(message_str(SCRIPT_DOOR, 103));//{103}{}{You were not able to pick the lock.}
					end
				end
			end
			else begin
				display_msg(message_str(SCRIPT_DOOR, 109));//{109}{}{The door is already unlocked.}
			end
		end
	end
end

procedure damage_p_proc
begin
	destroy_object(self_obj);
end

procedure description_p_proc
begin
	if (obj_is_locked(self_obj)) then begin
		display_msg(message_str(SCRIPT_DOOR, 104));//{104}{}{The door is locked.}
	end
end

