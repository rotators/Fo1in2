#include "..\headers\define.h"

#define NAME                    SCRIPT_CHILD

#include "..\headers\command.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure talk_p_proc;//    script_action == 11
procedure pickup_p_proc;//    script_action == 4
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure description_p_proc;//    script_action == 3
procedure timed_event_p_proc;//    script_action == 22
procedure push_p_proc;
procedure map_enter_p_proc;

procedure child01;
procedure child02;
procedure child03;
procedure child04;
procedure child05;
procedure child06;
procedure childend;

variable Only_Once := 1;
variable tmp_hostile;
variable Start_Moving;

// Fallout Fixt:
procedure PickDeadBodyType;
variable DeathType := 56;
procedure items_held;
variable RightHand := 0;
variable LeftHand := 0;
variable PIDright := 0;
variable PIDleft := 0;
variable SubtypeWEP := 0;

procedure push_p_proc begin
end

procedure start
begin
/*	if (map_first_run) then begin
		variable FEMALE := 0;
		variable Counter := 418;
		FEMALE := get_critter_stat(self_obj, STAT_gender);
		if FEMALE then begin
			while(global_var(Counter) != 0) then begin
			do
				Counter := (Counter + 1);
			end
			display_msg("first pass");
			variable Child_ptr := 0;
			variable ChildTile := 0;
			variable NewGirl := 0;
			variable SelfHeight := 0;
			display_msg("is female");
			SelfHeight := elevation(self_obj);
			ChildTile := tile_num(self_obj);
			NewGirl := create_object_sid(PID_GIRL, 0, 0, SCRIPT_CHILD);
			Child_ptr := NewGirl;
			move_to(self_obj, 0, SelfHeight);
			critter_attempt_placement(Child_ptr, ChildTile, SelfHeight);
			move_obj_inven_to_obj(self_obj, Child_ptr);
			destroy_object(self_obj);
		end
	end*/
	if global_var(SHADY_SANDS_WAS_INVADED) then begin
		if (cur_map_index == MAP_SHADYE) or (cur_map_index == MAP_SHADYW) then begin //  SHADY SANDS - EAST OR WEST
			if (local_var(6) != 1) then begin
				set_local_var(6, 1);
				call PickDeadBodyType;
				kill_critter(self_obj, DeathType);
			end
		end
	end
	else begin
		if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
			if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
				if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
					if get_critter_stat(self_obj, STAT_max_hp) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, PID_BAG) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BACKPACK) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BROWN_BAG) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
					if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
						variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
					set_local_var(12, 1);
				end
			end
		end
		if Only_Once then begin
			Only_Once := 0;
			critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 2);
			critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 68);
			if (local_var(3) == 0) then begin
				set_local_var(3, tile_num(self_obj));
			end
			if obj_is_carrying_obj_pid(self_obj, PID_ROCK) < 8 then begin
				variable Rocks := 0;
				Rocks := create_object_sid(PID_ROCK, 0, 0, -1);
				add_mult_objs_to_inven(self_obj, Rocks, random(8, 14));
			end
		end
		if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
			call talk_p_proc;
		end
		else begin
			if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
				call critter_p_proc;
			end
			else begin
				if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
					call pickup_p_proc;
				end
				else begin
					if ((script_action == 21) or (script_action == 3)) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
						call look_at_p_proc;
					end
					else begin
						if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
							call destroy_p_proc;
						end
						else begin
							if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
								call timed_event_p_proc;
							end
						end
					end
				end
			end
		end
	end
end

procedure map_enter_p_proc begin
   if (obj_pid(self_obj) == PID_GIRL) then begin
      art_change_fid_num(self_obj, FID_NFCHLD);
   end
end

procedure items_held
begin
	SubtypeWEP := 0;
	if critter_inven_obj(dude_obj, 1) then begin
		RightHand := critter_inven_obj(dude_obj, 1);
		PIDright := obj_pid(RightHand);
		if obj_item_subtype(RightHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		RightHand := 0;
		PIDright := 0;
	end
	if critter_inven_obj(dude_obj, 2) then begin
		LeftHand := critter_inven_obj(dude_obj, 2);
		PIDleft := obj_pid(LeftHand);
		if obj_item_subtype(LeftHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		LeftHand := 0;
		PIDleft := 0;
	end
end

procedure child01
begin
	gsay_reply(237, 101);
	giq_option(4, 237, 102, childend, 50);
	giq_option(5, 237, 103, child02, 50);
	giq_option(-3, 237, 104, child03, 50);
end

procedure child02
begin
	gsay_message(237, 105, 50);
end

procedure child03
begin
	gsay_message(237, 106, 50);
end

procedure child04
begin
	gsay_reply(237, 107);
	giq_option(4, 237, 108, child05, 50);
	giq_option(4, 237, 109, child06, 50);
	giq_option(-3, 237, 110, child03, 50);
end

procedure child05
begin
	gsay_message(237, 111, 50);
end

procedure child06
begin
	gsay_message(237, 112, 50);
end

procedure childend
begin
end

procedure critter_p_proc
begin
	if ((game_time_hour > 600) and (game_time_hour < 1900)) then begin
		set_local_var(0, 0);
		set_local_var(1, 1);
	end
	else begin
		set_local_var(1, 0);
		set_local_var(0, 1);
	end
	if (cur_map_index == MAP_SHADYE) then begin //  SHADY SANDS - EAST
		if (local_var(0) == 1) then begin
			if (tile_num(self_obj) != 14950) then begin
				animate_move_obj_to_tile(self_obj, 14950, 1);
			end
			else begin
				if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
			end
		end
		else begin
			if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 0);    end//  MAKE VISIBLE
			if (random(0, 9) == 1) then begin//(10 * global_var(CHILD_RUNS_HOW_OFTEN))) == 1) then begin
				if (random(0, 9) == 1) then begin
					animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(3), random(0, 5), random(2, 4)), 0);
				end
				else begin
					animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(3), random(0, 5), random(3, 14)), 1);// distance was (3, 7)
				end
			end
		end
	end
	else begin
		if (cur_map_index == MAP_SHADYW) then begin //  SHADY SANDS - WEST
			if (local_var(0) == 1) then begin
				if (tile_num(self_obj) != 20437) then begin
					animate_move_obj_to_tile(self_obj, 22443, 1);
				end
				else begin
					if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
				end
			end
			else begin
				if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 0);    end//  MAKE VISIBLE
				if (random(0, 9) == 1) then begin//(10 * global_var(CHILD_RUNS_HOW_OFTEN))) == 1) then begin
					if (random(0, 9) == 1) then begin
						animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(3), random(0, 5), random(2, 4)), 0);
					end
					else begin
						animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(3), random(0, 5), random(3, 14)), 1);// distance was (3, 7)
					end
				end
			end
		end
		else begin
			if ((random(0, 15) == 1) and (Start_Moving == 0)) then begin
				add_timer_event(self_obj, game_ticks(random(3, 6)), 1);
			end
		end
	end
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
end

procedure talk_p_proc
begin
	call items_held;
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	start_gdialog(237, self_obj, 4, -1, -1);
	gsay_start;
	if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
		call child04;
	end
	else begin
		call child01;
	end
	gsay_end;
	end_dialogue;
end

procedure pickup_p_proc
begin
	tmp_hostile := 1;
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	if source_obj == dude_obj then begin
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 5));
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
	end
	if (global_var(CHILDKILLER_FROM_HOMIES) == 0) then begin
		if source_obj == dude_obj then begin
			if (metarule(51, self_obj) == 2) or (obj_pid(self_obj) == PID_BOY) or (obj_pid(self_obj) == PID_GIRL) then begin
				set_global_var(CHILDKILLER_REPUTATION, (global_var(CHILDKILLER_REPUTATION) + 1));
			end
		end
	end
	else begin
		if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
			if (metarule(51, self_obj) == 2) or (obj_pid(self_obj) == PID_BOY) or (obj_pid(self_obj) == PID_GIRL) then begin
				set_global_var(CHILDKILLER_REPUTATION, (global_var(CHILDKILLER_REPUTATION) + 1));
			end
		end
	end
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_CHILD, 100));
end

procedure description_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_CHILD, 100));
end

procedure timed_event_p_proc
begin
	Start_Moving := 0;
	if (obj_on_screen(self_obj)) then begin
		animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(3, 7)), 1);
	end
end

procedure PickDeadBodyType
begin
	variable LVar0 := 0;
	LVar0 := (random(0, 6) + random(0, 6) + random(0, 6));
//
	if (LVar0 <= 5) then begin// 31.5%
		DeathType := 57;//		burnt, face down  [FLAMER]
	end
	else begin
		if (LVar0 <= 10) then begin// 26%
			DeathType := 56;//		cut in half  [LASER RIFLE, GATLING LASER]
		end
		else begin
			if (LVar0 <= 14) then begin// 21%
				DeathType := 53;//		head & arm gone - full auto  [MINIGUN]
			end
			else begin
				if (LVar0 <= 16) then begin// 10.5%
					DeathType := 63;//		face down, blood pool  (generic death, no weapon associated)
				end
				else begin// <--------------------	16%
					variable LVar1 := 0;
					LVar1 := random(0, 2);
					if (LVar1 == 0) then begin
						DeathType := 54;// bullet holes - full auto partial hit
					end
					else begin
						if (LVar1 == 1) then begin
							DeathType := 59;// exploded  [ROCKET LAUNCHER]
						end
						else begin
							if (LVar1 == 2) then begin
								DeathType := 60;// melted pile  [PLASMA RIFLE]
							end
						end
					end
				end
			end
		end
	end
end
