#include "..\headers\define.h"

#define NAME                    SCRIPT_CHILD

#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure talk_p_proc;//    script_action == 11
procedure pickup_p_proc;//    script_action == 4
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure description_p_proc;//    script_action == 3
procedure timed_event_p_proc;//    script_action == 22
procedure push_p_proc;
procedure map_enter_p_proc;

procedure child01;
procedure child02;
procedure child03;
procedure child04;
procedure child05;
procedure child06;
procedure childend;

variable Only_Once := 1;
variable tmp_hostile;
variable Start_Moving;

// Fallout Fixt:
procedure PickDeadBodyType;
variable DeathType := 56;

procedure push_p_proc begin
end

procedure start begin
	if global_var(GVAR_SHADY_SANDS_WAS_INVADED) then begin
		if (cur_map_index == MAP_SHADYE) or (cur_map_index == MAP_SHADYW) then begin //  SHADY SANDS - EAST OR WEST
			if (local_var(6) != 1) then begin
				set_local_var(6, 1);
				call PickDeadBodyType;
				kill_critter(self_obj, DeathType);
			end
		end
	end
	else begin


		if Only_Once then begin
			Only_Once := 0;
			set_self_team(TEAM_SHADY_SANDS );
			set_self_ai( AI_LITTLE_KIDS );
			if (local_var(3) == 0) then begin
				set_local_var(3, tile_num(self_obj));
			end
			if obj_is_carrying_obj_pid(self_obj, PID_ROCK) < 8 then begin
				variable Rocks := 0;
				Rocks := create_object( PID_ROCK, 0, 0 );
				add_mult_objs_to_inven(self_obj, Rocks, random(8, 14));
			end
		end
	end
end

procedure map_enter_p_proc begin
	// We make you look like a real girl!
   if (obj_pid(self_obj) == PID_GIRL) then begin
      art_change_fid_num(self_obj, FID_NFCHLD);
   end
end


procedure child01 begin
	gsay_reply(237, 101);
	giq_option(4, 237, 102, childend, 50);
	giq_option(5, 237, 103, child02, 50);
	giq_option(-3, 237, 104, child03, 50);
end

procedure child02
begin
	gsay_message(237, 105, 50);
end

procedure child03
begin
	gsay_message(237, 106, 50);
end

procedure child04
begin
	gsay_reply(237, 107);
	giq_option(4, 237, 108, child05, 50);
	giq_option(4, 237, 109, child06, 50);
	giq_option(-3, 237, 110, child03, 50);
end

procedure child05
begin
	gsay_message(237, 111, 50);
end

procedure child06
begin
	gsay_message(237, 112, 50);
end

procedure childend
begin
end

procedure critter_p_proc begin
	if ((game_time_hour > 600) and (game_time_hour < 1900)) then begin
		set_local_var(0, 0);
		set_local_var(1, 1);
	end
	else begin
		set_local_var(1, 0);
		set_local_var(0, 1);
	end
	if (cur_map_index == MAP_SHADYE) then begin //  SHADY SANDS - EAST
		if (local_var(0) == 1) then begin
			if (tile_num(self_obj) != 14950) then begin
				animate_move_obj_to_tile(self_obj, 14950, 1);
			end
			else begin
				if not(is_loading_game) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
			end
		end
		else begin
			if not(is_loading_game) then begin    set_obj_visibility(self_obj, 0);    end//  MAKE VISIBLE
			if (random(0, 9) == 1) then begin//(10 * global_var(CHILD_RUNS_HOW_OFTEN))) == 1) then begin
				if (random(0, 9) == 1) then begin
					animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(3), random(0, 5), random(2, 4)), 0);
				end
				else begin
					animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(3), random(0, 5), random(3, 14)), 1);// distance was (3, 7)
				end
			end
		end
	end
	else begin
		if (cur_map_index == MAP_SHADYW) then begin //  SHADY SANDS - WEST
			if (local_var(0) == 1) then begin
				if (tile_num(self_obj) != 20437) then begin
					animate_move_obj_to_tile(self_obj, 22443, 1);
				end
				else begin
					if not(is_loading_game) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
				end
			end
			else begin
				if not(is_loading_game) then begin    set_obj_visibility(self_obj, 0);    end//  MAKE VISIBLE
				if (random(0, 9) == 1) then begin//(10 * global_var(CHILD_RUNS_HOW_OFTEN))) == 1) then begin
					if (random(0, 9) == 1) then begin
						animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(3), random(0, 5), random(2, 4)), 0);
					end
					else begin
						animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(3), random(0, 5), random(3, 14)), 1);// distance was (3, 7)
					end
				end
			end
		end
		else begin
			if ((random(0, 15) == 1) and (Start_Moving == 0)) then begin
				add_timer_event(self_obj, game_ticks(random(3, 6)), 1);
			end
		end
	end
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure talk_p_proc begin
	dude_look_at_critter;
	start_gdialog(237, self_obj, 4, -1, -1);
	gsay_start;
	if (dude_is_armed) then begin
		call child04;
	end
	else begin
		call child01;
	end
	gsay_end;
	end_dialogue;
end

procedure pickup_p_proc begin
	tmp_hostile := 1;
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);
	inc_good_critter
	inc_childkiller
	rm_timer_event(self_obj);
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_CHILD, 100));
end

procedure description_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_CHILD, 100));
end

procedure timed_event_p_proc begin
	Start_Moving := 0;
	if (obj_on_screen(self_obj)) then begin
		animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(3, 7)), 1);
	end
end

procedure PickDeadBodyType begin
	pick_dead_body_type
end


