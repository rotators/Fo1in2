/*

	Mariposa - ???

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_VPLOTMUT
#define TOWN_REP_VAR            (GVAR_TOWN_REP_MBASE)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

procedure VPLotMut00;
procedure VPLotMut03;
procedure VPLotMut03a;
procedure VPLotMut03b;
procedure VPLotMut04;
procedure VPLotMut05;
procedure VPLotMut06;
procedure VPLotMut07;
procedure VPLotMut08;
procedure VPLotMutxx;
procedure VPLotMutAlert;

import variable removal_ptr;

variable initial :=  0;
variable tmp_hostile;
variable all_clear;
variable round_count;
variable parking_lot_tile := 17083;
variable guard_tile := 20101;
variable home_tile := 7000;
variable waypoint;

procedure start begin
	if not(initial) then begin
		initial :=  1;
		set_self_team(TEAM_NECROPOLIS_MUTANT );
		if (map_var(0)) then begin
			move_to(self_obj, home_tile, 0);
		end
		else begin
			add_timer_event(self_obj, game_ticks(45), 1);
		end
	end
end

procedure combat_p_proc begin
	if (fixed_param == 4) then begin
		round_count := round_count + 1;
	end
	if (round_count > 2) then begin
		call VPLotMutAlert;
	end
end

procedure critter_p_proc begin
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if (tmp_hostile) then begin
			tmp_hostile := 0;
			attack(dude_obj);
		end
		else begin
			if (global_var(VATS_ALERT)) then begin
				tmp_hostile := 1;
			end
			else begin
				if (not(map_var(4))) then begin
					if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
						dialogue_system_enter;
					end
				end
			end
		end
	end
	if (map_var(0)) then begin
		if (not(waypoint)) then begin
			if (tile_num(self_obj) != 22312) then begin
				animate_move_obj_to_tile(self_obj, 22312, 0);
			end
			else begin
				waypoint := 1;
			end
		end
		else begin
			if (waypoint == 1) then begin
				if (tile_num(self_obj) != 26317) then begin
					animate_move_obj_to_tile(self_obj, 26317, 0);
				end
				else begin
					waypoint := 2;
				end
			end
			else begin
				if (waypoint == 2) then begin
					if (tile_num(self_obj) != 31517) then begin
						animate_move_obj_to_tile(self_obj, 32319, 0);
					end
					else begin
						waypoint := 3;
					end
				end
				else begin
					if (waypoint == 3) then begin
						removal_ptr := self_obj;
					end
				end
			end
		end
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);
	inc_inv_evil_crit
	rm_timer_event(self_obj);
end

procedure pickup_p_proc
begin
	tmp_hostile := 1;
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	if (global_var(LIEUTENANTS_DEAD)) then begin
		call VPLotMut08;
	end
	else begin
		if (dude_is_armed) and not(tmp_hostile) then begin
			if (random(0, 5) == 5) then begin
				call VPLotMut00;
			end
			else begin
				tmp_hostile := 1;
			end
		end
		else begin
			start_gdialog(433, self_obj, 4, -1, -1);
			gsay_start;
			call VPLotMut03;
			gsay_end;
			end_dialogue;
		end
	end
end

procedure timed_event_p_proc
begin
	if (not(map_var(0))) then begin
		if (tile_num(self_obj) == guard_tile) then begin
			if (not(all_clear)) then begin
				float_msg(self_obj, message_str(SCRIPT_GENSUPR, 100), 0);
				all_clear := 1;
			end
			animate_move_obj_to_tile(self_obj, parking_lot_tile, 0);
		end
		else begin
			all_clear := 0;
			animate_move_obj_to_tile(self_obj, guard_tile, 0);
		end
		add_timer_event(self_obj, game_ticks(60), 1);
	end
end

procedure VPLotMut00
begin
	float_msg(self_obj, message_str(SCRIPT_GENSUPR, random(101, 103)), 0);
	tmp_hostile := 1;
end

procedure VPLotMut03
begin
	gsay_reply(433, random(104, 106));
	giq_option( -3, SCRIPT_GENSUPR, 107, VPLotMut04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_GENSUPR, 108, VPLotMut04, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_GENSUPR, 109, VPLotMut05, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_GENSUPR, 110, VPLotMut03a, NEUTRAL_REACTION );
	if dude_wearing_coc_robe then begin
		giq_option( 6, SCRIPT_GENSUPR, 111, VPLotMut03b, NEUTRAL_REACTION );
	end
end

procedure VPLotMut03a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call VPLotMut07;
	end
	else begin
		call VPLotMut06;
	end
end

procedure VPLotMut03b
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 25))) then begin
		call VPLotMut07;
	end
	else begin
		call VPLotMut06;
	end
end

procedure VPLotMut04
begin
	tmp_hostile := 1;
	gsay_message(433, random(112, 114), 50);
end

procedure VPLotMut05
begin
	gsay_reply(433, 115);
	giq_option( 5, SCRIPT_GENSUPR, 116, VPLotMutxx, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_GENSUPR, 117, VPLotMutAlert, NEUTRAL_REACTION );
end

procedure VPLotMut06
begin
	tmp_hostile := 1;
	gsay_message(433, random(118, 120), 50);
end

procedure VPLotMut07
begin
	set_map_var(4, 1);
	gsay_message(433, random(121, 123), 50);
end

procedure VPLotMut08
begin
	float_msg(self_obj, message_str(SCRIPT_GENSUPR, random(124, 127)), 0);
	tmp_hostile := 1;
end

procedure VPLotMutAlert
begin
	set_global_var(VATS_ALERT, 1);
	tmp_hostile := 1;
end

procedure VPLotMutxx
begin
	set_global_var(ENTERING_VATS_HOW, 2);
	load_map(MAP_MBVATS12, 5);
end





