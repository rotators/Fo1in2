/*

	Mariposa - Prisoner?

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_FLIP
#define TOWN_REP_VAR            (GVAR_TOWN_REP_MBASE)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure combat_p_proc;//    script_action == 13
procedure critter_p_proc;//    script_action == 12
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure timed_event_p_proc;//    script_action == 22

procedure Flip00;
procedure Flip01;
procedure Flip02;
procedure Flip03;
procedure Flip03a;
procedure Flip04;
procedure Flip05;
procedure FlipCombat;
procedure transit;
procedure FlipLeave;

variable known;
variable tmp_hostile;
variable initial :=  0;
variable round_counter;
variable cell_tile := 23937;
variable home_tile := 14338;

procedure start begin
	if not(initial) then begin
		initial :=  1;
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 43);
		critter_add_trait( self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GUARD );
	end
end

procedure combat_p_proc begin
	if (fixed_param == 4) then begin
		round_counter := round_counter + 1;
	end
	if (round_counter > 2) then begin
		if (global_var(VATS_ALERT) == 0) then begin
			set_global_var(VATS_ALERT, 1);
			set_map_var(7, 1);
		end
	end
end

procedure critter_p_proc begin
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance_objs(self_obj, dude_obj) < 12)) then begin
			if (global_var(LIEUTENANTS_DEAD)) then begin
				call Flip00;
			end
			else begin
				if ((obj_pid(critter_inven_obj(dude_obj, 0)) != PID_PURPLE_ROBE) and (local_var(4) == 0)) then begin
					dialogue_system_enter;
				end
			end
		end
		if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
			animate_move_obj_to_tile(self_obj, cell_tile, 0);
		end
		else begin
			animate_move_obj_to_tile(self_obj, home_tile, 0);
		end
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);

	set_map_var(8, 3);
	inc_evil_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc begin
	script_overrides;
	if (local_var(4)) then begin
		display_msg(message_str(SCRIPT_FLIP, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_FLIP, 101));
	end
end

procedure pickup_p_proc
begin
	tmp_hostile := 1;
end

procedure talk_p_proc begin
	dude_look_at_critter;
	get_reaction
	start_gdialog(367, self_obj, 4, -1, -1);
	gsay_start;
	if dude_wearing_coc_robe then begin
		call Flip01;
	end
	else begin
		if (local_var(4) == 1) then begin
			call Flip05;
		end
		else begin
			call Flip02;
		end
	end
	gsay_end;
	end_dialogue;
end

procedure timed_event_p_proc begin
	if (fixed_param == 1) then begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			tmp_hostile := 1;
		end
	end
	else begin
		if (fixed_param == 2) then begin
			call Flip00;
		end
	end
end

procedure Flip00 begin
	float_msg(self_obj, message_str(SCRIPT_FLIP, 102), 0);
	call FlipCombat;
end

procedure Flip01 begin
	add_timer_event(self_obj, game_ticks(30), 1);
	gsay_message(367, 103, 50);
end

procedure Flip02 begin
	set_local_var(4, 1);
	gsay_reply(367, 104);
	giq_option(4, 367, 105, FlipCombat, 50);
	giq_option(4, 367, 106, transit, 50);
	giq_option(-3, 367, 107, FlipCombat, 50);
end

procedure Flip03 begin
	gsay_reply(367, 108);
	giq_option(4, 367, 109, transit, 50);
	giq_option(4, 367, 110, Flip03a, 50);
end

procedure Flip03a begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call FlipLeave;
	end
	else begin
		call Flip04;
	end
end

procedure Flip04 begin
	gsay_message(367, 111, 50);
	call FlipCombat;
end

procedure Flip05 begin
	gsay_message(367, 112, 50);
	call FlipCombat;
end

procedure FlipCombat begin
	tmp_hostile := 1;
end

procedure transit begin
	set_global_var(ENTERING_VATS_HOW, 2);
	//load_map(MAP_MBVATS12, 5);
	load_map("MBVATS12.MAP",5);
end

procedure FlipLeave begin
	if (tile_num(self_obj) == home_tile) then begin
		animate_move_obj_to_tile(self_obj, tile_num_in_direction(home_tile, 0, 5), 0);
	end
	else begin
		animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), 5, 5), 0);
	end
	add_timer_event(self_obj, game_ticks(5), 2);
end



