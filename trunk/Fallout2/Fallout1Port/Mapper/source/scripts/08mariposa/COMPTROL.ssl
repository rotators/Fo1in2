#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;
procedure critter_p_proc;//    script_action == 12
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure timed_event_p_proc;//    script_action == 22

procedure GenSupr00;
procedure GenSupr03;
procedure GenSupr03a;
procedure GenSupr03b;
procedure GenSupr04;
procedure GenSupr05;
procedure GenSupr06;
procedure GenSupr07;
procedure GenSupr08;
procedure GenSuprAlert;
procedure GenSuprxx;

import variable ignoring_dude;
import variable radio_computer;
import variable valid_target;

variable initial :=  0;
variable tmp_hostile;



procedure start
begin
	

	if not(initial) then begin
		initial :=  1;
		critter_add_trait( self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, TEAM_NECROPOLIS_MUTANT );
		critter_add_trait( self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_SUPER_MUTANT_AGGRESSIVE );
	end
end

procedure critter_p_proc
begin
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
			tmp_hostile := 0;
			attack(dude_obj);
		end
		else begin
			if (global_var(VATS_ALERT)) then begin
				tmp_hostile := 1;
			end
			else begin
				if (not(map_var(4)) and not(ignoring_dude)) then begin
					if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
						dialogue_system_enter;
					end
				end
			end
		end
	end
	if ((global_var(DESTROY_VATS_1) >= 1) and (global_var(DESTROY_VATS_1) <= 3)) then begin
		valid_target := self_obj;
	end
end

procedure damage_p_proc
begin
	set_map_var(13, 1);
end

procedure destroy_p_proc
begin
	set_map_var(12, 3);
	rm_timer_event(self_obj);

	if source_obj == dude_obj then begin
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
	end
	rm_timer_event(self_obj);
end

procedure pickup_p_proc
begin
	tmp_hostile := 1;
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	if (global_var(LIEUTENANTS_DEAD)) then begin
		call GenSupr08;
	end
	else begin
		if (dude_is_armed) then begin
			if (random(0, 5) == 5) then begin
				call GenSupr00;
			end
			else begin
				tmp_hostile := 1;
			end
		end
		else begin
			start_gdialog(433, self_obj, 4, -1, -1);
			gsay_start;
			call GenSupr03;
			gsay_end;
			end_dialogue;
		end
	end
end

procedure timed_event_p_proc
begin
	tmp_hostile := 1;
end

procedure GenSupr00
begin
	float_msg(self_obj, message_str(SCRIPT_GENSUPR, random(101, 103)), 2);
	tmp_hostile := 1;
end

procedure GenSupr03
begin
	gsay_reply(433, random(104, 106));
	giq_option(-3, 433, 107, GenSupr04, 51);
	giq_option(4, 433, 108, GenSupr04, 51);
	giq_option(5, 433, 109, GenSupr05, 50);
	giq_option(6, 433, 110, GenSupr03a, 50);
	if critter_inven_obj(dude_obj, 0) then begin  variable RobesCheck;  RobesCheck := critter_inven_obj(dude_obj, 0);  end      if (obj_pid(RobesCheck) == PID_PURPLE_ROBE) then begin
		giq_option(6, 433, 111, GenSupr03b, 50);
	end
end

procedure GenSupr03a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call GenSupr07;
	end
	else begin
		call GenSupr06;
	end
end

procedure GenSupr03b
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 25))) then begin
		call GenSupr07;
	end
	else begin
		call GenSupr06;
	end
end

procedure GenSupr04
begin
	tmp_hostile := 1;
	gsay_message(433, random(112, 114), 51);
end

procedure GenSupr05
begin
	gsay_reply(433, 115);
	giq_option(5, 433, 116, GenSuprxx, 50);
	giq_option(5, 433, 117, GenSuprAlert, 51);
end

procedure GenSupr06
begin
	tmp_hostile := 1;
	gsay_message(433, random(118, 120), 51);
end

procedure GenSupr07
begin
	set_map_var(4, 1);
	ignoring_dude := 1;
	gsay_message(433, random(121, 123), 50);
end

procedure GenSupr08
begin
	float_msg(self_obj, message_str(SCRIPT_GENSUPR, random(124, 127)), 2);
	tmp_hostile := 1;
end

procedure GenSuprAlert
begin
	set_global_var(VATS_ALERT, 1);
	use_obj(radio_computer);
	add_timer_event(self_obj, game_ticks(5), 1);
end

procedure GenSuprxx
begin
end

