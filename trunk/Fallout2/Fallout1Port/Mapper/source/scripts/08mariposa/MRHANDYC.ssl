#include "..\headers\define.h"

#define NAME                    SCRIPT_MRHANDYC

#include "..\headers\command.h"

procedure start;
procedure combat_p_proc;//    script_action == 13
procedure critter_p_proc;//    script_action == 12
procedure description_p_proc;//    script_action == 3
procedure talk_p_proc;//    script_action == 11
procedure use_skill_on_p_proc;//    script_action == 8
procedure use_obj_on_p_proc;//    script_action == 7
procedure destroy_p_proc;
procedure damage_p_proc;
procedure push_p_proc;

import variable field_change;

procedure MrHandyC00;
procedure MrHandyC01;
procedure MrHandyC02;
procedure MrHandyC03;
procedure MrHandyC04;
procedure MrHandyC05;
procedure MrHandyC06;
procedure MrHandyC07;
procedure MrHandyC08;
procedure MrHandyC09;
procedure MrHandyC10;
procedure MrHandyC11;
procedure MrHandyC12;
procedure MrHandyC13;
procedure MrHandyC14;
procedure MrHandyC15;
/*
procedure MrHandyC16;
procedure MrHandyC17;
procedure MrHandyC18;
procedure MrHandyC19;
*/
procedure MrHandyEND;

variable initial :=  0;
variable tmp_hostile := 0;
//variable dest_tile;

// local_var(0) == IS_PHYSICAL_DAMAGE_FIXED (repair)
// local_var(1) == IS_COMPUTER_FIXED (science)
// local_var(2) == ALREADY_TALKED
// local_var(3) == CLEANUP_BEGINS (ordered him to continue with his procedures)
// local_var(4) == IS_RADIO_FIXED (repair or radio)
// local_var(5) == ALREADY_STOOD_UP
// local_var(6) == ALREADY_DESTROYED_ITEMS
// local_var(7) == DECLINED_REPROGRAMMING

// Added by Lexx
#define float_mrhandy(x)		float_msg(self_obj, message_str(SCRIPT_GENCHAT, x), FLOAT_MSG_NORMAL)
#define MrHandyC_In_Party    	(global_var(MR_HANDYC_HIRELING_STATUS) == 2)
variable k;

procedure push_p_proc begin
   if (MrHandyC_In_Party == false) then begin
      script_overrides;
   end
   else begin
      //k:=random(122,123);
      //float_mrhandy(k);
   end
end

procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, STAT_max_hp) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, PID_BAG) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BACKPACK) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BROWN_BAG) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if (initial != 1) then begin
		initial :=  1;
		if global_var(MR_HANDYC_HIRELING_INIT) != 1 then begin// init reset lvars
			set_global_var(MR_HANDYC_HIRELING_INIT, 1);
			set_local_var(0, 0);
			set_local_var(1, 0);
			set_local_var(2, 0);
			set_local_var(3, 0);
			set_local_var(4, 0);
			set_local_var(5, 0);
			set_local_var(6, 0);
			set_local_var(7, 0);
		end
		if has_skill(self_obj, SKILL_SMALL_GUNS) < 50 then begin
			critter_mod_skill(self_obj, SKILL_SMALL_GUNS, 150);
		end
		if (global_var(MR_HANDYC_HIRELING) == 1) and (global_var(MR_HANDYC_HIRELING_STATUS) == 1) then begin
			/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 0);
			/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 71);
		end
		else begin
			/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 34);
			/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 71);
		end
	end
	if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
		call critter_p_proc;
	end
	else begin
		if (script_action == 13) then begin//<-- combat_p_proc , basically does combat_is_initialized == 1
			call combat_p_proc;
		end
		else begin
			if (script_action == 3) then begin//DETAILED ON-CLICK DESCRIPTION (Binoculars icon) - description_p_proc
				call description_p_proc;
			end
			else begin
				if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
					call talk_p_proc;
				end
				else begin
					if (script_action == 8) then begin//<-- use_skill_on_p_proc
						call use_skill_on_p_proc;
					end
					else begin
						if (script_action == 7) then begin//<-- use_obj_on_p_proc
							call use_obj_on_p_proc;
						end
						else begin
							if (script_action == 18) then begin
								call destroy_p_proc;
							end
							else begin
								if (script_action == 14) then begin
									call damage_p_proc;
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure damage_p_proc
begin
	if source_obj == dude_obj then begin
		if (local_var(0) == 1) and (local_var(1) == 1) and (local_var(4) == 1) then begin// Don't do anything if not fixed.
			set_global_var(MR_HANDYC_HIRELING_STATUS, 2);
			if (party_member_obj(obj_pid(self_obj))) then begin
				party_remove(self_obj);
			end
			tmp_hostile := 1;
		end
	end
end

procedure destroy_p_proc
begin
	set_global_var(MR_HANDYC_HIRELING_STATUS, 3);
	if (party_member_obj(obj_pid(self_obj))) then begin
		party_remove(self_obj);
	end
end

procedure combat_p_proc
begin
	if (fixed_param == 4) then begin
		if (local_var(0) == 0) or (local_var(1) == 0) or (local_var(4) == 0) then begin// Don't do anything if not fixed.
			script_overrides;
		end
	end
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
	else begin
		if (local_var(0) == 0) then begin
			script_overrides;
			anim(self_obj, 48, 0);
		end
		else begin
			if (local_var(5) == 0) then begin
				set_local_var(5, 1);
				play_sfx("MAHANDKD");// default Stand-Up sound is MAHANDCJ
				anim(self_obj, 37, 0);
			end
			else begin
				if (local_var(2) == 0) and (local_var(3) == 0) then begin
					if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
						if (local_var(0) == 1) and (local_var(1) == 1) and (local_var(4) == 1) then begin
							set_local_var(2, 1);
							dialogue_system_enter;
						end
					end
				end
				else begin
					if (local_var(3) == 1) then begin
						if local_var(6) == 0 then begin
							variable KillBox_ptr := 0;
							set_local_var(6, 1);
							KillBox_ptr := create_object_sid(PID_DEAD_TRAVELER, 0, 0, -1);// <-- Dead Traveler (Ghoul)  Was:  create_object_sid(PID_IGUANA_STAND, 0, 0, -1);// <-- Bob's Iguana Stand. MAX_SIZE = 1000, biggest of all containers. -1 = NO SCRIPT ATTACHED.
							move_to(KillBox_ptr, 0, 0);
							//inven_unwield;
							move_obj_inven_to_obj(self_obj, KillBox_ptr);
							destroy_object(KillBox_ptr);
						end
						else begin
							if (tile_num(self_obj) != 20530) then begin
								animate_move_obj_to_tile(self_obj, 20530, 0);
							end
							else begin
								set_local_var(3, 2);
								set_global_var(MRHANDYC_NO_DESTROY_MSG, 1);
								set_global_var(MR_HANDYC_HIRELING_STATUS, 3);
								field_change := "off";
								explosion(tile_num(self_obj), elevation(self_obj), 0);
								explosion(tile_num_in_direction(tile_num(self_obj), 5, 1), elevation(self_obj), 0);
								explosion(tile_num_in_direction(tile_num(self_obj), 0, 1), elevation(self_obj), 0);
								explosion(tile_num_in_direction(tile_num(self_obj), 5, 2), elevation(self_obj), 0);
								explosion(tile_num_in_direction(tile_num(self_obj), 0, 2), elevation(self_obj), 0);
								display_msg(message_str(SCRIPT_MRHANDYC, 117));//{117}{}{You earn 1000 experience points for doing a little clean-up work.}
								give_exp_points(1000);
								critter_dmg(self_obj, random(256, 384), 6);
							end
						end
					end
					else begin
						if (global_var(MR_HANDYC_HIRELING_STATUS) == 1) then begin
							if (tile_distance_objs(self_obj, dude_obj) >= 3) then begin
								if (anim_busy(self_obj) == 0) then begin
									dest_tile := tile_num_in_direction(tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 1), random(0, 5), random(0, 2));
									animate_move_obj_to_tile(self_obj, dest_tile, 0);
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure description_p_proc
begin
	script_overrides;
//	if (local_var(0) == 0) and (local_var(1) == 0) then begin// neither fixed
//		script_overrides;
//
	if (local_var(0) == 0) then begin// still need physical fix
		script_overrides;
		display_msg(message_str(SCRIPT_MRHANDYC, 100));//{100}{}{This robot is non-functional. The layer of dust on it suggests that it hasn't been active in a while.}
	end
	else begin
		if (local_var(1) == 0) then begin// still need software fix
			script_overrides;
			if (get_critter_stat(dude_obj, STAT_iq) > (get_critter_stat(dude_obj, STAT_pe) + has_trait(0, dude_obj, 0))) then begin
				if (is_success(do_check(dude_obj, STAT_iq, 0))) then begin
					display_msg(message_str(SCRIPT_MRHANDYC, 102));//{102}{}{The hardware is not a problem; it must be the software.}
				end
			end
			else begin
				if (is_success(do_check(dude_obj, STAT_pe, has_trait(0, dude_obj, 0)))) then begin
					display_msg(message_str(SCRIPT_MRHANDYC, 102));//{102}{}{The hardware is not a problem; it must be the software.}
				end
				else begin
					display_msg(message_str(SCRIPT_MRHANDYC, 101));//{101}{}{The robot is now powered on, but is still not functional.}
				end
			end
		end
		else begin
			if (local_var(0) == 1) and (local_var(1) == 1) and (local_var(4) == 0) then begin// not fixed radio
				script_overrides;
				display_msg(message_str(SCRIPT_MRHANDYC, 123));//{123}{}{The robot's radio is broken.}
			end
			else begin
				display_msg(message_str(SCRIPT_MRHANDYC, 119));//{119}{}{This Mr. Handy robot is in moderate shape, but is functional.}
			end
		end
	end
	script_overrides;
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (local_var(3) > 0) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_MRHANDYC, 150));
	end
	else begin
		if (global_var(MR_HANDYC_HIRELING_STATUS) > 0) and (global_var(MR_HANDYC_HIRELING_STATUS) < 3)  then begin
			script_overrides;
			float_msg(self_obj, message_str(SCRIPT_MRHANDYC, 151), 0);
		end
		else begin
			if (local_var(0) == 0) then begin
				script_overrides;
				display_msg(message_str(SCRIPT_MRHANDYC, 103));//{103}{}{You cannot access the robot's functions, as it is disabled.}
			end
			else begin
				if local_var(0) and local_var(1) and local_var(4) then begin
					start_gdialog(631, self_obj, 4, -1, -1);
					gsay_start;
					call MrHandyC00;
					gsay_end;
					end_dialogue;
				end
				else begin
					script_overrides;
					display_msg(message_str(SCRIPT_MRHANDYC, 122));//{122}{}{The interface systems are not responding to your input.}
				end
			end
		end
	end
end

procedure use_skill_on_p_proc
begin
	if (action_being_used == SKILL_STEAL) then begin//-- STEAL
		script_overrides;
		display_msg(message_str(SCRIPT_GENCHAT, 211));
	end
	else begin
		if (action_being_used == SKILL_SCIENCE) then begin//-- SCIENCE
			if (local_var(0) == 0) then begin// still need physical fix
				script_overrides;
				display_msg(message_str(SCRIPT_MRHANDYC, 103));//{103}{}{You cannot access the robot's functions, as it is disabled.}
			end
			else begin
				if (local_var(1) == 0) and (local_var(4) == 0) then begin// not already software fixed
					script_overrides;
					game_time_advance(game_ticks(300));
					if is_success(roll_vs_skill(dude_obj, 12, 0)) then begin
						display_msg(message_str(SCRIPT_MRHANDYC, 105));//{105}{}{You reboot the onboard computer, and successfully restart the robot. You notice that the robot's radio is broken.}
						set_local_var(1, 1);
					end
					else begin
						display_msg(message_str(SCRIPT_MRHANDYC, 106));//{106}{}{You spend some time working on the robot's computer, but cannot get it restarted.}
					end
				end
				else begin
					if (local_var(0) == 1) and (local_var(1) == 1) and (local_var(4) == 0) then begin// not fixed radio
						script_overrides;
						display_msg(message_str(SCRIPT_MRHANDYC, 123));//{123}{}{The robot's radio is broken.}
					end
				end
			end
		end
		else begin
			if (action_being_used == SKILL_REPAIR) then begin//-- REPAIR
				if (local_var(0) == 0) then begin
					script_overrides;
					game_time_advance(game_ticks(12000));
					if is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 0)) then begin
						display_msg(message_str(SCRIPT_MRHANDYC, 101));//{101}{}{The robot is now powered on, but is still not functional.}
						set_local_var(0, 1);
					end
					else begin
						display_msg(message_str(SCRIPT_MRHANDYC, 104));//{104}{}{You tinker with the malfunctioning components, but need more time to make the fix.}
					end
				end
				else begin
					if (local_var(0) == 1) and (local_var(1) == 1) and (local_var(4) == 0) then begin// not fixed radio
						script_overrides;
						game_time_advance(game_ticks(6000));
						if is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 0)) then begin
							display_msg(message_str(SCRIPT_MRHANDYC, 120));//{120}{}{You jury-rig the robot's radio system; it should be usable now.}
							set_local_var(4, 1);
						end
						else begin
							display_msg(message_str(SCRIPT_MRHANDYC, 104));//{104}{}{You tinker with the malfunctioning components, but need more time to make the fix.}
						end
					end
				end
			end
		end
	end
end

procedure use_obj_on_p_proc
begin
	if (obj_pid(obj_being_used_with) == PID_MULTI_TOOL) then begin
		if (local_var(0) == 0) then begin
			script_overrides;
			game_time_advance(game_ticks(12000));
			if is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 20)) then begin
				display_msg(message_str(SCRIPT_MRHANDYC, 101));//{101}{}{The robot is now powered on, but is still not functional.}
				set_local_var(0, 1);
			end
			else begin
				display_msg(message_str(SCRIPT_MRHANDYC, 104));//{104}{}{You tinker with the malfunctioning components, but need more time to make the fix.}
			end
		end
		else begin
			if (local_var(0) == 1) and (local_var(1) == 1)  and (local_var(4) == 0) then begin// not fixed radio
				script_overrides;
				game_time_advance(game_ticks(6000));
				if is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 20)) then begin
					display_msg(message_str(SCRIPT_MRHANDYC, 120));//{120}{}{You jury-rig the robot's radio system; it should be usable now.}
					set_local_var(4, 1);
				end
				else begin
					display_msg(message_str(SCRIPT_MRHANDYC, 104));//{104}{}{You tinker with the malfunctioning components, but need more time to make the fix.}
				end
			end
		end
	end
	else begin
		if (obj_pid(obj_being_used_with) == PID_RADIO) then begin
			if (local_var(0) == 1) and (local_var(1) == 1) and (local_var(4) == 0) then begin// not fixed radio
				script_overrides;
				game_time_advance(game_ticks(3000));
				rm_obj_from_inven(source_obj, obj_being_used_with);
				destroy_object(obj_being_used_with);
				display_msg(message_str(SCRIPT_MRHANDYC, 121));//{121}{}{You successfully replace the robot's radio .}
				set_local_var(4, 1);
			end
		end
	end
end

procedure MrHandyC00
begin
	gsay_reply(631, 107);
	giq_option(-3, 631, 108, MrHandyC01, 50);
	giq_option(4, 631, 109, MrHandyC02, 50);
	giq_option(4, 631, 110, MrHandyC01, 50);
	if (global_var(MR_HANDYC_HIRELING) == 1) then begin
		giq_option(6, 631, 124, MrHandyC04, 50);
	end
end

procedure MrHandyC01
begin
	gsay_message(631, 111, 50);
	set_local_var(3, 1);
end

procedure MrHandyC02
begin
	gsay_reply(631, 112);
	giq_option(4, 631, 132, MrHandyEND, 50);
	giq_option(6, 631, 114, MrHandyC03, 50);
	giq_option(4, 631, 113, MrHandyC01, 50);
	if (local_var(7) == 0) then begin
		giq_option(6, 631, 139, MrHandyC10, 50);
	end
end

procedure MrHandyC15
begin
	gsay_reply(631, 112);
	giq_option(6, 631, 114, MrHandyC03, 50);
	giq_option(4, 631, 113, MrHandyC01, 50);
	if (local_var(7) == 0) then begin
		giq_option(6, 631, 139, MrHandyC10, 50);
	end
end

procedure MrHandyC03
begin
	gsay_reply(631, 115);
	giq_option(6, 631, 116, MrHandyC01, 50);
	giq_option(4, 631, 132, MrHandyEND, 50);
end

procedure MrHandyC04
begin
	gsay_reply(631, 125);
	giq_option(4, 631, 126, MrHandyC05, 50);
	giq_option(4, 631, 127, MrHandyC06, 50);
	giq_option(4, 631, 132, MrHandyC15, 50);
end

procedure MrHandyC05
begin
	gsay_reply(631, 130);
	giq_option(4, 631, 131, MrHandyC07, 50);
	giq_option(4, 631, 132, MrHandyC15, 50);
end

procedure MrHandyC06
begin
	gsay_reply(631, 128);
	giq_option(4, 631, 129, MrHandyC05, 50);
	giq_option(4, 631, 132, MrHandyC15, 50);
end

procedure MrHandyC07
begin
	gsay_reply(631, 133);
	giq_option(4, 631, 134, MrHandyC08, 50);
	giq_option(4, 631, 132, MrHandyC15, 50);
end

procedure MrHandyC08
begin
	gsay_reply(631, 135);
	giq_option(4, 631, 136, MrHandyC09, 50);
end

procedure MrHandyC09
begin
	gsay_reply(631, 137);
	giq_option(4, 631, 138, MrHandyC02, 50);
	giq_option(4, 631, 140, MrHandyC10, 50);
	giq_option(4, 631, 141, MrHandyC02, 50);
end

procedure MrHandyC10
begin
	set_local_var(7, 1);
	gsay_reply(631, 142);
	giq_option(4, 631, 132, MrHandyC15, 50);
	if (global_var(MR_HANDYC_HIRELING) == 1) then begin
		giq_option(7, 631, 143, MrHandyC11, 50);
	end
	set_local_var(7, 1);
end

procedure MrHandyC11
begin
	if is_success(roll_vs_skill(dude_obj, 12, -30)) then begin
		gsay_reply(631, 144);
		giq_option(4, 631, 136, MrHandyC13, 50);
	end
	else begin
		gsay_reply(631, 148);
		giq_option(4, 631, 136, MrHandyC12, 50);
	end
end

procedure MrHandyC12
begin
	gsay_message(631, 149, 51);
	tmp_hostile := 1;
end

procedure MrHandyC13
begin
	gsay_reply(631, 145);
	giq_option(4, 631, 146, MrHandyC14, 50);
end

procedure MrHandyC14
begin
	gsay_message(631, 147, 49);
	set_global_var(MR_HANDYC_HIRELING_STATUS, 1);
	/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 50);
	party_add(self_obj);
end

procedure MrHandyEND
begin
end
