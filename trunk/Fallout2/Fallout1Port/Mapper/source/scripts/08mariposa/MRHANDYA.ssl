#include "..\headers\define.h"

procedure start;
procedure critter_p_proc;//    script_action == 12
procedure description_p_proc;//    script_action == 3
procedure use_skill_on_p_proc;//    script_action == 8
procedure Repair_Attempt;
import variable valid_target;
variable hostile;
variable initial :=  0;
///////////////////////////////////////////////////////////////////
//	For two-armed brainbots in	Military Base, Vats level 2
///////////////////////////////////////////////////////////////////

procedure start
begin
	fixt_critter_healing
	
	if (global_var(DESTROY_VATS_1) == 2) then begin
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 85);
	end
	if not(initial) then begin
		initial :=  1;
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 34);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 71);
	end
	if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
		call critter_p_proc;
	end
	else begin
		if (script_action == 3) then begin//DETAILED ON-CLICK DESCRIPTION (Binoculars icon) - description_p_proc
			call description_p_proc;
		end
		else begin
			if (script_action == 8) then begin//<-- use_skill_on_p_proc
				call use_skill_on_p_proc;
			end
		end
	end
end

procedure critter_p_proc
begin
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
	if (global_var(DESTROY_VATS_3) != 0) then begin
		if ((critter_state(self_obj) bwand 64) == 0) then begin
			critter_injure(self_obj, 64);//    DAM_BLIND         64
		end
	end
	if (global_var(ROBCTRL_MOVEMENT_HOWMUCH) != 0) then begin
		if ((critter_state(self_obj) bwand 4) == 0) then begin
			critter_injure(self_obj, 4);//    DAM_CRIP_LEG_LEFT      4
		end
	end
	if (global_var(ROBCTRL_MOVEMENT_HOWMUCH) == 2) then begin
		if ((critter_state(self_obj) bwand 8) == 0) then begin
			critter_injure(self_obj, 8);//    DAM_CRIP_LEG_RIGHT     8
		end
	end
	if (global_var(VATS_ALERT) == 1) then begin
		if (global_var(DESTROY_VATS_3) == 0) then begin
			if (global_var(DESTROY_VATS_1) == 0) then begin
				if (obj_can_see_obj(self_obj, dude_obj)) then begin
					hostile := 1;
				end
			end
			else begin
				if (global_var(DESTROY_VATS_1) == 1) then begin
					if (obj_can_see_obj(self_obj, valid_target)) then begin
						attack_complex(valid_target, 0, 1, 0, 0, 30000, 0, 0);
					end
				end
				else begin
					if (global_var(DESTROY_VATS_1) == 2) then begin
						if (obj_can_see_obj(self_obj, valid_target)) then begin
							attack_complex(valid_target, 0, 1, 0, 0, 30000, 0, 0);
						end
					end
					else begin
						if (global_var(DESTROY_VATS_1) == 3) then begin
							if (obj_can_see_obj(self_obj, dude_obj)) then begin
								hostile := 1;
							end
						end
					end
				end
			end
		end
		if (global_var(ROBCTRL_MOVEMENT_HOWMUCH) != 2) then begin
			animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(1, 3)), 0);
		end
	end
end

procedure description_p_proc
begin
	script_overrides;
	if (local_var(0)) then begin
		display_msg(message_str(SCRIPT_MRHANDYA, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_MRHANDYA, 101));
	end
end

procedure use_skill_on_p_proc
begin
	if (action_being_used == SKILL_REPAIR) then begin//-- REPAIR
		if (local_var(0) == 0) then begin
			call Repair_Attempt;
		end
	end
end

procedure Repair_Attempt
begin
	variable LVar0 := 0;
	game_time_advance(game_ticks(1200));
	LVar0 := roll_vs_skill(dude_obj, SKILL_REPAIR, 0);
	if (not(local_var(1)) and is_success(LVar0)) then begin
		display_msg(message_str(SCRIPT_MRHANDYA, 102));
		set_local_var(0, 1);
	end
	else begin
		display_msg(message_str(SCRIPT_MRHANDYA, 103));
		set_local_var(1, 1);
	end
end
