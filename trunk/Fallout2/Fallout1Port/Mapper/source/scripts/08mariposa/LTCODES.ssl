//
// ---HOLODISK SCRIPT---  Sduibek
//
// Vanilla was already ItemPRO 58, no rebuild necessary, LT.SSL
// ProtoID	58	Name:	Holodisk	Cost:	40
// script:	947	LtCodes.int    ; Codes the Lt is holding
// GVAR	298	no contents for this
//////////////////////////////////////////////////////////////////////
// MESSAGE FILE:	350	CodeDisk.msg

#include "..\headers\define.h"

procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure pickup_p_proc;
procedure drop_p_proc;

procedure NewPtr;

#define LVAR_DiskUsed 		(0)
#define LVAR_DiskExamined 	(1)

procedure start begin
	call NewPtr;
end

procedure use_p_proc begin
	script_overrides;
	set_local_var(LVAR_DiskExamined, 1);
	if local_var(LVAR_DiskUsed) == 1 then begin
		display_msg(message_str(SCRIPT_CODEDISK, 101));//Abort
	end
	else begin
		set_local_var(LVAR_DiskUsed, 1);
		set_global_var(CALM_REBELS_1, 1);
		display_msg(message_str(SCRIPT_CODEDISK, 102));//Downloaded OK
		display_msg(message_str(SCRIPT_GENCHAT, 103) + "90" + message_str(SCRIPT_GENCHAT, 104));// more exp, for Fallout Fixt
		give_exp_points(90);
	end
	call NewPtr;
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_CODEDISK, 103));// "You see an encryption decoder disk."
	call NewPtr;
end

procedure description_p_proc begin
	set_local_var(LVAR_DiskExamined, 1);
	display_msg(message_str(SCRIPT_CODEDISK, 105));
	call NewPtr;
end

procedure pickup_p_proc begin
	call NewPtr;
end

procedure drop_p_proc begin
	call NewPtr;
end

procedure NewPtr begin
	set_global_var(LTCODES_HOLODISK_POINTER, self_obj);
end

