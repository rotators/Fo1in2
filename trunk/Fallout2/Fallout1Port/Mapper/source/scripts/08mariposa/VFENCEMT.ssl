/*

	Mariposa - Guard mutant

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\mapnecro.h"

#define NAME                    SCRIPT_VFENCEMT
#define TOWN_REP_VAR            (GVAR_TOWN_REP_MBASE)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

procedure VFenceMt00;
procedure VFenceMt03;
procedure VFenceMt03a;
procedure VFenceMt03b;
procedure VFenceMt04;
procedure VFenceMt05;
procedure VFenceMt06;
procedure VFenceMt07;
procedure VFenceMt08;
procedure VFenceMtAlert;
procedure VFenceMtxx;

variable initial :=  0;
variable tmp_hostile;
variable round_count;
variable home_tile := 7000;
variable fence_tile_1 := 16706;
variable fence_tile_2 := 25705;
variable waypoint;

import variable removal_ptr;

procedure start begin
	if not(initial) then begin
		initial :=  1;
		set_self_team(TEAM_NECROPOLIS_MUTANT );
		add_timer_event(self_obj, game_ticks(30), 1);
	end
end

procedure combat_p_proc begin
	if (fixed_param == COMBAT_SUBTYPE_TURN) then begin
		round_count := round_count + 1;
	end
	if (round_count > 2) then begin
		call VFenceMtAlert;
	end
end

procedure critter_p_proc begin
	if (self_can_see_dude) then begin
		if (tmp_hostile) then begin
			tmp_hostile := 0;
			attack(dude_obj);
		end
		else begin
			if (global_var( GVAR_VATS_ALERT )) then begin
				tmp_hostile := 1;
			end
			else begin
				if (not(map_var(4))) then begin
					if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
						dialogue_system_enter;
					end
				end
			end
		end
	end
	if (map_var(0)) then begin
		if (not(waypoint)) then begin
			if (self_tile != 22312) then begin
				animate_move_obj_to_tile(self_obj, 22312, 0);
			end
			else begin
				waypoint := 1;
			end
		end
		else begin
			if (waypoint == 1) then begin
				if (self_tile != 26317) then begin
					animate_move_obj_to_tile(self_obj, 26317, 0);
				end
				else begin
					waypoint := 2;
				end
			end
			else begin
				if (waypoint == 2) then begin
					if (self_tile != 31517) then begin
						animate_move_obj_to_tile(self_obj, 32319, 0);
					end
					else begin
						waypoint := 3;
					end
				end
				else begin
					if (waypoint == 3) then begin
						removal_ptr := self_obj;
					end
				end
			end
		end
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);
	inc_inv_evil_crit
	rm_timer_event(self_obj);
end

procedure pickup_p_proc begin
	tmp_hostile := 1;
end

procedure talk_p_proc begin
	dude_look_at_critter;
	if (global_var( GVAR_LIEUTENANTS_DEAD )) then begin
		call VFenceMt08;
	end
	else begin
		if (dude_is_armed) and not(tmp_hostile) then begin
			if (random(0, 5) == 5) then begin
				call VFenceMt00;
			end
			else begin
				tmp_hostile := 1;
			end
		end
		else begin
			start_gdialog(433, self_obj, 4, -1, -1);
			gsay_start;
			call VFenceMt03;
			gsay_end;
			end_dialogue;
		end
	end
end

procedure timed_event_p_proc begin
	if (not(map_var(0))) then begin
		if (self_tile == fence_tile_1) then begin
			animate_move_obj_to_tile(self_obj, fence_tile_2, 0);
		end
		else begin
			animate_move_obj_to_tile(self_obj, fence_tile_1, 0);
		end
		add_timer_event(self_obj, game_ticks(60), 1);
	end
end

procedure VFenceMt00 begin
	float_msg(self_obj, message_str(SCRIPT_GENSUPR, random(101, 103)), 2);
	tmp_hostile := 1;
end

procedure VFenceMt03 begin
	gsay_reply(433, random(104, 106));
	giq_option( -3, SCRIPT_GENSUPR, 107, VFenceMt04, BAD_REACTION );
	giq_option( 4, SCRIPT_GENSUPR, 108, VFenceMt04, BAD_REACTION );
	giq_option( 5, SCRIPT_GENSUPR, 109, VFenceMt05, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_GENSUPR, 110, VFenceMt03a, NEUTRAL_REACTION );
	if dude_wearing_coc_robe then begin
		giq_option( 6, SCRIPT_GENSUPR, 111, VFenceMt03b, NEUTRAL_REACTION );
	end
end

procedure VFenceMt03a begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call VFenceMt07;
	end
	else begin
		call VFenceMt06;
	end
end

procedure VFenceMt03b begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 25))) then begin
		call VFenceMt07;
	end
	else begin
		call VFenceMt06;
	end
end

procedure VFenceMt04 begin
	tmp_hostile := 1;
	gsay_message(433, random(112, 114), 51);
end

procedure VFenceMt05 begin
	gsay_reply(433, 115);
	giq_option( 5, SCRIPT_GENSUPR, 116, VFenceMtxx, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_GENSUPR, 117, VFenceMtAlert, BAD_REACTION );
end

procedure VFenceMt06 begin
	tmp_hostile := 1;
	gsay_message(433, random(118, 120), 51);
end

procedure VFenceMt07 begin
	set_map_var(4, 1);
	gsay_message(433, random(121, 123), 50);
end

procedure VFenceMt08 begin
	float_msg(self_obj, message_str(SCRIPT_GENSUPR, random(124, 127)), 2);
	tmp_hostile := 1;
end

procedure VFenceMtAlert begin
	set_global_var( GVAR_VATS_ALERT, 1 );
	tmp_hostile := 1;
end

procedure VFenceMtxx begin
	set_global_var( GVAR_ENTERING_VATS_HOW, 2 );
	load_map(MAP_MBVATS12, 5);
end
