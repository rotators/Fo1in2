/*

	Mariposa - Van Hagen, Lou's side-dude.

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_VANHAG
#define TOWN_REP_VAR            (GVAR_TOWN_REP_MBASE)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

import variable Lt_ptr;

variable tmp_hostile;
variable sequence;
variable iseeu;
variable waiting;
variable clock := 4;
variable initial :=  0;

procedure start begin
	if not(initial) then begin
		initial :=  1;
		set_self_team(TEAM_NECROPOLIS_MUTANT );
		set_self_ai( AI_CHILDREN_TRUE );
	end
end

procedure critter_p_proc begin
	if (tile_distance_objs(dude_obj, self_obj) < 12) then begin
		if (tmp_hostile) then begin
			tmp_hostile := 0;
			attack(dude_obj);
		end
		if (global_var( GVAR_ENTERING_VATS_HOW ) < 1) then begin
			iseeu := 1;
		end
		if ((iseeu == 1) and (waiting == 0) and (Lt_ptr != 0) and (local_var(4) == 0)) then begin
			waiting := 1;
			add_timer_event(self_obj, game_ticks(clock), 1);
		end
	end
end

procedure destroy_p_proc begin
	sequence := 10;
	rm_timer_event(self_obj);
	inc_inv_evil_crit
	rm_timer_event(self_obj);
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_VANHAG, 100));
end

procedure pickup_p_proc begin
	tmp_hostile := 1;
end

procedure talk_p_proc begin
	dude_look_at_self;
	float_msg(self_obj, message_str(SCRIPT_VANHAG, 101), 0);
end

procedure timed_event_p_proc begin
	waiting := 0;
	if (sequence == 0) then begin
		float_msg(Lt_ptr, message_str(SCRIPT_VANHAG, 102), 0);
	end
	else if (sequence == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_VANHAG, 103), 0);
	end
	else if (sequence == 2) then begin
		float_msg(Lt_ptr, message_str(SCRIPT_VANHAG, 104), 0);
	end
	else if (sequence == 3) then begin
		float_msg(self_obj, message_str(SCRIPT_VANHAG, 105), 0);
	end
	else if (sequence == 4) then begin
		float_msg(Lt_ptr, message_str(SCRIPT_VANHAG, 106), 0);
	end
	else if (sequence == 5) then begin
		float_msg(self_obj, message_str(SCRIPT_VANHAG, 107), 0);
		clock := 6;
	end
	else if (sequence == 6) then begin
		float_msg(Lt_ptr, message_str(SCRIPT_VANHAG, 108), 0);
		clock := 4;
	end
	else if (sequence == 7) then begin
		float_msg(self_obj, message_str(SCRIPT_VANHAG, 109), 0);
	end
	else if (sequence == 8) then begin
		float_msg(Lt_ptr, message_str(SCRIPT_VANHAG, 110), 0);
	end
	else if (sequence == 9) then begin
		float_msg(self_obj, message_str(SCRIPT_VANHAG, 111), 0);
		if (not(local_var(4))) then begin
			give_exp_points(EXP_OVERHEARD_CONVERSATION);
			display_msg(message_str(SCRIPT_VANHAG, 112));
			set_local_var(4, 1);
		end
	end
	sequence := sequence + 1;
end





