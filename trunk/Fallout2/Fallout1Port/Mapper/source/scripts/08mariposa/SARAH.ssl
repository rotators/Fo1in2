/*

	Cathedral - Sarah, prisoner

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_SARAH
#define TOWN_REP_VAR            (GVAR_TOWN_REP_MBASE)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Sarah00;
procedure Sarah01;
procedure sarah02;
procedure Sarah03;
procedure Sarah04;
procedure Sarah05;
procedure Sarah06;
procedure Sarah07;
procedure Sarah08;
procedure Sarah09;
procedure Sarah10;
procedure SarahEnd;

variable initial :=  0;

procedure start begin
	if not(initial) then begin
		set_self_team(TEAM_NECROPOLIS_MUTANT );
		set_self_ai( AI_BRAINWASHED_CHILDREN );
		initial :=  1;
	end
end

procedure critter_p_proc
begin
	if (map_var(8) == 3) then begin
		if (local_var(4) == 0) then begin
			if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
				if (self_can_see_dude) then begin
					dialogue_system_enter;
				end
			end
		end
	end
end

procedure destroy_p_proc begin
	inc_good_critter
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	if (local_var(4)) then begin
		if (map_var(8) == 3) then begin
			float_msg(self_obj, message_str(SCRIPT_SARAH, 105), 0);
		end
		else begin
			if ((dude_iq < 4) and (dude_is_male)) then begin
				float_msg(self_obj, message_str(SCRIPT_SARAH, 117), 0);
			end
			else begin
				if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
					call Sarah10;
				end
				else begin
					float_msg(self_obj, message_str(SCRIPT_SARAH, 118), 0);
				end
			end
		end
	end
	else begin
		set_local_var(4, 1);
		start_gdialog(662, self_obj, 4, -1, -1);
		gsay_start;
		if (map_var(8) == 3) then begin
			call Sarah00;
		end
		else begin
			call Sarah05;
		end
		gsay_end;
		end_dialogue;
	end
end

procedure Sarah00
begin
	gsay_reply(662, 100);
	giq_option( -3, SCRIPT_SARAH, 101, Sarah01, BAD_REACTION );
	giq_option( 4, SCRIPT_SARAH, 102, SarahEnd, BAD_REACTION );
	giq_option( 5, SCRIPT_SARAH, 103, Sarah01, BAD_REACTION );
	giq_option( 7, SCRIPT_SARAH, 104, sarah02, BAD_REACTION );
end

procedure Sarah01
begin
	gsay_message(662, 105, 51);
end

procedure sarah02
begin
	gsay_reply(662, 106);
	giq_option( 7, SCRIPT_SARAH, 107, Sarah03, BAD_REACTION );
	giq_option( 7, SCRIPT_SARAH, 108, Sarah04, BAD_REACTION );
end

procedure Sarah03
begin
	gsay_reply(662, 109);
	giq_option( 7, SCRIPT_SARAH, 110, Sarah01, BAD_REACTION );
	giq_option( 7, SCRIPT_SARAH, 111, Sarah04, BAD_REACTION );
end

procedure Sarah04
begin
	gsay_message(662, 112, 51);
end

procedure Sarah05
begin
	gsay_reply(662, 113);
	giq_option( -3, SCRIPT_SARAH, 114, Sarah06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SARAH, 115, Sarah07, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_SARAH, 116, Sarah09, NEUTRAL_REACTION );
end

procedure Sarah06
begin
	gsay_message(662, 117, 50);
end

procedure Sarah07
begin
	gsay_reply(662, 118);
	giq_option( 4, SCRIPT_SARAH, 119, SarahEnd, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_SARAH, 120, Sarah08, NEUTRAL_REACTION );
end

procedure Sarah08
begin
	gsay_reply(662, 121);
	giq_option( 4, SCRIPT_SARAH, 119, SarahEnd, BAD_REACTION );
end

procedure Sarah09
begin
	gsay_message(662, 122, 50);
end

procedure Sarah10
begin
	float_msg(self_obj, message_str(SCRIPT_SARAH, 123), 0);
end

procedure SarahEnd
begin
end
