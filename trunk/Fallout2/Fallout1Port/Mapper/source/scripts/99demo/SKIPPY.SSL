/*******************************************************
*	 Some unreferenced imported varables found.	 *
*	 Because of it it is impossible to specify	  *
*	 the real names of global variables.		   *
*******************************************************/

variable GVar0;
variable GVar1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5 := 1;
variable GVar6;
variable GVar7 := 50;
variable GVar8 := 2;
variable GVar9;
variable GVar10;
variable GVar11;
variable GVar12;

#include "..\headers\define.h"

procedure start;
procedure talk_p_proc;//    script_action == 11
procedure Skippy00;
procedure Skippy01;
procedure Skippy02;
procedure Skippy03;
procedure Skippy04;
procedure Skippy04a;
procedure Skippy05;
procedure Skippy06;
procedure Skippy07;
procedure Skippy08;
procedure Skippy09;
procedure Skippy10;
procedure Skippy11;
procedure critter_p_proc;//    script_action == 12
procedure Start_War;
procedure SkippyEnd;
procedure SkippyCombat;
procedure get_cutters;

import variable known;
import variable hostile;
variable initial :=  0;
import variable Skippy_cutters;
import variable Only_Once;

import variable Fool_Counter;
import variable Crypt_Counter;

import variable Skippy_talk;

import variable is_crypt;
import variable is_fool;
import variable broken_gen;
import variable Fool_Pointer;
import variable Crypt_Pointer;
import variable Phrax_Pointer;
import variable Rock_Pointer;

import variable I_Am_A_Fool;
import variable I_Am_A_Crypt;

import variable Fool_Taunt;
import variable Crypt_Taunt;

/*

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

*/

import variable badguy;
import variable exit_line;
import variable This_Once;




procedure start
begin


	if (is_fool) then begin
set_self_team(TEAM_PLAYER );
	end
	else begin
set_self_team(TEAM_SHADY_SANDS );
	end
	if (not(GVar2)) then begin
		GVar3 := create_object( PID_MULTI_TOOL, 0, 0 );
		add_obj_to_inven(self_obj, GVar3);
		GVar2 := 1;
	end
	else begin
		if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
			call talk_p_proc;
		end
		else begin
			if ((script_action == 21) or (script_action == 3)) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
				script_overrides;
				if (GVar0) then begin
					display_msg(message_str(SCRIPT_SKIPPY, 100));
				end
				else begin
					display_msg(message_str(SCRIPT_SKIPPY, 101));
				end
				/* has how many? */    if (self_item_count( obj_pid(GVar3) )) then begin
					display_msg(message_str(SCRIPT_SKIPPY, 102));
				end
			end
			else begin
				if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
					call Skippy10;
				end
				else begin
					if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
						call critter_p_proc;
					end
					else begin
						if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
							call Start_War;
						end
						else begin
							if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
	rm_timer_event(self_obj);
								Fool_Counter := Fool_Counter - 1;
	rm_timer_event(self_obj);
							end
						end
					end
				end
			end
		end
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	start_gdialog(413, self_obj, 4, -1, -1);
	gsay_start;
	if (is_crypt) then begin
		call Skippy07;
	end
	else begin
		if (is_fool) then begin
			call Skippy08;
		end
		else begin
			/* has how many? */    if (self_item_count( obj_pid(GVar3) )) then begin
				call Skippy00;
			end
			else begin
				call Skippy09;
			end
		end
	end
	gsay_end;
	end_dialogue;
end

procedure Skippy00
begin
	sayReply(0, message_str(SCRIPT_SKIPPY, 105));
	if (dude_iq >= 4) then begin
		sayOption(message_str(SCRIPT_SKIPPY, 106), Skippy01);
	end
	if (dude_iq >= 4) then begin
		sayOption(message_str(SCRIPT_SKIPPY, 107), Skippy06);
	end
	if (dude_iq >= 4) then begin
		sayOption(message_str(SCRIPT_SKIPPY, 108), Skippy04);
	end
end

procedure Skippy01
begin
	sayReply(0, message_str(SCRIPT_SKIPPY, 109));
	if (dude_iq >= 4) then begin
		sayOption(message_str(SCRIPT_SKIPPY, 110), Skippy02);
	end
	if (dude_iq >= 4) then begin
		sayOption(message_str(SCRIPT_SKIPPY, 111), Skippy03);
	end
end

procedure Skippy02
begin
	sayReply(0, message_str(SCRIPT_SKIPPY, 112));
	if (dude_iq >= 0) then begin
		sayOption(message_str(SCRIPT_SKIPPY, 104), SkippyCombat);
	end
	if (dude_iq >= 0) then begin
		sayOption("", SkippyCombat);
	end
end

procedure Skippy03
begin
	sayReply(0, message_str(SCRIPT_SKIPPY, 113));
	if (dude_iq >= 4) then begin
		sayOption(message_str(SCRIPT_SKIPPY, 114), Skippy04);
	end
	if (dude_iq >= 0) then begin
		sayOption("", Skippy04);
	end
end

procedure Skippy04
begin
	sayReply(0, message_str(SCRIPT_SKIPPY, 115));
	if (dude_iq >= 4) then begin
		sayOption(message_str(SCRIPT_SKIPPY, 116), Skippy04a);
	end
	if (dude_iq >= 0) then begin
		sayOption("", Skippy04a);
	end
end

procedure Skippy04a
begin
	if (is_success(do_check(dude_obj, STAT_ch, 0))) then begin
		call Skippy05;
	end
	else begin
		call Skippy06;
	end
end

procedure Skippy05
begin
	sayReply(0, message_str(SCRIPT_SKIPPY, 117));
	if (dude_iq >= 0) then begin
		sayOption(message_str(SCRIPT_SKIPPY, 104), get_cutters);
	end
	if (dude_iq >= 0) then begin
		sayOption("", get_cutters);
	end
end

procedure Skippy06
begin
	sayReply(0, message_str(SCRIPT_SKIPPY, 118));
	if (dude_iq >= 0) then begin
		sayOption(message_str(SCRIPT_SKIPPY, 104), SkippyCombat);
	end
	if (dude_iq >= 0) then begin
		sayOption("", SkippyCombat);
	end
end

procedure Skippy07
begin
	sayReply(0, message_str(SCRIPT_SKIPPY, 119));
	if (dude_iq >= 0) then begin
		sayOption(message_str(SCRIPT_SKIPPY, 104), SkippyEnd);
	end
	if (dude_iq >= 0) then begin
		sayOption("", SkippyEnd);
	end
end

procedure Skippy08
begin
	sayReply(0, message_str(SCRIPT_SKIPPY, 120));
	if (dude_iq >= 0) then begin
		sayOption(message_str(SCRIPT_SKIPPY, 104), SkippyEnd);
	end
	if (dude_iq >= 0) then begin
		sayOption("", SkippyEnd);
	end
end

procedure Skippy09
begin
	sayReply(0, message_str(SCRIPT_SKIPPY, 121));
	if (dude_iq >= 0) then begin
		sayOption(message_str(SCRIPT_SKIPPY, 104), SkippyEnd);
	end
	if (dude_iq >= 0) then begin
		sayOption("", SkippyEnd);
	end
end

procedure Skippy10
begin
	float_msg(0, message_str(SCRIPT_SKIPPY, 122), 0);
	call SkippyCombat;
end

procedure Skippy11
begin
	float_msg(0, message_str(SCRIPT_SKIPPY, 125), 0);
	self_walk_to_tile( tile_num_in_direction(dude_tile, 0, 1) );
	GVar1 := 1;
end

procedure critter_p_proc
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	LVar0 := (self_obj == Fool_Pointer) or (self_obj == Crypt_Pointer) or (self_obj == Phrax_Pointer) or (self_obj == Rock_Pointer);
	if (GVar5 and Crypt_Taunt) then begin
		Crypt_Taunt := 0;
		if (random(1, 5) == 1) then begin
			float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(100, 113)), -1);
		end
	end
	else begin
		if (GVar6 and Fool_Taunt) then begin
			Fool_Taunt := 0;
			if (random(1, 5) == 1) then begin
				float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(200, 218)), -1);
			end
		end
		else begin
			if ((global_var( GVAR_QUEST_BONEYARD_7_GANG_WAR ) == 1) and (self_tile != 20725)) then begin
				self_walk_to_tile( 20725 );
			end
			else begin
				if (self_tile == 20725) then begin
					add_timer_event(self_obj, game_ticks(2), 1);
				end
				else begin
					if (broken_gen and (self_tile != 27504)) then begin
						if ((self_obj == Phrax_Pointer) and (GVar12 == 0)) then begin
							GVar12 := 1;
							float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, 300), 2);
						end
						set_global_var( GVAR_QUEST_BONEYARD_7_GANG_WAR, 2 );
						self_walk_to_tile( 27504 );
					end
					else begin
						if ((self_tile == 27504) and (global_var( GVAR_QUEST_BONEYARD_7_GANG_WAR ) == 2)) then begin
							if not(is_loading_game) then begin    set_self_invisible;    end//  MAKE INVISIBLE
							if (GVar5) then begin
								Fool_Counter := Fool_Counter - 1;
							end
							else begin
								Crypt_Counter := Crypt_Counter - 1;
							end
						end
						else begin
							if (GVar1) then begin
								GVar1 := 0;
								attack(dude_obj);
							end
							else begin
								if (not(LVar0)) then begin
									if (random(0, 21) == 1) then begin
										LVar1 := tile_num_in_direction(self_tile, random(0, 5), 2);
										self_walk_to_tile( LVar1 );
									end
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure Start_War
begin
	if (fixed_param == 1) then begin
		set_global_var( GVAR_QUEST_BONEYARD_7_GANG_WAR, 0 );
		if (GVar5) then begin
			Fool_Taunt := 1;
			float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(100, 115)), -1);
		end
		else begin
			Crypt_Taunt := 1;
			float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(200, 218)), -1);
		end
		add_timer_event(self_obj, 4, 2);
	end
	else begin
		if (fixed_param == 2) then begin
			if (GVar5) then begin
				attack( Crypt_Pointer );
			end
			else begin
				attack( Fool_Pointer );
			end
		end
	end
end

procedure SkippyEnd
begin
end

procedure SkippyCombat
begin
	GVar1 := 1;
end

procedure get_cutters
begin
	rm_obj_from_inven(self_obj, GVar3);
	add_obj_to_inven(dude_obj, GVar3);
end

/*

procedure get_reaction
begin
	if (not(GVar9)) then begin
		GVar9 := 1;
		GVar7 := GVar7 + ((dude_charisma - 5) * 5);
		if (GVar10) then begin
			GVar7 := GVar7 - check_general_rep;
		end
		else begin
			GVar7 := GVar7 + check_general_rep;
		end
		if has_rep_childkiller then begin
			GVar7 := GVar7 - 30;
		end
		if ((global_var( GVAR_BAD_MONSTER ) > (3 * global_var( GVAR_GOOD_MONSTER ))) or (global_var( GVAR_CHAMPION_REPUTATION ) == 1)) then begin
			GVar7 := GVar7 + 20;
		end
		if ((global_var( GVAR_GOOD_MONSTER ) > (2 * global_var( GVAR_BAD_MONSTER ))) or (global_var( GVAR_BERSERKER_REPUTATION ) == 1)) then begin
			GVar7 := GVar7 - 20;
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (GVar7 < 24) then begin
		GVar8 := 1;
	end
	else begin
		if (GVar7 < 74) then begin
			GVar8 := 2;
		end
		else begin
			GVar8 := 3;
		end
	end
end

procedure LevelToReact
begin
	if (GVar8 == 1) then begin
		GVar7 := random(1, 24);
	end
	else begin
		if (GVar8 == 2) then begin
			GVar7 := random(25, 74);
		end
		else begin
			GVar7 := random(75, 100);
		end
	end
end

procedure UpReact
begin
	GVar7 := GVar7 + 10;
	call ReactToLevel;
end

procedure DownReact
begin
	GVar7 := GVar7 - 10;
	call ReactToLevel;
end

procedure BottomReact
begin
	GVar8 := 1;
	GVar7 := 1;
end

procedure TopReact
begin
	GVar7 := 100;
	GVar8 := 3;
end

procedure BigUpReact
begin
	GVar7 := GVar7 + 25;
	call ReactToLevel;
end

procedure BigDownReact
begin
	GVar7 := GVar7 - 25;
	call ReactToLevel;
end

procedure UpReactLevel
begin
	GVar8 := GVar8 + 1;
	if (GVar8 > 3) then begin
		GVar8 := 3;
	end
	LevelToReact
end

procedure DownReactLevel
begin
	GVar8 := GVar8 - 1;
	if (GVar8 < 1) then begin
		GVar8 := 1;
	end
	LevelToReact
end

*/

procedure Goodbyes
begin
	variable LVar0 := 0;
	LVar0 := random(1, 6);
	if (LVar0 == 1) then begin
		GVar11 := "Thanks, bye.";
	end
	if (LVar0 == 2) then begin
		GVar11 := "Okay, thanks.";
	end
	if (LVar0 == 3) then begin
		GVar11 := "Hmm. Bye.";
	end
	if (LVar0 == 4) then begin
		GVar11 := "See ya.";
	end
	if (LVar0 == 5) then begin
		GVar11 := "Thanks.";
	end
	if (LVar0 == 6) then begin
		GVar11 := "Okay, bye.";
	end
end
