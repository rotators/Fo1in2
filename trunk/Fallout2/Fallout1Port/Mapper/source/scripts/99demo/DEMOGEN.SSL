#include "..\headers\define.h"

procedure start;

variable Science_Check;
variable Repair_Check;

import variable Use_Generator;
import variable Broken_Gen;


procedure start
begin
	if ((script_action == 21) or (script_action == 3)) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
		script_overrides;
		if (Broken_Gen) then begin
			display_msg(message_str(SCRIPT_DEMOGEN, 100));
		end
		else begin
			display_msg(message_str(SCRIPT_DEMOGEN, 101));
		end
	end
	else begin
		if (script_action == 7) then begin//<-- use_obj_on_p_proc
			script_overrides;
			if ((obj_pid(obj_being_used_with) == 75) and not(Broken_Gen)) then begin
				Broken_Gen := 1;
				give_exp_points(250);
				display_msg(message_str(SCRIPT_DEMOGEN, 102));
			end
			else begin
				if (obj_being_used_with == 75) then begin
					display_msg(message_str(SCRIPT_DEMOGEN, 103));
				end
				else begin
					display_msg(message_str(SCRIPT_DEMOGEN, 104));
				end
			end
		end
		else begin
			if (script_action == 8) then begin//<-- use_skill_on_p_proc
				script_overrides;
				if ((action_being_used == SKILL_SCIENCE) and not(Broken_Gen)) then begin//-- SCIENCE
					if (Science_Check) then begin
						display_msg(message_str(SCRIPT_DEMOGEN, 105));
					end
					else begin
						if (is_success(roll_vs_skill(dude_obj, 12, 30))) then begin
							set_global_var(ARADESH_NICER_ROBES_GFX, 1);
							display_msg(message_str(SCRIPT_DEMOGEN, 106));
						end
						else begin
							display_msg(message_str(SCRIPT_DEMOGEN, 107));
						end
					end
					Science_Check := 1;
					Use_Generator := Use_Generator + 1;
				end
				else begin
					if (action_being_used == SKILL_SCIENCE) then begin//-- SCIENCE
						if (Science_Check) then begin
							display_msg(message_str(SCRIPT_DEMOGEN, 108));
						end
						else begin
							if (is_success(roll_vs_skill(dude_obj, 12, 0))) then begin
								display_msg(message_str(SCRIPT_DEMOGEN, 109));
							end
							else begin
								display_msg(message_str(SCRIPT_DEMOGEN, 110));
							end
						end
						Science_Check := 1;
						Use_Generator := Use_Generator + 1;
					end
				end
				if ((action_being_used == SKILL_REPAIR) and not(Broken_Gen)) then begin//-- REPAIR
					if (Repair_Check) then begin
						display_msg(message_str(SCRIPT_DEMOGEN, 111));
					end
					if (is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 0))) then begin
						display_msg(message_str(SCRIPT_DEMOGEN, 112));
					end
					else begin
						display_msg(message_str(SCRIPT_DEMOGEN, 113));
					end
					Science_Check := 1;
					Use_Generator := Use_Generator + 1;
				end
				else begin
					if (action_being_used == SKILL_REPAIR) then begin//-- REPAIR
						if (Repair_Check) then begin
							display_msg(message_str(SCRIPT_DEMOGEN, 114));
						end
						else begin
							if (is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 0))) then begin
								display_msg(message_str(SCRIPT_DEMOGEN, 115));
							end
							else begin
								display_msg(message_str(SCRIPT_DEMOGEN, 116));
							end
						end
						add_timer_event(self_obj, game_ticks(5), 1);
						Science_Check := 1;
						Use_Generator := Use_Generator + 1;
					end
					else begin
						display_msg(message_str(SCRIPT_DEMOGEN, 117));
						Use_Generator := Use_Generator + 1;
					end
				end
			end
			else begin
				if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
					signal_end_game;
				end
				else begin
					if (script_action == 6) then begin//use_p_proc - Use, Activate, or Manipulate the Object or Item
						if (not(Broken_Gen)) then begin
							display_msg(message_str(SCRIPT_DEMOGEN, 118));
						end
						else begin
							display_msg(message_str(SCRIPT_DEMOGEN, 119));
						end
						Use_Generator := Use_Generator + 1;
					end
				end
			end
		end
	end
end

