#include "..\headers\define.h"

procedure start;
procedure destroy_p_proc;//    script_action == 18
procedure talk_p_proc;//    script_action == 11
procedure go_inside;
procedure weapon_check;
procedure PeasantD00;
procedure PeasantD01;
procedure PeasantD02;
procedure PeasantD03;
procedure PeasantD04;

variable hostile;
variable armed;
variable initial :=  0;

import variable dog_is_angry;
import variable growling;
import variable smartass;
import variable smartass2;

procedure items_held;

variable RightHand := 0;
variable LeftHand := 0;
variable PIDright := 0;
variable PIDleft := 0;
variable SubtypeWEP := 0;


procedure start
begin
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//display_msg("DEMOPEAS.INT - Contact Sduibek if you see this message.");
//display_msg("DEMOPEAS.INT - Contact Sduibek if you see this message.");
//////////////////////////////////////////////////////////////////////////////////////////////////////////
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
		call destroy_p_proc;
	end
	if not(initial) then begin
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 5);
		initial :=  1;
	end
	else begin
		if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
			call talk_p_proc;
		end
		else begin
			if ((script_action == 21) or (script_action == 3)) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
				script_overrides;
				display_msg(message_str(SCRIPT_DEMOPEAS, 100));
			end
			else begin
				if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
					attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
				end
				else begin
					if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
						if (smartass2) then begin
							call PeasantD00;
						end
						if (not(dog_is_angry)) then begin
							call go_inside;
						end
					end
					else begin
						if (script_action == 8) then begin//<-- use_skill_on_p_proc
							if (action_being_used == 14) then begin//-- SPEECH
								dialogue_system_enter;
							end
						end
					end
				end
			end
		end
	end
end

procedure items_held
begin
	SubtypeWEP := 0;
	if critter_inven_obj(dude_obj, 1) then begin
		RightHand := critter_inven_obj(dude_obj, 1);
		PIDright := obj_pid(RightHand);
		if obj_item_subtype(RightHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		RightHand := 0;
		PIDright := 0;
	end
	if critter_inven_obj(dude_obj, 2) then begin
		LeftHand := critter_inven_obj(dude_obj, 2);
		PIDleft := obj_pid(LeftHand);
		if obj_item_subtype(LeftHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		LeftHand := 0;
		PIDleft := 0;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	call weapon_check;
	if (global_var(DOGMEAT_HIRELING_STATUS)) then begin
		call PeasantD02;
	end
	else begin
		if (not(dog_is_angry)) then begin
			call PeasantD04;
		end
		else begin
			call items_held;
			if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
				call PeasantD01;
			end
			else begin
				call PeasantD03;
			end
		end
	end
end

procedure go_inside
begin
	animate_move_obj_to_tile(self_obj, 15283, 0);
end

procedure weapon_check
begin
	call items_held;
	if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
		armed := 1;
	end
	else begin
		armed := 0;
	end
end

procedure PeasantD00
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	LVar0 := random(1, 3);
	if (LVar0 == 1) then begin
		LVar1 := message_str(SCRIPT_DEMOPEAS, 101);
	end
	else begin
		if (LVar0 == 2) then begin
			LVar1 := message_str(SCRIPT_DEMOPEAS, 102);
		end
		else begin
			set_global_var(DOGMEAT_SOMETHING_1, 1);
			LVar1 := message_str(SCRIPT_DEMOPEAS, 103);
		end
	end
	if (dog_is_angry) then begin
		float_msg(self_obj, LVar1, 3);
	end
	smartass2 := 0;
end

procedure PeasantD01
begin
	if (dog_is_angry) then begin
		float_msg(self_obj, message_str(SCRIPT_DEMOPEAS, 104), 3);
	end
end

procedure PeasantD02
begin
	if (dog_is_angry) then begin
		float_msg(self_obj, message_str(SCRIPT_DEMOPEAS, 105), 3);
	end
end

procedure PeasantD03
begin
	float_msg(self_obj, message_str(SCRIPT_DEMOPEAS, 106), 3);
	smartass := 1;
end

procedure PeasantD04
begin
	float_msg(self_obj, message_str(SCRIPT_DEMOPEAS, 107), 3);
end

procedure destroy_p_proc
begin

end

