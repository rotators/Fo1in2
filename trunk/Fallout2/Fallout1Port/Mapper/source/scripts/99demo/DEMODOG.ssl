#include "..\headers\define.h"

procedure start;
procedure destroy_p_proc;//    script_action == 18
procedure growl;
procedure talk_p_proc;//    script_action == 11
procedure follow_player;

variable known;
variable hostile;
variable initial :=  0;
variable waiting_to_follow;

import variable dog_is_angry;
import variable Phil_approaches;
import variable growling;
import variable smartass;
import variable smartass2;

variable dest_tile;


procedure start
begin
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//	!!!!!!!!!!!!!!!!!!!!!!!   	THIS IS NOT USED, USE JUNKDOG.SSL INSTEAD       	!!!!!!!!!!!!!!!!!!!!!!
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//display_msg("DEMODOG.INT - Contact Sduibek if you see this message.");
//display_msg("DEMODOG.INT - Contact Sduibek if you see this message.");
//////////////////////////////////////////////////////////////////////////////////////////////////////////
	if not(initial) then begin
set_self_team(TEAM_RAIDERS );
		initial :=  1;
		dog_is_angry := 1;
	end
	else begin
		if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
			call talk_p_proc;
		end
		else begin
			if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
				attack(dude_obj);
			end
			else begin
				if ((script_action == 21) or (script_action == 3)) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
					script_overrides;
					if (global_var( GVAR_DOGMEAT_HIRELING_STATUS )) then begin
						display_msg(message_str(SCRIPT_DEMODOG, 100));
					end
					else begin
						display_msg(message_str(SCRIPT_DEMODOG, 101));
					end
				end
				else begin
					if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
						if (global_var( GVAR_DOGMEAT_HIRELING_STATUS ) == 1) then begin
							if (tile_distance_objs(self_obj, dude_obj) >= 3) then begin
								dest_tile := tile_num_in_direction(tile_num_in_direction(dude_tile, dude_rotation_to_self, 4), random(0, 5), random(0, 2));
								self_run_to_tile_force( dest_tile );
							end
							else begin
								dest_tile := tile_num_in_direction(tile_num_in_direction(dude_tile, dude_rotation_to_self, 4), random(0, 5), random(0, 2));
								self_run_to_tile_force( dest_tile );
							end
						end
						else begin
							if (Phil_approaches) then begin
								if (dog_is_angry) then begin
									add_timer_event(self_obj, game_ticks(4), 1);
								end
								Phil_approaches := 0;
							end
						end
					end
					else begin
						if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
							call destroy_p_proc;
						end
						else begin
							if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
								if (fixed_param == 1) then begin
									call growl;
								end
								else begin
									if (fixed_param == 2) then begin
										call follow_player;
									end
								end
							end
							else begin
								if (script_action == 7) then begin//<-- use_obj_on_p_proc
									if (obj_pid(obj_being_used_with) == PID_MEAT_ON_A_STICK) then begin
										display_msg(message_str(SCRIPT_DEMODOG, 104));
										display_msg(message_str(SCRIPT_DEMODOG, 105));
										give_exp_points(200);
										set_global_var( GVAR_DOGMEAT_HIRELING_STATUS, 1 );
										set_global_var( GVAR_DOGMEAT_SOMETHING_1, 2 );
										set_global_var( GVAR_DOGMEAT_SOMETHING_0, 2 );
					set_self_team(TEAM_PLAYER );
										dog_is_angry := 0;
										add_timer_event(self_obj, game_ticks(1), 2);
									end
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure growl
begin
	float_msg(self_obj, message_str(SCRIPT_DEMODOG, 103), 0);
	growling := 1;
	smartass2 := 1;
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	float_msg(self_obj, message_str(SCRIPT_DEMODOG, 102), 0);
end

procedure follow_player
begin
	variable LVar0 := 0;
	LVar0 := tile_num_in_direction(dude_tile, random(0, 5), 1);
	if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
		self_walk_to_tile_force( LVar0 );
	end
	else begin
		self_run_to_tile_force( LVar0 );
	end
	add_timer_event(self_obj, game_ticks(2), 2);
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);
	dog_is_angry := 0;
	rm_timer_event(self_obj);
end
