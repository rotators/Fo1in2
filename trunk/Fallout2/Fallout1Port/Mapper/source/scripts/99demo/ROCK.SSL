#include "..\headers\define.h"

procedure start;
procedure talk_p_proc;//    script_action == 11
procedure critter_p_proc;//    script_action == 12

procedure rock00;
procedure rock01;
procedure rock02;
procedure rock03;
procedure rock04;
procedure rock05;
procedure rock06;
procedure rock07;
procedure rock08;
procedure rock09;
procedure rock10;
procedure rock11;

procedure rockcombat;
procedure weapon_check;
procedure rockend;
procedure Start_War;

import variable Fool_Counter;
import variable Crypt_Counter;
import variable is_crypt;
import variable is_fool;
import variable broken_gen;
import variable Fool_Pointer;
import variable Crypt_Pointer;
import variable Phrax_Pointer;
import variable Rock_Pointer;
import variable Know_Crypts;
import variable rock_invite;
import variable Fool_Taunt;
import variable Crypt_Taunt;

variable HEREBEFORE;
variable hostile;
variable armed;
variable known;
variable one_time;
variable init_teams := 0;
variable I_Am_A_Crypt;
variable I_Am_A_Fool;
variable badguy;
variable This_Once;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;
variable reactionamt := 50;
variable reaction_level := 2;
variable got_reaction;
variable exit_line;

procedure items_held;
variable RightHand := 0;
variable LeftHand := 0;
variable PIDright := 0;
variable PIDleft := 0;
variable SubtypeWEP := 0;



procedure start
begin


	if (is_crypt) then begin
		set_self_team(TEAM_PLAYER );
	end
	else begin
		set_self_team(TEAM_VAULT13 );
	end
	if (not(init_teams)) then begin
		init_teams := 1;
		Rock_Pointer := self_obj;
		I_Am_A_Crypt := 1;
	end
	if (one_time == 0) then begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			float_msg(self_obj, message_str(SCRIPT_ROCK, 106), 2);
			one_time := 1;
		end
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			hostile := 1;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if ((script_action == 21) or (script_action == 3)) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
					script_overrides;
					if (known == 1) then begin
						display_msg(message_str(SCRIPT_ROCK, 100));
					end
					else begin
						display_msg(message_str(SCRIPT_ROCK, 101));
					end
				end
				else begin
					if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
						call Start_War;
					end
					else begin
						if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
							call critter_p_proc;
						end
						else begin
							if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
	rm_timer_event(self_obj);
								Crypt_Counter := Crypt_Counter - 1;
	rm_timer_event(self_obj);
							end
						end
					end
				end
			end
		end
	end
end

procedure items_held
begin
	SubtypeWEP := 0;
	if dude_right_hand then begin
		RightHand := dude_right_hand;
		PIDright := obj_pid(RightHand);
		if obj_item_subtype(RightHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		RightHand := 0;
		PIDright := 0;
	end
	if dude_left_hand then begin
		LeftHand := dude_left_hand;
		PIDleft := obj_pid(LeftHand);
		if obj_item_subtype(LeftHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		LeftHand := 0;
		PIDleft := 0;
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	call weapon_check;
	start_gdialog(410, self_obj, 4, -1, -1);
	gsay_start;
	if (armed == 1) then begin
		call rock00;
	end
	else begin
		if (is_crypt == 1) then begin
			call rock06;
		end
		else begin
			if (is_fool == 1) then begin
				call rock07;
			end
			else begin
				if (HEREBEFORE == 0) then begin
					call rock08;
				end
				else begin
					call rock11;
				end
			end
		end
	end
	gsay_end;
	end_dialogue;
end

procedure rock00
begin
	gsay_reply(410, 102);
	if (dude_iq >= 4) then begin
		giq_option( 4, SCRIPT_ROCK, 103, rock01, NEUTRAL_REACTION );
	end
	if (dude_iq >= 4) then begin
		giq_option( 4, SCRIPT_ROCK, 104, rock01, NEUTRAL_REACTION );
	end
	if (dude_iq >= 4) then begin
		giq_option( 4, SCRIPT_ROCK, 105, rock02, NEUTRAL_REACTION );
	end
end

procedure rock01
begin
	known := 1;
	gsay_reply(410, 108);
	giq_option( 4, SCRIPT_ROCK, 109, rockend, NEUTRAL_REACTION );

end

procedure rock02
begin
	Know_Crypts := 1;
	gsay_reply(410, 110);
	if (dude_iq >= 4) then begin
		giq_option( 4, SCRIPT_ROCK, 111, rock03, NEUTRAL_REACTION );
	end

end

procedure rock03
begin
	gsay_reply(410, 112);
	if (dude_iq >= 4) then begin
		giq_option( 4, SCRIPT_ROCK, 113, rock04, NEUTRAL_REACTION );
	end
	if (dude_iq >= 4) then begin
		giq_option( 4, SCRIPT_ROCK, 114, rock05, NEUTRAL_REACTION );
	end
end

procedure rock04
begin
	gsay_reply(410, 115);
	giq_option( 4, SCRIPT_ROCK, 116, rockend, NEUTRAL_REACTION );

end

procedure rock05
begin
	known := 1;
	rock_invite := 1;
	gsay_reply(410, 117);
	giq_option( 4, SCRIPT_ROCK, 118, rockend, NEUTRAL_REACTION );

end

procedure rock06
begin
	gsay_reply(410, 119);
	giq_option( 4, SCRIPT_ROCK, 120, rockend, NEUTRAL_REACTION );

end

procedure rock07
begin
	gsay_reply(410, 121);
	giq_option( 4, SCRIPT_ROCK, 131, rockend, NEUTRAL_REACTION );

end

procedure rock08
begin
	HEREBEFORE := 1;
	gsay_reply(410, 122);
	if (dude_iq >= 4) then begin
		giq_option( 4, SCRIPT_ROCK, 123, rock09, NEUTRAL_REACTION );
	end
	if (dude_iq >= 4) then begin
		giq_option( 4, SCRIPT_ROCK, 124, rock10, NEUTRAL_REACTION );
	end
end

procedure rock09
begin
	gsay_reply(410, 125);
	if (dude_iq >= 4) then begin
		giq_option( 4, SCRIPT_ROCK, 126, rockend, NEUTRAL_REACTION );
	end

end

procedure rock10
begin
	Know_Crypts := 1;
	gsay_reply(410, 127);
	if (dude_iq >= 4) then begin
		giq_option( 4, SCRIPT_ROCK, 128, rockend, NEUTRAL_REACTION );
	end

end

procedure rock11
begin
	gsay_reply(410, 129);
	giq_option( 4, SCRIPT_ROCK, 130, rockend, NEUTRAL_REACTION );

end

procedure rockcombat
begin
	hostile := 1;
end

procedure weapon_check
begin

	if (dude_is_armed) then begin
		armed := 1;
	end
	else begin
		armed := 0;
	end
end

procedure rockend
begin
end

procedure critter_p_proc
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	LVar0 := (self_obj == Fool_Pointer) or (self_obj == Crypt_Pointer) or (self_obj == Phrax_Pointer) or (self_obj == Rock_Pointer);
	if (I_Am_A_Fool and Crypt_Taunt) then begin
		Crypt_Taunt := 0;
		if (random(1, 5) == 1) then begin
			float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(100, 113)), -1);
		end
	end
	else begin
		if (I_Am_A_Crypt and Fool_Taunt) then begin
			Fool_Taunt := 0;
			if (random(1, 5) == 1) then begin
				float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(200, 218)), -1);
			end
		end
		else begin
			if ((global_var( GVAR_QUEST_BONEYARD_7_GANG_WAR ) == 1) and (self_tile != 20725)) then begin
				animate_move_obj_to_tile(self_obj, 20725, 0);
			end
			else begin
				if (self_tile == 20725) then begin
					add_timer_event(self_obj, game_ticks(2), 1);
				end
				else begin
					if (broken_gen and (self_tile != 27504)) then begin
						if ((self_obj == Phrax_Pointer) and (This_Once == 0)) then begin
							This_Once := 1;
							float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, 300), 2);
						end
						set_global_var( GVAR_QUEST_BONEYARD_7_GANG_WAR, 2 );
						animate_move_obj_to_tile(self_obj, 27504, 0);
					end
					else begin
						if ((self_tile == 27504) and (global_var( GVAR_QUEST_BONEYARD_7_GANG_WAR ) == 2)) then begin
							if not(is_loading_game) then begin    set_self_invisible;    end//  MAKE INVISIBLE
							if (I_Am_A_Fool) then begin
								Fool_Counter := Fool_Counter - 1;
							end
							else begin
								Crypt_Counter := Crypt_Counter - 1;
							end
						end
						else begin
							if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
								hostile := 0;
								attack(dude_obj);
							end
							else begin
								if (not(LVar0)) then begin
									if (random(0, 21) == 1) then begin
										LVar1 := tile_num_in_direction(self_tile, random(0, 5), 2);
										animate_move_obj_to_tile(self_obj, LVar1, 0);
									end
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure Start_War
begin
	if (fixed_param == 1) then begin
		set_global_var( GVAR_QUEST_BONEYARD_7_GANG_WAR, 0 );
		if (I_Am_A_Fool) then begin
			Fool_Taunt := 1;
			float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(100, 115)), -1);
		end
		else begin
			Crypt_Taunt := 1;
			float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(200, 218)), -1);
		end
		add_timer_event(self_obj, 4, 2);
	end
	else begin
		if (fixed_param == 2) then begin
			if (I_Am_A_Fool) then begin
				attack( Crypt_Pointer );
			end
			else begin
				attack( Fool_Pointer );
			end
		end
	end
end

procedure get_reaction
begin
	if (not(got_reaction)) then begin
		got_reaction := 1;
		reactionamt := reactionamt + ((dude_charisma - 5) * 5);
		if (badguy) then begin
			reactionamt := reactionamt - check_general_rep;
		end
		else begin
			reactionamt := reactionamt + check_general_rep;
		end
		if has_rep_childkiller then begin
			reactionamt := reactionamt - 30;
		end
		if ((global_var( GVAR_BAD_MONSTER ) > (3 * global_var( GVAR_GOOD_MONSTER ))) or (global_var( GVAR_CHAMPION_REPUTATION ) == 1)) then begin
			reactionamt := reactionamt + 20;
		end
		if ((global_var( GVAR_GOOD_MONSTER ) > (2 * global_var( GVAR_BAD_MONSTER ))) or (global_var( GVAR_BERSERKER_REPUTATION ) == 1)) then begin
			reactionamt := reactionamt - 20;
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (reactionamt < 24) then begin
		reaction_level := 1;
	end
	else begin
		if (reactionamt < 74) then begin
			reaction_level := 2;
		end
		else begin
			reaction_level := 3;
		end
	end
end

procedure LevelToReact
begin
	if (reaction_level == 1) then begin
		reactionamt := random(1, 24);
	end
	else begin
		if (reaction_level == 2) then begin
			reactionamt := random(25, 74);
		end
		else begin
			reactionamt := random(75, 100);
		end
	end
end

procedure UpReact
begin
	reactionamt := reactionamt + 10;
	call ReactToLevel;
end

procedure DownReact
begin
	reactionamt := reactionamt - 10;
	call ReactToLevel;
end

procedure BottomReact
begin
	reaction_level := 1;
	reactionamt := 1;
end

procedure TopReact
begin
	reactionamt := 100;
	reaction_level := 3;
end

procedure BigUpReact
begin
	reactionamt := reactionamt + 25;
	call ReactToLevel;
end

procedure BigDownReact
begin
	reactionamt := reactionamt - 25;
	call ReactToLevel;
end

procedure UpReactLevel
begin
	reaction_level := reaction_level + 1;
	if (reaction_level > 3) then begin
		reaction_level := 3;
	end
	LevelToReact
end

procedure DownReactLevel
begin
	reaction_level := reaction_level - 1;
	if (reaction_level < 1) then begin
		reaction_level := 1;
	end
	LevelToReact
end

procedure Goodbyes
begin
	variable LVar0 := 0;
	LVar0 := random(1, 6);
	if (LVar0 == 1) then begin
		exit_line := "Thanks, bye.";
	end
	if (LVar0 == 2) then begin
		exit_line := "Okay, thanks.";
	end
	if (LVar0 == 3) then begin
		exit_line := "Hmm. Bye.";
	end
	if (LVar0 == 4) then begin
		exit_line := "See ya.";
	end
	if (LVar0 == 5) then begin
		exit_line := "Thanks.";
	end
	if (LVar0 == 6) then begin
		exit_line := "Okay, bye.";
	end
end
