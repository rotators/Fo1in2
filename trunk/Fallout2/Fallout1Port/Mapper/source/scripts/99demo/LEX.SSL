#include "..\headers\define.h"

procedure start;
procedure talk_p_proc;//    script_action == 11
procedure Lex00;
procedure Lex01;
procedure Lex02;
procedure Lex03;
procedure Lex04;
procedure Lex05;
procedure Lex06;
procedure Lex07;
procedure Lex08;
procedure Lex09;
procedure Lex10;
procedure Lex11;
procedure Lex12;
procedure Lex13;
procedure Lex14;
procedure Lex15;
procedure Lex16;
procedure Lex17;
procedure Lex18;
procedure Lex19;
procedure Lex20;
procedure Lex21;
procedure LexEnd;
procedure LexCombat;
procedure LexJoins;
procedure follow_player;

variable known;
variable hostile;
variable following;
variable initial :=  0;

import variable know_crypts;
import variable know_fools;
import variable know_power;
import variable is_crypt;
import variable is_fool;
import variable broken_gen;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable reaction_amount := 50;
variable reaction_level := 2;
variable got_reaction;
variable badguy;
variable exit_line;


procedure start
begin
	if not(initial) then begin
		initial :=  1;
/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 4);
	end
	else begin
		if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
			call talk_p_proc;
		end
		else begin
			if ((script_action == 21) or (script_action == 3)) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
				script_overrides;
				if (known) then begin
					display_msg(message_str(SCRIPT_LEX, 100));
				end
				else begin
					display_msg(message_str(SCRIPT_LEX, 101));
				end
			end
			else begin
				if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
					attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
				end
				else begin
					if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
						if (obj_can_see_obj(self_obj, dude_obj) and not(known) and (tile_distance_objs(self_obj, dude_obj) < 12)) then begin
							dialogue_system_enter;
						end
						if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
							attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
							hostile := 0;
						end
					end
				end
			end
		end
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	start_gdialog(411, self_obj, 4, -1, -1);
	gsay_start;
	if (not(known)) then begin
		call Lex00;
	end
	else begin
		if (broken_gen) then begin
			call Lex09;
		end
		else begin
			if (global_var(QUEST_BONEYARD_7_GANG_WAR) == 1) then begin
				call Lex12;
			end
			else begin
				if (is_fool or is_crypt) then begin
					call Lex14;
				end
				else begin
					call Lex17;
				end
			end
		end
	end
	gsay_end;
	end_dialogue;
end

procedure Lex00
begin
	known := 1;
	sayReply(0, message_str(SCRIPT_LEX, 104));
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 105), Lex01);
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 106), Lex07);
	end
end

procedure Lex01
begin
	know_crypts := 1;
	sayReply(0, message_str(SCRIPT_LEX, 107));
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 108), Lex02);
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 109), LexEnd);
	end
end

procedure Lex02
begin
	sayReply(0, message_str(SCRIPT_LEX, 110));
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 111), Lex03);
	end
	sayOption("", Lex03);
end

procedure Lex03
begin
	set_global_var(GANG_2_GVAR, 1);
	know_fools := 1;
	sayReply(0, message_str(SCRIPT_LEX, 112));
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 113), Lex04);
	end
	sayOption("", Lex04);
end

procedure Lex04
begin
	sayReply(0, message_str(SCRIPT_LEX, 114));
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 115), Lex05);
	end
	sayOption("", Lex05);
end

procedure Lex05
begin
	sayReply(0, message_str(SCRIPT_LEX, 116));
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 117), Lex06);
	end
	sayOption("", Lex06);
end

procedure Lex06
begin
	sayReply(0, message_str(SCRIPT_LEX, 118));
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 119), LexEnd);
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 120), Lex17);
	end
end

procedure Lex07
begin
	sayReply(0, message_str(SCRIPT_LEX, 121));
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 122), Lex08);
	end
	sayOption("", Lex08);
end

procedure Lex08
begin
	sayReply(0, message_str(SCRIPT_LEX, 123));
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 124), LexEnd);
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 120), Lex17);
	end
end

procedure Lex09
begin
	set_global_var(ANIMAL_FRIEND_RADSCORPS, 1);
	sayReply(0, message_str(SCRIPT_LEX, 125));
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 126), Lex10);
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 127), Lex11);
	end
end

procedure Lex10
begin
	sayReply(0, message_str(SCRIPT_LEX, 128));
	if (get_critter_stat(dude_obj, 4) >= 0) then begin
		sayOption(message_str(SCRIPT_LEX, 103), LexEnd);
	end
	sayOption("", LexEnd);
end

procedure Lex11
begin
	sayReply(0, message_str(SCRIPT_LEX, 129));
	if (get_critter_stat(dude_obj, 4) >= 0) then begin
		sayOption(message_str(SCRIPT_LEX, 103), LexEnd);
	end
	sayOption("", LexEnd);
end

procedure Lex12
begin
	sayReply(0, message_str(SCRIPT_LEX, 130));
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 131), Lex13);
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 132), LexEnd);
	end
end

procedure Lex13
begin
	sayReply(0, message_str(SCRIPT_LEX, 133));
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 134), LexJoins);
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 135), LexEnd);
	end
end

procedure Lex14
begin
	sayReply(0, message_str(SCRIPT_LEX, 136));
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 137), Lex15);
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 138), Lex16);
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 139), LexEnd);
	end
end

procedure Lex15
begin
	sayReply(0, message_str(SCRIPT_LEX, 140));
	sayOption("", LexEnd);
	sayOption(" ", LexEnd);
	call LexCombat;
end

procedure Lex16
begin
	sayReply(0, message_str(SCRIPT_LEX, 141));
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 142), LexEnd);
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 120), Lex17);
	end
end

procedure Lex17
begin
	sayReply(0, message_str(SCRIPT_LEX, 143));
	if (know_power) then begin
		if (get_critter_stat(dude_obj, 4) >= 4) then begin
			sayOption(message_str(SCRIPT_LEX, 144), Lex19);
		end
	end
	if (know_crypts) then begin
		if (get_critter_stat(dude_obj, 4) >= 4) then begin
			sayOption(message_str(SCRIPT_LEX, 145), Lex20);
		end
	end
	if (know_fools) then begin
		if (get_critter_stat(dude_obj, 4) >= 4) then begin
			sayOption(message_str(SCRIPT_LEX, 146), Lex21);
		end
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 147), Lex18);
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 148), LexEnd);
	end
end

procedure Lex18
begin
	sayReply(0, message_str(SCRIPT_LEX, 149));
	if (know_power) then begin
		if (get_critter_stat(dude_obj, 4) >= 4) then begin
			sayOption(message_str(SCRIPT_LEX, 144), Lex19);
		end
	end
	if (know_crypts) then begin
		if (get_critter_stat(dude_obj, 4) >= 4) then begin
			sayOption(message_str(SCRIPT_LEX, 145), Lex20);
		end
	end
	if (know_fools) then begin
		if (get_critter_stat(dude_obj, 4) >= 4) then begin
			sayOption(message_str(SCRIPT_LEX, 146), Lex21);
		end
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 148), LexEnd);
	end
end

procedure Lex19
begin
	set_global_var(KILLIAN_WARES_MERGED, 1);
	set_global_var(GANG_2_GVAR, 1);
	sayReply(0, message_str(SCRIPT_LEX, 150));
	if (know_crypts) then begin
		if (get_critter_stat(dude_obj, 4) >= 4) then begin
			sayOption(message_str(SCRIPT_LEX, 145), Lex20);
		end
	end
	if (know_fools) then begin
		if (get_critter_stat(dude_obj, 4) >= 4) then begin
			sayOption(message_str(SCRIPT_LEX, 146), Lex21);
		end
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 147), Lex18);
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 148), LexEnd);
	end
end

procedure Lex20
begin
	sayReply(0, message_str(SCRIPT_LEX, 151));
	if (know_power) then begin
		if (get_critter_stat(dude_obj, 4) >= 4) then begin
			sayOption(message_str(SCRIPT_LEX, 144), Lex19);
		end
	end
	if (know_fools) then begin
		if (get_critter_stat(dude_obj, 4) >= 4) then begin
			sayOption(message_str(SCRIPT_LEX, 146), Lex21);
		end
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 147), Lex18);
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 148), LexEnd);
	end
end

procedure Lex21
begin
	know_power := 1;
	sayReply(0, message_str(SCRIPT_LEX, 152));
	if (know_power) then begin
		if (get_critter_stat(dude_obj, 4) >= 4) then begin
			sayOption(message_str(SCRIPT_LEX, 144), Lex19);
		end
	end
	if (know_crypts) then begin
		if (get_critter_stat(dude_obj, 4) >= 4) then begin
			sayOption(message_str(SCRIPT_LEX, 145), Lex20);
		end
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 147), Lex18);
	end
	if (get_critter_stat(dude_obj, 4) >= 4) then begin
		sayOption(message_str(SCRIPT_LEX, 148), LexEnd);
	end
end

procedure LexEnd
begin
end

procedure LexCombat
begin
	hostile := 1;
end

procedure LexJoins
begin
	critter_add_trait(self_obj, 1, 6, 0);
	following := 1;
end

procedure follow_player
begin
	if (tile_distance_objs(dude_obj, self_obj) > 3) then begin
		animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), 1, 1), 0);
	end
end

procedure get_reaction
begin
	if (not(got_reaction)) then begin
		got_reaction := 1;
		reaction_amount := reaction_amount + ((get_critter_stat(dude_obj, 3) - 5) * 5);
		if (badguy) then begin
			reaction_amount := reaction_amount - global_var(PLAYER_REPUTATION_GENERAL);
		end
		else begin
			reaction_amount := reaction_amount + global_var(PLAYER_REPUTATION_GENERAL);
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			reaction_amount := reaction_amount - 30;
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1)) then begin
			reaction_amount := reaction_amount + 20;
		end
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1)) then begin
			reaction_amount := reaction_amount - 20;
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (reaction_amount < 24) then begin
		reaction_level := 1;
	end
	else begin
		if (reaction_amount < 74) then begin
			reaction_level := 2;
		end
		else begin
			reaction_level := 3;
		end
	end
end

procedure LevelToReact
begin
	if (reaction_level == 1) then begin
		reaction_amount := random(1, 24);
	end
	else begin
		if (reaction_level == 2) then begin
			reaction_amount := random(25, 74);
		end
		else begin
			reaction_amount := random(75, 100);
		end
	end
end

procedure UpReact
begin
	reaction_amount := reaction_amount + 10;
	call ReactToLevel;
end

procedure DownReact
begin
	reaction_amount := reaction_amount - 10;
	call ReactToLevel;
end

procedure BottomReact
begin
	reaction_level := 1;
	reaction_amount := 1;
end

procedure TopReact
begin
	reaction_amount := 100;
	reaction_level := 3;
end

procedure BigUpReact
begin
	reaction_amount := reaction_amount + 25;
	call ReactToLevel;
end

procedure BigDownReact
begin
	reaction_amount := reaction_amount - 25;
	call ReactToLevel;
end

procedure UpReactLevel
begin
	reaction_level := reaction_level + 1;
	if (reaction_level > 3) then begin
		reaction_level := 3;
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	reaction_level := reaction_level - 1;
	if (reaction_level < 1) then begin
		reaction_level := 1;
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	variable LVar0 := 0;
	LVar0 := random(1, 6);
	if (LVar0 == 1) then begin
		exit_line := "Thanks, bye.";
	end
	if (LVar0 == 2) then begin
		exit_line := "Okay, thanks.";
	end
	if (LVar0 == 3) then begin
		exit_line := "Hmm. Bye.";
	end
	if (LVar0 == 4) then begin
		exit_line := "See ya.";
	end
	if (LVar0 == 5) then begin
		exit_line := "Thanks.";
	end
	if (LVar0 == 6) then begin
		exit_line := "Okay, bye.";
	end
end

