/*

	Brotherhood - Vree, the head scribe

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_VREE
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure critter_p_proc;
procedure destroy_p_proc;

procedure vree00;
procedure vree01;
procedure vree02;
procedure vree03;
procedure vree03a;
procedure vree17;
procedure vree17a;
procedure vree17z;
procedure vree18;
procedure vree19;
procedure vree21;
procedure vree22;
procedure vree23;
procedure vree24;
procedure vree25;
procedure vree26;
procedure vree27;
procedure vree28;
procedure vree29;
procedure vree30;
procedure vree31;
procedure vree32;
procedure vree33;
procedure vree34;
procedure vree35;
procedure vree36;
procedure vree36_1;
procedure vree37;
procedure vree38;
procedure vree39;
procedure vree40;
procedure vree41;
procedure vree42;
procedure vree43;
procedure vree44;
procedure vree45;
procedure vree46;
procedure vree47;
procedure vree48;
procedure vree200;
procedure vree201;
procedure vree202;
procedure vree203;
procedure vree204;
procedure vree205;
procedure vree300;
procedure vree301;
procedure vree302;
procedure vree303;
procedure vree304;
procedure vree305;
procedure vree306;
procedure branch01;
procedure branch02;
procedure branch03;
procedure branch04;
procedure vree00a;
procedure vree01a;
procedure vree01b;
procedure vree45a;
procedure vree46a;
procedure Node998;
procedure Node999;

import variable term1_ptr;
import variable term2_ptr;
import variable term3_ptr;
import variable term4_ptr;
import variable term5_ptr;
import variable term6_ptr;
import variable term7_ptr;
import variable term8_ptr;
import variable Vree_ptr;

variable rndx;
variable item;
variable MALE;
variable tmp_hostile;
variable ATKBROTHERS;
variable KNOWKEDPLAN;

variable INITIAT;
variable Only_Once := 1;

#define EVENT_USE_TERMINAL 			(1)
#define EVENT_SHOW_TERMINAL 			(2)

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		Vree_ptr := self_obj;
		set_self_team(TEAM_BROTHERHOOD);
		set_self_ai(AI_BOS_ELDERS);
		add_timer_event(self_obj, game_ticks(40), EVENT_USE_TERMINAL);
	end
end

procedure talk_p_proc begin
	dude_look_at_self;
	start_gdialog(57, self_obj, 4, 4, 5);
	get_reaction
	gsay_start;
	MALE := dude_is_male;
	if (local_var(4) > 0) then begin
		if (ATKBROTHERS) then begin
			call vree32;
		end
		if (KNOWKEDPLAN) then begin
			call vree34;
		end
		if (INITIAT == 1) then begin
			call vree43;
		end
		if (INITIAT == 2) then begin
			call vree45;
		end
		if (INITIAT < 1) then begin
			if (local_var(1) > 1) then begin
				call vree17;
			end
			else begin
				call vree46;
			end
		end
	end
	else begin
		set_local_var(4, 1);
		if (local_var(1) >= 2) then begin
			call vree02;
		end
		else begin
			call vree00;
		end
	end
	gsay_end;
	end_dialogue;
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(mstr(100));
end

procedure timed_event_p_proc begin
	if (fixed_param == EVENT_USE_TERMINAL) then begin
		rndx := random(2, 3);
		if (rndx == 2) then begin
			use_obj(term2_ptr);
		end
		else begin
			if (rndx == 3) then begin
				use_obj(term3_ptr);
			end
		end
		add_timer_event(self_obj, game_ticks(40), EVENT_USE_TERMINAL);
	end
	else if (fixed_param == EVENT_SHOW_TERMINAL) then begin
		use_obj(term1_ptr);
		if (local_var(7) < 2) then begin
			add_timer_event(self_obj, game_ticks(4), EVENT_SHOW_TERMINAL);
		end
	end
	else if (fixed_param == 3) then begin
		set_local_var(7, 2);
		add_timer_event(self_obj, game_ticks(4), EVENT_USE_TERMINAL);
	end
end

procedure pickup_p_proc begin
	if obj_in_party(source_obj) then begin
		tmp_hostile := 1;
	end
end

procedure critter_p_proc begin
	if (global_var( GVAR_ENEMY_BROTHERHOOD )) then begin
		tmp_hostile := 1;
	end

	if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
		tmp_hostile := 0;
	end

	if (tmp_hostile) then begin
		set_global_var( GVAR_ENEMY_BROTHERHOOD, 1 );
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);

	if obj_in_party(source_obj) then begin
		set_global_var( GVAR_ENEMY_BROTHERHOOD, 1 );
	end
	inc_good_critter
	rm_timer_event(self_obj);
end

procedure Node998 begin
end

procedure Node999 begin
end

procedure vree00 begin
	gsay_reply( SCRIPT_VREE, 101 );
	GOption( 102, vree00a, 4 );
	NOption( 104, vree01, 4 );
	NOption( 105, vree31, -3 );
	NOption( 103, Node999, 4 );
end

procedure vree01 begin
	gsay_reply( SCRIPT_VREE, 106 );
	BOption( 108, vree01a, 4 );
	BOption( 109, vree01b, 4 );
	NOption( 107, Node999, 4 );
end

procedure vree02 begin
	gsay_reply( SCRIPT_VREE, 110 );
	NOption( 111, vree03, 4 );
	NOption( 112, vree17, 5 );
	NOption( 113, vree31, -3 );
end

procedure vree03 begin
	gsay_reply( SCRIPT_VREE, 114 );
	NOption( 115, vree03a, 4 );
end

procedure vree03a begin
	gsay_message( SCRIPT_VREE, 116, 50 );
	call vree17;
end

procedure vree17 begin
	gsay_reply( SCRIPT_VREE, 117 );
	call vree17z;
end

procedure vree17a begin
	gsay_reply( SCRIPT_VREE, 118 );
	call vree17z;
end

procedure vree17z begin
	if (global_var( GVAR_NECROP_WATER_CHIP_TAKEN ) != 1) then begin
		NOption( 119, vree48, 4 );
	end
	NOption( 120, branch01, 4 );
	NOption( 121, branch02, 5 );
	if (local_var(5) != 1) then begin
		NOption( 122, branch03, 6 );
	end
	if (local_var(6) == 0) then begin
		NOption( 123, branch04, 7 );
	end
end

procedure vree18 begin
	set_map_var(0, 1);
	gsay_reply( SCRIPT_VREE, 124 );
	NOption( 126, vree17a, 4 );
	NOption( 125, Node999, 4 );
end

procedure vree19 begin
	gsay_reply( SCRIPT_VREE, 127 );
	call Node999;
end

procedure vree21 begin
	gsay_reply( SCRIPT_VREE, 128 );
	if (local_var(7) == 0) then begin
		NOption( 129, vree22, 5 );
	end
	NOption( 131, vree17a, 4 );
	NOption( 130, Node999, 4 );
end

procedure vree22 begin
	set_local_var(7, 1);
	gsay_message( SCRIPT_VREE, 132, 50 );
	add_timer_event(self_obj, game_ticks(1), EVENT_SHOW_TERMINAL);
end

procedure vree23 begin
end

procedure vree24 begin
	gsay_message( SCRIPT_VREE, 134, 50 );
	call Node999;
end

procedure vree25 begin
	item := create_object( PID_RAD_X, 0, 0 );
	add_obj_to_inven(dude_obj, item);
	gsay_reply( SCRIPT_VREE, 135 );
	NOption( 137, vree17a, 4 );
	NOption( 136, Node999, 4 );
end

procedure vree26 begin
	gsay_message( SCRIPT_VREE, 138, 50 );
	call Node999;
end

procedure vree27 begin
	gsay_reply( SCRIPT_VREE, 139 );
	NOption( 140, vree28, 6 );
	NOption( 142, vree17a, 4 );
	NOption( 141, Node999, 5 );
end

procedure vree28 begin
	gsay_reply( SCRIPT_VREE, 143 );
	NOption( 145, vree29, 6 );
	NOption( 146, vree17a, 4 );
	NOption( 144, Node999, 6 );
end

// Give the "super mutant are sterile" holodisk
procedure vree29 begin
variable holodisk;

	set_global_var( GVAR_VREE_DISK_TRACKER, 1 );
	set_global_var( GVAR_VREE_GIVEN_DUDE_AUTOPSY, 1 );
	set_local_var(6, 1);
	gsay_reply( SCRIPT_VREE, 147 );
	NOption( 149, vree17a, 4 );
	NOption( 148, Node999, 4 );

	// TODO: Figure out why this was in obj_dude critter_p_proc ....
	set_global_var( GVAR_VREE_DISK_TRACKER, 2 );
	holodisk := create_object_sid(PID_VREE_HOLODISK, 0, 0, SCRIPT_VREEDISK);// RegDisk.int
	add_obj_to_inven(dude_obj, holodisk);
	//set_global_var( GVAR_VREE_AUTOPSY_POINTER, holodisk );
end

procedure vree30 begin
	gsay_message( SCRIPT_VREE, 150, 50 );
	call Node999;
end

procedure vree31 begin
	gsay_message( SCRIPT_VREE, 151, 50 );
	call Node999;
end

procedure vree32 begin
	gsay_reply( SCRIPT_VREE, 152 );
	BOption( 153, Node998, 4 );
	NOption( 154, vree33, 5 );
end

procedure vree33 begin
	gsay_reply( SCRIPT_VREE, 155 );
	BOption( 156, Node998, 4 );
end

procedure vree34 begin
	gsay_reply( SCRIPT_VREE, 157 );
	NOption( 158, vree36, 4 );
	NOption( 159, vree39, 5 );
	NOption( 160, vree35, -3 );
end

procedure vree35 begin
	gsay_message( SCRIPT_VREE, 161, 50 );
	call Node999;
end

procedure vree36 begin
	gsay_reply( SCRIPT_VREE, 162 );
	NOption( 163, vree36_1, 5 );
	NOption( 164, Node999, 4 );
end

procedure vree36_1 begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call vree37;
	end
	else begin
		call vree38;
	end
end

procedure vree37 begin
	gsay_message( SCRIPT_VREE, 165, 50 );
	call Node999;
end

procedure vree38 begin
	gsay_message( SCRIPT_VREE, 166, 50 );
	call Node999;
end

procedure vree39 begin
	gsay_reply( SCRIPT_VREE, 167 );
	NOption( 168, vree40, 6 );
	NOption( 169, vree42, 6 );
end

procedure vree40 begin
	gsay_reply( SCRIPT_VREE, 170 );
	NOption( 171, vree41, 6 );
	NOption( 172, Node999, 6 );
end

procedure vree41 begin
	gsay_message( SCRIPT_VREE, 173, 50 );
	call Node999;
end

procedure vree42 begin
	gsay_message( SCRIPT_VREE, 174, 50 );
	call Node999;
end

procedure vree43 begin
	gsay_reply( SCRIPT_VREE, 175 );
	NOption( 176, vree44, 4 );
	NOption( 177, vree35, -3 );
end

procedure vree44 begin
	gsay_message( SCRIPT_VREE, 178, 50 );
	call Node999;
end

procedure vree45 begin
	gsay_message( SCRIPT_VREE, 179, 50 );
	call vree45a;
end

procedure vree46 begin
	gsay_reply( SCRIPT_VREE, 180 );
	NOption( 181, vree47, 4 );
	NOption( 182, vree46a, 4 );
end

procedure vree47 begin
	gsay_message( SCRIPT_VREE, 183, 50 );
	if (local_var(1) > 2) then begin
		call vree17;
	end
	else begin
		gsay_message( SCRIPT_VREE, 184, 50 );
		call Node999;
	end
end

procedure vree48 begin
	gsay_reply( SCRIPT_VREE, 185 );
	NOption( 187, vree17, 4 );
	NOption( 186, Node999, 4 );
end

procedure vree200 begin
	gsay_message( SCRIPT_VREE, 188, 50 );
end

procedure vree201 begin
	gsay_message( SCRIPT_VREE, 189, 50 );
end

procedure vree202 begin
	gsay_message( SCRIPT_VREE, 190, 50 );
end

procedure vree203 begin
	gsay_message( SCRIPT_VREE, 191, 50 );
end

procedure vree204 begin
	gsay_message( SCRIPT_VREE, 192, 50 );
end

procedure vree205 begin
	gsay_message( SCRIPT_VREE, 193, 50 );
end

procedure vree300 begin
	gsay_message( SCRIPT_VREE, 194, 50 );
end

procedure vree301 begin
	gsay_message( SCRIPT_VREE, 195, 50 );
end

procedure vree302 begin
	gsay_message( SCRIPT_VREE, 196, 50 );
end

procedure vree303 begin
	gsay_message( SCRIPT_VREE, 197, 50 );
end

procedure vree304 begin
	gsay_message( SCRIPT_VREE, 198, 50 );
end

procedure vree305 begin
	gsay_message( SCRIPT_VREE, 199, 50 );
end

procedure vree306 begin
	gsay_message( SCRIPT_VREE, 200, 50 );
end

procedure branch01 begin
	if (local_var(1) >= 2) then begin
		call vree18;
	end
	else begin
		call vree19;
	end
end

procedure branch02 begin
	if (local_var(1) > 1) then begin
		call vree21;
	end
	else begin
		call vree24;
	end
end

procedure branch03 begin
	set_local_var(5, 1);
	if (local_var(1) > 1) then begin
		call vree25;
	end
	else begin
		call vree26;
	end
end

procedure branch04 begin
	if (local_var(1) > 1) then begin
		call vree27;
	end
	else begin
		call vree30;
	end
end

procedure vree00a begin
	UpReact
	call Node999;
end

procedure vree01a begin
	DownReact
	call Node999;
end

procedure vree01b begin
	BigDownReact
	call Node999;
end

procedure vree45a begin
	variable LVar0 := 0;
	LVar0 := create_object( PID_RADAWAY, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object( PID_RADAWAY, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object( PID_SMALL_ENERGY_CELL, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object( PID_MICRO_FUSION_CELL, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	BigUpReact
	call Node999;
end

procedure vree46a begin
	DownReact
	call Node999;
end
