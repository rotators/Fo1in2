/*

	Brotherhood - Jonathan

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_JONATHAN
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure spar;
procedure weapon_check;
procedure destroy_p_proc;

import variable Student_ptr;

variable initial := 0;
variable armed;
variable tmp_round;
variable v;

procedure start begin
	if not(initial) then begin
		initial :=  1;
		set_self_team(TEAM_BROTHERHOOD );
		set_self_ai( AI_BROTHERHOOD_KNIGHT );
	end
	if ((script_action == 22) and (tmp_round < 7)) then begin//<-- timed_event_p_proc , is this called specifically, or running constantly?
		call spar;
	end
	else begin
		if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
			call destroy_p_proc;
		end
		else begin
			if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
				if (tmp_round < 1) then begin
					tmp_round := (tmp_round + 1);
					add_timer_event(self_obj, game_ticks(5), 0);
				end
			end
		end
	end
end

procedure spar
begin
	if (tmp_round == 1) then begin
		anim( Student_ptr, ANIM_throw_punch, 0 );
		anim( self_obj, ANIM_dodge_anim, 0 );
		v := 2;
	end
	else begin
		if (tmp_round == 2) then begin
			anim( self_obj, ANIM_throw_punch, 0 );
			anim( Student_ptr, ANIM_hit_from_front, 0 );
			v := 2;
		end
		else begin
			if (tmp_round == 3) then begin
				anim( self_obj, ANIM_throw_punch, 0 );
				anim( Student_ptr, ANIM_dodge_anim, 0 );
				v := 2;
			end
			else begin
				if (tmp_round == 4) then begin
					anim( self_obj, ANIM_kick_leg, 0 );
					v := 1;
				end
				else begin
					if (tmp_round == 5) then begin
						anim( Student_ptr, ANIM_fall_back, 0 );
						v := 2;
					end
					else begin
						if (tmp_round == 6) then begin
							anim( self_obj, ANIM_stand, 0 );
							anim( Student_ptr, ANIM_back_to_standing, 0 );
							v := 2;
						end
					end
				end
			end
		end
	end
	tmp_round := tmp_round + 1;
	add_timer_event(self_obj, game_ticks(v), 0);
end

procedure weapon_check
begin
	if ((obj_item_subtype( get_right_hand( Student_ptr ) ) == item_type_weapon) or (obj_item_subtype( get_left_hand( Student_ptr ) ) == item_type_weapon)) then begin
		armed := 1;
	end
	else begin
		armed := 0;
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	inc_good_critter
	rm_timer_event(self_obj);
end
