/*

	Brotherhood - Student

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\mapnecro.h"

#define NAME                    SCRIPT_STUDENT
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure talk_p_proc;

procedure Student00;

import variable Student_ptr;

variable tmp_hostile := 0;
variable initial :=  0;
variable my_knife;
variable home_face := 2;
variable temp;
variable counter := 0;

procedure start begin
	if not(initial) then begin
		if (local_var(3) == 0) then begin
			set_local_var(3, self_tile);
		end
		set_self_team(TEAM_BROTHERHOOD );
		set_self_ai( AI_BROTHERHOOD_INITIATE );
		my_knife := self_item( PID_KNIFE );
		if (local_var(0) != 0) then begin
			if (map_var(4) == local_var(0)) then begin
				Student_ptr := self_obj;
				set_map_var(0, 1);
			end
		end
		else begin
			temp := map_var(5) + 1;
			set_map_var(5, temp);
			set_local_var(0, temp);
			Student_ptr := self_obj;
			set_map_var(0, 1);
		end
		initial :=  1;
	end
	if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
		call destroy_p_proc;
	end
	else begin
		if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
			if (global_var( GVAR_ENEMY_BROTHERHOOD )) then begin
				tmp_hostile := 1;
			end
			if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
				tmp_hostile := 0;
			end
			if (tmp_hostile) then begin
				set_global_var( GVAR_ENEMY_BROTHERHOOD, 1 );
				tmp_hostile := 0;
				attack(dude_obj);
			end
			else begin
				if (global_var( GVAR_ENEMY_BROTHERHOOD ) == 0) then begin
					call critter_p_proc;
				end
			end
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
		end
	end
end

procedure destroy_p_proc begin
	set_global_var( GVAR_ENEMY_BROTHERHOOD, 1 );

	inc_good_critter
	rm_timer_event(self_obj);
	rm_timer_event(self_obj);
end

procedure critter_p_proc
begin
	if (local_var(1) == 1) then begin
		if (self_tile != map_var(1)) then begin
			self_walk_to_tile( map_var(1) );
		end
		else begin
			set_local_var(1, 0);
			set_map_var(0, 1);
			self_rotate( 1 );
		end
	end
	else begin
		if (local_var(2) == 1) then begin
			if (self_tile != local_var(3)) then begin
				self_walk_to_tile( local_var(3) );
			end
			else begin
				set_local_var(2, 0);
				self_rotate( home_face );
			end
		end
		else begin
			if (map_var(2) == local_var(0)) then begin
				set_map_var(2, 0);
				Student_ptr := self_obj;
				set_map_var(3, map_var(4));
				set_map_var(4, local_var(0));
				set_local_var(1, 1);
			end
			else begin
				if (map_var(3) == local_var(0)) then begin
					set_map_var(3, 0);
					set_local_var(2, 1);
				end
			end
		end
	end
end

procedure talk_p_proc
begin
	dude_look_at_self;
	counter := counter + 1;
	call Student00;
end

procedure Student00
begin
	if counter < 4 then begin
		variable Msg;
		Msg := random(100, 103);
		if Msg == 101 then begin
			float_msg(self_obj, message_str(SCRIPT_STUDENT, 100), 3);
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_STUDENT, 100), 2);
		end
	end
	else begin
		display_msg(message_str(SCRIPT_STUDENT, random(104, 106)));
	end
end
