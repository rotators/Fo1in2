#include "..\headers\define.h"

procedure start;
procedure use_p_proc;//    script_action == 6
procedure pickup_p_proc;//    script_action == 4
procedure use_skill_on_p_proc;//    script_action == 8
procedure timed_event_p_proc;//    script_action == 22
procedure whoami;

variable once_only := 1;
variable Test;
variable bonus;
variable failure;

import variable locker_ptr;


procedure start
begin
	if (once_only) then begin
		once_only := 0;
		locker_ptr := self_obj;
	end
	if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
		call timed_event_p_proc;
	end
	else begin
		if (script_action == 6) then begin//use_p_proc - Use, Activate, or Manipulate the Object or Item
			call use_p_proc;
		end
		else begin
			if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
				call pickup_p_proc;
			end
			else begin
				if (script_action == 8) then begin//<-- use_skill_on_p_proc
					call use_skill_on_p_proc;
				end
			end
		end
	end
end

procedure use_p_proc
begin
	if source_obj == dude_obj then begin
		bonus := -35;
		failure := 1;
		if (metarule(16, 0) > 1) then begin//  PARTY_COUNT > 1.    Is player travelling with homies?
			set_map_var(19, 2);
		end
		else begin
			if source_obj == dude_obj then begin
				if (using_skill(dude_obj, 8)) then begin
					Test := roll_vs_skill(dude_obj, 8, bonus);
					if (is_success(Test)) then begin
						failure := 0;
					end
					else begin
						failure := 1;
					end
					if (has_skill(dude_obj, 8) < 40) then begin
						failure := 1;
					end
				end
			end
			if (failure) then begin
				display_msg(message_str(SCRIPT_RHOMBUS, 204));
				set_map_var(19, 2);
			end
			else begin
				display_msg(message_str(SCRIPT_RHOMBUS, 205));
			end
		end
		add_timer_event(self_obj, game_ticks(1), 1);
	end
end

procedure pickup_p_proc
begin
	call use_p_proc;
end

procedure use_skill_on_p_proc
begin
	if (action_being_used == 9) then begin//-- LOCKPICK
		display_msg(message_str(SCRIPT_RHOMBUS, 208));
	end
end

procedure timed_event_p_proc
begin
	if (not(combat_is_initialized)) then begin
		obj_close(self_obj);
	end
end

procedure whoami
begin
	locker_ptr := self_obj;
end

