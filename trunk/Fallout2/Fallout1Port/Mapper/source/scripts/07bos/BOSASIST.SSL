/*

	Assistant of Lorry, the Doctor in BoS

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\MAPV13CAVE.h"

#define NAME                    SCRIPT_BOSASIST
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;

/*******************************************************************
   Local variables which do not need to be saved between map changes.
*******************************************************************/

variable tmp_hostile;
variable Only_Once := 1;
variable SrcObj := 0;
variable SrcIsParty := 0;

/*******************************************************************
*******                         PROCEDURES                   *******
*******************************************************************/


/*******************************************************************
   The start procedure is the first procedure called when the map is
   first entered. Any initial information that needs to be set up
   should be placed in here.
*******************************************************************/

procedure start begin
	fixt_critter_healing
end

procedure map_enter_p_proc begin
	Only_Once := 0;
   if (map_first_run) then begin
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_BOS);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET,AI_BROTHERHOOD_SCRIBE);
   end
end

procedure critter_p_proc begin
	if (global_var(ENEMY_BROTHERHOOD)) then begin
		tmp_hostile := 1;
	end

	if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
		tmp_hostile := 0;
	end

	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		set_global_var(ENEMY_BROTHERHOOD, 1);
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc begin
	if source_obj > 0 then begin
		SrcObj := 0;
		SrcIsParty := 0;
		SrcObj := obj_pid(source_obj);
		if party_member_obj(SrcObj) then begin
			SrcIsParty := 1;
		end
	end
	if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	float_msg(self_obj, message_str(SCRIPT_BOSLORI, random(279, 286)), 2);
end

procedure destroy_p_proc begin
	inc_good_critter
	set_global_var(ENEMY_BROTHERHOOD, 1);
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_BOSLORI, 200));
end
