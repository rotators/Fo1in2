/*

	Brotherhood - High elder Maxon

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\brotherhood.h"

#define NAME                    SCRIPT_MAXSON
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;

procedure Maxson01;
procedure Maxson02;
procedure Maxson02a;
procedure Maxson03;
procedure Maxson04;
procedure Maxson04a;
procedure Maxson05;
procedure Maxson06;
procedure Maxson07;
procedure Maxson08;
procedure Maxson08a;
procedure Maxson09;
procedure Maxson09a;
procedure Maxson10;
procedure Maxson11;
procedure Maxson12;
procedure Maxson13;
procedure Maxson14;
procedure Maxson15;
procedure Maxson16;
procedure Maxson17;
procedure Maxson18;
procedure Maxson19;
procedure Maxson20;
procedure Maxson21;
procedure Maxson22;
procedure Maxson23;
procedure Maxson24;
procedure Maxson25;
procedure Maxson26;
procedure Maxson27;
procedure Maxson28;
procedure Maxson29;
procedure Maxson30;
procedure Maxson31;
procedure Maxson32;
procedure Maxson33;
procedure Maxson34;
procedure Maxson35;
procedure MaxsonEnd;
procedure Remove_Player;

variable tmp_hostile;
variable Only_Once := 1;
variable Denounce_Player;
variable Asked_For_1000;
variable temp;

procedure MaxsonAccept;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_BROTHERHOOD );
		set_self_ai( AI_BOS_ELDERS );
	end
end

procedure combat begin
	tmp_hostile := 1;
end

procedure critter_p_proc begin
	if (global_var( GVAR_ENEMY_BROTHERHOOD )) then begin
		tmp_hostile := 1;
	end
	if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
		tmp_hostile := 0;
	end
	if (tmp_hostile) then begin
		set_global_var( GVAR_ENEMY_BROTHERHOOD, 1 );
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc begin
	dude_look_at_self;
	get_reaction

	start_gdialog(52, self_obj, 4, 12, 5);
	gsay_start;
	if ((global_var( GVAR_BROTHERHOOD_SEND_HELP ) == 1) or (global_var( GVAR_BROTHERHOOD_SEND_HELP ) == 2)) then begin
		call Maxson34;
	end
	else begin

		if (local_var(5) == 1) then begin
			call Maxson24;
		end
		else if (local_var(9) == 1) then begin
			call Maxson22;
		end
		else if (global_var( GVAR_WORLDMAPLIST_MILITARYBASE ) == 2) then begin
			call Maxson20;
		end
		else if (local_var(4) == 0) then begin
			set_local_var(4, 1);
			call Maxson01;
		end
		else if (local_var(1) == 1) then begin
			call Maxson21;
		end
		else begin
			call Maxson19;
		end

	end
	gsay_end;
	end_dialogue;

	if (local_var(8) == 1) then begin
		set_local_var(8, 2);
		set_scout_quest_active;
		temp := 1500;
		display_msg(message_str(SCRIPT_MAXSON, 351) + temp + message_str(SCRIPT_MAXSON, 352));
		give_exp_points(temp);
	end

	if (Denounce_Player == 1) then begin
		call Remove_Player;
	end
end

procedure destroy_p_proc begin
	set_global_var( GVAR_ENEMY_BROTHERHOOD, 1 );
	rm_timer_event(self_obj);
	inc_good_critter
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_MAXSON, 100));
end

procedure Maxson01 begin
	gsay_reply(52, 106);
	NOption( 333, Maxson32, -3 );
	if ((global_var( GVAR_MISSING_CARAVAN ) == 2) and (local_var(9) == 0)) then begin
		NOption( 300, Maxson14, 4 );
	end
	if ((global_var( GVAR_MISSING_CARAVAN ) == 1) and (local_var(9) == 0)) then begin
		NOption( 301, Maxson06, 4 );
	end
	NOption( 349, Maxson27, 4 );
	NOption( 350, Maxson18, 4 );
end

procedure Maxson02 begin
	gsay_reply(52, 162);
	NOption( 302, Maxson04, 4 );
	NOption( 303, Maxson09, 4 );
	BOption( 304, Maxson02a, 4 );
	NOption( 305, Maxson08, 4 );
end

procedure Maxson02a begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_BARTER, 0))) then begin
		Asked_For_1000 := 1;
		call Maxson09;
	end
	else begin
		call Maxson12;
	end
end

procedure Maxson03 begin
end

procedure Maxson04 begin
	set_local_var(9, 1);
	gsay_reply(52, 133);
	NOption( 306, Maxson04a, 4 );
	NOption( 307, Maxson27, 4 );
	NOption( 308, MaxsonEnd, 4 );
end

procedure Maxson04a begin
	set_local_var(9, 1);
	set_map_var(20, 1);
	call Maxson05;
end

procedure Maxson05 begin
	gsay_reply(52, 276);
	NOption( 309, MaxsonEnd, 4 );
end

procedure Maxson06 begin
	gsay_reply(52, 122);
	NOption( 310, Maxson07, 4 );
	NOption( 311, Maxson02, 4 );
end

procedure Maxson07 begin
	if (dude_is_male) then begin
		gsay_reply(52, 355);
	end
	else begin
		gsay_reply(52, 356);
	end
	NOption( 312, Maxson14, 4 );
	NOption( 313, Maxson13, 4 );
end

procedure Maxson08 begin
	gsay_reply(52, 184);
	NOption( 314, Maxson18, 4 );
	NOption( 315, Maxson04a, 4 );
	NOption( 316, Maxson08a, 4 );
end

procedure Maxson08a begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_BARTER, -20))) then begin
		Asked_For_1000 := 1;
		call Maxson09;
	end
	else begin
		call Maxson12;
	end
end

procedure Maxson09 begin
	gsay_reply(52, 223);
	BOption( 317, Maxson09a, 4 );
	NOption( 318, Maxson18, 4 );
	NOption( 319, MaxsonAccept, 4 );
end

procedure Maxson09a begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_BARTER, -10))) then begin
		call Maxson10;
	end
	else begin
		call Maxson11;
	end
end

procedure Maxson10 begin
	set_local_var(9, 1);
	if (Asked_For_1000) then begin
		dude_caps_adjust( 1000 );
	end
	else begin
		dude_caps_adjust( 500 );
	end
	DownReact
	gsay_reply(52, 226);
	BOption( 320, MaxsonEnd, 4 );
end

procedure Maxson11 begin
	gsay_message(52, 229, 51);
	Denounce_Player := 1;
end

procedure Maxson12 begin
	gsay_message(52, 229, 51);
	Denounce_Player := 1;
end

procedure Maxson13 begin
	gsay_message(52, 231, 51);
	Denounce_Player := 1;
end

procedure Maxson14 begin
	gsay_reply(52, 146);
	NOption( 321, Maxson02, 4 );
end

procedure Maxson15 begin
	gsay_reply(52, 141);
	NOption( 322, Maxson02, 4 );
	NOption( 323, Maxson16, 4 );
end

procedure Maxson16 begin
	gsay_reply(52, 223);
	NOption( 324, Maxson17, 4 );
	NOption( 325, Maxson18, 4 );
	NOption( 326, Maxson17, 4 );
end

procedure Maxson17 begin
	gsay_reply(52, 168);
	BOption( 327, MaxsonEnd, 4 );
end

procedure Maxson18 begin
	gsay_message(52, 222, 50);
end

procedure Maxson19 begin
	gsay_reply(52, 201);
	NOption( 333, Maxson32, -3 );
	if ((global_var( GVAR_MISSING_CARAVAN ) == 2) and (local_var(9) == 0)) then begin
		NOption( 329, Maxson14, 4 );
	end
	if ((global_var( GVAR_MISSING_CARAVAN ) == 1) and (local_var(9) == 0)) then begin
		NOption( 330, Maxson06, 4 );
	end
	NOption( 332, Maxson27, 4 );
	NOption( 331, Maxson18, 4 );
end

procedure Maxson20 begin
	gsay_reply(52, 193);
	NOption( 333, Maxson32, -3 );
	if (local_var(7) == 0) then begin
		NOption( 334, Maxson22, 4 );
	end
	NOption( 335, Maxson27, 4 );
	NOption( 336, Maxson18, 4 );
end

procedure Maxson21 begin
	gsay_reply(52, 201);
	NOption( 333, Maxson32, -3 );
	NOption( 334, Maxson22, 4 );
	NOption( 335, Maxson27, 4 );
	NOption( 336, Maxson18, 4 );
end

procedure Maxson22 begin
	temp := local_var(7);
	gsay_reply(52, 205);

	if ((temp == 0) and (global_var( GVAR_VATS_BLOWN ) == 1)) then begin
		NOption( 400, Maxson35, 4 );
	end
	else if ((temp == 0) and (global_var( GVAR_WORLDMAPLIST_MILITARYBASE ) != 2)) then begin
		NOption( 337, Maxson18, 4 );
	end
	else if ((temp == 0) and (global_var( GVAR_WORLDMAPLIST_MILITARYBASE ) == 2) and (global_var( GVAR_WORLDMAPLIST_MASTERS_LAIR ) == 2)) then begin
		NOption( 339, Maxson23, 4 );
	end
	else if ((temp == 0) and (global_var( GVAR_WORLDMAPLIST_MILITARYBASE ) == 2) and (global_var( GVAR_WORLDMAPLIST_MASTERS_LAIR ) != 2)) then begin
		NOption( 338, Maxson23, 4 );
	end

	NOption( 335, Maxson27, 4 );
	NOption( 336, Maxson18, 4 );
end

procedure Maxson23 begin
	set_local_var(7, 1);
	set_local_var(8, 1);
	gsay_reply(52, 213);
	NOption( 340, Maxson24, 4 );
end

procedure Maxson24 begin
	set_local_var(5, 1);
	gsay_reply(52, 219);
	NOption( 341, Maxson25, 4 );
	NOption( 342, MaxsonEnd, 4 );
end

procedure Maxson25 begin
	set_local_var(5, 0);
	set_map_var(19, 1);
	gsay_message(52, 221, 50);
end

procedure Maxson26 begin
	gsay_reply(52, 210);
	NOption( 343, Maxson23, 4 );
end

procedure Maxson27 begin
	gsay_reply(52, random(138, 140));
	if (local_var(6) == 0) then begin
		NOption( 344, Maxson28, 4 );
	end
	NOption( 345, Maxson29, 4 );
	NOption( 346, Maxson30, 4 );
	NOption( 347, Maxson31, 4 );
	NOption( 348, Maxson18, 4 );
end

procedure Maxson28 begin
	variable Item := 0;
	set_local_var(6, 1);

	Item := create_object_sid(PID_MAXON_HISTORY_HOLODISK, 0, 0, SCRIPT_MAXDISK);
	add_obj_to_inven(dude_obj, Item);

	gsay_reply(52, 186);
	NOption( 349, Maxson27, 4 );
	NOption( 350, Maxson18, 4 );
end

procedure Maxson29 begin
	gsay_reply(52, 172);
	NOption( 349, Maxson27, 4 );
	NOption( 350, Maxson18, 4 );
end

procedure Maxson30 begin
	gsay_reply(52, 244);
	NOption( 349, Maxson27, 4 );
	NOption( 350, Maxson18, 4 );
end

procedure Maxson31 begin
	gsay_reply(52, 262);
	NOption( 349, Maxson27, 4 );
	NOption( 350, Maxson18, 4 );
end

procedure Maxson32 begin
	gsay_message(52, 275, 50);
end

procedure Maxson33 begin
	if (dude_is_male) then begin
		gsay_reply(52, 357);
	end
	else begin
		gsay_reply(52, 358);
	end
	NOption( 349, Maxson27, 4 );
	NOption( 350, Maxson18, 4 );
end

procedure Maxson34 begin
	if (dude_is_male) then begin
		gsay_reply(52, 359);
	end
	else begin
		gsay_reply(52, 360);
	end
	NOption( 349, Maxson27, 4 );
	NOption( 350, Maxson18, 4 );
end

procedure Maxson35 begin
	set_local_var(7, 1);
	set_local_var(8, 1);
	gsay_reply(52, 133);
	NOption( 335, Maxson27, 4 );
	NOption( 336, Maxson18, 4 );
end

procedure MaxsonEnd begin
end

procedure Remove_Player begin
	dude_kicked_out;
end

procedure MaxsonAccept begin
	set_local_var(9, 1);
end
