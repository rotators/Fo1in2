#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"


procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure talk_p_proc;//    script_action == 11
procedure thomasend;
procedure thomas00;
procedure thomas01;
procedure thomas02;
procedure thomas03;
procedure thomas04;
procedure thomas05;
procedure thomas06;
procedure thomas07;
procedure thomas08;
procedure thomas09;
procedure thomas10;
procedure thomas11;
procedure thomas12;
procedure thomas13;
procedure thomas14;
procedure thomas15;
procedure thomas16;
procedure thomas17;
procedure thomas18;
procedure thomas19;
procedure thomas20;
procedure thomas21;
procedure thomas22;

variable tmp_hostile;
variable Only_Once := 1;

procedure start
begin
	fixt_critter_healing

	if Only_Once then begin
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 44);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 64);
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
				end
			end
		end
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (global_var(ENEMY_BROTHERHOOD)) then begin
		tmp_hostile := 1;
	end
	if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
		tmp_hostile := 0;
	end
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		set_global_var(ENEMY_BROTHERHOOD, 1);
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	get_reaction
	start_gdialog(685, self_obj, 4, -1, -1);
	gsay_start;
	if (local_var(4) != 1) then begin
		set_local_var(4, 1);
		if (local_var(1) == 1) then begin
			call thomas01;
		end
		else begin
			call thomas00;
		end
	end
	else begin
		if (local_var(1) == 1) then begin
			if (local_var(6) != 0) then begin
				call thomas09;
			end
			else begin
				call thomas08;
			end
		end
		else begin
			if (local_var(6) != 0) then begin
				call thomas20;
			end
			else begin
				call thomas19;
			end
		end
	end
	gsay_end;
	end_dialogue;
end

procedure destroy_p_proc
begin

	set_global_var(ENEMY_BROTHERHOOD, 1);
	rm_timer_event(self_obj);
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_THOMAS2, 100));
end

procedure thomasend
begin
end

procedure thomas00
begin
	gsay_reply(685, 101);
	giq_option(4, 685, 102, thomas05, 50);
	giq_option(4, 685, 103, thomas06, 50);
	giq_option(4, 685, 104, thomas04, 50);
	giq_option(4, 685, 105, thomasend, 50);
	giq_option(-3, 685, 106, thomas02, 50);
end

procedure thomas01
begin
	gsay_reply(685, 108);
	giq_option(4, 685, 102, thomas05, 50);
	giq_option(4, 685, 103, thomas06, 50);
	giq_option(4, 685, 104, thomas04, 50);
	giq_option(4, 685, 105, thomasend, 50);
	giq_option(-3, 685, 106, thomas02, 50);
end

procedure thomas02
begin
	gsay_message(685, 109, 51);
end

procedure thomas03
begin
	gsay_message(685, 110, 51);
end

procedure thomas04
begin
	gsay_message(685, message_str(SCRIPT_THOMAS2, 111) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_THOMAS2, 112), 51);
end

procedure thomas05
begin
	gsay_message(685, 113, 50);
end

procedure thomas06
begin
	if (get_critter_stat(dude_obj, STAT_gender) == 0) then begin
		gsay_reply(685, 114);
	end
	else begin
		gsay_reply(685, 115);
	end
	call thomas10;
end

procedure thomas07
begin
	gsay_reply(685, 125);
	call thomas10;
end

procedure thomas08
begin
	if (local_var(5) != 0) then begin
		set_local_var(5, 1);
		gsay_reply(685, 126);
	end
	else begin
		gsay_reply(685, 127);
	end
	call thomas10;
end

procedure thomas09
begin
	gsay_reply(685, 125);
	giq_option(4, 685, 102, thomas05, 50);
	giq_option(4, 685, 103, thomas06, 50);
	giq_option(4, 685, 104, thomas04, 50);
	giq_option(4, 685, 105, thomas21, 50);
	giq_option(-3, 685, 107, thomas02, 50);
end

procedure thomas10
begin
	giq_option(4, 685, 118, thomas11, 50);
	giq_option(4, 685, 119, thomas12, 50);
	giq_option(4, 685, 120, thomas13, 50);
	giq_option(4, 685, 121, thomas14, 50);
	giq_option(4, 685, 122, thomas15, 50);
	giq_option(4, 685, 123, thomas16, 50);
	giq_option(4, 685, 124, thomas17, 50);
	giq_option(-3, 685, 106, thomas02, 50);
end

procedure thomas11
begin
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	gfade_in(1);
	display_msg(message_str(SCRIPT_THOMAS2, 130));
	set_local_var(6, 1);
end

procedure thomas12
begin
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	gfade_in(1);
	display_msg(message_str(SCRIPT_THOMAS2, 132));
	set_local_var(6, 1);
end

procedure thomas13
begin
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	gfade_in(1);
	display_msg(message_str(SCRIPT_THOMAS2, 134));
	set_local_var(6, 1);
end

procedure thomas14
begin
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	gfade_in(1);
	display_msg(message_str(SCRIPT_THOMAS2, 135));
	set_local_var(6, 1);
end

procedure thomas15
begin
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	gfade_in(1);
	display_msg(message_str(SCRIPT_THOMAS2, 136));
	set_local_var(6, 1);
end

procedure thomas16
begin
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	gfade_in(1);
	display_msg(message_str(SCRIPT_THOMAS2, 137));
	set_local_var(6, 1);
end

procedure thomas17
begin
	gsay_message(685, 138, 50);
end

procedure thomas18
begin
	gsay_message(685, 139, 51);
end

procedure thomas19
begin
	if (local_var(5) != 0) then begin
		set_local_var(5, 1);
		gsay_reply(685, 140);
	end
	else begin
		gsay_reply(685, 127);
	end
	call thomas10;
end

procedure thomas20
begin
	gsay_reply(685, 140);
	giq_option(4, 685, 102, thomas03, 50);
	giq_option(4, 685, 103, thomas07, 50);
	giq_option(4, 685, 104, thomas04, 50);
	giq_option(4, 685, 105, thomas22, 50);
	giq_option(-3, 685, 107, thomas02, 50);
end

procedure thomas21
begin
	gsay_message(685, 142, 50);
end

procedure thomas22
begin
	gsay_message(685, 143, 51);
end


