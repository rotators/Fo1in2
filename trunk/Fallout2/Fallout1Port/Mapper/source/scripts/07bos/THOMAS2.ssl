/*

	Brotherhood - Thomas

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\mapnecro.h"

#define NAME                    SCRIPT_THOMAS2
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;

procedure thomasend;
procedure thomas00;
procedure thomas01;
procedure thomas02;
procedure thomas03;
procedure thomas04;
procedure thomas05;
procedure thomas06;
procedure thomas07;
procedure thomas08;
procedure thomas09;
procedure thomas10;
procedure thomas11;
procedure thomas12;
procedure thomas13;
procedure thomas14;
procedure thomas15;
procedure thomas16;
procedure thomas17;
procedure thomas18;
procedure thomas19;
procedure thomas20;
procedure thomas21;
procedure thomas22;

variable tmp_hostile;
variable Only_Once := 1;

procedure start begin
	if Only_Once then begin
		set_self_team(TEAM_BROTHERHOOD );
		set_self_ai( AI_BROTHERHOOD_KNIGHT );
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (global_var( GVAR_ENEMY_BROTHERHOOD )) then begin
		tmp_hostile := 1;
	end
	if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
		tmp_hostile := 0;
	end
	if (tmp_hostile) then begin
		set_global_var( GVAR_ENEMY_BROTHERHOOD, 1 );
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc
begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	start_gdialog(685, self_obj, 4, -1, -1);
	gsay_start;
	if (local_var(4) != 1) then begin
		set_local_var(4, 1);
		if (local_var(1) == 1) then begin
			call thomas01;
		end
		else begin
			call thomas00;
		end
	end
	else begin
		if (local_var(1) == 1) then begin
			if (local_var(6) != 0) then begin
				call thomas09;
			end
			else begin
				call thomas08;
			end
		end
		else begin
			if (local_var(6) != 0) then begin
				call thomas20;
			end
			else begin
				call thomas19;
			end
		end
	end
	gsay_end;
	end_dialogue;
end

procedure destroy_p_proc begin
	set_global_var( GVAR_ENEMY_BROTHERHOOD, 1 );
	rm_timer_event(self_obj);
	inc_good_critter
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_THOMAS2, 100));
end

procedure thomasend
begin
end

procedure thomas00
begin
	gsay_reply(685, 101);
	giq_option( 4, SCRIPT_THOMAS2, 102, thomas05, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 103, thomas06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 104, thomas04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 105, thomasend, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_THOMAS2, 106, thomas02, NEUTRAL_REACTION );
end

procedure thomas01
begin
	gsay_reply(685, 108);
	giq_option( 4, SCRIPT_THOMAS2, 102, thomas05, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 103, thomas06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 104, thomas04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 105, thomasend, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_THOMAS2, 106, thomas02, NEUTRAL_REACTION );
end

procedure thomas02
begin
	gsay_message(685, 109, 51);
end

procedure thomas03
begin
	gsay_message(685, 110, 51);
end

procedure thomas04
begin
	gsay_message(685, message_str(SCRIPT_THOMAS2, 111) + dude_name + message_str(SCRIPT_THOMAS2, 112), 51);
end

procedure thomas05
begin
	gsay_message(685, 113, 50);
end

procedure thomas06
begin
	if (dude_is_male) then begin
		gsay_reply(685, 114);
	end
	else begin
		gsay_reply(685, 115);
	end
	call thomas10;
end

procedure thomas07
begin
	gsay_reply(685, 125);
	call thomas10;
end

procedure thomas08
begin
	if (local_var(5) != 0) then begin
		set_local_var(5, 1);
		gsay_reply(685, 126);
	end
	else begin
		gsay_reply(685, 127);
	end
	call thomas10;
end

procedure thomas09
begin
	gsay_reply(685, 125);
	giq_option( 4, SCRIPT_THOMAS2, 102, thomas05, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 103, thomas06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 104, thomas04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 105, thomas21, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_THOMAS2, 107, thomas02, NEUTRAL_REACTION );
end

procedure thomas10
begin
	giq_option( 4, SCRIPT_THOMAS2, 118, thomas11, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 119, thomas12, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 120, thomas13, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 121, thomas14, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 122, thomas15, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 123, thomas16, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 124, thomas17, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_THOMAS2, 106, thomas02, NEUTRAL_REACTION );
end

procedure thomas11
begin
	gfade_out(1);
	gfade_in(1);
	display_msg(message_str(SCRIPT_THOMAS2, 130));
	set_local_var(6, 1);
end

procedure thomas12
begin
	gfade_out(1);
	gfade_in(1);
	display_msg(message_str(SCRIPT_THOMAS2, 132));
	set_local_var(6, 1);
end

procedure thomas13
begin
	gfade_out(1);
	gfade_in(1);
	display_msg(message_str(SCRIPT_THOMAS2, 134));
	set_local_var(6, 1);
end

procedure thomas14
begin
	gfade_out(1);
	gfade_in(1);
	display_msg(message_str(SCRIPT_THOMAS2, 135));
	set_local_var(6, 1);
end

procedure thomas15
begin
	gfade_out(1);
	gfade_in(1);
	display_msg(message_str(SCRIPT_THOMAS2, 136));
	set_local_var(6, 1);
end

procedure thomas16
begin
	gfade_out(1);
	gfade_in(1);
	display_msg(message_str(SCRIPT_THOMAS2, 137));
	set_local_var(6, 1);
end

procedure thomas17
begin
	gsay_message(685, 138, 50);
end

procedure thomas18
begin
	gsay_message(685, 139, 51);
end

procedure thomas19
begin
	if (local_var(5) != 0) then begin
		set_local_var(5, 1);
		gsay_reply(685, 140);
	end
	else begin
		gsay_reply(685, 127);
	end
	call thomas10;
end

procedure thomas20
begin
	gsay_reply(685, 140);
	giq_option( 4, SCRIPT_THOMAS2, 102, thomas03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 103, thomas07, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 104, thomas04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_THOMAS2, 105, thomas22, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_THOMAS2, 107, thomas02, NEUTRAL_REACTION );
end

procedure thomas21
begin
	gsay_message(685, 142, 50);
end

procedure thomas22
begin
	gsay_message(685, 143, 51);
end





