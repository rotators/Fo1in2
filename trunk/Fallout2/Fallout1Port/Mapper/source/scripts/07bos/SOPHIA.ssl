#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"


procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat;
procedure critter_p_proc;//		script_action == 12
procedure pickup_p_proc;//		script_action == 4
procedure talk_p_proc;//		script_action == 11
procedure destroy_p_proc;//		script_action == 18
procedure look_at_p_proc;//		script_action == 21
procedure goto00;
procedure goto01;
procedure goto02;
procedure goto03;
procedure goto04;
procedure goto05;
procedure goto06;
procedure goto07;
procedure goto08;
procedure goto09;
procedure goto10;
procedure goto11;
procedure goto12;
procedure goto13;
procedure goto14;
procedure goto15;
procedure goto16;
procedure goto16b;
procedure goto17;
procedure goto18;
procedure goto19;
procedure goto20;
procedure goto20b;
procedure goto21;
procedure anger;
procedure gotoend;
procedure gotostory;
procedure grenades;
procedure grenadesGive;
procedure grenadesGiveLowInt;
procedure grenadesFail;

procedure gotoDownReact;

variable tmp_hostile;
variable item;
variable Pick;
variable Only_Once := 1;
variable message;
variable LVar0 := 0;
variable ch := 0;

procedure start
begin
	

	if Only_Once then begin
		Only_Once := 0;
		/* TEAM_NUM */	critter_add_trait(self_obj, 1, 6, 44);
		/* AI_PACKET */	critter_add_trait(self_obj, 1, 5, 63);
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
				end
			end
		end
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (global_var(ENEMY_BROTHERHOOD)) then begin
		tmp_hostile := 1;
	end
	if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
		tmp_hostile := 0;
	end
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		set_global_var(ENEMY_BROTHERHOOD, 1);
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	start_gdialog(319, self_obj, 4, -1, -1);
	gsay_start;
	if global_var(MICHAEL_SOPHIA_GRENADES) == 1 then begin
		call grenades;
	end
	else begin
	if (local_var(4)) then begin
		if (local_var(1) < 2) then begin
			call goto20;
		end
		else begin
			call goto16;
		end
	end
	else begin
		set_local_var(4, 1);
		if (map_var(0) == 1) then begin
			call goto14;
		end
		else begin
			call goto00;
		end
	end
	end
	gsay_end;
	end_dialogue;
end

procedure destroy_p_proc
begin
	set_global_var(ENEMY_BROTHERHOOD, 1);

	inc_good_critter
	rm_timer_event(self_obj);
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_SOPHIA, 100));
end

procedure goto00
begin
	gsay_reply(319, 301);
	giq_option(-3, 319, 302, goto01, 50);
	giq_option(4, 319, 303, goto02, 50);
	giq_option(4, 319, 304, goto03, 50);
	giq_option(4, 319, 305, goto02, 50);
	giq_option(4, 319, 306, anger, 51);
end

procedure goto01
begin
	gsay_message(319, 307, 51);
end

procedure goto02
begin
	gsay_reply(319, 308);
	if (global_var(NECROP_WATER_CHIP_TAKEN) != 1) then begin
		giq_option(4, 319, 309, goto04, 50);
	end
	giq_option(4, 319, 310, goto05, 50);
	giq_option(4, 319, 311, goto06, 50);
	giq_option(4, 319, 312, gotoend, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 319, 313, anger, 51);
	end
end

procedure goto03
begin
	gsay_reply(319, 314);
	giq_option(4, 319, 315, gotoend, 50);
	giq_option(4, 319, 316, goto07, 50);
end

procedure goto04
begin
	gsay_reply(319, 317);
	giq_option(4, 319, 318, goto07, 50);
	giq_option(4, 319, 319, goto06, 50);
	giq_option(4, 319, 320, anger, 51);
	giq_option(4, 319, 321, gotoend, 50);
end

procedure goto05
begin
	gsay_reply(319, 322);
	giq_option(4, 319, 323, gotoend, 50);
	giq_option(4, 319, 324, goto08, 50);
	giq_option(4, 319, 325, goto09, 50);
end

procedure goto06
begin
	gsay_reply(319, 326);
	giq_option(4, 319, 327, goto11, 50);
	giq_option(4, 319, 328, goto11, 50);
	if (local_var(6) != 1) then begin
		giq_option(4, 319, 329, goto12, 50);
	end
	giq_option(4, 319, 330, goto07, 50);
end

procedure goto07
begin
	gsay_reply(319, 331);
	if (local_var(6) != 1) then begin
		giq_option(4, 319, 332, goto12, 50);
	end
	giq_option(4, 319, 333, goto09, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 319, 334, goto01, 51);
	end
	giq_option(4, 319, 335, goto05, 50);
end

procedure goto08
begin
	gsay_message(319, 336, 50);
end

procedure goto09
begin
	gsay_reply(319, 337);
	if (local_var(6) != 1) then begin
		giq_option(4, 319, 338, goto12, 49);
	end
	giq_option(4, 319, 339, gotoDownReact, 51);
	giq_option(4, 319, 341, goto01, 51);
	giq_option(4, 319, 342, goto10, 50);
end

procedure gotoDownReact begin
	DownReact
end

procedure goto10
begin
	gsay_message(319, 343, 50);
end

procedure goto11
begin
	gsay_reply(319, 344);
	giq_option(4, 319, 345, gotoend, 50);
	giq_option(4, 319, 346, goto13, 50);
	giq_option(4, 319, 347, gotoDownReact, 51);
end

procedure goto12
begin
	set_local_var(6, 1);
	LVar0 := create_object_sid(PID_HOLODISK, 0, 0, SCRIPT_SOPDISK);
	add_obj_to_inven(dude_obj, LVar0);
	gsay_reply(319, 348);
	giq_option(4, 319, 349, gotoend, 50);
	giq_option(4, 319, 350, gotoDownReact, 51);
end

procedure goto13
begin
	gsay_reply(319, 351);
	if (local_var(6) != 1) then begin
		giq_option(4, 319, 352, goto12, 49);
	end
	giq_option(4, 319, 349, gotoend, 50);
	giq_option(4, 319, 353, anger, 51);
end

procedure goto14
begin
	gsay_reply(319, 301);
	giq_option(-3, 319, 302, goto01, 50);
	giq_option(4, 319, 303, goto02, 50);
	giq_option(4, 319, 330, goto15, 50);
	giq_option(4, 319, 306, anger, 51);
end

procedure goto15
begin
	gsay_reply(319, 359);
	giq_option(4, 319, 360, goto07, 50);
	giq_option(4, 319, 361, anger, 51);
	giq_option(4, 319, 362, gotoDownReact, 51);
end

procedure goto16
begin
	gsay_reply(319, 364);
	giq_option(4, 319, 365, goto17, 50);
	giq_option(4, 319, 366, goto16b, 50);
	giq_option(4, 319, 367, gotoend, 50);
	giq_option(-3, 319, 302, goto01, 50);
end

procedure goto16b
begin
	if (local_var(6) != 1) then begin
		call goto12;
	end
	else begin
		call goto18;
	end
end

procedure goto17
begin
	gsay_reply(319, 368);
	giq_option(4, 319, 369, gotoend, 50);
	giq_option(4, 319, 316, goto07, 50);
end

procedure goto18
begin
	gsay_reply(319, 374);
	giq_option(4, 319, 369, gotoend, 50);
	giq_option(4, 319, 350, gotoDownReact, 51);
end

procedure goto19
begin
	gsay_reply(319, 374);
	giq_option(4, 319, 369, gotoend, 50);
	giq_option(4, 319, 350, gotoDownReact, 51);
end

procedure goto20
begin
	gsay_reply(319, 377);
	giq_option(4, 319, 378, gotoend, 50);
	giq_option(4, 319, 379, goto20b, 49);
	giq_option(-3, 319, 302, goto01, 50);
end

procedure goto20b
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -10))) then begin
		call goto21;
	end
	else begin
		call goto01;
	end
end

procedure goto21
begin
	UpReact
	gsay_reply(319, 380);
	giq_option(4, 319, 381, goto17, 50);
	giq_option(4, 319, 382, goto16b, 50);
	giq_option(4, 319, 383, gotoend, 50);
end

procedure grenades
begin
	gsay_reply(319, 201);
	if (obj_is_carrying_obj_pid(dude_obj, PID_PULSE_GRENADE) >= 3) then begin
		giq_option(4, 319, 202, grenadesGive, 50);
		giq_option(-3, 319, 205, grenadesGiveLowInt, 50);
	end
	giq_option(5, 319, 203, gotoend, 50);
	giq_option(4, 319, 204, grenadesFail, 50);
end

procedure grenadesGive
begin
	LVar0 := obj_carrying_pid_obj(dude_obj, PID_PULSE_GRENADE);
	rm_obj_from_inven(dude_obj, LVar0);
	add_obj_to_inven(self_obj, LVar0);
	LVar0 := obj_carrying_pid_obj(dude_obj, PID_PULSE_GRENADE);
	rm_obj_from_inven(dude_obj, LVar0);
	add_obj_to_inven(self_obj, LVar0);
	LVar0 := obj_carrying_pid_obj(dude_obj, PID_PULSE_GRENADE);
	rm_obj_from_inven(dude_obj, LVar0);
	add_obj_to_inven(self_obj, LVar0);
	UpReact
	gsay_message(319, 206, 50);
	//if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
	ch := get_critter_stat(dude_obj, STAT_ch) > 5;
	if ch and is_success(do_check(dude_obj, STAT_ch, 0)) then begin
		//quest ok + bonus
		gsay_message(319, 208, 49);
		set_global_var(MICHAEL_SOPHIA_GRENADES, 4);
	end
	else begin
		//quest ok
		set_global_var(MICHAEL_SOPHIA_GRENADES, 3);
	end
end

procedure grenadesGiveLowInt
begin
	UpReact
	gsay_reply(319, 207);
	set_global_var(MICHAEL_SOPHIA_GRENADES, 3); //quest ok
	item := create_object_sid(PID_PULSE_GRENADE, 0, 0, -1);
	rm_obj_from_inven(dude_obj, item);
	rm_obj_from_inven(dude_obj, item);
	rm_obj_from_inven(dude_obj, item);
end

procedure grenadesFail
begin
	DownReact
	gsay_reply(319, 115);
	set_global_var(MICHAEL_SOPHIA_GRENADES, 2); //quest fail
end

procedure anger
begin
	DownReact
	call goto01;
end

procedure gotoend
begin
end

procedure gotostory
begin
end


