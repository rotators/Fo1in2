#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21

procedure Jennifer00;
procedure Jennifer01;
procedure Jennifer01a;
procedure Jennifer01b;
procedure Jennifer02;
procedure Jennifer05;
procedure Jennifer07;
procedure Jennifer08;
procedure Jennifer11;
procedure Jennifer13;
procedure Jennifer14;
procedure Jennifer15;
procedure Jennifer16;
procedure Jennifer17;
procedure Jennifer18;
procedure Jennifer19;
procedure Jennifer20;
procedure Jennifer21;
procedure Jennifer22;
procedure Jennifer23;
procedure Jennifer25;
procedure Jennifer26;
procedure Jennifer27;
procedure Jennifer28;
procedure Jennifer29;
procedure Jennifer30;
procedure Jennifer31;
procedure JenniferCharm;
procedure JenniferEnd;
procedure JenniferRandom1;
procedure JenniferRandom2;
procedure JenniferRandom3;
procedure JenniferBackground1;
procedure combat;
procedure weapon_check;

procedure JenniferUpReact;
procedure JenniferDownReact;
procedure JenniferBottomReact;
procedure JenniferBigDownReact;

variable known;
variable armed;
variable warned;
variable first_time := 1;
variable last_seen;
variable flag1;
variable flag2;
variable line2flag;
variable line5flag;
variable line14flag;
variable tmp_hostile;
variable Only_Once := 1;

procedure start begin
	fixt_critter_healing

	if Only_Once then begin
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 44);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 65);
		Only_Once := 0;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	get_reaction
	if (not(first_time)) then begin
		if (local_var(0) < 2) then begin
			call JenniferRandom3;
		end
		else begin
			call JenniferRandom2;
		end
	end
	else begin
		first_time := 0;
		start_gdialog(-1, self_obj, 4, -1, -1);
		gsay_start;
		call Jennifer01;
		gsay_end;
		end_dialogue;
	end
end

procedure weapon_check
begin
	if (dude_is_armed) then begin
		armed := 1;
	end
	else begin
		armed := 0;
	end
end

procedure Jennifer00
begin
	warned := 1;
	float_msg(self_obj, message_str(SCRIPT_JENNIFER, 102), 0);
	float_msg(self_obj, message_str(SCRIPT_JENNIFER, 103), 0);
end

procedure Jennifer01
begin
	gsay_reply(462, 104);
	if (get_critter_stat(dude_obj, STAT_gender) == 1) then begin
		giq_option(5, 462, 105, Jennifer14, 50);
	end
	else begin
		giq_option(5, 462, 106, JenniferCharm, 50);
		giq_option(-3, 462, 107, Jennifer11, 50);
	end
	giq_option(5, 462, 108, Jennifer01a, 49);
	giq_option(4, 462, 109, Jennifer01b, 51);
	giq_option(4, 462, 110, Jennifer02, 50);
	giq_option(-3, 462, 111, Jennifer13, 50);
end

procedure Jennifer01a
begin
	UpReact
	call Jennifer02;
end

procedure Jennifer01b
begin
	BigDownReact
	call Jennifer20;
end

procedure Jennifer02
begin
	line2flag := 1;
	gsay_message(462, 112, 50);
	gsay_reply(462, 113);
	giq_option(5, 462, 114, JenniferUpReact, 50);
	if (not(line5flag)) then begin
		giq_option(4, 462, 115, Jennifer05, 50);
	end
	Goodbyes;
	giq_option(4, 0, exit_line, JenniferEnd, 50);
end

procedure JenniferUpReact begin
	UpReact
end

procedure Jennifer05
begin
	line5flag := 1;
	gsay_message(462, 116, 50);
	call Jennifer07;
end

procedure Jennifer07
begin
	gsay_reply(462, 117);
	giq_option(4, 462, 118, JenniferUpReact, 49);
	giq_option(4, 462, 119, Jennifer08, 50);
	giq_option(4, 462, 120, JenniferDownReact, 51);
end

procedure JenniferDownReact begin
	DownReact
end

procedure Jennifer08
begin
	gsay_reply(462, 121);
	giq_option(5, 462, 122, JenniferUpReact, 50);
	giq_option(6, 462, 123, Jennifer29, 50);
	if (get_critter_stat(dude_obj, STAT_gender) == 1) then begin
		if (not(line14flag)) then begin
			giq_option(5, 462, 124, Jennifer14, 50);
		end
	end
	else begin
		if (not(flag1) and not(flag2) and (get_critter_stat(dude_obj, STAT_gender) == 0)) then begin
			giq_option(5, 462, 125, JenniferCharm, 50);
		end
	end
	giq_option(4, 462, 126, JenniferEnd, 50);
end

procedure Jennifer11
begin
	gsay_reply(462, 127);
	giq_option(-3, 462, 128, Jennifer13, 50);
end

procedure Jennifer13
begin
	gsay_message(462, 129, 50);
end

procedure Jennifer14
begin
	line14flag := 1;
	TopReact
	gsay_message(462, 130, 50);
	gsay_reply(462, 131);
	giq_option(8, 462, 132, Jennifer16, 50);
	giq_option(4, 462, 133, Jennifer15, 50);
	giq_option(4, 462, 134, Jennifer17, 50);
end

procedure Jennifer15
begin
	gsay_reply(462, 135);
	giq_option(4, 462, 136, Jennifer17, 50);
	giq_option(4, 462, 137, Jennifer17, 50);
end

procedure Jennifer16
begin
	gsay_reply(462, 138);
	giq_option(8, 462, 139, Jennifer18, 50);
	giq_option(4, 462, 140, Jennifer17, 50);
end

procedure Jennifer17
begin
	gsay_reply(462, 141);
	if (not(line2flag)) then begin
		giq_option(4, 462, 142, Jennifer02, 50);
	end
	if (not(line5flag)) then begin
		giq_option(4, 462, 143, Jennifer05, 50);
	end
	giq_option(4, 462, 144, JenniferEnd, 50);
end

procedure Jennifer18
begin
	gsay_message(462, 145, 50);
	gsay_reply(462, 146);
	giq_option(4, 462, 147, Jennifer19, 50);
	Goodbyes;
	giq_option(4, 0, exit_line, JenniferEnd, 50);
end

procedure Jennifer19
begin
	gsay_message(462, 148, 50);
	gsay_reply(462, 149);
	Goodbyes;
	giq_option(4, 0, exit_line, JenniferEnd, 50);
end

procedure Jennifer20
begin
	gsay_reply(462, 150);
	giq_option(5, 462, 151, JenniferBottomReact, 51);
	giq_option(4, 462, 152, JenniferUpReact, 49);
	giq_option(4, 462, 153, JenniferDownReact, 51);
end

procedure JenniferBottomReact begin
	BottomReact
end

procedure Jennifer21
begin
	gsay_reply(462, 154);
	giq_option(4, 462, 155, Jennifer22, 50);
	giq_option(4, 462, 156, JenniferEnd, 50);
end

procedure Jennifer22
begin
	gsay_message(462, 157, 50);
end

procedure Jennifer23
begin
	TopReact
	flag1 := 1;
	flag2 := 0;
	last_seen := game_time;
	gsay_message(462, 163, 49);
	gsay_reply(462, 164);
	if (line2flag == 0) then begin
		giq_option(4, 462, 165, Jennifer02, 50);
	end
	if (line5flag == 0) then begin
		giq_option(4, 462, 166, Jennifer05, 50);
	end
	giq_option(4, 462, 167, JenniferEnd, 50);
	giq_option(4, 462, 168, JenniferEnd, 50);
end

procedure Jennifer25
begin
	flag1 := 0;
	flag2 := 1;
	gsay_message(462, 163, 50);
	gsay_reply(462, 164);
	if (not(line2flag)) then begin
		giq_option(4, 462, 165, Jennifer02, 50);
	end
	if (not(line5flag)) then begin
		giq_option(4, 462, 166, Jennifer05, 50);
	end
	giq_option(4, 462, 167, JenniferEnd, 50);
	giq_option(4, 462, 168, JenniferEnd, 50);
end

procedure Jennifer26
begin
	gsay_reply(462, 169);
	giq_option(4, 462, 170, JenniferBigDownReact, 51);
	giq_option(4, 462, 171, Jennifer27, 50);
	giq_option(4, 462, 172, JenniferEnd, 50);
end

procedure JenniferBigDownReact begin
	BigDownReact
end

procedure Jennifer27
begin
	gsay_reply(462, 173);
	if (not(line2flag)) then begin
		giq_option(4, 462, 174, Jennifer02, 50);
	end
	if (not(line5flag)) then begin
		giq_option(4, 462, 175, Jennifer05, 50);
	end
	giq_option(4, 462, 176, JenniferEnd, 50);
end

procedure Jennifer28
begin
	gsay_reply(462, 177);
	giq_option(4, 462, 178, Jennifer27, 50);
	giq_option(4, 462, 179, Jennifer27, 51);
	giq_option(4, 462, 180, JenniferEnd, 50);
end

procedure Jennifer29
begin
	gsay_reply(462, 181);
	giq_option(4, 462, 182, Jennifer30, 50);
	giq_option(4, 462, 183, JenniferBottomReact, 51);
end

procedure Jennifer30
begin
	gsay_message(462, 184, 50);
	gsay_message(462, 185, 50);
	gsay_reply(462, 186);
	giq_option(7, 462, 187, Jennifer31, 50);
	giq_option(4, 462, 188, JenniferUpReact, 49);
	giq_option(4, 462, 189, JenniferDownReact, 51);
	if (not(line2flag)) then begin
		giq_option(4, 462, 190, Jennifer02, 50);
	end
end

procedure Jennifer31
begin
	gsay_reply(462, 191);
	giq_option(4, 462, 192, JenniferEnd, 50);
	giq_option(4, 462, 193, JenniferDownReact, 51);
	if (not(line2flag)) then begin
		giq_option(4, 462, 194, Jennifer02, 50);
	end
end

procedure JenniferCharm
begin
	variable LVar0 := 0;
	LVar0 := do_check(dude_obj, STAT_ch, 0);
	if (is_success(LVar0)) then begin
		if (is_critical(LVar0)) then begin
			BigUpReact
			flag1 := 1;
			call Jennifer23;
		end
		else begin
			call Jennifer25;
		end
	end
	else begin
		if (is_critical(LVar0)) then begin
			call Jennifer28;
		end
		else begin
			call Jennifer26;
		end
	end
end

procedure JenniferEnd
begin
end

procedure JenniferRandom1
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	if (not(LVar0)) then begin
		LVar0 := random(1, 10);
	end
	if ((game_time_hour > 800) and (game_time_hour < 1700)) then begin
		if (LVar0 > 10) then begin
			LVar0 := 1;
		end
		LVar1 := message_str(SCRIPT_JENNIFER, 195);
		if (LVar0 == 2) then begin
			LVar1 := message_str(SCRIPT_JENNIFER, 196);
		end
		else begin
			if (LVar0 == 3) then begin
				LVar1 := message_str(SCRIPT_JENNIFER, 197);
			end
			else begin
				if (LVar0 == 4) then begin
					LVar1 := message_str(SCRIPT_JENNIFER, 198);
				end
				else begin
					if (LVar0 == 5) then begin
						LVar1 := message_str(SCRIPT_JENNIFER, 199);
					end
					else begin
						if (LVar0 == 6) then begin
							LVar1 := message_str(SCRIPT_JENNIFER, 200);
						end
						else begin
							if (LVar0 == 7) then begin
								LVar1 := message_str(SCRIPT_JENNIFER, 201);
							end
							else begin
								if ((last_seen - game_time) > 86400) then begin
									if (LVar0 == 8) then begin
										LVar1 := message_str(SCRIPT_JENNIFER, 202);
									end
									if (LVar0 == 9) then begin
										LVar1 := message_str(SCRIPT_JENNIFER, 203);
									end
									if (LVar0 == 10) then begin
										LVar1 := message_str(SCRIPT_JENNIFER, 204);
									end
								end
								else begin
									LVar0 := 1;
								end
							end
						end
					end
				end
			end
		end
	end
	else begin
		if (LVar0 > 6) then begin
			LVar0 := 1;
		end
		LVar1 := message_str(SCRIPT_JENNIFER, 205);
		if (LVar0 == 2) then begin
			LVar1 := message_str(SCRIPT_JENNIFER, 206);
		end
		else begin
			if (LVar0 == 3) then begin
				LVar1 := message_str(SCRIPT_JENNIFER, 207);
			end
			else begin
				if (LVar0 == 4) then begin
					LVar1 := message_str(SCRIPT_JENNIFER, 208);
				end
				else begin
					if (LVar0 == 5) then begin
						LVar1 := message_str(SCRIPT_JENNIFER, 209);
					end
					else begin
						if (LVar0 == 6) then begin
							LVar1 := message_str(SCRIPT_JENNIFER, 210);
						end
					end
				end
			end
		end
	end
	LVar0 := LVar0 + 1;
	last_seen := game_time;
	float_msg(self_obj, LVar1, 0);
end

procedure JenniferRandom2
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	if (not(LVar0)) then begin
		LVar0 := random(1, 5);
	end
	if (LVar0 > 5) then begin
		LVar0 := 1;
	end
	LVar1 := message_str(SCRIPT_JENNIFER, 211);
	if (LVar0 == 2) then begin
		LVar1 := message_str(SCRIPT_JENNIFER, 212) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_JENNIFER, 213);
	end
	else begin
		if (LVar0 == 3) then begin
			LVar1 := message_str(SCRIPT_JENNIFER, 214);
		end
		else begin
			if (LVar0 == 4) then begin
				LVar1 := message_str(SCRIPT_JENNIFER, 215) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_JENNIFER, 216);
			end
			else begin
				if (LVar0 == 5) then begin
					LVar1 := message_str(SCRIPT_JENNIFER, 217);
				end
			end
		end
	end
	LVar0 := LVar0 + 1;
	float_msg(self_obj, LVar1, 0);
end

procedure JenniferRandom3
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	if (not(LVar0)) then begin
		LVar0 := random(1, 8);
	end
	if (LVar0 > 8) then begin
		LVar0 := 1;
	end
	LVar1 := message_str(SCRIPT_JENNIFER, 218);
	if (LVar0 == 2) then begin
		LVar1 := message_str(SCRIPT_JENNIFER, 219);
	end
	else begin
		if (LVar0 == 3) then begin
			LVar1 := message_str(SCRIPT_JENNIFER, 220);
		end
		else begin
			if (LVar0 == 4) then begin
				LVar1 := message_str(SCRIPT_JENNIFER, 221);
			end
			else begin
				if (LVar0 == 5) then begin
					LVar1 := message_str(SCRIPT_JENNIFER, 222);
				end
				else begin
					if (LVar0 == 6) then begin
						LVar1 := message_str(SCRIPT_JENNIFER, 223);
					end
					else begin
						if (LVar0 == 7) then begin
							LVar1 := message_str(SCRIPT_JENNIFER, 224);
						end
						else begin
							if (LVar0 == 8) then begin
								LVar1 := message_str(SCRIPT_JENNIFER, 225);
							end
						end
					end
				end
			end
		end
	end
	LVar0 := LVar0 + 1;
	float_msg(self_obj, LVar1, 0);
end

procedure JenniferBackground1
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	if (not(LVar0)) then begin
		LVar0 := random(1, 11);
	end
	if ((game_time_hour > 800) and (game_time_hour < 1700)) then begin
		if (LVar0 > 11) then begin
			LVar0 := 1;
		end
		if (LVar0 == 1) then begin
			LVar1 := message_str(SCRIPT_JENNIFER, 226);
		end
		else begin
			if (LVar0 == 2) then begin
				LVar1 := message_str(SCRIPT_JENNIFER, 227);
			end
			else begin
				if (LVar0 == 3) then begin
					LVar1 := proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_JENNIFER, 228);
				end
				else begin
					if (LVar0 == 4) then begin
						LVar1 := message_str(SCRIPT_JENNIFER, 229);
					end
					else begin
						if (LVar0 == 5) then begin
							LVar1 := message_str(SCRIPT_JENNIFER, 230);
						end
						else begin
							if (LVar0 == 6) then begin
								LVar1 := message_str(SCRIPT_JENNIFER, 231);
							end
							else begin
								if (LVar0 == 7) then begin
									LVar1 := message_str(SCRIPT_JENNIFER, 232);
								end
								else begin
									if (LVar0 == 8) then begin
										LVar1 := message_str(SCRIPT_JENNIFER, 233);
									end
									else begin
										if (LVar0 == 9) then begin
											LVar1 := message_str(SCRIPT_JENNIFER, 234);
										end
										else begin
											if (LVar0 == 10) then begin
												LVar1 := message_str(SCRIPT_JENNIFER, 235);
											end
											else begin
												if (LVar0 == 11) then begin
													LVar1 := message_str(SCRIPT_JENNIFER, 236);
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	else begin
		if (LVar0 == 1) then begin
			LVar1 := message_str(SCRIPT_JENNIFER, 237);
		end
		else begin
			if (LVar0 == 2) then begin
				LVar1 := message_str(SCRIPT_JENNIFER, 238);
			end
			else begin
				if (LVar0 == 3) then begin
					LVar1 := message_str(SCRIPT_JENNIFER, 239);
				end
				else begin
					if (LVar0 == 4) then begin
						LVar1 := message_str(SCRIPT_JENNIFER, 240);
					end
					else begin
						if (LVar0 == 5) then begin
							LVar1 := message_str(SCRIPT_JENNIFER, 241);
						end
					end
				end
			end
		end
	end
	LVar0 := LVar0 + 1;
	float_msg(self_obj, LVar1, 0);
	last_seen := game_time;
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (global_var(ENEMY_BROTHERHOOD)) then begin
		tmp_hostile := 1;
	end
	if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
		tmp_hostile := 0;
	end
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		set_global_var(ENEMY_BROTHERHOOD, 1);
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (warned == 0) then begin
			if (obj_can_see_obj(self_obj, dude_obj)) then begin
				if (armed == 0) then begin
					call weapon_check;
				end
				if (armed) then begin
					call Jennifer00;
				end
			end
		end
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		tmp_hostile := 1;
	end
end

procedure destroy_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_BROTHERHOOD, 1);
	end

	inc_good_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	if (known) then begin
		display_msg(message_str(SCRIPT_JENNIFER, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_JENNIFER, 101));
	end
end
