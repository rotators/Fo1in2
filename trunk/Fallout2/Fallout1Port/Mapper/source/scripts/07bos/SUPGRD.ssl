#include "..\headers\define.h"

procedure start;
procedure critter_p_proc;//    script_action == 12
procedure destroy_p_proc;
procedure talk_p_proc;//    script_action == 11

variable Hostile;
variable Only_Once := 1;



procedure start
begin
	
	
	if (Only_Once == 1) then begin
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 44);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 65);
		Only_Once := 0;
	end
	if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
		call destroy_p_proc;
	end
	else begin
		if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
			call critter_p_proc;
		end
		else begin
			if (script_action == 11) then begin
				call talk_p_proc;
			end
		end
	end
end

procedure destroy_p_proc
begin

end

procedure critter_p_proc
begin
	if (map_var(18) != 0) then begin
		if (map_var(18) > 2) then begin
			Hostile := 1;
		end
	end
//	if (obj_can_see_obj(self_obj, dude_obj)) then begin
//		Hostile := 1;
//	end
	if (global_var(ENEMY_BROTHERHOOD)) then begin
		Hostile := 1;
	end
	if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
		Hostile := 0;
	end
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		set_global_var(ENEMY_BROTHERHOOD, 1);
		Hostile := 0;
		attack(dude_obj);
	end
end

procedure talk_p_proc
begin
	variable Line := 0;
	variable Msg := 0;
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	Line := random(601, 607);
	if (get_critter_stat(dude_obj, STAT_gender) == 0) and (Line == 607) then begin
		Line := 606;
	end
	else begin
		if (get_critter_stat(dude_obj, STAT_gender) == 1) and (Line == 606) then begin
			Line := 607;
		end
	end
	Msg := message_str(SCRIPT_GENCHAT, Line);
	float_msg(self_obj, Msg, 0);
end
