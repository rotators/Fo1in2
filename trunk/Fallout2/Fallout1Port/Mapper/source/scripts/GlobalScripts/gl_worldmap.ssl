/*

   Check where we are on the worldmap and do stuff to get the scripted encounters working.

*/

/* Include Files */
#include "../headers/define.h"
#include "../headers/sfall/sfall.h"
#include "../headers/sfall/define_lite.h"
#include "../headers/debug.h"

#include "../headers/gl_worldmap.h"

// some consts

#define  TILE_COUNT      (20)
variable TILE_COUNT_X := 0;
#define  TILE_COUNT_Y    (TILE_COUNT / TILE_COUNT_X)
#define  TILE_ZONES_X    (7)
#define  TILE_ZONES_Y    (6)

#define ZONE_SIZE        (50)
#define ZONE_COUNT_X     (TILE_COUNT_X * TILE_ZONES_X)
#define ZONE_COUNT_Y     (TILE_COUNT_Y * TILE_ZONES_Y)

//
// worldmap zones table
//
// zone := GetZoneInfo( zx, zy );
// zone := GetCurrentZoneInfo();
//
// zx := zone["zx"];           // zone X coordinates (top-left is 0,0)
// zy := zone["zy"];           // zone Y coordinates (top-left is 0,0)
// terrain := zone["terrain"]; // zone terrain; copy of 1st element of [Tile T]->X_Y
// table := zone["table"];     // zone table; copy of 6th (last) element of [Tile T]->X_Y
//
// debug info
// tile := zone["tile"];     // T from [Tile T]->X_Y
// tile_x := zone["tile_x"]; // X from [Tile T]->X_Y
// tile_y := zone["tile_y"]; // Y from [Tile T]->X_Y
//

variable ZONES;

procedure GetZone(variable zx, variable zy)
begin
    return ZONES[zx][zy];
end

procedure GetCurrentZone
begin
    return GetZone( worldmap_xpos / ZONE_SIZE, worldmap_ypos / ZONE_SIZE );
end

// read [Tile*] sections of WORLDMAP.TXT and save parts of info in ZONES[][]
// TODO it should be called earlier
procedure ReadWorldmapTxt
begin
    variable forTile, forX, forY;

    // must be set before using some TILE_/ZONE_ macros
    TILE_COUNT_X := get_ini_setting( "data\\data\\WORLDMAP.TXT|Tile Data|num_horizontal_tiles" );

    if( ZONES == 0 ) then
    begin
        // no idea how to create 2d array properly
        variable x;
        ZONES := create_array( ZONE_COUNT_X, 0 );
        for( x := 0; x < ZONE_COUNT_Y; x++ )
        begin
            ZONES[x] := create_array( ZONE_COUNT_Y, 0 );
        end
    end

    for( forTile := 0; forTile < TILE_COUNT; forTile++ )
    begin
        for( forX := 0; forX < TILE_ZONES_X; forX++ )
        begin
            for( forY := 0; forY < TILE_ZONES_Y; forY++ )
            begin
                variable zx := (forTile % TILE_COUNT_X) * TILE_ZONES_X + forX;
                variable zy := (forTile / TILE_COUNT_X) * TILE_ZONES_Y + forY;
                variable line := get_ini_string( "data\\data\\WORLDMAP.TXT|Tile " + forTile + "|" + forX + "_" + forY );
                // TODO? strip trailing comments, if any
                variable cfg := string_split( line, "," );
                variable zone := create_array(-1, 2);

                zone["zx"] := zx;
                zone["zy"] := zy;
                zone["terrain"] := cfg[0];
                zone["table"]   := cfg[5];

                // debug info
                zone["tile"]   := forTile;
                zone["tile_x"] := forX;
                zone["tile_y"] := forY;

                ZONES[zx][zy] := zone;

                if( debug_mode and zone["table"] != "0" and atoi( zone["table"] ) == 0 ) then
                    display_msg( "BUG BUG BUG : [Tile " + forTile + "]->" + forX + "_" + forY + " : table<" + zone["table"] + "> is not a number");
            end
        end
    end
end

variable prevTerrain := "";
variable prevTable := -1;
procedure SetWorldmapInfo
begin
    variable zone := GetCurrentZone();
    variable terrain := WORLDMAP_TERRAIN_UNKNOWN, table := atoi( zone["table"] ); // if table is not a number, we're in trouble

    // get terrain type from string
    switch( zone["terrain"] )
    begin
        case "City":     terrain := WORLDMAP_TERRAIN_CITY;
        case "Desert":   terrain := WORLDMAP_TERRAIN_DESERT;
        case "Mountain": terrain := WORLDMAP_TERRAIN_MOUNTAIN;
        case "Ocean":    terrain := WORLDMAP_TERRAIN_OCEAN;
        default:         display_msg( "BUG BUG BUG : unknown terrain<" + terrain + ">" );
    end

    // spam when changing changing zone type
    if( debug_mode and (prevTerrain != terrain or prevTable != table) ) then
    begin
        if( not (prevTerrain == "" and prevTable == -1) ) then
            debug( "exit " + prevTerrain + prevTable);

        debug( "enter " + zone["terrain"] + table + " (" + terrain + "," + table + ") : " + "zone<" + zone["zx"] + "," + zone["zy"] + "> tile<" + zone["tile"] + ":" + zone["tile_x"] + "_" + zone["tile_y"] + ">");
        prevTerrain := terrain;
        prevTable := table;
    end

    set_global_var(GVAR_WORLDMAP_TABLE, table );
    set_global_var(GVAR_WORLDMAP_TERRAIN, terrain );
end

procedure start begin

	if( game_loaded ) then
	begin
	  set_global_script_repeat(10);
	  set_global_script_type(1);

	  call ReadWorldmapTxt;
	  call SetWorldmapInfo;
	end

	// This will disable the "You encounter: ..." message:
	write_int(0x4C1011, 0x90909090);
	write_byte(0x4C1015, 0x90);
	write_int(0x4C1042, 0x90909090);
	write_byte(0x4C1046, 0x90);

	if( get_game_mode == WORLDMAP ) then
		call SetWorldmapInfo;
end


