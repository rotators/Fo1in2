/*

   Check where we are on the worldmap and do stuff to get the scripted encounters working.

*/

/* Include Files */
#include "..\headers\command.h"
#include "..\headers\define.h"
#include "..\headers\Sfall\sfall.h"

// some consts

#define TILE_COUNT      (20)
#define TILE_COUNT_X    (get_ini_setting("data\\data\\WORLDMAP.TXT|Tile Data|num_horizontal_tiles"))
#define TILE_COUNT_Y    (TILE_COUNT / TILE_COUNT_X)
#define TILE_ZONES_X    (7)
#define TILE_ZONES_Y    (6)
//
// worldmap zones table
//
// zone := GetZoneInfo(zx,zy)
// zone := GetCurrentZoneInfo()
//
// zx := zone["zx"];
// zy := zone["zy"];
// terrain := zone["terrain"];
// table := zone["table"]
//
#define ZONE_SIZE       (50)
#define ZONE_COUNT_X    (TILE_COUNT_X * TILE_ZONES_X)
#define ZONE_COUNT_Y    (TILE_COUNT_Y * TILE_ZONES_Y)
#define ZONE_IDX(zx,zy) (zx * ZONE_COUNT_X + zy)

// forward declarations
procedure SetWorldTerrain;

variable ZONES;

procedure GetZone(variable zx, variable zy)
begin
   return ZONES[zx][zy];
end

procedure GetCurrentZone
begin
   return GetZone( worldmap_xpos / ZONE_SIZE, worldmap_ypos / ZONE_SIZE );
end

// read WORLDMAP.TXT and convert parts of config to array[][]
// TODO it should be called earlier
procedure ReadWorldmapTxt
begin
    variable forTile, forX, forY;
    variable tileCountX := TILE_COUNT_X;

    if( ZONES == 0 ) then
    begin
        // no idea how to create 2d array properly
        variable x;
        ZONES := create_array( ZONE_COUNT_X, 0 );
        for( x := 0; x < ZONE_COUNT_Y; x++ )
        begin
            ZONES[x] := create_array( ZONE_COUNT_Y, 0 );
        end
    end

    for( forTile := 0; forTile < TILE_COUNT; forTile++ )
    begin
        for( forX := 0; forX < TILE_ZONES_X; forX++ )
        begin
            for( forY := 0; forY < TILE_ZONES_Y; forY++ )
            begin
                variable zx := (forTile % tileCountX) * TILE_ZONES_X + forX;
                variable zy := (forTile / tileCountX) * TILE_ZONES_Y + forY;
                variable line := get_ini_string( "data\\data\\WORLDMAP.TXT|Tile " + forTile + "|" + forX + "_" + forY );
                // TODO? strip trailing comments, if any
                variable cfg := string_split( line, "," );
                variable zone := create_array(-1, 2);

                zone["zx"] := zx;
                zone["zy"] := zy;
                zone["terrain"] := cfg[0];
                zone["table"]   := cfg[5];

                // debug
                zone["tile"]   := forTile;
                zone["tile_x"] := forX;
                zone["tile_y"] := forY;

                ZONES[zx][zy] := zone;
            end
        end
    end
end

procedure start begin
	if (game_loaded) then begin
		set_global_script_repeat(5);
		set_global_script_type(1);
		call ReadWorldmapTxt;
		call SetWorldTerrain;
   end

	if (get_game_mode == WORLDMAP) then begin
		call SetWorldTerrain;
	end
end

variable prevTerrain := "";
variable prevTable := -1;
procedure SetWorldTerrain
begin
    variable zone := GetCurrentZone();
    variable terrain := zone["terrain"], table := atoi( zone["table"] ); // if table is not a number, we're in trouble

    if( prevTerrain != terrain or prevTable != table ) then
    begin
        if( not (prevTerrain == "" and prevTable == -1) ) then
            display_msg( "exit " + prevTerrain + prevTable);

        display_msg( "enter " + terrain + table + " : " + "zone<" + zone["zx"] + "," + zone["zy"] + "> tile<" + zone["tile"] + ":" + zone["tile_x"] + "," + zone["tile_y"] + ">");
        prevTerrain := terrain;
        prevTable := table;
    end

    set_global_var(WORLD_TERRAIN, table );
end
