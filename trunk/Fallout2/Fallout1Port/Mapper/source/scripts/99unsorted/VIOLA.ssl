#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure talk_p_proc;//    script_action == 11
procedure viola00;
procedure viola01;
procedure viola02;
procedure viola03;
procedure viola04;
procedure viola05;
procedure viola05a;
procedure viola06;
procedure viola06a;
procedure viola07;
procedure viola07a;
procedure viola08;
procedure viola08a;
procedure viola09;
procedure viola10;
procedure viola11;
procedure viola12;
procedure viola13;
procedure viola14;
procedure viola15;
procedure viola16;
procedure viola17;
procedure viola18;
procedure viola19;
procedure viola20;
procedure viola21;
procedure viola22;
procedure viola23;
procedure viola24;
procedure viola25;
procedure viola26;
procedure viola27;
procedure viola28;
procedure viola29;
procedure viola30;
procedure viola31;
procedure viola32;
procedure viola33;
procedure viola34;
procedure viola35;
procedure viola36;
procedure viola37;
procedure viola38;
procedure viola39;
procedure viola40;
procedure viola41;
procedure viola42;
procedure viola43;
procedure viola44;
procedure viola45;
procedure viola46;
procedure viola47;
procedure viola48;
procedure viola49;
procedure viola50;
procedure viola51;
procedure viola52;
procedure viola53;
procedure viola53a;
procedure viola54;
procedure viola55;
procedure viola56;
procedure viola57;
procedure viola58;
procedure viola59;
procedure viola60;
procedure viola61;
procedure viola62;
procedure viola63;
procedure viola64;
procedure viola65;
procedure viola66;
procedure viola67;
procedure viola68;
procedure viola69;
procedure viola70;
procedure viola71;
procedure viola72;
procedure viola73;
procedure viola74;
procedure viola75;
procedure viola76;
procedure violadone;
procedure violaend;
procedure violacombat;
procedure weapon_check;
procedure items_held;

variable RightHand := 0;
variable LeftHand := 0;
variable PIDright := 0;
variable PIDleft := 0;
variable SubtypeWEP := 0;

variable hostile;
variable armed;
variable GENDER;
variable LASHERKNOWN;
variable Only_Once := 1;
variable TALKEDTOLAURA;
variable LAURAWARNING;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;



procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, 17) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, 17); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 2) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, 2); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 1) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, 1); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 74) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, 74); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 113) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, 113); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if Only_Once then begin
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 20);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 69);
		Only_Once := 0;
	end
	if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
		call talk_p_proc;
	end
	else begin
		if ((script_action == 21) or (script_action == 3)) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
			script_overrides;
			display_msg(message_str(496, 100));
		end
		else begin
			if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
//
//BEGIN WEAPON DROP MOD CODE
//--original code and mod by:--
// Josan12 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=18843) and 
// MIB88 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=4464)
//
	if global_var(WEAPONDROP_MOD_STATUS) and not(global_var(FIXT_BUGFIXES_ONLY)) and (critter_inven_obj(self_obj, 1) or critter_inven_obj(self_obj, 2)) then begin// only run if Weapon Drop is enabled, AND Fixes Only is disabled, AND actually holding something
		variable item1 := 0;  variable item2 := 0;  variable armor := 0;  variable item1PID := 0;  variable item2PID := 0;  variable armorPID := 0;  variable drophex := 0;  if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop BEGINS");  end
		if (critter_inven_obj(self_obj, 1) > 0) then begin  item1 := critter_inven_obj(self_obj, 1);  end    if (critter_inven_obj(self_obj, 2) > 0) then begin  item2 := critter_inven_obj(self_obj, 2);  end    if (critter_inven_obj(self_obj, 0) > 0) then begin  armor := critter_inven_obj(self_obj, 0);  end    if item1 then begin  item1PID := obj_pid(item1);  end    if item2 then begin  item2PID := obj_pid(item2);  end    if armor then begin  armorPID := obj_pid(armor);  end    drophex := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(global_var(WEAPONDROP_MOD_MINIMUM), global_var(WEAPONDROP_MOD_MAXIMUM)));
		if (item1PID != 19) and (item1PID != 21) and (item1PID != 79) and (item1PID != 205) and (item1PID != 234) and (item1PID != 235) and (item1PID != 244) and (item2PID != 19) and (item2PID != 21) and (item2PID != 79) and (item2PID != 205) and (item2PID != 234) and (item2PID != 235) and (item2PID != 244) then begin//Don't drop if:  Rock (19), Brass Knuckles (21), Flare (79), Lit Flare (205), Spiked Knuckles (234), Power Fist (235), or Gold Nugget (244)
			if (item1 > 0) then begin if (obj_item_subtype(item1) == 3) then begin
			rm_obj_from_inven(self_obj, item1);  move_to(item1, drophex, elevation(self_obj));  end  end
			if (item2 > 0) then begin if (obj_item_subtype(item2) == 3) then begin
			rm_obj_from_inven(self_obj, item2);  move_to(item2, drophex, elevation(self_obj));  end  end    if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop ENDS");  end
		end
	end
//END WEAPON DROP MOD CODE
//
				if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
					if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
						set_global_var(BERSERKER_REPUTATION, 1);
						set_global_var(CHAMPION_REPUTATION, 0);
					end
					if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
						set_global_var(CHAMPION_REPUTATION, 1);
						set_global_var(BERSERKER_REPUTATION, 0);
					end
					set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
					if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
						set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
					end
				end
			end
			else begin
				if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
					hostile := 1;
				end
				else begin
					if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
						if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
							hostile := 0;
							attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
						end
					end
				end
			end
		end
	end
end

procedure items_held
begin
	SubtypeWEP := 0;
	if critter_inven_obj(dude_obj, 1) then begin
		RightHand := critter_inven_obj(dude_obj, 1);
		PIDright := obj_pid(RightHand);
		if obj_item_subtype(RightHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		RightHand := 0;
		PIDright := 0;
	end
	if critter_inven_obj(dude_obj, 2) then begin
		LeftHand := critter_inven_obj(dude_obj, 2);
		PIDleft := obj_pid(LeftHand);
		if obj_item_subtype(LeftHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		LeftHand := 0;
		PIDleft := 0;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	GENDER := get_critter_stat(dude_obj, 34);
	call weapon_check;
	start_gdialog(-1, self_obj, 4, -1, -1);
	gsay_start;
	if ((local_var(4) == 1) and (get_critter_stat(dude_obj, 4) < 4)) then begin
		gsay_message(496, 143, 51);
	end
	else begin
		if ((global_var(CATHEDRAL_ENEMY) == 1) and not(obj_pid(critter_inven_obj(dude_obj, 0)) == 113)) then begin
			call viola00;
		end
		else begin
			if (TALKEDTOLAURA == 1) then begin
				if (LAURAWARNING == 0) then begin
					call viola01;
				end
				else begin
					call viola02;
				end
			end
			else begin
				if (armed == 1) then begin
					call viola03;
				end
				else begin
					if ((local_var(4) == 1) and (LAURAWARNING == 0)) then begin
						call viola04;
					end
					else begin
						if (armed == 0) then begin
							if critter_inven_obj(dude_obj, 0) then begin  variable RobesCheck;  RobesCheck := critter_inven_obj(dude_obj, 0);  end      if (obj_pid(RobesCheck) == 113) then begin
								call viola05;
							end
							else begin
								if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
									call viola06;
								end
								else begin
									if ((global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) and (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1)))) then begin
										call viola07;
									end
									else begin
										call viola08;
									end
								end
							end
						end
					end
				end
			end
		end
	end
	set_local_var(4, 1);
	gsay_end;
	end_dialogue;
end

procedure viola00
begin
	if (GENDER == 0) then begin
		gsay_reply(496, 101);
	end
	else begin
		gsay_reply(496, 102);
	end
	giq_option(7, 496, 103, viola09, 50);
	giq_option(7, 496, 104, viola10, 50);
	giq_option(4, 496, 105, viola11, 50);
	if (global_var(IS_ALCOHOL_ADDICT) == 1) then begin
		giq_option(4, 496, 106, viola12, 50);
	end
	giq_option(4, 496, 107, violacombat, 50);
	giq_option(-3, 496, 299, violaend, 50);
	giq_option(-3, 496, 108, violacombat, 50);
end

procedure viola01
begin
	LAURAWARNING := 1;
	gsay_reply(496, 109);
	giq_option(7, 496, 110, viola13, 50);
	giq_option(4, 496, 111, viola14, 50);
	giq_option(4, 496, 112, viola15, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 113, violacombat, 50);
	end
	giq_option(-3, 496, 114, violaend, 50);
end

procedure viola02
begin
	gsay_message(496, 115, 50);
end

procedure viola03
begin
	gsay_message(496, 116, 50);
end

procedure viola04
begin
	gsay_reply(496, 117);
	giq_option(7, 496, 118, viola15, 50);
	giq_option(4, 496, 119, viola16, 50);
	giq_option(4, 496, 120, viola17, 50);
	if (global_var(IS_ALCOHOL_ADDICT) == 1) then begin
		giq_option(4, 496, 121, viola18, 50);
	end
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 122, viola19, 50);
	end
	giq_option(-3, 496, 299, violaend, 50);
end

procedure viola05
begin
	gsay_reply(496, 123);
	giq_option(7, 496, 124, viola05a, 50);
	giq_option(4, 496, 125, viola46, 50);
	giq_option(4, 496, 126, viola47, 50);
	giq_option(4, 496, 127, viola48, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 128, viola49, 50);
	end
end

procedure viola05a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call viola44;
	end
	else begin
		call viola45;
	end
end

procedure viola06
begin
	if (GENDER == 0) then begin
		gsay_reply(496, 129);
	end
	else begin
		gsay_reply(496, 130);
	end
	giq_option(7, 496, 131, viola06a, 50);
	giq_option(4, 496, 132, viola52, 50);
	giq_option(4, 496, 133, viola47, 50);
	giq_option(4, 496, 134, viola48, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 135, viola49, 50);
	end
end

procedure viola06a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call viola50;
	end
	else begin
		call viola51;
	end
end

procedure viola07
begin
	if (GENDER == 0) then begin
		gsay_reply(496, 136);
	end
	else begin
		gsay_reply(496, 137);
	end
	giq_option(7, 496, 138, viola07a, 50);
	giq_option(4, 496, 139, viola52, 50);
	giq_option(4, 496, 140, viola47, 50);
	giq_option(4, 496, 141, viola48, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 142, viola49, 50);
	end
end

procedure viola07a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call viola50;
	end
	else begin
		call viola51;
	end
end

procedure viola08
begin
	gsay_reply(496, 143);
	giq_option(7, 496, 144, viola08a, 50);
	giq_option(4, 496, 145, viola55, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 146, viola40, 50);
	end
	giq_option(-3, 496, 299, violaend, 50);
end

procedure viola08a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call viola53;
	end
	else begin
		call viola54;
	end
end

procedure viola09
begin
	gsay_message(496, 147, 50);
end

procedure viola10
begin
	gsay_message(496, 148, 50);
end

procedure viola11
begin
	gsay_message(496, 149, 50);
end

procedure viola12
begin
	gsay_message(496, 150, 50);
end

procedure viola13
begin
	gsay_reply(496, 151);
	giq_option(7, 496, 152, viola20, 50);
	giq_option(4, 496, 153, viola21, 50);
	giq_option(4, 496, 154, viola22, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 155, viola23, 50);
	end
end

procedure viola14
begin
	gsay_reply(496, 156);
	giq_option(7, 496, 157, viola16, 50);
	giq_option(4, 496, 158, viola21, 50);
	giq_option(4, 496, 159, viola22, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 160, viola23, 50);
	end
end

procedure viola15
begin
	gsay_message(496, 161, 50);
end

procedure viola16
begin
	gsay_message(496, 162, 50);
end

procedure viola17
begin
	gsay_message(496, 163, 50);
end

procedure viola18
begin
	gsay_message(496, 164, 50);
end

procedure viola19
begin
	gsay_message(496, 165, 50);
end

procedure viola20
begin
	gsay_reply(496, 166);
	giq_option(7, 496, 167, viola24, 50);
	giq_option(4, 496, 168, viola24, 50);
	giq_option(4, 496, 169, viola25, 50);
	giq_option(4, 496, 170, viola26, 50);
	giq_option(4, 496, 171, viola27, 50);
end

procedure viola21
begin
	gsay_message(496, 172, 50);
end

procedure viola22
begin
	gsay_reply(496, 173);
	giq_option(7, 496, 174, viola41, 50);
	giq_option(4, 496, 175, viola21, 50);
	giq_option(4, 496, 176, viola42, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 177, viola43, 50);
	end
end

procedure viola23
begin
	gsay_message(496, 178, 50);
end

procedure viola24
begin
	gsay_reply(496, 179);
	giq_option(7, 496, 180, viola28, 50);
	giq_option(7, 496, 181, viola29, 50);
	giq_option(4, 496, 182, viola30, 50);
	giq_option(4, 496, 183, viola31, 50);
end

procedure viola25
begin
	gsay_reply(496, 184);
	giq_option(7, 496, 185, viola31, 50);
	giq_option(4, 496, 186, viola32, 50);
	giq_option(4, 496, 187, viola33, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 188, viola34, 50);
	end
end

procedure viola26
begin
	gsay_reply(496, 189);
	giq_option(7, 496, 190, viola35, 50);
	giq_option(4, 496, 191, viola32, 50);
	giq_option(4, 496, 192, viola36, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 193, viola37, 50);
	end
end

procedure viola27
begin
	gsay_reply(496, 194);
	giq_option(7, 496, 195, viola29, 50);
	giq_option(4, 496, 196, viola38, 50);
	giq_option(4, 496, 197, viola39, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 198, viola40, 50);
	end
end

procedure viola28
begin
	gsay_message(496, 199, 50);
end

procedure viola29
begin
	gsay_message(496, 200, 50);
end

procedure viola30
begin
	gsay_message(496, 201, 50);
end

procedure viola31
begin
	gsay_message(496, 202, 50);
end

procedure viola32
begin
	gsay_message(496, 203, 50);
end

procedure viola33
begin
	gsay_message(496, 204, 50);
end

procedure viola34
begin
	gsay_message(496, 205, 50);
end

procedure viola35
begin
	gsay_message(496, 206, 50);
end

procedure viola36
begin
	gsay_message(496, 207, 50);
end

procedure viola37
begin
	gsay_message(496, 208, 50);
end

procedure viola38
begin
	gsay_message(496, 209, 50);
end

procedure viola39
begin
	gsay_message(496, 210, 50);
end

procedure viola40
begin
	gsay_message(496, 211, 50);
end

procedure viola41
begin
	gsay_reply(496, 212);
	giq_option(7, 496, 213, viola28, 50);
	giq_option(7, 496, 214, viola29, 50);
	giq_option(4, 496, 215, viola32, 50);
	giq_option(4, 496, 216, viola30, 50);
	giq_option(4, 496, 217, viola31, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 218, viola43, 50);
	end
end

procedure viola42
begin
	gsay_reply(496, 219);
	giq_option(7, 496, 220, viola28, 50);
	giq_option(7, 496, 221, viola29, 50);
	giq_option(4, 496, 222, viola32, 50);
	giq_option(4, 496, 223, viola30, 50);
	giq_option(4, 496, 224, viola31, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 225, viola43, 50);
	end
end

procedure viola43
begin
	gsay_message(496, 226, 50);
end

procedure viola44
begin
	gsay_reply(496, 227);
	giq_option(7, 496, 228, viola56, 50);
	giq_option(4, 496, 229, viola16, 50);
	giq_option(4, 496, 230, viola57, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 231, viola49, 50);
	end
end

procedure viola45
begin
	gsay_message(496, 232, 50);
end

procedure viola46
begin
	gsay_message(496, 233, 50);
end

procedure viola47
begin
	gsay_reply(496, 234);
	giq_option(7, 496, 235, viola58, 50);
	giq_option(7, 496, 236, viola59, 50);
	giq_option(4, 496, 237, viola60, 50);
	giq_option(4, 496, 238, viola61, 50);
	giq_option(4, 496, 239, viola62, 50);
end

procedure viola48
begin
	gsay_reply(496, 240);
	giq_option(7, 496, 241, viola63, 50);
	giq_option(7, 496, 242, viola64, 50);
	giq_option(4, 496, 243, viola65, 50);
	giq_option(4, 496, 244, viola66, 50);
	giq_option(4, 496, 245, viola67, 50);
end

procedure viola49
begin
	gsay_message(496, 246, 50);
end

procedure viola50
begin
	gsay_reply(496, 247);
	giq_option(7, 496, 248, viola68, 50);
	giq_option(7, 496, 249, viola69, 50);
	giq_option(7, 496, 250, viola70, 50);
	giq_option(7, 496, 251, viola49, 50);
	giq_option(7, 496, 252, viola16, 50);
end

procedure viola51
begin
	gsay_message(496, 253, 50);
end

procedure viola52
begin
	gsay_reply(496, 254);
	giq_option(7, 496, 255, viola71, 50);
	giq_option(7, 496, 256, viola72, 50);
	giq_option(4, 496, 257, viola73, 50);
	giq_option(4, 496, 258, viola74, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 496, 259, viola75, 50);
	end
end

procedure viola53
begin
	gsay_reply(496, 260);
	giq_option(7, 496, 261, viola53a, 50);
	giq_option(4, 496, 262, viola52, 50);
	giq_option(4, 496, 263, viola47, 50);
	giq_option(4, 496, 264, viola48, 50);
	giq_option(4, 496, 265, viola49, 50);
end

procedure viola53a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call viola50;
	end
	else begin
		call viola51;
	end
end

procedure viola54
begin
	gsay_message(496, 266, 50);
end

procedure viola55
begin
	gsay_message(496, 267, 50);
end

procedure viola56
begin
	gsay_message(496, 268, 50);
end

procedure viola57
begin
	gsay_message(496, 269, 50);
end

procedure viola58
begin
	gsay_message(496, 270, 50);
end

procedure viola59
begin
	gsay_message(496, 271, 50);
end

procedure viola60
begin
	gsay_message(496, 272, 50);
end

procedure viola61
begin
	if (GENDER == 0) then begin
		gsay_message(496, 273, 50);
	end
	else begin
		gsay_message(496, 274, 50);
	end
end

procedure viola62
begin
	if (GENDER == 0) then begin
		gsay_message(496, 275, 50);
	end
	else begin
		gsay_message(496, 276, 50);
	end
end

procedure viola63
begin
	gsay_message(496, 277, 50);
end

procedure viola64
begin
	gsay_reply(496, 278);
	giq_option(7, 496, 279, viola63, 50);
	giq_option(7, 496, 280, viola76, 50);
	giq_option(4, 496, 281, viola65, 50);
	giq_option(4, 496, 282, viola66, 50);
	giq_option(4, 496, 283, viola67, 50);
end

procedure viola65
begin
	gsay_message(496, 284, 50);
end

procedure viola66
begin
	gsay_message(496, 285, 50);
end

procedure viola67
begin
	if (GENDER == 0) then begin
		gsay_message(496, 286, 50);
	end
	else begin
		gsay_message(496, 287, 50);
	end
end

procedure viola68
begin
	gsay_message(496, 288, 50);
end

procedure viola69
begin
	gsay_message(496, 289, 50);
end

procedure viola70
begin
	if (get_critter_stat(dude_obj, 34) == 0) then begin
		gsay_message(496, 302, 50);
	end
	else begin
		gsay_message(496, 303, 50);
	end
end

procedure viola71
begin
	if (get_critter_stat(dude_obj, 34) == 0) then begin
		gsay_message(496, 304, 50);
	end
	else begin
		gsay_message(496, 305, 50);
	end
end

procedure viola72
begin
	if (get_critter_stat(dude_obj, 34) == 0) then begin
		gsay_message(496, 306, 50);
	end
	else begin
		gsay_message(496, 307, 50);
	end
end

procedure viola73
begin
	if (get_critter_stat(dude_obj, 34) == 0) then begin
		gsay_message(496, 300, 50);
	end
	else begin
		gsay_message(496, 301, 50);
	end
end

procedure viola74
begin
	gsay_message(496, 294, 50);
end

procedure viola75
begin
	if (GENDER == 0) then begin
		gsay_message(496, 295, 50);
	end
	else begin
		gsay_message(496, 296, 50);
	end
end

procedure viola76
begin
	gsay_message(496, 297, 50);
end

procedure violadone
begin
	gsay_option(496, 298, violaend, 50);
end

procedure violaend
begin
end

procedure violacombat
begin
	set_global_var(CATHEDRAL_ENEMY, 1);
	hostile := 1;
end

procedure weapon_check
begin
	call items_held;
	if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
		armed := 1;
	end
	else begin
		armed := 0;
	end
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(634, random(100, 105));
end



