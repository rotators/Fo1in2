#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11

procedure uthern0;
procedure uthern1;
procedure uthern2;
procedure uthern3;
procedure uthern4;
procedure uthern5;
procedure uthern6;
procedure uthern7;
procedure uthern8;
procedure uthern9;
procedure uthern10;
procedure uthern11;
procedure uthern12;
procedure uthern13;
procedure uthern14;
procedure uthernend;
procedure combat;
procedure to_orfeo;

import variable Uthern_ptr;
import variable Orfeo_ptr;

variable HOSTILE;
variable initial :=  0;
variable weaponPtr;



procedure start
begin
	fixt_critter_healing
	
	if (not(initial)) then begin
		Uthern_ptr := self_obj;
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 34);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 49);
		anim(self_obj, 1000, 2);
		if (local_var(1) == 0) then begin
			set_local_var(1, 1);
			weaponPtr := create_object_sid(PID_GATLING_LASER, 0, 0, -1);
			add_obj_to_inven(self_obj, weaponPtr);
			wield_obj_critter(self_obj, weaponPtr);
			add_obj_to_inven(self_obj, create_object_sid(PID_MICRO_FUSION_CELL, 0, 0, -1));
		end
		initial :=  1;
	end
	else begin
		if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
			call critter_p_proc;
		end
		else begin
			if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
				call destroy_p_proc;
			end
			else begin
				if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
					call look_at_p_proc;
				end
				else begin
					if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
						call pickup_p_proc;
					end
					else begin
						if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
							call talk_p_proc;
						end
					end
				end
			end
		end
	end
end

procedure critter_p_proc
begin
	if (global_var(ENEMY_FOLL_INVADERS)) then begin
		HOSTILE := 1;
	end
	if (HOSTILE and obj_can_see_obj(self_obj, dude_obj)) then begin
		HOSTILE := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
	else begin
		if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance_objs(self_obj, dude_obj) < 6)) then begin
			if (local_var(0) == 0) then begin
				dialogue_system_enter;
			end
		end
	end
end

procedure destroy_p_proc
begin

	Uthern_ptr := 0;
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
		set_global_var(ENEMY_FOLL_INVADERS, 1);
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_UTHERN, 100));
end

procedure pickup_p_proc
begin
	HOSTILE := 1;
end

procedure talk_p_proc
begin
	script_overrides;
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (local_var(0)) then begin
		call uthern14;
	end
	else begin
		set_local_var(0, 1);
		start_gdialog(273, self_obj, 4, -1, -1);
		gsay_start;
		call uthern0;
		gsay_end;
		end_dialogue;
	end
end

procedure uthern0
begin
	gsay_reply(273, 101);
	giq_option(-3, 273, 102, uthern1, 50);
	giq_option(4, 273, 103, uthern2, 50);
	giq_option(4, 273, 104, combat, 50);
	giq_option(5, 273, 105, uthern7, 50);
	giq_option(8, 273, 106, uthern13, 50);
end

procedure uthern1
begin
	gsay_message(273, 107, 50);
	call combat;
end

procedure uthern2
begin
	gsay_reply(273, 108);
	giq_option(4, 273, 109, uthern3, 50);
	giq_option(4, 273, 110, combat, 50);
	giq_option(6, 273, 111, uthern4, 50);
end

procedure uthern3
begin
	gsay_message(273, 112, 50);
	call to_orfeo;
end

procedure uthern4
begin
	gsay_reply(273, 113);
	giq_option(6, 273, 114, uthern5, 50);
	giq_option(6, 273, 115, uthern6, 50);
	giq_option(6, 273, 116, combat, 50);
end

procedure uthern5
begin
	gsay_message(273, 117, 50);
	call combat;
end

procedure uthern6
begin
	gsay_message(273, 118, 50);
	call combat;
end

procedure uthern7
begin
	gsay_reply(273, 119);
	giq_option(5, 273, 120, uthern8, 50);
	giq_option(5, 273, 121, uthern12, 50);
	giq_option(5, 273, 122, combat, 50);
end

procedure uthern8
begin
	gsay_reply(273, 123);
	giq_option(5, 273, 124, uthern9, 50);
	giq_option(5, 273, 125, uthern10, 50);
	giq_option(5, 273, 126, uthern11, 50);
	giq_option(5, 273, 127, combat, 50);
end

procedure uthern9
begin
	gsay_message(273, 128, 50);
	call to_orfeo;
end

procedure uthern10
begin
	gsay_message(273, 129, 50);
	call combat;
end

procedure uthern11
begin
	gsay_message(273, 130, 50);
	call to_orfeo;
end

procedure uthern12
begin
	gsay_reply(273, 131);
	giq_option(5, 273, 132, combat, 50);
	giq_option(5, 273, 133, combat, 50);
	giq_option(5, 273, 134, combat, 50);
end

procedure uthern13
begin
	gsay_message(273, 135, 50);
	call to_orfeo;
end

procedure uthern14
begin
	float_msg(self_obj, message_str(SCRIPT_UTHERN, 136), 0);
	call to_orfeo;
end

procedure uthernend
begin
end

procedure combat
begin
	HOSTILE := 1;
end

procedure to_orfeo
begin
	load_map("lafollwr.map", 11);
end
