#include "..\headers\define.h"

procedure start;
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure timeforwhat;
procedure critter_p_proc;

procedure prisonr00;
procedure prisonr01;
procedure prisonr02;
procedure prisonr03;
procedure prisonr04;
procedure prisonr05;
procedure prisonr06;
procedure prisonr07;
procedure prisonr08;
procedure prisonrend;
procedure prisonrcbt;

procedure leave_map;

variable Hostile;
variable init_teams := 0;
variable my_hex;



procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, 17) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, 17); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 2) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, 2); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 1) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, 1); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 74) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, 74); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 113) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, 113); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if (not(init_teams)) then begin
		init_teams := 1;
		if (local_var(6) > 9) then begin
			if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
		end
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 30);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 40);
	end
	if (local_var(6) < 10) then begin
		if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
			call timeforwhat;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
					script_overrides;
					display_msg(message_str(89, 100));
				end
				else begin
					if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
						Hostile := 1;
					end
					else begin
						if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
							call critter_p_proc;
						end
						else begin
							if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
								call destroy_p_proc;
							end
						end
					end
				end
			end
		end
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);
//
//BEGIN WEAPON DROP MOD CODE
//--original code and mod by:--
// Josan12 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=18843) and 
// MIB88 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=4464)
//
	if global_var(WEAPONDROP_MOD_STATUS) and not(global_var(FIXT_BUGFIXES_ONLY)) and (critter_inven_obj(self_obj, 1) or critter_inven_obj(self_obj, 2)) then begin// only run if Weapon Drop is enabled, AND Fixes Only is disabled, AND actually holding something
		variable item1 := 0;  variable item2 := 0;  variable armor := 0;  variable item1PID := 0;  variable item2PID := 0;  variable armorPID := 0;  variable drophex := 0;  if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop BEGINS");  end
		if (critter_inven_obj(self_obj, 1) > 0) then begin  item1 := critter_inven_obj(self_obj, 1);  end    if (critter_inven_obj(self_obj, 2) > 0) then begin  item2 := critter_inven_obj(self_obj, 2);  end    if (critter_inven_obj(self_obj, 0) > 0) then begin  armor := critter_inven_obj(self_obj, 0);  end    if item1 then begin  item1PID := obj_pid(item1);  end    if item2 then begin  item2PID := obj_pid(item2);  end    if armor then begin  armorPID := obj_pid(armor);  end    drophex := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(global_var(WEAPONDROP_MOD_MINIMUM), global_var(WEAPONDROP_MOD_MAXIMUM)));
		if (item1PID != 19) and (item1PID != 21) and (item1PID != 79) and (item1PID != 205) and (item1PID != 234) and (item1PID != 235) and (item1PID != 244) and (item2PID != 19) and (item2PID != 21) and (item2PID != 79) and (item2PID != 205) and (item2PID != 234) and (item2PID != 235) and (item2PID != 244) then begin//Don't drop if:  Rock (19), Brass Knuckles (21), Flare (79), Lit Flare (205), Spiked Knuckles (234), Power Fist (235), or Gold Nugget (244)
			if (item1 > 0) then begin if (obj_item_subtype(item1) == 3) then begin
			rm_obj_from_inven(self_obj, item1);  move_to(item1, drophex, elevation(self_obj));  end  end
			if (item2 > 0) then begin if (obj_item_subtype(item2) == 3) then begin
			rm_obj_from_inven(self_obj, item2);  move_to(item2, drophex, elevation(self_obj));  end  end    if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop ENDS");  end
		end
	end
//END WEAPON DROP MOD CODE
//
	if source_obj == dude_obj then begin
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
	rm_timer_event(self_obj);
end

procedure timeforwhat
begin
	if (fixed_param == 1) then begin
		Hostile := 1;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if global_var(EXP_REWARD_PRISONER) then begin
		set_local_var(4, 1);
		float_msg(self_obj, message_str(89, 126), 0);
	end
	else begin
		start_gdialog(89, self_obj, 4, -1, -1);
		gsay_start;
		if (map_var(6) != 0) then begin
			call prisonr06;
		end
		else begin
			if (local_var(7)) then begin
				call prisonr05;
			end
			else begin
				set_local_var(7, 1);
				call prisonr00;
			end
		end
		gsay_end;
		end_dialogue;
	end
end

procedure prisonrcbt
begin
	add_timer_event(self_obj, game_ticks(2), 1);
end

procedure prisonrend
begin
end

procedure prisonr00
begin
	gsay_reply(89, 101);
	giq_option(4, 89, 102, prisonrend, 50);
	giq_option(-3, 89, 103, prisonr01, 50);
	giq_option(4, 89, 104, prisonr02, 50);
	giq_option(6, 89, 105, prisonr03, 50);
end

procedure prisonr01
begin
	gsay_message(89, 106, 50);
end

procedure prisonr02
begin
	gsay_message(89, 107, 50);
end

procedure prisonr03
begin
	gsay_reply(89, 108);
	giq_option(6, 89, 109, prisonr04, 50);
	giq_option(6, 89, 110, prisonr02, 50);
end

procedure prisonr04
begin
	gsay_reply(89, 111);
	giq_option(6, 89, 112, prisonr02, 50);
	giq_option(6, 89, 113, prisonrend, 50);
end

procedure prisonr05
begin
	gsay_message(89, 114, 50);
end

procedure prisonr06
begin
	set_local_var(5, 15863);
	set_local_var(6, 0);
	set_local_var(4, 1);
	if not(global_var(EXP_REWARD_PRISONER)) then begin// <-- this check by Sduibek, Fallout Fixt
		give_exp_points(500);
		set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		set_global_var(EXP_REWARD_PRISONER, 1);
		display_msg(message_str(89, 124) + 500 + message_str(89, 125));
	end
	gsay_reply(89, 115);
	giq_option(4, 89, 116, prisonrend, 50);
	giq_option(5, 89, 117, prisonr07, 50);
	giq_option(-3, 89, 118, prisonrend, 50);
end

procedure prisonr07
begin
	gsay_reply(89, 119);
	giq_option(5, 89, 120, prisonr08, 50);
	giq_option(5, 89, 121, prisonrend, 50);
end

procedure prisonr08
begin
	gsay_reply(89, 122);
	giq_option(5, 89, 123, prisonrend, 50);
end

procedure leave_map
begin
	my_hex := tile_num(self_obj);
	if (my_hex == local_var(5)) then begin
		set_local_var(6, local_var(6) + 1);
		if (local_var(6) > 7) then begin
			set_local_var(6, 10);
			if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
			move_to(self_obj, 0, 0);
		end
		else begin
			if (local_var(6) == 1) then begin
				set_local_var(5, 15863);
			end
			else begin
				if (local_var(6) == 2) then begin
					set_local_var(5, 13065);
				end
				else begin
					if (local_var(6) == 3) then begin
						set_local_var(5, 13081);
					end
					else begin
						if (local_var(6) == 4) then begin
							set_local_var(5, 14496);
						end
						else begin
							if (local_var(6) == 5) then begin
								set_local_var(5, 11900);
							end
							else begin
								if (local_var(6) == 6) then begin
									set_local_var(5, 8700);
								end
								else begin
									if (local_var(6) == 7) then begin
										set_local_var(5, 5900);
									end
								end
							end
						end
					end
				end
			end
			animate_move_obj_to_tile(self_obj, local_var(5), 0);
		end
	end
	animate_move_obj_to_tile(self_obj, local_var(5), 0);
end

procedure critter_p_proc
begin
	if (tile_distance_objs(self_obj, dude_obj) < 7) and not(local_var(8)) then begin
		dialogue_system_enter;
		set_local_var(8, 1);
	end
	else begin
		if tile_distance_objs(self_obj, dude_obj) < 7 and not(local_var(9)) and obj_can_see_obj(self_obj, dude_obj) then begin
			dialogue_system_enter;
			set_local_var(9, 1);
		end
		else begin
			if (map_var(6) != 0) then begin
				if (local_var(4) == 1) then begin
					call leave_map;
				end
			end
			else begin
				if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
					Hostile := 0;
					attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
				end
			end
		end
	end
end

