#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure caravan00;
procedure caravan01;
procedure caravan02;
procedure caravan03;
procedure caravan03a;
procedure caravan03b;
procedure caravan03c;
procedure caravan03d;
procedure caravan04;

variable hostile;
variable Only_Once := 1;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;



procedure start
begin
	fixt_critter_healing
	
	if Only_Once then begin
		Only_Once := 0;
		if global_var(DEBUG_MODE_MESSAGES_ON) then begin
			//display_msg("INIT CCVAN.SSL at map number " + cur_map_index + " and elevation " + elevation(self_obj));
		end
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 36);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 50);
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
				end
			end
		end
	end
end

procedure combat
begin
	hostile := 1;
end

procedure critter_p_proc
begin
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		hostile := 1;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	get_reaction
	start_gdialog(767, self_obj, 4, -1, -1);
	gsay_start;
	call caravan00;
	gsay_end;
	end_dialogue;
end

procedure destroy_p_proc
begin

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 7) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_CCVAN, 100));
end

procedure caravan00
begin
	gsay_reply(767, 103);
	giq_option(0, 767, 104, caravan01, 50);
	giq_option(0, 767, 105, caravan02, 50);
end

procedure caravan01
begin
	gsay_reply(767, 106);
	giq_option(0, 767, 104, caravan03, 50);
	giq_option(0, 767, 105, caravan02, 50);
end

procedure caravan02
begin
	gsay_message(767, 107, 50);
end

procedure caravan03
begin
	gsay_reply(767, 109);
	giq_option(0, 767, 112, caravan03a, 50);
	giq_option(0, 767, 113, caravan03b, 50);
	giq_option(0, 767, 114, caravan03c, 50);
	giq_option(0, 767, 115, caravan03d, 50);
	giq_option(0, 767, 116, caravan04, 50);
end

procedure caravan03a
begin
	variable LVar0 := 0;
	gsay_message(767, 117, 50);
	set_global_var(CRIMSON_CARAVANS_STATUS, 1);
	LVar0 := random(1, 4);
	item_caps_adjust(dude_obj, 600);
	if (LVar0 < 3) then begin
		LVar0 := random(1, 4);
		if (LVar0 == 1) then begin
			load_map(MAP_DESCRVN1, 1);
			set_global_var(VAULT13_WATER_DAYS_LEFT, global_var(VAULT13_WATER_DAYS_LEFT) - 1);
		end
		else begin
			load_map(MAP_DESCRVN1, 2);
			set_global_var(VAULT13_WATER_DAYS_LEFT, global_var(VAULT13_WATER_DAYS_LEFT) - 1);
		end
	end
	else begin
		load_map(MAP_DESCRVN1, 3);
		set_global_var(VAULT13_WATER_DAYS_LEFT, global_var(VAULT13_WATER_DAYS_LEFT) - 1);
	end
end

procedure caravan03b
begin
	variable LVar0 := 0;
	gsay_message(767, 117, 50);
	set_global_var(CRIMSON_CARAVANS_STATUS, 1);
	LVar0 := random(1, 4);
	item_caps_adjust(dude_obj, 600);
	if (LVar0 < 3) then begin
		LVar0 := random(1, 4);
		if (LVar0 == 1) then begin
			load_map(MAP_MNTCRVN1, 1);
			set_global_var(VAULT13_WATER_DAYS_LEFT, global_var(VAULT13_WATER_DAYS_LEFT) - 1);
		end
		else begin
			load_map(MAP_MNTCRVN1, 2);
			set_global_var(VAULT13_WATER_DAYS_LEFT, global_var(VAULT13_WATER_DAYS_LEFT) - 1);
		end
	end
	else begin
		load_map(MAP_MNTCRVN1, 3);
		set_global_var(VAULT13_WATER_DAYS_LEFT, global_var(VAULT13_WATER_DAYS_LEFT) - 1);
	end
end

procedure caravan03c
begin
	variable LVar0 := 0;
	gsay_message(767, 117, 50);
	set_global_var(CRIMSON_CARAVANS_STATUS, 1);
	LVar0 := random(1, 4);
	item_caps_adjust(dude_obj, 600);
	if (LVar0 < 3) then begin
		LVar0 := random(1, 4);
		if (LVar0 == 1) then begin
			load_map(MAP_MNTCRVN2, 1);
			set_global_var(VAULT13_WATER_DAYS_LEFT, global_var(VAULT13_WATER_DAYS_LEFT) - 1);
		end
		else begin
			load_map(MAP_MNTCRVN2, 2);
			set_global_var(VAULT13_WATER_DAYS_LEFT, global_var(VAULT13_WATER_DAYS_LEFT) - 1);
		end
	end
	else begin
		load_map(MAP_MNTCRVN2, 3);
		set_global_var(VAULT13_WATER_DAYS_LEFT, global_var(VAULT13_WATER_DAYS_LEFT) - 1);
	end
end

procedure caravan03d
begin
	variable LVar0 := 0;
	gsay_message(767, 117, 50);
	set_global_var(CRIMSON_CARAVANS_STATUS, 1);
	LVar0 := random(1, 4);
	item_caps_adjust(dude_obj, 600);
	if (LVar0 < 3) then begin
		LVar0 := random(1, 4);
		if (LVar0 == 1) then begin
			load_map(MAP_DESCRVN2, 1);
			set_global_var(VAULT13_WATER_DAYS_LEFT, global_var(VAULT13_WATER_DAYS_LEFT) - 1);
		end
		else begin
			load_map(MAP_DESCRVN2, 2);
			set_global_var(VAULT13_WATER_DAYS_LEFT, global_var(VAULT13_WATER_DAYS_LEFT) - 1);
		end
	end
	else begin
		load_map(MAP_DESCRVN2, 3);
		set_global_var(VAULT13_WATER_DAYS_LEFT, global_var(VAULT13_WATER_DAYS_LEFT) - 1);
	end
end

procedure caravan04
begin
	gsay_message(767, 108, 50);
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, STAT_ch)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1)) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1)) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	LevelToReact
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	LevelToReact
end

procedure Goodbyes
begin
	exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
