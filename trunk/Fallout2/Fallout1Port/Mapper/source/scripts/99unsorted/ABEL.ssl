/*

	?? - Abel, super mutant

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\mapnecro.h"

#define NAME                    SCRIPT_ABEL
//#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;

procedure Abel00;
procedure Abel01;
procedure Abel02;
procedure Abel03;
procedure Abel04;
procedure Abel05;
procedure Abel06;
procedure Abel07;
procedure Abel08;
procedure AbelCombat;

import variable field_change

variable tmp_hostile;
variable initial := 0;
variable toggle;

procedure start begin
	if not(initial) then begin
		initial :=  1;
		set_self_team(TEAM_NECROPOLIS_MUTANT );
		set_self_ai( AI_SUPER_MUTANT_AGGRESSIVE );
		self_rotate( 3 );
	end
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if (self_can_see_dude or (((dude_tile / 200) > 134) and ((dude_tile % 200) > 108) and (tile_distance_objs(self_obj, dude_obj) <= 10)) and (local_var(4) == 0)) then begin
		dialogue_system_enter;
	end
	if ((self_item_count( PID_TOGGLE_SWITCH ) == 0) and (local_var(5) == 0)) then begin
		set_local_var(5, 1);
		toggle := create_object( PID_TOGGLE_SWITCH, 0, 0 );
		add_obj_to_inven(self_obj, toggle);
	end
end

procedure pickup_p_proc
begin
	tmp_hostile := 1;
end

procedure talk_p_proc
begin
	dude_look_at_self;
	start_gdialog(359, self_obj, 4, -1, -1);
	gsay_start;
	if dude_wearing_coc_robe then begin
		call Abel06;
	end
	else begin
		if (local_var(4) == 1) then begin
			call Abel08;
		end
		else begin
			call Abel00;
		end
	end
	set_local_var(4, 1);
	gsay_end;
	end_dialogue;
end

procedure destroy_p_proc begin
	inc_evil_critter
end

procedure Abel00
begin
	gsay_reply(359, 102);
	giq_option( -3, SCRIPT_ABEL, 103, Abel01, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ABEL, 104, Abel03, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_ABEL, 105, Abel04, NEUTRAL_REACTION );
end

procedure Abel01
begin
	gsay_reply(359, 106);
	giq_option( -3, SCRIPT_ABEL, 107, Abel02, NEUTRAL_REACTION );
end

procedure Abel02
begin
	gsay_reply(359, 108);
	giq_option( -3, SCRIPT_ABEL, 109, Abel03, NEUTRAL_REACTION );
end

procedure Abel03
begin
	gsay_message(359, 110, 50);
	call AbelCombat;
end

procedure Abel04
begin
	if ((map_var(23) == 1) and ((dude_tile / 200) > 134) and ((dude_tile % 200) > 108)) then begin
		gsay_reply(359, 111);
		giq_option( 5, SCRIPT_ABEL, 112, Abel05, NEUTRAL_REACTION );
	end
	else begin
		gsay_message(359, 111, 50);
		call AbelCombat;
	end
end

procedure Abel05
begin
	gsay_message(359, 113, 50);
	call AbelCombat;
end

procedure Abel06
begin
	if ((map_var(23) == 1) and ((dude_tile / 200) > 134) and ((dude_tile % 200) > 108)) then begin
		gsay_reply(359, 114);
		giq_option( -3, SCRIPT_ABEL, 115, Abel01, NEUTRAL_REACTION );
		giq_option( 4, SCRIPT_ABEL, 116, Abel07, NEUTRAL_REACTION );
	end
	else begin
		gsay_message(359, 114, 50);
	end
end

procedure Abel07
begin
	gsay_message(359, 117, 50);
end

procedure Abel08
begin
	gsay_message(359, 118, 50);
	call AbelCombat;
end

procedure AbelCombat
begin
	if ((map_var(23) == 1) and ((dude_tile / 200) > 134) and ((dude_tile % 200) > 108)) then begin
		set_global_var( GVAR_WATER_CHIP_5, 0 );
		set_map_var(23, 0);
	end
	tmp_hostile := 1;
end
