#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure talk_p_proc;//    script_action == 11

procedure Amber0;
procedure Amber1;
procedure Amber2;
procedure Amber3;
procedure Amber3a;
procedure Amber4;
procedure Amber5;
procedure Amber6;
procedure Amber7;
procedure Amber8;
procedure Amber9;
procedure Amber10;
procedure Amber11;
procedure Amber12;
procedure Amber13;
procedure Amber14;
procedure Amber15;
procedure Amber16;
procedure Amber17;
procedure Amber18;
procedure AmberEnd;

variable initial :=  0;



procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, 17) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, 17); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 2) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, 2); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 1) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, 1); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 74) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, 74); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 113) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, 113); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if not(initial) then begin
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 46);
		initial :=  1;
	end
	else begin
		if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
			call critter_p_proc;
		end
		else begin
			if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
				call destroy_p_proc;
			end
			else begin
				if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
					call look_at_p_proc;
				end
				else begin
					if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
						call talk_p_proc;
					end
				end
			end
		end
	end
end

procedure critter_p_proc
begin
	if (global_var(QUEST_BONEYARD_3_BOMBFOLL) == 2) then begin
		kill_critter(self_obj, 59);
	end
end

procedure destroy_p_proc
begin
//
//BEGIN WEAPON DROP MOD CODE
//--original code and mod by:--
// Josan12 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=18843) and 
// MIB88 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=4464)
//
	if global_var(WEAPONDROP_MOD_STATUS) and not(global_var(FIXT_BUGFIXES_ONLY)) and (critter_inven_obj(self_obj, 1) or critter_inven_obj(self_obj, 2)) then begin// only run if Weapon Drop is enabled, AND Fixes Only is disabled, AND actually holding something
		variable item1 := 0;  variable item2 := 0;  variable armor := 0;  variable item1PID := 0;  variable item2PID := 0;  variable armorPID := 0;  variable drophex := 0;  if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop BEGINS");  end
		if (critter_inven_obj(self_obj, 1) > 0) then begin  item1 := critter_inven_obj(self_obj, 1);  end    if (critter_inven_obj(self_obj, 2) > 0) then begin  item2 := critter_inven_obj(self_obj, 2);  end    if (critter_inven_obj(self_obj, 0) > 0) then begin  armor := critter_inven_obj(self_obj, 0);  end    if item1 then begin  item1PID := obj_pid(item1);  end    if item2 then begin  item2PID := obj_pid(item2);  end    if armor then begin  armorPID := obj_pid(armor);  end    drophex := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(global_var(WEAPONDROP_MOD_MINIMUM), global_var(WEAPONDROP_MOD_MAXIMUM)));
		if (item1PID != 19) and (item1PID != 21) and (item1PID != 79) and (item1PID != 205) and (item1PID != 234) and (item1PID != 235) and (item1PID != 244) and (item2PID != 19) and (item2PID != 21) and (item2PID != 79) and (item2PID != 205) and (item2PID != 234) and (item2PID != 235) and (item2PID != 244) then begin//Don't drop if:  Rock (19), Brass Knuckles (21), Flare (79), Lit Flare (205), Spiked Knuckles (234), Power Fist (235), or Gold Nugget (244)
			if (item1 > 0) then begin if (obj_item_subtype(item1) == 3) then begin
			rm_obj_from_inven(self_obj, item1);  move_to(item1, drophex, elevation(self_obj));  end  end
			if (item2 > 0) then begin if (obj_item_subtype(item2) == 3) then begin
			rm_obj_from_inven(self_obj, item2);  move_to(item2, drophex, elevation(self_obj));  end  end    if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop ENDS");  end
		end
	end
//END WEAPON DROP MOD CODE
//
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(272, 100));
end

procedure talk_p_proc
begin
	script_overrides;
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (global_var(SLIDE_TRAIN_FOLLOWERS) == 1) then begin
		call Amber18;
	end
	else begin
		if ((game_time_hour >= 700) and (game_time_hour < 1800)) then begin
			call Amber0;
		end
		else begin
			set_local_var(0, local_var(0) + 1);
			start_gdialog(272, self_obj, 4, -1, -1);
			gsay_start;
			call Amber1;
			gsay_end;
			end_dialogue;
		end
	end
end

procedure Amber0
begin
	float_msg(self_obj, message_str(272, 101), 0);
end

procedure Amber1
begin
	gsay_reply(272, 102);
	giq_option(4, 272, 103, Amber2, 50);
	giq_option(4, 272, 104, Amber3, 50);
	giq_option(7, 272, 105, Amber17, 50);
end

procedure Amber2
begin
	gsay_message(272, 106, 50);
end

procedure Amber3
begin
	gsay_reply(272, 107);
	if (not(local_var(1))) then begin
		giq_option(4, 272, 108, Amber4, 50);
	end
	giq_option(4, 272, 109, AmberEnd, 50);
	if (local_var(2) == 0) then begin
		giq_option(4, 272, 110, Amber3a, 50);
	end
	giq_option(5, 272, 111, Amber16, 50);
end

procedure Amber3a
begin
	if (local_var(0) < 6) then begin
		call Amber9;
	end
	else begin
		if (local_var(0) == 6) then begin
			call Amber10;
		end
		else begin
			call Amber15;
		end
	end
end

procedure Amber4
begin
	gsay_reply(272, 112);
	giq_option(4, 272, 113, Amber5, 50);
	giq_option(4, 272, 114, Amber8, 50);
	giq_option(5, 272, 115, AmberEnd, 50);
end

procedure Amber5
begin
	gsay_reply(272, 116);
	giq_option(4, 272, 117, Amber6, 50);
	giq_option(4, 272, 118, Amber7, 50);
end

procedure Amber6
begin
	variable LVar0 := 0;
	set_local_var(1, local_var(1) + 1);
	gsay_message(272, 119, 50);
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	game_time_advance(game_ticks(LVar0));
	gfade_in(1);
	LVar0 := 3600 * 9;
	critter_mod_skill(dude_obj, 17, 15);
	gsay_message(272, 120, 50);
	display_msg(message_str(766, 116) + 15 + message_str(766, 134));
end

procedure Amber7
begin
	gsay_message(272, 121, 50);
end

procedure Amber8
begin
	variable LVar0 := 0;
	set_local_var(1, local_var(1) + 1);
	gsay_message(272, 122, 50);
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	gfade_in(1);
	LVar0 := 3600 * 7;
	game_time_advance(game_ticks(LVar0));
	critter_mod_skill(dude_obj, 17, 15);
	gsay_message(272, 123, 50);
	display_msg(message_str(766, 116) + 15 + message_str(766, 134));
end

procedure Amber9
begin
	gsay_message(272, 124, 50);
end

procedure Amber10
begin
	set_local_var(2, local_var(2) + 1);
	gsay_reply(272, 125);
	giq_option(4, 272, 126, Amber11, 50);
	giq_option(4, 272, 127, Amber12, 50);
	giq_option(4, 272, 128, Amber13, 50);
	giq_option(4, 272, 129, Amber14, 50);
end

procedure Amber11
begin
	variable LVar0 := 0;
	gsay_message(272, 130, 50);
	LVar0 := 3600 * 10;
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	gfade_in(1);
	game_time_advance(game_ticks(LVar0));
	critter_mod_skill(dude_obj, 8, 12);
	critter_mod_skill(dude_obj, 9, 10);
	critter_mod_skill(dude_obj, 10, 8);
	critter_mod_skill(dude_obj, 11, 8);
	gsay_message(272, 131, 50);
	display_msg(message_str(766, 116) + 12 + message_str(766, 125));
	display_msg(message_str(766, 116) + 10 + message_str(766, 126));
	display_msg(message_str(766, 116) + 8 + message_str(766, 127));
	display_msg(message_str(766, 116) + 8 + message_str(766, 128));
end

procedure Amber12
begin
	variable LVar0 := 0;
	gsay_message(272, 132, 50);
	LVar0 := 3600 * 10;
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	gfade_in(1);
	game_time_advance(game_ticks(LVar0));
	critter_mod_skill(dude_obj, 3, 10);
	critter_mod_skill(dude_obj, 0, 8);
	critter_mod_skill(dude_obj, 5, 8);
	critter_mod_skill(dude_obj, 4, 6);
	gsay_message(272, 133, 50);
	display_msg(message_str(766, 116) + 10 + message_str(766, 120));
	display_msg(message_str(766, 116) + 8 + message_str(766, 117));
	display_msg(message_str(766, 116) + 8 + message_str(766, 122));
	display_msg(message_str(766, 116) + 6 + message_str(766, 121));
end

procedure Amber13
begin
	variable LVar0 := 0;
	gsay_message(272, 134, 50);
	LVar0 := 3600 * 10;
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	gfade_in(1);
	game_time_advance(game_ticks(LVar0));
	critter_mod_skill(dude_obj, 17, 10);
	critter_mod_skill(dude_obj, 8, 8);
	critter_mod_skill(dude_obj, 5, 8);
	critter_mod_skill(dude_obj, 11, 6);
	gsay_message(272, 135, 50);
	display_msg(message_str(766, 116) + 10 + message_str(766, 134));
	display_msg(message_str(766, 116) + 8 + message_str(766, 125));
	display_msg(message_str(766, 116) + 8 + message_str(766, 122));
	display_msg(message_str(766, 116) + 6 + message_str(766, 128));
end

procedure Amber14
begin
	variable LVar0 := 0;
	gsay_message(272, 136, 50);
	LVar0 := 3600 * 10;
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	gfade_in(1);
	game_time_advance(game_ticks(LVar0));
	critter_mod_skill(dude_obj, 15, 10);
	critter_mod_skill(dude_obj, 14, 8);
	critter_mod_skill(dude_obj, 16, 8);
	critter_mod_skill(dude_obj, 4, 6);
	gsay_message(272, 137, 50);
	display_msg(message_str(766, 116) + 10 + message_str(766, 132));
	display_msg(message_str(766, 116) + 8 + message_str(766, 131));
	display_msg(message_str(766, 116) + 8 + message_str(766, 133));
	display_msg(message_str(766, 116) + 6 + message_str(766, 121));
end

procedure Amber15
begin
	gsay_message(272, 138, 50);
end

procedure Amber16
begin
	gsay_message(272, 139, 50);
end

procedure Amber17
begin
	gsay_reply(272, 140);
	if (local_var(2) == 0) then begin
		giq_option(7, 272, 141, Amber10, 50);
	end
	giq_option(7, 272, 142, AmberEnd, 50);
	if (not(local_var(1))) then begin
		giq_option(6, 272, 143, Amber4, 50);
	end
end

procedure Amber18
begin
	float_msg(self_obj, message_str(272, 144), 0);
end

procedure AmberEnd
begin
end

