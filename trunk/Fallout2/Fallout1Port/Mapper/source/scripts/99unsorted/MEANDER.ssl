/*

	??

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_MEANDER
//#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure talk_p_proc;//    script_action == 11
procedure combat_p_proc;//    script_action == 13
procedure destroy_p_proc;
procedure timeforwhat;
procedure combat_rads_inc;

procedure genericend;
procedure genericcbt;
procedure generic00;
procedure generic01;
procedure generic02;
procedure generic03;

variable prev_tile;
variable new_tile;
variable loopcount;
variable noevent;
variable rndx;
variable rndy;
variable dist;
variable curtime;
variable prevtime;
variable tmp_hostile;
variable SET;
variable MUTANTS;
variable MAXLEASH := 9;
variable DAY;
variable initial :=  0;

variable rndRads;


procedure start
begin


	if not(initial) then begin
		initial :=  1;
		if (local_var(0) == 0) then begin
			set_local_var(0, 1);
		end
		set_self_team( TEAM_32 );
	end
	curtime := DAY;
	if (prevtime != curtime) then begin
		noevent := curtime;
		prevtime := curtime;
		animate_move_obj_to_tile(self_obj, local_var(0), 0);
	end
	if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
		call timeforwhat;
	end
	else begin
		if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
			call talk_p_proc;
		end
		else begin
			if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
				tmp_hostile := 1;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
						tmp_hostile := 0;
						attack(dude_obj);
					end
					else begin
						loopcount := loopcount + 1;
						if (loopcount > 40) then begin
							loopcount := 0;
							if (noevent == 0) then begin
								noevent := 1;
								rndx := 5 + random(1, 10);
								add_timer_event(self_obj, game_ticks(rndx), 0);
							end
						end
					end
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
				end
			end
		end
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);
   inc_good_critter
	rm_timer_event(self_obj);
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	start_gdialog(84, self_obj, 4, -1, -1);
	gsay_start;
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		call generic01;
	end
	else begin
		call generic00;
	end
	gsay_end;
	end_dialogue;
end

procedure timeforwhat
begin
	noevent := curtime;
	rndy := random(1, 6);
	if (rndy > 1) then begin
		dist := 2;
	end
	if (rndy > 5) then begin
		dist := 3;
	end
	rndRads := random(0, 5);
	prev_tile := self_tile;
	new_tile := tile_num_in_direction(prev_tile, rndRads, dist);
	if (tile_distance(local_var(0), new_tile) < MAXLEASH) then begin
		animate_move_obj_to_tile(self_obj, new_tile, 0);
	end
end

procedure genericend
begin
end

procedure genericcbt
begin
end

procedure generic00
begin
	rndx := random(1, 7);
	if (rndx == 1) then begin
		gsay_message(84, 100, 50);
	end
	if (rndx == 2) then begin
		gsay_message(84, 101, 50);
	end
	if (rndx == 3) then begin
		gsay_message(84, 102, 50);
	end
	if (rndx == 4) then begin
		gsay_message(84, 103, 50);
	end
	if (rndx == 5) then begin
		gsay_message(84, 104, 50);
	end
	if (rndx == 6) then begin
		call generic02;
	end
	if (rndx == 7) then begin
		call generic03;
	end
end

procedure generic01
begin
	rndx := random(1, 4);
	if (rndx == 1) then begin
		gsay_message(84, 105, 50);
	end
	if (rndx == 2) then begin
		gsay_message(84, 106, 50);
	end
	if (rndx == 3) then begin
		gsay_message(84, 107, 50);
	end
	if (rndx == 4) then begin
		gsay_message(84, 108, 50);
	end
end

procedure generic02
begin
	if (SET == 0) then begin
		rndx := random(1, 2);
		if (rndx == 1) then begin
			gsay_message(84, 109, 50);
		end
		if (rndx == 2) then begin
			gsay_message(84, 110, 50);
		end
	end
	else begin
		gsay_message(84, 111, 50);
	end
end

procedure generic03
begin
	if (MUTANTS == 0) then begin
		rndx := random(1, 2);
		if (rndx == 1) then begin
			gsay_message(84, 112, 50);
		end
		if (rndx == 2) then begin
			gsay_message(84, 113, 50);
		end
	end
	else begin
		gsay_message(84, 114, 50);
	end
end

procedure combat_p_proc
begin
	if (fixed_param == 2) then begin
		if (target_obj == dude_obj) then begin
			if global_var( GVAR_DEBUG_MODE_MESSAGES_ON ) then begin
				debug_msg("Combat Rads From Irradiated Critters BEGINS");
			end
			if not(global_var( GVAR_FIXT_BUGFIXES_ONLY )) then begin
				variable cont := 0;// checked to see if continue to run the code after each stage
				variable CritterTYPE := 0;// 1 = Ghoul, 2 = Floater, 3 = Centaur, 4 = RadRat, 5 = GlowingOne
				if global_var( GVAR_HIT_GIVES_RADS_GHOULS ) > 0 then begin// HIT_GIVES_RADS_GHOULS
					if (obj_pid(self_obj) == (16777216 + 14)) or (obj_pid(self_obj) == (16777216 + 104)) or (obj_pid(self_obj) == (16777216 + 105)) or (obj_pid(self_obj) == (16777216 + 106)) or (obj_pid(self_obj) == (16777216 + 109)) or (obj_pid(self_obj) == (16777216 + 110)) or (obj_pid(self_obj) == (16777216 + 131)) or (obj_pid(self_obj) == (16777216 + 157)) or (obj_pid(self_obj) == (16777216 + 184)) then begin// 14 = Zombie Guard, 104 = Set, 105 = Garret, 106 = Zombie, 109 = Ghoul Guard, 110 = Undergrounder, 131 = Talius, 157 = Harold, 184 = Zombie
						CritterTYPE := 1;
						cont := 1;
					end
				end
				if not(continue) then begin
					if global_var( GVAR_HIT_GIVES_MORE_RADS_GLOW ) > 0 then begin// HIT_GIVES_MORE_RADS_GLOW
						if (obj_pid(self_obj) == (16777216 + 16)) or (obj_pid(self_obj) == (16777216 + 182)) or (obj_pid(self_obj) == (16777216 + 183)) then begin// 16 = Glowing One, 182 = Glower, 183 = Mad Glowing One
							CritterTYPE := 5;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var( GVAR_HIT_GIVES_MORE_RADS_RATS ) > 0 then begin// HIT_GIVES_MORE_RADS_RATS
						if (obj_pid(self_obj) == (16777216 + 160)) or (obj_pid(self_obj) == (16777216 + 161)) then begin//  160, 161 = Rad Rat
							CritterTYPE := 4;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var( GVAR_HIT_GIVES_RADS_FLOATERS ) > 0 then begin// HIT_GIVES_RADS_FLOATERS
						if (obj_pid(self_obj) == (16777216 + 45)) or (obj_pid(self_obj) == (16777216 + 167)) then begin//  45 = Floater, 167 = Bloody Floater
							CritterTYPE := 2;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var( GVAR_HIT_GIVES_RADS_CENTAURS ) > 0 then begin// HIT_GIVES_RADS_CENTAURS
						if (obj_pid(self_obj) == (16777216 + 43)) or (obj_pid(self_obj) == (16777216 + 168)) then begin//  43 = Lesser Centaur, 168 = Greater Centaur
							CritterTYPE := 3;
							cont := 1;
						end
					end
				end
				if continue then begin
					variable BonusRads := 0;
					if (CritterTYPE == 5) or (CritterTYPE == 4) then begin
						BonusRads := 1;
					end
					if (random(0, 3) + combat_difficulty + BonusRads) >= 3 then begin// CHANCE TO RUN = Easy: 25%, 50% if glowing/radrat - Normal: 50%, 75% if glowing - Brutal: 75%, 100% if glowing/radrat
						variable giveRads := 1;
						if self_right_hand then begin
							if (obj_pid(self_right_hand) != PID_BRASS_KNUCKLES) and (obj_pid(self_right_hand) != PID_SPIKED_KNUCKLES) and (obj_pid(self_right_hand) != PID_POWER_FIST) then begin// Brass Knuckles, Spiked Knuckles, Power Fist
								giveRads := 0;
							end
						end
						if self_left_hand then begin
							if (obj_pid(self_left_hand) != PID_BRASS_KNUCKLES) and (obj_pid(self_left_hand) != PID_SPIKED_KNUCKLES) and (obj_pid(self_left_hand) != PID_POWER_FIST) then begin// Brass Knuckles, Spiked Knuckles, Power Fist
								giveRads := 0;
							end
						end
						if giveRads == 1 then begin
							variable LuckRoll := 0;
							variable EnduranceRoll := 0;
							LuckRoll := do_check(dude_obj, STAT_lu, 0);
							EnduranceRoll := do_check(dude_obj, STAT_en, 0);
							rndRads := 0;
							if not(is_success(LuckRoll)) and not(is_success(EnduranceRoll)) then begin
								rndRads := random((2 + combat_difficulty + BonusRads), (3 + combat_difficulty + BonusRads));// EASY: 2-3 / 3-4 if glowing/radrat, NORMAL: 3-4 / 4-5 if glowing/radrat, BRUTAL: 4-5 / 5-6 if glowing/radrat
							end
							else begin
								if not(is_success(LuckRoll)) or not(is_success(EnduranceRoll)) then begin
									rndRads := random((1 + combat_difficulty + BonusRads), (2 + combat_difficulty + BonusRads));// EASY: 1-2 / 2-3 if glowing/radrat, NORMAL: 2-3 / 3-4 if glowing/radrat, BRUTAL: 3-4 / 4-5 if glowing/radrat
								end
								else begin
									if (random(0, 5) + BonusRads) >= 5 then begin// Chance to run if both stat checks pass: 16.67%, 33% if glowing/radrat
										rndRads := random((0 + combat_difficulty + BonusRads), (1 + combat_difficulty + BonusRads));// EASY: 0-1 / 1-2 if glowing/radrat, NORMAL: 1-2 / 2-3 if glowing/radrat, BRUTAL: 2-3 / 3-4 if glowing/radrat
									end
								end
							end
							if rndRads > 0 then begin
								call combat_rads_inc;
							end
						end
					end
				end
			end
			else begin// if (BUG_FIXES_ONLY == 1)
				if (obj_pid(self_obj) == PID_GLOWING_ONE) or (obj_pid(self_obj) == PID_RADIATED_RAT) or (obj_pid(self_obj) == PID_TOUGH_RADIATED_RAT) or (obj_pid(self_obj) == PID_GLOWER) or (obj_pid(self_obj) == PID_MAD_GLOWING_ONE) then begin
					variable rndx := 0;
					rndx := (random(1, 4) - 3);// was 1d6 - 5, is now 1d4 - 3
					if (rndx < 0) then begin
						rndx := 0;
					end
					if (rndx > 0) then begin
						radiation_inc(dude_obj, rndx);
						display_msg(message_str(SCRIPT_GENGHOUL, 1004));
					end
				end
			end
			if global_var( GVAR_DEBUG_MODE_MESSAGES_ON ) then begin
				debug_msg("Combat Rads From Irradiated Critters ENDS");
			end
		end
	end
end

procedure combat_rads_inc
begin
	radiation_inc(dude_obj, rndRads);
	if ((rndRads == 1) or (rndRads == 2)) then begin
		display_msg(message_str(SCRIPT_GENGHOUL, 1004));
	end
	else begin
		if ((rndRads > 2) and (rndRads <= 5)) then begin
			display_msg(message_str(SCRIPT_GENGHOUL, 1005));
		end
		else begin
			if ((rndRads > 5) and (rndRads < 10)) then begin
				display_msg(message_str(SCRIPT_GENGHOUL, 1006));
			end
		end
	end
end
