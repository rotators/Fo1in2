#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure look_at_p_proc;//    script_action == 21
procedure description_p_proc;//    script_action == 3
procedure talk_p_proc;//    script_action == 11
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure JonZimmerman00;
procedure JonZimmerman01;
procedure JonZimmerman02;
procedure JonZimmerman03;
procedure JonZimmerman03a;
procedure JonZimmerman04;
procedure JonZimmerman05;
procedure JonZimmerman06;
procedure JonZimmerman07;
procedure JonZimmerman08;
procedure JonZimmerman08a;
procedure JonZimmerman09;
procedure JonZimmerman10;
procedure JonZimmerman11;
procedure JonZimmerman12;
procedure JonZimmerman13;
procedure JonZimmerman14;
procedure JonZimmerman15;
procedure JonZimmerman16;
procedure JonZimmerman17;
procedure JonZimmerman18;
procedure JonZimmerman19;
procedure JonZimmerman20;
procedure JonZimmerman21;
procedure JonZimmerman22;
procedure JonZimmerman23;
procedure JonZimmerman24;
procedure JonZimmerman25;
procedure JonZimmerman26;
procedure JonZimmerman27;
procedure JonZimmermanEnd;
import variable JonPtr;
variable Only_Once := 1;
variable DisplayMessage;
procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;
variable exit_line;

procedure Start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, 17) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, 17); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 2) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, 2); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 1) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, 1); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 74) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, 74); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 113) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, 113); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if Only_Once then begin
		Only_Once := 0;
		/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 41) == 0) then begin
			item_caps_adjust(self_obj, random(50, 150));
		end
		if (global_var(BLADES_STATUS) == 9103) then begin
			if (global_var(ZIMMERMAN_STATUS) != 9003) then begin
				/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 89);
			end
			else begin
				/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 0);
			end
		end
		else begin
			/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 49);
		end
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 6);
		JonPtr := self_obj;
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
			call critter_p_proc;
		end
		else begin
			if (script_action == 14) then begin
				call damage_p_proc;
			end
			else begin
				if (script_action == 3) then begin//DETAILED ON-CLICK DESCRIPTION (Binoculars icon) - description_p_proc
					call description_p_proc;
				end
				else begin
					if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
						call pickup_p_proc;
					end
					else begin
						if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
							call destroy_p_proc;
						end
						else begin
							if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
								call talk_p_proc;
							end
						end
					end
				end
			end
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	if (local_var(4) == 1) then begin
		display_msg(message_str(288, 176));
	end
	else begin
		display_msg(message_str(288, 175));
	end
	script_overrides;
end

procedure description_p_proc
begin
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (global_var(ENEMY_ADYTUM) == 1) then begin
		float_msg(self_obj, message_str(669, random(100, 105)), 2);
	end
	else begin
		if ((local_var(4) == 1) and (get_critter_stat(dude_obj, 4) < 4)) then begin
			float_msg(self_obj, message_str(288, 139), 0);
		end
		else begin
			if (global_var(ZIMMERMAN_STATUS) == 2) then begin
				float_msg(self_obj, message_str(288, random(183, 187)), 0);
			end
			else begin
				call get_reaction;
				start_gdialog(288, self_obj, -1, -1, -1);
				gsay_start;
				DisplayMessage := 100;
				if (local_var(4) == 0) then begin
					call JonZimmerman00;
				end
				else begin
					if (global_var(ZIMMERMAN_STATUS) == 0) then begin
						call JonZimmerman01;
					end
					else begin
						if global_var(RECEIVED_HOLODISK_RAZOR) then begin
							if (global_var(ZIMMERMAN_STATUS) == 9001) then begin
								call JonZimmerman24;
							end
							else begin
								call JonZimmerman27;
							end
						end
						else begin
							if (global_var(ZIMMERMAN_STATUS) == 1) then begin
								call JonZimmerman17;
							end
							else begin
								if (global_var(ZIMMERMAN_STATUS) == 9001) then begin
									call JonZimmerman19;
								end
								else begin
									if (global_var(ZIMMERMAN_STATUS) == 9002) then begin
										call JonZimmerman21;
									end
								end
							end
						end
					end
				end
				gsay_end;
				end_dialogue;
			end
		end
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (global_var(DUDE_ENEMY_REGULATORS) != 1) then begin
			set_global_var(ENEMY_ADYTUM, 1);
/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 49);
		end
	end
end

procedure destroy_p_proc
begin
//
//BEGIN WEAPON DROP MOD CODE
//--original code and mod by:--
// Josan12 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=18843) and 
// MIB88 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=4464)
//
	if global_var(WEAPONDROP_MOD_STATUS) and not(global_var(FIXT_BUGFIXES_ONLY)) and (critter_inven_obj(self_obj, 1) or critter_inven_obj(self_obj, 2)) then begin// only run if Weapon Drop is enabled, AND Fixes Only is disabled, AND actually holding something
		variable item1 := 0;  variable item2 := 0;  variable armor := 0;  variable item1PID := 0;  variable item2PID := 0;  variable armorPID := 0;  variable drophex := 0;  if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop BEGINS");  end
		if (critter_inven_obj(self_obj, 1) > 0) then begin  item1 := critter_inven_obj(self_obj, 1);  end    if (critter_inven_obj(self_obj, 2) > 0) then begin  item2 := critter_inven_obj(self_obj, 2);  end    if (critter_inven_obj(self_obj, 0) > 0) then begin  armor := critter_inven_obj(self_obj, 0);  end    if item1 then begin  item1PID := obj_pid(item1);  end    if item2 then begin  item2PID := obj_pid(item2);  end    if armor then begin  armorPID := obj_pid(armor);  end    drophex := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(global_var(WEAPONDROP_MOD_MINIMUM), global_var(WEAPONDROP_MOD_MAXIMUM)));
		if (item1PID != 19) and (item1PID != 21) and (item1PID != 79) and (item1PID != 205) and (item1PID != 234) and (item1PID != 235) and (item1PID != 244) and (item2PID != 19) and (item2PID != 21) and (item2PID != 79) and (item2PID != 205) and (item2PID != 234) and (item2PID != 235) and (item2PID != 244) then begin//Don't drop if:  Rock (19), Brass Knuckles (21), Flare (79), Lit Flare (205), Spiked Knuckles (234), Power Fist (235), or Gold Nugget (244)
			if (item1 > 0) then begin if (obj_item_subtype(item1) == 3) then begin
			rm_obj_from_inven(self_obj, item1);  move_to(item1, drophex, elevation(self_obj));  end  end
			if (item2 > 0) then begin if (obj_item_subtype(item2) == 3) then begin
			rm_obj_from_inven(self_obj, item2);  move_to(item2, drophex, elevation(self_obj));  end  end    if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop ENDS");  end
		end
	end
//END WEAPON DROP MOD CODE
//
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (global_var(DUDE_ENEMY_REGULATORS) != 1) then begin
			set_global_var(ENEMY_ADYTUM, 1);
/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 49);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
end

procedure critter_p_proc
begin
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if ((global_var(BLADES_STATUS) == 9103) and (global_var(ZIMMERMAN_STATUS) != 9003)) then begin
/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 89);
			float_msg(self_obj, message_str(288, 174), 2);
			attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
		end
		else begin
			if (global_var(ENEMY_ADYTUM) == 1) then begin
				attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
			end
		end
	end
	if (global_var(DUDE_ENEMY_REGULATORS) == 1) then begin
/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 89);
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
end

procedure pickup_p_proc
begin
	set_global_var(ENEMY_ADYTUM, 1);
end

procedure JonZimmerman00
begin
	DisplayMessage := 182;
	gsay_reply(288, 100);
	giq_option(4, 288, 181, JonZimmerman01, 50);
	giq_option(-3, 288, 104, JonZimmerman13, 50);
	set_local_var(4, 1);
end

procedure JonZimmerman01
begin
	gsay_reply(288, DisplayMessage);
	giq_option(4, 288, 101, JonZimmerman02, 50);
	giq_option(4, 288, 102, JonZimmerman14, 50);
	if global_var(RECEIVED_HOLODISK_RAZOR) then begin
		giq_option(4, 288, 178, JonZimmerman26, 50);
	end
	giq_option(4, 288, 103, JonZimmermanEnd, 50);
	giq_option(-3, 288, 104, JonZimmerman13, 50);
end

procedure JonZimmerman02
begin
	gsay_reply(288, 105);
	gsay_option(288, 106, JonZimmerman03, 50);
	gsay_option(288, 107, JonZimmerman03, 50);
	gsay_option(288, 108, JonZimmerman04, 50);
end

procedure JonZimmerman03
begin
	gsay_reply(288, 109);
	gsay_option(288, 110, JonZimmerman04, 50);
	gsay_option(288, 111, JonZimmerman13, 50);
	gsay_option(288, 112, JonZimmerman03a, 50);
end

procedure JonZimmerman03a
begin
	set_global_var(ZIMMERMAN_STATUS, 1);
end

procedure JonZimmerman04
begin
	gsay_reply(288, 113);
	gsay_option(288, 114, JonZimmerman07, 50);
	gsay_option(288, 115, JonZimmerman05, 50);
	gsay_option(288, 116, JonZimmerman05, 50);
end

procedure JonZimmerman05
begin
	gsay_reply(288, 117);
	gsay_option(288, 118, JonZimmerman06, 50);
	gsay_option(288, 119, JonZimmerman07, 50);
end

procedure JonZimmerman06
begin
	gsay_reply(288, 120);
	gsay_option(288, 121, JonZimmerman07, 50);
	gsay_option(288, 122, JonZimmerman11, 50);
end

procedure JonZimmerman07
begin
	gsay_reply(288, 123);
	gsay_option(288, 124, JonZimmerman09, 50);
	gsay_option(288, 125, JonZimmerman08, 50);
	gsay_option(288, 126, JonZimmerman10, 50);
end

procedure JonZimmerman08
begin
	gsay_reply(288, 127);
	gsay_option(288, 128, JonZimmerman09, 50);
	gsay_option(288, 129, JonZimmerman10, 50);
	gsay_option(288, 130, JonZimmerman08a, 50);
end

procedure JonZimmerman08a
begin
	call BottomReact;
	set_global_var(ZIMMERMAN_STATUS, 1);
end

procedure JonZimmerman09
begin
	gsay_reply(288, 131);
	gsay_option(288, 132, JonZimmerman10, 50);
	gsay_option(288, 133, JonZimmerman08a, 50);
	set_global_var(ZIMMERMAN_STATUS, 1);
end

procedure JonZimmerman10
begin
	gsay_message(288, 134, 50);
	set_global_var(ZIMMERMAN_STATUS, 9001);
end

procedure JonZimmerman11
begin
	gsay_reply(288, 135);
	gsay_option(288, 136, JonZimmerman16, 50);
	gsay_option(288, 137, JonZimmerman08a, 50);
end

procedure JonZimmerman12
begin
	gsay_message(288, 138, 50);
	call BottomReact;
	set_global_var(DUDE_ENEMY_REGULATORS, 1);//  ENEMY_REGULATOR == 1
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	move_to(dude_obj, 10500, 0);
	gfade_in(1);
end

procedure JonZimmerman13
begin
	gsay_message(288, 139, 50);
end

procedure JonZimmerman14
begin
	gsay_reply(288, 140);
	gsay_option(288, 141, JonZimmerman15, 50);
	gsay_option(288, 142, JonZimmerman12, 50);
end

procedure JonZimmerman15
begin
	gsay_reply(288, 143);
	gsay_option(288, 144, JonZimmerman03, 50);
	gsay_option(288, 145, JonZimmerman03, 50);
	gsay_option(288, 146, JonZimmerman04, 50);
	gsay_option(288, 147, JonZimmerman12, 50);
end

procedure JonZimmerman16
begin
	gsay_reply(288, 148);
	gsay_option(288, 149, JonZimmerman07, 50);
	gsay_option(288, 150, JonZimmerman07, 50);
	gsay_option(288, 151, JonZimmerman08a, 50);
end

procedure JonZimmerman17
begin
	gsay_reply(288, 152);
	gsay_option(288, 153, JonZimmerman18, 50);
	gsay_option(288, 154, JonZimmerman14, 50);
	gsay_option(288, 155, JonZimmermanEnd, 50);
end

procedure JonZimmerman18
begin
	gsay_message(288, 156, 50);
	set_global_var(ZIMMERMAN_STATUS, 9001);
end

procedure JonZimmerman19
begin
	gsay_reply(288, 157);
	gsay_option(288, 158, JonZimmerman12, 50);
	gsay_option(288, 159, JonZimmerman20, 50);
	gsay_option(288, 160, JonZimmerman13, 50);
end

procedure JonZimmerman20
begin
	gsay_message(288, 161, 50);
end

procedure JonZimmerman21
begin
	gsay_reply(288, 162);
	gsay_option(288, 163, JonZimmerman22, 50);
	gsay_option(288, 164, JonZimmerman23, 50);
	gsay_option(288, 165, JonZimmerman22, 50);
	set_global_var(ZIMMERMAN_STATUS, 2);
end

procedure JonZimmerman22
begin
	gsay_message(288, 166, 50);
	call TopReact;
	item_caps_adjust(dude_obj, 2000);
end

procedure JonZimmerman23
begin
	gsay_message(288, 167, 50);
	call TopReact;
	item_caps_adjust(dude_obj, 2500);
end

procedure JonZimmerman24
begin
	gsay_reply(288, 168);
	gsay_option(288, 169, JonZimmerman25, 50);
	gsay_option(288, 170, JonZimmerman26, 50);
end

procedure JonZimmerman25
begin
	gsay_reply(288, 171);
	gsay_option(288, 172, JonZimmerman26, 50);
end

procedure JonZimmerman26
begin
	set_global_var(REMOVE_JON_DISK_SON, 1);
	gsay_message(288, 173, 50);
	set_global_var(ZIMMERMAN_STATUS, 9003);
	if (global_var(BLADES_STATUS) == 9102) then begin
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 0);
		set_global_var(BLADES_STATUS, 9103);
	end
	else begin
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 0);
	end
end

procedure JonZimmerman27
begin
	gsay_reply(288, 177);
	gsay_option(288, 178, JonZimmerman26, 50);
	gsay_option(288, 179, JonZimmermanEnd, 50);
end

procedure JonZimmermanEnd
begin
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(634, random(100, 105));
end



