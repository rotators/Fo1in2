#include "..\headers\define.h"

procedure start;
procedure destroy_p_proc;//    script_action == 18
procedure Critter_Action;//    script_action == 12
procedure combat_p_proc;//    script_action == 13
//procedure timed_event_p_proc;//    script_action == 22
procedure mutant00;
procedure combat;
procedure canseeme;
variable HOSTILE;
variable initial :=  0;
variable new_tile;
variable weaponPtr;
variable WeaponID := 0;// for Fallout Fixt, random weapon gens
variable AmmoID := 0;// for Fallout Fixt, random weapon gens (ammo)

procedure start
begin
	
	
	if not(initial) then begin
		if (local_var(0) == 0) then begin
			set_local_var(0, tile_num(self_obj));
		end
		set_self_team(TEAM_NECROPOLIS_MUTANT );
		set_self_ai( AI_SUPER_MUTANT_NECRO );
		initial :=  1;
		if (map_first_run) then begin
			variable LVar5 := 0;
			LVar5 := create_object( PID_RADIO, 0, 0 );//radio
			add_mult_objs_to_inven(self_obj, LVar5, 1);
			LVar5 := random(0, 3);//Give each mutant zero, one, or two stimpaks
			if (LVar5 == 1) or (LVar5 == 2) then begin
				LVar5 := create_object( PID_STIMPAK, 0, 0 );//stimpak
				add_mult_objs_to_inven(self_obj, LVar5, 1);
			end
			else begin
				if (LVar5 == 3) then begin
					LVar5 := create_object( PID_STIMPAK, 0, 0 );//stimpak
					add_mult_objs_to_inven(self_obj, LVar5, 2);
				end
			end
			WeaponID := (random(1, 20));
	//		debug_msg("WeaponID for Invader:  " + WeaponID);
			if (WeaponID == 1) or (WeaponID == 2) or (WeaponID == 3) or (WeaponID == 4) or (WeaponID == 18) then begin
				AmmoID := create_object( PID_5MM_JHP, 0, 0 );//5mm JHP
				add_mult_objs_to_inven(self_obj, AmmoID, random(1, 3));
				AmmoID := create_object( PID_5MM_AP, 0, 0 );//5mm AP
				add_mult_objs_to_inven(self_obj, AmmoID, random(1, 3));
				weaponPtr := create_object( PID_MINIGUN, 0, 0 );//Minigun
	//			debug_msg("weaponPtr:  MINIGUN    ");
			end
			else begin
				if (WeaponID == 5) or (WeaponID == 6) or (WeaponID == 7) or (WeaponID == 8) then begin
					AmmoID := create_object( PID_STIMPAK, 0, 0 );//stimpak, since he's melee
					add_mult_objs_to_inven(self_obj, AmmoID, 1);
					weaponPtr := create_object( PID_SPIKED_KNUCKLES, 0, 0 );//Spiked Knuckles
	//				debug_msg("weaponPtr:  MELEE, spiked    ");
				end
				else begin
					if (WeaponID == 9) or (WeaponID == 10) or (WeaponID == 11) or (WeaponID == 19) then begin
						AmmoID := create_object( PID_MICRO_FUSION_CELL, 0, 0 );//MFC ammo
						add_mult_objs_to_inven(self_obj, AmmoID, random(1, 2));
						weaponPtr := create_object( PID_LASER_RIFLE, 0, 0 );//Laser Rifle
	//					debug_msg("weaponPtr:  LASER    ");
					end
					else begin
						if (WeaponID == 12) or (WeaponID == 13) or (WeaponID == 14) then begin
							AmmoID := create_object( PID_FLAMETHROWER_FUEL, 0, 0 );//Fuel
							add_mult_objs_to_inven(self_obj, AmmoID, random(1, 3));
							weaponPtr := create_object( PID_FLAMER, 0, 0 );//Flamethrower
	//						debug_msg("weaponPtr:  FLAME    ");
						end
						else begin
							if (WeaponID == 15) or (WeaponID == 16) then begin
								AmmoID := create_object( PID_MICRO_FUSION_CELL, 0, 0 );//MFC ammo
								add_mult_objs_to_inven(self_obj, AmmoID, random(1, 2));
								weaponPtr := create_object( PID_PLASMA_RIFLE, 0, 0 );//Plasma Rife
	//							debug_msg("weaponPtr:  PLASMA    ");
							end
							else begin
								if (WeaponID == 17) then begin
									AmmoID := create_object( PID_MICRO_FUSION_CELL, 0, 0 );//MFC ammo
									add_mult_objs_to_inven(self_obj, AmmoID, random(2, 4));
									weaponPtr := create_object( PID_GATLING_LASER, 0, 0 );//Gatling Laser
	//								debug_msg("weaponPtr:  GATLING    ");
								end
								else begin
									AmmoID := create_object( PID_EXPLOSIVE_ROCKET, 0, 0 );//Rocket HE
									add_mult_objs_to_inven(self_obj, AmmoID, random(1, 6));
									AmmoID := create_object( PID_ROCKET_AP, 0, 0 );//Rocket AP
									add_mult_objs_to_inven(self_obj, AmmoID, random(1, 5));
									weaponPtr := create_object( PID_ROCKET_LAUNCHER, 0, 0 );//Rocket Launcher
	//								debug_msg("weaponPtr:  ROCKET    ");
								end
							end
						end
					end
				end
			end
			add_obj_to_inven(self_obj, weaponPtr);
			wield_obj_critter(self_obj, weaponPtr);
		end
	end
	if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
		call mutant00;
	end
	else begin
		if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
			script_overrides;
			display_msg(message_str(SCRIPT_INVADER, 100));
		end
		else begin
			if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
				HOSTILE := 1;
			end
			else begin
				if (script_action == 12) then begin//<-- Critter_Action - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call Critter_Action;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
/*						else begin
						if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
							call timed_event_p_proc;
						end
					end*/
				end
			end
		end
	end
end

procedure mutant00
begin
	if not(local_var(2)) then begin
		variable LVar0;
		LVar0 := random(101, 107);
		float_msg(self_obj, message_str(SCRIPT_INVADER, LVar0), 2);
//		debug_msg("Invader Mutant warcry:  [" + message_str(912, LVar0) + "]  (Sduibek)");
		call combat;
	end
end

procedure combat
begin
	HOSTILE := 1;
end

procedure Critter_Action
begin
	if (critter_state(self_obj) != 1) and (critter_state(self_obj) != 2) and not(combat_is_initialized) then begin
		if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
			HOSTILE := 0;
			attack(dude_obj);
		end
		else begin
			if (random(0, 4000) == 7) then begin
				if (anim_busy(self_obj) == 0) and not(anim_busy(self_obj)) then begin
					animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(2, 4)), 0);
				end
			end
			call canseeme;
		end
	end
end

/*procedure timed_event_p_proc
begin

end*/

procedure destroy_p_proc
begin
	set_local_var(2, 1);
	rm_timer_event(self_obj);

	if source_obj == dude_obj then begin
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
	end
	rm_timer_event(self_obj);
end

procedure combat_p_proc
begin
//	call canseeme;
end

procedure canseeme
begin
	if (critter_state(self_obj) != 1) and (critter_state(self_obj) != 2) then begin
		if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance_objs(self_obj, dude_obj) <= 12)) or (tile_distance_objs(self_obj, dude_obj) <= 6) and obj_on_screen(self_obj) then begin
			call mutant00;
		end
	end
end


