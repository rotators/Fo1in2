#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure description_p_proc;//    script_action == 3
procedure map_enter_p_proc;//    script_action == 15

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

procedure hookerend;
procedure hooker00;
procedure hooker01;
procedure hooker02;
procedure hooker03;
procedure hooker04;
procedure hooker05;
procedure hooker06;
procedure hooker07;
procedure hooker08;
procedure hooker09;
procedure hookendPoor;
procedure hooker10;
procedure HookGROUP;
procedure hookdone;
procedure hookdoneGROUP;
procedure enddialog;
procedure enddialogGROUP;
procedure hookdoneStupid;

import variable Ian_ptr;
import variable Katja_ptr;
import variable Tycho_ptr;
import variable Dog_ptr;
import variable Tandi_ptr;

variable hostile;
variable Only_Once := 1;
variable exit_line;

variable FloatWhenDone := 1;
variable FloatMsg;
variable AskedHowMuch;
//
// local_var(4) == LineToDisplay
// local_var(5) == SexCost
// local_var(6) == SexOnceBefore
// local_var(7) == DumbAndPoor


procedure start
begin
	if not(global_var(ENABLE_HOOKERS)) or global_var(FIXT_BUGFIXES_ONLY) then begin
		variable KillBox_ptr := 0;
		KillBox_ptr := create_object_sid(16777527, 0, 0, -1);// <-- Dead Traveler (Ghoul)  Was:  create_object_sid(165, 0, 0, -1);// <-- Bob's Iguana Stand. MAX_SIZE = 1000, biggest of all containers. -1 = NO SCRIPT ATTACHED.
		move_to(KillBox_ptr, 0, 0);
		//inven_unwield;
		move_obj_inven_to_obj(self_obj, KillBox_ptr);
		destroy_object(KillBox_ptr);
		move_to(self_obj, 0, 0);
		destroy_object(self_obj);
	end
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, 17) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, 17); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 2) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, 2); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 1) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, 1); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 74) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, 74); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 113) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, 113); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if Only_Once then begin
		Only_Once := 0;
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 38);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 11);
		set_local_var(4, 200);
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
					else begin
						if (script_action == 3) then begin//DETAILED ON-CLICK DESCRIPTION (Binoculars icon) - description_p_proc
							call description_p_proc;
						end
						else begin
							if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
								call map_enter_p_proc;
							end
						end
					end
				end
			end
		end
	end
end

procedure combat
begin
	hostile := 1;
end

procedure critter_p_proc
begin
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		hostile := 1;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	call get_reaction;
	if (local_var(7) and (item_caps_total(dude_obj) < 150)) then begin
		script_overrides;
		float_msg(self_obj, message_str(708, 263), 2);
	end
	else begin
		start_gdialog(708, self_obj, 4, -1, -1);
		gsay_start;
		set_local_var(4, (random(200, 209) + (get_critter_stat(dude_obj, 34) * 10)));// add 10 if player is female
		call hooker00;
		gsay_end;
		end_dialogue;
		if FloatWhenDone then begin
			FloatMsg := (random(206, 209) + (get_critter_stat(dude_obj, 34) * 10));
			while(FloatMsg == local_var(4)) do
			begin
				FloatMsg := (random(206, 209) + (get_critter_stat(dude_obj, 34) * 10));
			end
			float_msg(self_obj, message_str(708, FloatMsg), 2);
		end
		if (get_critter_stat(dude_obj, 4) <= 3) then begin
			float_msg(self_obj, message_str(708, 262), 2);
		end
	end
//
// OLD CODE:
//		if ((local_var(4) < 200) or (local_var(4) > 208)) then begin
//			set_local_var(4, 200);
//		end
//		else begin
//			set_local_var(4, (local_var(4) + 1));
//		end
end

procedure hooker00
begin
	AskedHowMuch := 0;
	gsay_reply(708, local_var(4));
	giq_option(4, 708, 220, hooker02, 50);
	if ((global_var(IAN_HIRELING_STATUS) == 2) or (global_var(TYCHO_HIRELING_STATUS) == 2) or (global_var(KATJA_HIRELING_STATUS) == 2)) then begin
		giq_option(4, 708, 225, hooker03, 50);
	end
	giq_option(4, 708, 222, hooker01, 50);
	giq_option(4, 708, 223, hookerend, 50);
	giq_option(-3, 708, 232, hooker05, 51);
end

procedure hooker05// stupid characters
begin
	gsay_reply(708, 233);
	giq_option(-3, 708, 235, hooker07, 50);
	giq_option(-3, 708, 238, hooker06, 50);
end

procedure hooker06// stupid characters
begin
	gsay_reply(708, 239);
	giq_option(-3, 708, 240, enddialog, 50);
end

procedure hooker07// stupid characters
begin
	gsay_reply(708, 405);
	giq_option(-3, 708, 243, hooker08, 50);
end

procedure hooker08// stupid characters
begin
	gsay_reply(708, 244);
	if (item_caps_total(dude_obj) >= 150) then begin
		giq_option(-3, 708, 257, hooker09, 50);
	end
	else begin
		giq_option(-3, 708, 258, hookendPoor, 51);
		set_local_var(7, 1);
	end
	giq_option(-3, 708, 259, enddialog, 50);
end

procedure hooker09// stupid characters
begin
	gsay_reply(708, 260);
	giq_option(-3, 708, 264, hookdoneStupid, 50);
	item_caps_adjust(dude_obj, -150);
end

procedure hookdoneStupid// stupid characters
begin
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	game_time_advance(random(1, ((10 * 60 * 2 * get_critter_stat(dude_obj, 0)) + (10 * 60 * 7 * get_critter_stat(dude_obj, 2)))));// random between 1 minute and (2*STR)+(7*END)
	gfade_in(1);
	gsay_reply(708, 261);
	giq_option(-3, 708, 265, enddialog, 51);
	FloatWhenDone := 0;
end

procedure hooker01
begin
	gsay_reply(708, 227);
	if AskedHowMuch then begin
		giq_option(4, 708, 246, hooker10, 50);// "Just sex"
		giq_option(4, 708, 237, hooker10, 50);// "Anything and everything! Surprise me..."
		giq_option(4, 708, 245, hooker10, 50);// "I don't care, let's just get this over with."
	end
	else begin
		giq_option(4, 708, 246, hooker04, 50);// "Just sex"
		giq_option(4, 708, 237, hooker04, 50);// "Anything and everything! Surprise me..."
		giq_option(4, 708, 245, hooker04, 50);// "I don't care, let's just get this over with."
	end
//	giq_option(4, 708, 234, hooker10, 50);
//	giq_option(4, 708, 230, hooker10, 50);
//	giq_option(4, 708, 231, hooker10, 50);
	giq_option(4, 708, 250, hookerend, 50);
end

procedure hooker02// just player
begin
//Charisma
	AskedHowMuch := 1;
	if (get_critter_stat(dude_obj, 3) < 4) then begin
		set_local_var(5, 30);
		gsay_reply(708, message_str(708, 247) + local_var(5) + message_str(708, 300));
	end
	else begin
		if (get_critter_stat(dude_obj, 3) > 7) then begin
			set_local_var(5, 10);
			gsay_reply(708, message_str(708, 248) + local_var(5) + message_str(708, 300));
		end
		else begin
			set_local_var(5, 20);
			gsay_reply(708, 221);
		end
	end
	if (item_caps_total(dude_obj) >= local_var(5)) then begin
		giq_option(4, 708, 249, hooker01, 50);
	end
	else begin
		giq_option(4, 708, 252, hookendPoor, 51);
	end
	giq_option(4, 708, 223, hookerend, 50);
end

procedure hooker03// group action
begin
//Charisma
	if (get_critter_stat(dude_obj, 3) < 4) then begin
		set_local_var(5, 125);
		gsay_reply(708, message_str(708, 247) + local_var(5) + message_str(708, 300));
	end
	else begin
		if (get_critter_stat(dude_obj, 3) > 7) then begin
			set_local_var(5, 75);
			gsay_reply(708, message_str(708, 248) + local_var(5) + message_str(708, 300));
		end
		else begin
			set_local_var(5, 100);
			gsay_reply(708, 226);
		end
	end
	if (item_caps_total(dude_obj) >= local_var(5)) then begin
		giq_option(4, 708, 249, HookGROUP, 50);
	end
	else begin
		giq_option(4, 708, 252, hookendPoor, 51);
	end
	giq_option(4, 708, 223, hookerend, 50);
end

procedure hooker04// just player, didn't start by asking "How much?"
begin
//Charisma
	if (get_critter_stat(dude_obj, 3) < 4) then begin
		set_local_var(5, 30);
		gsay_reply(708, message_str(708, 247) + local_var(5) + message_str(708, 300));
	end
	else begin
		if (get_critter_stat(dude_obj, 3) > 7) then begin
			set_local_var(5, 10);
			gsay_reply(708, message_str(708, 248) + local_var(5) + message_str(708, 300));
		end
		else begin
			set_local_var(5, 20);
			gsay_reply(708, 221);
		end
	end
	if (item_caps_total(dude_obj) >= local_var(5)) then begin
		giq_option(4, 708, 249, hooker10, 50);
	end
	else begin
		giq_option(4, 708, 252, hookendPoor, 51);
	end
	giq_option(4, 708, 223, hookerend, 50);
end

procedure hooker10
begin
	item_caps_adjust(dude_obj, -local_var(5));
	gsay_reply(708, 228);
	giq_option(4, 708, 254, hookdone, 50);
end

procedure HookGROUP
begin
	item_caps_adjust(dude_obj, -local_var(5));
	gsay_reply(708, 242);
	giq_option(4, 708, 254, hookdoneGROUP, 50);
end

procedure hookendPoor
begin
	FloatWhenDone := 0;
	gsay_message(708, 253, 51);// "get out!"
end

procedure hookerend
begin
	FloatWhenDone := 1;
	gsay_message(708, 251, 50);// "suit yourself"
end

procedure hookdone
begin
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	game_time_advance(random(1, ((10 * 60 * 2 * get_critter_stat(dude_obj, 0)) + (10 * 60 * 7 * get_critter_stat(dude_obj, 2)))));// random between 1 minute and (2*STR)+(7*END)
	gfade_in(1);
	if local_var(6) then begin// does she know player
		gsay_reply(708, 256);
	end
	else begin
		gsay_reply(708, 229);
		set_local_var(6, 1);
	end
	giq_option(4, 708, 224, enddialog, 50);
	giq_option(4, 708, 255, enddialog, 50);	
end

procedure hookdoneGROUP
begin
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	game_time_advance(random(1, (((10 * 60 * 2 * get_critter_stat(dude_obj, 0)) + (10 * 60 * 7 * get_critter_stat(dude_obj, 2))) * 2)));// random between 1 minute and (2*STR)+(7*END), times 2 for being a group
	gfade_in(1);
	if local_var(6) then begin// does she know player
		gsay_reply(708, 256);
	end
	else begin
		gsay_reply(708, 229);
		set_local_var(6, 1);
	end
	giq_option(4, 708, 224, enddialogGROUP, 50);
	giq_option(4, 708, 255, enddialogGROUP, 50);	
end

procedure enddialog
begin
	FloatWhenDone := 0;
end

procedure enddialogGROUP
begin
	FloatWhenDone := 0;
	if (global_var(IAN_HIRELING_STATUS) == 2) and (Ian_ptr != 0) then begin
		float_msg(Ian_ptr, message_str(708, 400), 0);
	end
	if (global_var(DOGMEAT_HIRELING_STATUS)) and (Dog_ptr != 0) then begin
		float_msg(Dog_ptr, message_str(968, 117), 3);
	end
	if (global_var(TYCHO_HIRELING_STATUS) == 2) and (Tycho_ptr != 0) then begin
		float_msg(Tycho_ptr, message_str(708, 402), 12);
	end
	if (global_var(KATJA_HIRELING_STATUS) == 2) and (Katja_ptr != 0) then begin
		float_msg(Katja_ptr, message_str(708, 403), 5);
	end
	if (global_var(TANDI_HIRELING_STATUS) == 5) and (Tandi_ptr != 0) then begin
		float_msg(Tandi_ptr, message_str(708, 404), -1);
	end
end

procedure destroy_p_proc
begin
//
//BEGIN WEAPON DROP MOD CODE
//--original code and mod by:--
// Josan12 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=18843) and 
// MIB88 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=4464)
//
	if global_var(WEAPONDROP_MOD_STATUS) and not(global_var(FIXT_BUGFIXES_ONLY)) and (critter_inven_obj(self_obj, 1) or critter_inven_obj(self_obj, 2)) then begin// only run if Weapon Drop is enabled, AND Fixes Only is disabled, AND actually holding something
		variable item1 := 0;  variable item2 := 0;  variable armor := 0;  variable item1PID := 0;  variable item2PID := 0;  variable armorPID := 0;  variable drophex := 0;  if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop BEGINS");  end
		if (critter_inven_obj(self_obj, 1) > 0) then begin  item1 := critter_inven_obj(self_obj, 1);  end    if (critter_inven_obj(self_obj, 2) > 0) then begin  item2 := critter_inven_obj(self_obj, 2);  end    if (critter_inven_obj(self_obj, 0) > 0) then begin  armor := critter_inven_obj(self_obj, 0);  end    if item1 then begin  item1PID := obj_pid(item1);  end    if item2 then begin  item2PID := obj_pid(item2);  end    if armor then begin  armorPID := obj_pid(armor);  end    drophex := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(global_var(WEAPONDROP_MOD_MINIMUM), global_var(WEAPONDROP_MOD_MAXIMUM)));
		if (item1PID != 19) and (item1PID != 21) and (item1PID != 79) and (item1PID != 205) and (item1PID != 234) and (item1PID != 235) and (item1PID != 244) and (item2PID != 19) and (item2PID != 21) and (item2PID != 79) and (item2PID != 205) and (item2PID != 234) and (item2PID != 235) and (item2PID != 244) then begin//Don't drop if:  Rock (19), Brass Knuckles (21), Flare (79), Lit Flare (205), Spiked Knuckles (234), Power Fist (235), or Gold Nugget (244)
			if (item1 > 0) then begin if (obj_item_subtype(item1) == 3) then begin
			rm_obj_from_inven(self_obj, item1);  move_to(item1, drophex, elevation(self_obj));  end  end
			if (item2 > 0) then begin if (obj_item_subtype(item2) == 3) then begin
			rm_obj_from_inven(self_obj, item2);  move_to(item2, drophex, elevation(self_obj));  end  end    if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop ENDS");  end
		end
	end
//END WEAPON DROP MOD CODE
//
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(708, 102));
end

procedure description_p_proc
begin
	script_overrides;
	display_msg(message_str(708, 302));
end

procedure map_enter_p_proc
begin
	variable LVar0 := 0;
	LVar0 := obj_carrying_pid_obj(self_obj, 41);
	if (LVar0 <= 50) then begin
		variable LVar1 := 0;
		LVar1 := create_object_sid(41, 0, 0, -1);
		add_mult_objs_to_inven(self_obj, LVar1, random(10, 40) + random(10, 40) + random(10, 40));
	end
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(634, random(100, 105));
end

