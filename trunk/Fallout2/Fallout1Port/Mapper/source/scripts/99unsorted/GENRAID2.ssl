#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure talk_p_proc;//    script_action == 11
procedure Critter_Action;//    script_action == 12
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure timed_event_p_proc;//    script_action == 22

procedure guard00;
procedure guard01;
procedure guard02;
procedure guard03;
procedure guard04;
procedure guard05;
procedure guard06;
procedure guard07;
procedure guard07a;
procedure guard07b;
procedure guard08;
procedure guard09;
procedure guard10;
procedure guard11;
procedure guard12;
procedure guard13;
procedure guard14;
procedure guard15;
procedure guardend;

procedure combat;
procedure weapon_check;
procedure sys_dialog;
procedure first;
procedure notfirst;

import variable killing_women;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;
variable exit_line;

variable HOSTILE;
variable Only_Once := 1;
variable Weapons;
variable rndx;
variable rndz;

procedure items_held;
variable RightHand := 0;
variable LeftHand := 0;
variable PIDright := 0;
variable PIDleft := 0;
variable SubtypeWEP := 0;


procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if Only_Once then begin
		Only_Once := 0;
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 6);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 20);
	end
	if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
		call timed_event_p_proc;
	end
	else begin
		if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
			if (local_var(5) == 1) then begin
				display_msg(message_str(SCRIPT_GENRAID2, 100));
			end
			else begin
				call talk_p_proc;
			end
		end
		else begin
			if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
				HOSTILE := 1;
			end
			else begin
				if (script_action == 12) then begin//<-- Critter_Action - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call Critter_Action;
				end
				else begin
					if (script_action == 21) then begin// 21 is look_at
						script_overrides;
						display_msg(message_str(SCRIPT_GENRAID2, 101));
					end
					else begin
						if (script_action == 14) then begin//<-- damage_p_proc - has this Critter or Object been shot, hit with TNT, punched, etc.
							call damage_p_proc;
						end
						else begin
							if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
								call destroy_p_proc;
							end
						end
					end
				end
			end
		end
	end
end

procedure items_held
begin
	SubtypeWEP := 0;
	if critter_inven_obj(dude_obj, 1) then begin
		RightHand := critter_inven_obj(dude_obj, 1);
		PIDright := obj_pid(RightHand);
		if obj_item_subtype(RightHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		RightHand := 0;
		PIDright := 0;
	end
	if critter_inven_obj(dude_obj, 2) then begin
		LeftHand := critter_inven_obj(dude_obj, 2);
		PIDleft := obj_pid(LeftHand);
		if obj_item_subtype(LeftHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		LeftHand := 0;
		PIDleft := 0;
	end
end

procedure timed_event_p_proc
begin
	if (fixed_param == 1) then begin
		call items_held;
		if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
			call combat;
		end
	end
	else begin
		if (fixed_param == 2) then begin
			if (tile_distance_objs(self_obj, dude_obj) < 6) then begin
				call combat;
			end
		end
		else begin
			if (fixed_param == 3) then begin
				if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
					call combat;
				end
			end
		end
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (global_var(MISTAKEN_ID) == 1) then begin//Raiders think you are Garl's father
		call guard00;
	end
	else begin
		if ((Weapons == 1) and (killing_women == 0) and (global_var(GARLS_FRIEND) != 1)) then begin
			call guard02;
		end
		else begin
			call sys_dialog;
		end
	end
end

procedure sys_dialog
begin
	set_local_var(3, 1);
	call get_reaction;
	start_gdialog(439, self_obj, 4, -1, -1);
	gsay_start;
	if (local_var(4) == 0) then begin
		set_local_var(4, 1);
		call guard04;
	end
	else begin
		call guard15;
	end
	gsay_end;
	end_dialogue;
end

procedure guard00
begin
	float_msg(self_obj, message_str(SCRIPT_GENRAID2, random(102, 106)), 8);
end

procedure guard01
begin
	rndx := random(1, 5);
	if (rndx == 1) then begin
		gsay_message(439, 107, 50);
	end
	else begin
		if (rndx == 2) then begin
			gsay_message(439, 108, 50);
		end
		else begin
			if (rndx == 3) then begin
				gsay_message(439, 109, 50);
			end
			else begin
				if (rndx == 4) then begin
					gsay_message(439, 110, 50);
				end
				else begin
					if (rndx == 5) then begin
						gsay_message(439, 111, 50);
					end
				end
			end
		end
	end
end

procedure guard02
begin
	float_msg(self_obj, message_str(SCRIPT_GENRAID2, random(112, 115)), 8);
	add_timer_event(self_obj, game_ticks(9), 1);
end

procedure guard03
begin
	rndx := random(1, 3);
	if (rndx == 1) then begin
		gsay_message(439, 116, 50);
	end
	else begin
		if (rndx == 2) then begin
			gsay_message(439, 117, 50);
		end
		else begin
			if (rndx == 3) then begin
				gsay_message(439, 118, 50);
			end
		end
	end
	add_timer_event(self_obj, game_ticks(10), 2);
end

procedure guard04
begin
	gsay_reply(439, 119);
	if ((global_var(TANDI_RESCUE) == 1) and (global_var(TANDI_TALKED_ABOUT) == 1)) then begin
		giq_option(4, 439, 120, guard07, 50);
	end
	giq_option(4, 439, 121, guard06, 50);
	giq_option(-3, 439, 122, guard05, 50);
end

procedure guard05
begin
	gsay_message(439, 123, 50);
end

procedure guard06
begin
	gsay_message(439, 124, 50);
	call DownReact;
end

procedure guard07
begin
	gsay_reply(439, 125);
	giq_option(4, 439, 126, guard08, 50);
	giq_option(6, 439, 127, guard07a, 50);
	if (is_success(do_check(dude_obj, 1, 0))) then begin
		giq_option(4, 439, 128, guard07b, 50);
	end
end

procedure guard07a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call guard09;
	end
	else begin
		call guard11;
	end
end

procedure guard07b
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -20))) then begin
		call guard12;
	end
	else begin
		call guard13;
	end
end

procedure guard08
begin
	gsay_message(439, 129, 50);
end

procedure guard09
begin
	gsay_reply(439, 130);
	giq_option(6, 439, 131, guard10, 50);
end

procedure guard10
begin
	gsay_message(439, 132, 50);
end

procedure guard11
begin
	gsay_message(439, 133, 50);
end

procedure guard12
begin
	gsay_message(439, 134, 50);
	set_local_var(5, 1);
end

procedure guard13
begin
	gsay_message(439, 135, 50);
	call combat;
end

procedure guard14
begin
	gsay_message(439, 136, 50);
	add_timer_event(self_obj, game_ticks(12), 3);
end

procedure guard15
begin
	gsay_message(439, 137, 50);
end

procedure guardend
begin
end

procedure combat
begin
	if (global_var(MISTAKEN_ID) == 1) then begin//Raiders think you are Garl's father
/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 87);
	end
	HOSTILE := 1;
end

procedure weapon_check
begin
	call items_held;
	if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
		Weapons := 0;
	end
	else begin
		Weapons := 1;
	end
end

procedure Critter_Action
begin
	variable LVar0 := 0;
	rndz := random(0, 500);
//	set_local_var(10, game_time);
//	set_local_var(11, game_time + 5);
	if (global_var(TANDI_HIRELING_STATUS) == 2) then begin
		set_global_var(ENEMY_RAIDERS, 1);//ENEMY_RAIDERS
	end
	else begin
		if (global_var(MISTAKEN_ID)) then begin//Raiders think you are Garl's father
			set_global_var(ENEMY_RAIDERS, 0);
			if ((tile_distance_objs(self_obj, dude_obj) < 5) and (rndz == 0)) then begin
				LVar0 := tile_num_in_direction(tile_num(self_obj), random(0, 5), 3);
				if ((tile_distance(tile_num(self_obj), LVar0) > 2) and (rndz == 0)) then begin
					if (rndz == 0) then begin
						float_msg(self_obj, message_str(SCRIPT_GENRAIDR, random(102, 106)), 8);
					end
					animate_move_obj_to_tile(self_obj, LVar0, 0);
				end
			end
		end
		else begin
			if global_var(TANDI_ESCAPE) then begin
				set_global_var(ENEMY_RAIDERS, 1);//ENEMY_RAIDERS
			end
			if (obj_can_see_obj(self_obj, dude_obj)) then begin
				if (global_var(RAID_LOOTING)) then begin//  "RAID_LOOTING" (are you stealing from them)
					set_global_var(ENEMY_RAIDERS, 1);//ENEMY_RAIDERS
				end
			end
			if (map_var(2) == 1) then begin
				set_global_var(ENEMY_RAIDERS, 1);//ENEMY_RAIDERS
			end
		end
	end
	if (global_var(ENEMY_RAIDERS) and obj_can_see_obj(self_obj, dude_obj)) then begin
		HOSTILE := 1;
	end
	if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
		HOSTILE := 0;
	end
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		HOSTILE := 0;
		set_global_var(ENEMY_RAIDERS, 1);//ENEMY_RAIDERS
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
	else begin
		if (obj_can_see_obj(self_obj, dude_obj) and (global_var(GARLS_FRIEND) != 1)) then begin
			call items_held;
			if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
				Weapons := 1;
				dialogue_system_enter;
			end
		end
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (global_var(MISTAKEN_ID) == 0) then begin//PC was (is?) not mistaken for Garl's father
			set_global_var(ENEMY_RAIDERS, 1);//ENEMY_RAIDERS
		end
	end
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end

procedure first
begin
end

procedure notfirst
begin
end

procedure destroy_p_proc
begin
	set_global_var(TOTAL_RAIDERS, (global_var(TOTAL_RAIDERS) - 1));// Number of raiders left
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_RAIDERS, 1);//ENEMY_RAIDERS
		set_global_var(GARLS_FRIEND, 0);//GARLS_FRIEND
	end
	rm_timer_event(self_obj);
//
//BEGIN WEAPON DROP MOD CODE
//--original code and mod by:--
// Josan12 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=18843) and 
// MIB88 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=4464)
//
	if global_var(WEAPONDROP_MOD_STATUS) and not(global_var(FIXT_BUGFIXES_ONLY)) and (critter_inven_obj(self_obj, 1) or critter_inven_obj(self_obj, 2)) then begin// only run if Weapon Drop is enabled, AND Fixes Only is disabled, AND actually holding something
		variable item1 := 0;  variable item2 := 0;  variable armor := 0;  variable item1PID := 0;  variable item2PID := 0;  variable armorPID := 0;  variable drophex := 0;  if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop BEGINS");  end
		if (critter_inven_obj(self_obj, 1) > 0) then begin  item1 := critter_inven_obj(self_obj, 1);  end    if (critter_inven_obj(self_obj, 2) > 0) then begin  item2 := critter_inven_obj(self_obj, 2);  end    if (critter_inven_obj(self_obj, 0) > 0) then begin  armor := critter_inven_obj(self_obj, 0);  end    if item1 then begin  item1PID := obj_pid(item1);  end    if item2 then begin  item2PID := obj_pid(item2);  end    if armor then begin  armorPID := obj_pid(armor);  end    drophex := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(global_var(WEAPONDROP_MOD_MINIMUM), global_var(WEAPONDROP_MOD_MAXIMUM)));
		if (item1PID != 19) and (item1PID != 21) and (item1PID != 79) and (item1PID != 205) and (item1PID != 234) and (item1PID != 235) and (item1PID != 244) and (item2PID != 19) and (item2PID != 21) and (item2PID != 79) and (item2PID != 205) and (item2PID != 234) and (item2PID != 235) and (item2PID != 244) then begin//Don't drop if:  Rock (19), Brass Knuckles (21), Flare (79), Lit Flare (205), Spiked Knuckles (234), Power Fist (235), or Gold Nugget (244)
			if (item1 > 0) then begin if (obj_item_subtype(item1) == 3) then begin
			rm_obj_from_inven(self_obj, item1);  move_to(item1, drophex, elevation(self_obj));  end  end
			if (item2 > 0) then begin if (obj_item_subtype(item2) == 3) then begin
			rm_obj_from_inven(self_obj, item2);  move_to(item2, drophex, elevation(self_obj));  end  end    if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop ENDS");  end
		end
	end
//END WEAPON DROP MOD CODE
//
	if source_obj == dude_obj then begin
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end

	end
//
// "ARMOR DESTROY ON DEATH" MOD:
//
	if global_var(ARMOR_DESTROY_MOD) then begin// if enabled
		if (critter_inven_obj(self_obj, 0) > 0) then begin
			variable slot0 := 0;
			slot0 := critter_inven_obj(self_obj, 0);
			rm_obj_from_inven(self_obj, slot0);
			destroy_object(slot0);
		end
		else begin
			variable HasArmor := 0;
			HasArmor := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET);
			if (HasArmor > 0) then begin
				rm_obj_from_inven(self_obj, HasArmor);
				destroy_object(HasArmor);
			end
			else begin
				HasArmor := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR);
				if (HasArmor > 0) then begin
					rm_obj_from_inven(self_obj, HasArmor);
					destroy_object(HasArmor);
				end
				else begin
					HasArmor := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE);
					if (HasArmor > 0) then begin
						rm_obj_from_inven(self_obj, HasArmor);
						destroy_object(HasArmor);
					end
					else begin
						HasArmor := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR);
						if (HasArmor > 0) then begin
							rm_obj_from_inven(self_obj, HasArmor);
							destroy_object(HasArmor);
						end
						else begin
							HasArmor := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR);
							if (HasArmor > 0) then begin
								rm_obj_from_inven(self_obj, HasArmor);
								destroy_object(HasArmor);
							end
							else begin
								HasArmor := obj_carrying_pid_obj(self_obj, PID_BROTHERHOOD_COMBAT_ARMOR);
								if (HasArmor > 0) then begin
									rm_obj_from_inven(self_obj, HasArmor);
									destroy_object(HasArmor);
								end
								else begin
									HasArmor := obj_carrying_pid_obj(self_obj, PID_POWERED_ARMOR);
									if (HasArmor > 0) then begin
										rm_obj_from_inven(self_obj, HasArmor);
										destroy_object(HasArmor);
									end
									else begin
										HasArmor := obj_carrying_pid_obj(self_obj, PID_HARDENED_POWER_ARMOR);
										if (HasArmor > 0) then begin
											rm_obj_from_inven(self_obj, HasArmor);
											destroy_object(HasArmor);
										end
										else begin
											HasArmor := obj_carrying_pid_obj(self_obj, PID_TESLA_ARMOR);
											if (HasArmor > 0) then begin
												rm_obj_from_inven(self_obj, HasArmor);
												destroy_object(HasArmor);
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	rm_timer_event(self_obj);
end

