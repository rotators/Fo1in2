#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure talk_p_proc;//    script_action == 11
procedure timed_event_p_proc;//    script_action == 22

procedure ChdGuard0;
procedure ChdGuard1;
procedure ChdGuard2;
procedure ChdGuard3;
procedure ChdGuard4;
procedure ChdGuard5;
procedure ChdGuard6;
procedure ChdGuard7;
procedure ChdGuard8;
procedure ChdGuard9;
procedure ChdGuard10;
procedure ChdGuard11;
procedure ChdGuard12;
procedure ChdGuard13;
procedure ChdGuard14;
procedure ChdGuard15;
procedure ChdGuard16;
procedure ChdGuard17;
procedure ChdGuard17a;
procedure ChdGuard18;
procedure ChdGuard19;
procedure ChdGuard20;
procedure ChdGuard21;
procedure ChdGuard22;
procedure ChdGuard23;
procedure ChdGuard24;
procedure ChdGuard25;
procedure ChdGuard26;
procedure ChdGuard27;
procedure ChdGuard28;
procedure ChdGuard29;
procedure ChdGuard30;
procedure ChdGuard31;
procedure ChdGuard32;
procedure ChdGuard33;
procedure ChdGuard34;
procedure ChdGuard35;
procedure ChdGuardend;
procedure combat;
procedure to_orfeo;

import variable Orfeo_ptr;

variable in_timed_event;
variable weaponPtr;
variable HOSTILE;
variable initial :=  0;



procedure start
begin
	
	
	if not(initial) then begin
		initial :=  1;
		set_self_team(TEAM_CATHEDRAL );
		set_self_ai( AI_BRAINWASHED_CHILDREN );
		anim(self_obj, 1000, random(0, 5));
		if (local_var(1) == 0) then begin
			set_local_var(1, 1);
			weaponPtr := create_object( PID_10MM_SMG, 0, 0 );
			add_obj_to_inven(self_obj, weaponPtr);
			wield_obj_critter(self_obj, weaponPtr);
			add_obj_to_inven(self_obj, create_object( PID_10MM_JHP, 0, 0 ));
		end
	end
	if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
		call critter_p_proc;
	end
	else begin
		if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
			call destroy_p_proc;
		end
		else begin
			if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
				call look_at_p_proc;
			end
			else begin
				if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
					call talk_p_proc;
				end
				else begin
					if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
						call timed_event_p_proc;
					end
				end
			end
		end
	end
end

procedure critter_p_proc
begin
	if (global_var(ENEMY_FOLL_INVADERS)) then begin
		HOSTILE := 1;
	end
	if (HOSTILE and obj_can_see_obj(self_obj, dude_obj)) then begin
		HOSTILE := 0;
		attack(dude_obj);
	end
	else begin
		if (not(in_timed_event)) then begin
			in_timed_event := 1;
			add_timer_event(self_obj, game_ticks(random(6, 10)), random(1, 3));
		end
		if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance_objs(self_obj, dude_obj) < 6)) then begin
			if (local_var(0) == 0) then begin
				dialogue_system_enter;
			end
		end
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_FOLL_INVADERS, 1);
	end
	if source_obj == dude_obj then begin
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
	end
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_CHDGUARD, 100));
end

procedure talk_p_proc
begin
	script_overrides;
	dude_look_at_critter;
	start_gdialog(275, self_obj, 4, -1, -1);
	gsay_start;
	if (local_var(0)) then begin
		call ChdGuard35;
	end
	else begin
		set_local_var(0, 1);
		call ChdGuard0;
	end
	gsay_end;
	end_dialogue;
end

procedure timed_event_p_proc
begin
	if (fixed_param == 1) then begin
		anim(self_obj, 1000, random(0, 5));
	end
	else begin
		animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(1, 3)), 0);
	end
	in_timed_event := 0;
end

procedure ChdGuard0
begin
	gsay_reply(275, 101);
	giq_option(-3, 275, 102, ChdGuard1, 50);
	giq_option(4, 275, 103, ChdGuard13, 50);
	giq_option(4, 275, 104, ChdGuard25, 50);
	giq_option(6, 275, 105, ChdGuard26, 50);
	giq_option(6, 275, 106, ChdGuard27, 50);
end

procedure ChdGuard1
begin
	gsay_reply(275, 107);
	giq_option(-3, 275, 108, ChdGuard2, 50);
	giq_option(-3, 275, 109, combat, 50);
	giq_option(-3, 275, 110, ChdGuard9, 50);
end

procedure ChdGuard2
begin
	gsay_reply(275, 111);
	giq_option(-3, 275, 112, combat, 50);
	giq_option(-3, 275, 113, ChdGuard3, 50);
	giq_option(-3, 275, 114, ChdGuard4, 50);
end

procedure ChdGuard3
begin
	gsay_message(275, 115, 50);
end

procedure ChdGuard4
begin
	gsay_reply(275, 116);
	giq_option(-3, 275, 117, ChdGuard5, 50);
	giq_option(-3, 275, 118, combat, 50);
	giq_option(-3, 275, 119, ChdGuard6, 50);
end

procedure ChdGuard5
begin
	gsay_message(275, 120, 50);
end

procedure ChdGuard6
begin
	gsay_reply(275, 121);
	giq_option(-3, 275, 122, ChdGuard7, 50);
	giq_option(-3, 275, 123, ChdGuard5, 50);
	giq_option(-3, 275, 124, ChdGuard8, 50);
end

procedure ChdGuard7
begin
	gsay_message(275, 125, 50);
end

procedure ChdGuard8
begin
	gsay_message(275, 126, 50);
end

procedure ChdGuard9
begin
	gsay_reply(275, 127);
	giq_option(-3, 275, 128, ChdGuard10, 50);
	giq_option(-3, 275, 129, ChdGuard12, 50);
	giq_option(-3, 275, 130, ChdGuardend, 50);
end

procedure ChdGuard10
begin
	gsay_reply(275, 131);
	giq_option(-3, 275, 132, ChdGuard11, 50);
	giq_option(-3, 275, 133, ChdGuardend, 50);
end

procedure ChdGuard11
begin
	gsay_message(275, 134, 50);
end

procedure ChdGuard12
begin
	gsay_reply(275, 135);
	giq_option(-3, 275, 136, ChdGuardend, 50);
end

procedure ChdGuard13
begin
	gsay_reply(275, 137);
	giq_option(4, 275, 138, ChdGuard14, 50);
	giq_option(4, 275, 139, ChdGuard15, 50);
	giq_option(4, 275, message_str(SCRIPT_CHDGUARD, 140) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_CHDGUARD, 141), ChdGuard22, 50);
	giq_option(4, 275, 142, ChdGuard24, 50);
	giq_option(4, 275, 143, combat, 50);
end

procedure ChdGuard14
begin
	gsay_message(275, 144, 50);
	call to_orfeo;
end

procedure ChdGuard15
begin
	gsay_reply(275, 145);
	giq_option(4, 275, 146, ChdGuard16, 50);
	giq_option(4, 275, 147, ChdGuard17, 50);
end

procedure ChdGuard16
begin
	gsay_message(275, 148, 50);
	call to_orfeo;
end

procedure ChdGuard17
begin
	gsay_reply(275, 149);
	giq_option(4, 275, message_str(SCRIPT_CHDGUARD, 150) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_CHDGUARD, 151), ChdGuard17a, 50);
	giq_option(4, 275, 152, ChdGuard20, 50);
	giq_option(4, 275, 153, combat, 50);
end

procedure ChdGuard17a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call ChdGuard18;
	end
	else begin
		call ChdGuard19;
	end
end

procedure ChdGuard18
begin
	gsay_message(275, 154, 50);
end

procedure ChdGuard19
begin
	gsay_message(275, 155, 50);
	call combat;
end

procedure ChdGuard20
begin
	gsay_reply(275, 156);
	giq_option(4, 275, message_str(SCRIPT_CHDGUARD, 157) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_CHDGUARD, 158), ChdGuard21, 50);
	giq_option(4, 275, 159, combat, 50);
end

procedure ChdGuard21
begin
	gsay_message(275, 160, 50);
	call ChdGuard17a;
end

procedure ChdGuard22
begin
	gsay_reply(275, message_str(SCRIPT_CHDGUARD, 161) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_CHDGUARD, 162));
	giq_option(4, 275, 163, ChdGuard23, 50);
	giq_option(4, 275, 164, ChdGuard23, 50);
	giq_option(4, 275, 165, combat, 50);
end

procedure ChdGuard23
begin
	gsay_message(275, 166, 50);
	call combat;
end

procedure ChdGuard24
begin
	gsay_message(275, 167, 50);
	call combat;
end

procedure ChdGuard25
begin
	gsay_reply(275, 168);
	giq_option(4, 275, 169, ChdGuard14, 50);
	giq_option(4, 275, 170, ChdGuard15, 50);
	giq_option(4, 275, message_str(SCRIPT_CHDGUARD, 171) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_CHDGUARD, 172), ChdGuard22, 50);
	giq_option(4, 275, 173, ChdGuard24, 50);
	giq_option(4, 275, 174, combat, 50);
end

procedure ChdGuard26
begin
	gsay_message(275, 175, 50);
	call combat;
end

procedure ChdGuard27
begin
	gsay_reply(275, 176);
	giq_option(6, 275, 177, ChdGuard28, 50);
	giq_option(6, 275, 178, ChdGuard29, 50);
	giq_option(6, 275, 179, ChdGuard30, 50);
	giq_option(6, 275, 180, ChdGuard34, 50);
end

procedure ChdGuard28
begin
	gsay_message(275, 181, 50);
end

procedure ChdGuard29
begin
	gsay_message(275, 182, 50);
end

procedure ChdGuard30
begin
	gsay_reply(275, 183);
	giq_option(6, 275, 184, ChdGuard31, 50);
	giq_option(6, 275, 185, ChdGuard32, 50);
	giq_option(6, 275, 186, combat, 50);
end

procedure ChdGuard31
begin
	gsay_message(275, 187, 50);
	call to_orfeo;
end

procedure ChdGuard32
begin
	gsay_reply(275, 188);
	giq_option(6, 275, 189, ChdGuard33, 50);
	giq_option(6, 275, 190, ChdGuard33, 50);
	giq_option(6, 275, 191, combat, 50);
end

procedure ChdGuard33
begin
	gsay_reply(275, 192);
	giq_option(6, 275, 193, ChdGuardend, 50);
	giq_option(6, 275, 194, combat, 50);
end

procedure ChdGuard34
begin
	gsay_message(275, 195, 50);
	call combat;
end

procedure ChdGuard35
begin
	gsay_message(275, 196, 50);
	call combat;
end

procedure ChdGuardend
begin
end

procedure combat
begin
	HOSTILE := 1;
end

procedure to_orfeo
begin
	load_map("lafollwr.map", 11);
end


