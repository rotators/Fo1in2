#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure look_at_p_proc;//    script_action == 21
procedure description_p_proc;//    script_action == 3
procedure talk_p_proc;//    script_action == 11
procedure critter_p_proc;//    script_action == 12
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure pickup_p_proc;//    script_action == 4

variable Only_Once := 1;
variable PsstTime;
variable exit_line

variable whichblade;

import variable InBladePtr1;
import variable InBladePtr2;
import variable InBladePtr3;
import variable InBladePtr4;
import variable InBladePtr5;
import variable InBladePtr6;
import variable InBladePtr7;
import variable InBladePtr8;
import variable RegGuard1;
import variable RegGuard2;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

//Sduibek NOTES/FYI or future use:
// 
//  Dialog pointer used to be 926
//


procedure start
begin
	
	
	if Only_Once then begin
		variable whichblade := 0;
		/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_BOTTLE_CAPS) == 0) then begin
			item_caps_adjust(self_obj, random(10, 100));
		end
		if ((global_var(BLADES_STATUS) == 9103) or (global_var(BLADES_STATUS) == 9102)) and (whichblade < 8) then begin
			critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 0);
			whichblade := global_var(WATER_CHIP_10);
			if (whichblade == 0) then begin
				InBladePtr1 := self_obj;
			end
			else begin
				if (whichblade == 1) then begin
					InBladePtr2 := self_obj;
				end
				else begin
					if (whichblade == 2) then begin
						InBladePtr3 := self_obj;
					end
					else begin
						if (whichblade == 3) then begin
							InBladePtr4 := self_obj;
						end
						else begin
							if (whichblade == 4) then begin
								InBladePtr5 := self_obj;
							end
							else begin
								if (whichblade == 5) then begin
									InBladePtr6 := self_obj;
								end
								else begin
									if (whichblade == 6) then begin
										InBladePtr7 := self_obj;
									end
									else begin
										if (whichblade == 7) then begin
											InBladePtr8 := self_obj;
											set_global_var(WATER_CHIP_9, 1);
										end
									end
								end
							end
						end
					end
				end
			end
			whichblade := whichblade + 1;
			set_global_var(WATER_CHIP_10, whichblade);
		end
		else begin
			critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 47);
		end
		Only_Once := 0;
	end
	if (script_action == 12) then begin
		call look_at_p_proc;
	end
	else begin
		if (script_action == 3) then begin
			call description_p_proc;
		end
		else begin
			if (script_action == 11) then begin
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin
					call critter_p_proc;
				end
				else begin
					if (script_action == 14) then begin
						call damage_p_proc;
					end
					else begin
						if (script_action == 18) then begin
							call destroy_p_proc;
						end
						else begin
							if (script_action == 4) then begin
								call pickup_p_proc;
							end
						end
					end
				end
			end
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_BLADE, 100));
end

procedure description_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_BLADE, 100));
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (global_var(ENEMY_BLADES) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 2);
	end
	else begin
		if (global_var(BLADES_STATUS) == 2) then begin
			float_msg(self_obj, message_str(SCRIPT_BLADE, random(101, 115)), 0);
		end
	end
end

procedure critter_p_proc
begin
	if ((((game_time / 10) - PsstTime) >= 30) and (tile_distance_objs(self_obj, dude_obj) <= 4) and (global_var(ENEMY_BLADES) == 0)) then begin
		if (global_var(BLADES_STATUS) == 2) then begin
			float_msg(self_obj, message_str(SCRIPT_BLADE, random(101, 115)), 0);
		end
		PsstTime := game_time / 10;
	end
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if (global_var(ENEMY_BLADES) == 1) then begin
			attack(dude_obj);
		end
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_BLADES, 1);
critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 47);
	end
end

procedure destroy_p_proc
begin

	if source_obj == dude_obj then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
		set_global_var(ENEMY_BLADES, 1);
critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 47);
	end
end

procedure pickup_p_proc
begin
	set_global_var(ENEMY_BLADES, 1);
end


