#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure combat_p_proc;//    script_action == 13

procedure gideon00;
procedure gideon01;
procedure gideon01a;
procedure gideon02;
procedure gideon02a;
procedure gideon03;
procedure gideon04;
procedure gideon04a;
procedure gideon04b;
procedure gideon04c;
procedure gideon05;
procedure gideon05a;
procedure gideon05b;
procedure gideon06;
procedure gideon06a;
procedure gideon07;
procedure gideon07a;
procedure gideon07b;
procedure gideon07c;
procedure gideon08;
procedure gideon09;
procedure gideon09a;
procedure gideon09b;
procedure gideon09c;
procedure gideon10;
procedure gideon11;
procedure gideon12;
procedure gideon12a;
procedure gideon12b;
procedure gideon13;
procedure gideon13a;
procedure gideonnull;
procedure dialog_end;

import variable contpan;
import variable Psy_Field_Ptr;

variable hostile;
variable Only_Once := 1;
variable temp;



procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, 17) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, 17); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 2) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, 2); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 1) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, 1); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 74) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, 74); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 113) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, 113); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if Only_Once then begin
		Only_Once := 0;
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 50);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 67);
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 13) then begin//<-- combat_p_proc , basically does COMBAT_IS_INITIALIZED == 1
			call combat_p_proc;
		end
		else begin
			if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
				call pickup_p_proc;
			end
			else begin
				if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
					call talk_p_proc;
				end
				else begin
					if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
						animate_move_obj_to_tile(self_obj, 15319, 0);
					end
					else begin
						if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
							call critter_p_proc;
						end
						else begin
							if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
								call destroy_p_proc;
							end
						end
					end
				end
			end
		end
	end
end

procedure combat
begin
	use_obj(contpan);
	hostile := 1;
end

procedure critter_p_proc
begin
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		hostile := 1;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	start_gdialog(671, self_obj, 4, -1, -1);
	gsay_start;
	if (local_var(4) == 0) then begin
		call gideon00;
	end
	else begin
		call gideon01;
	end
	set_local_var(4, 1);
	gsay_end;
	end_dialogue;
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);
//
//BEGIN WEAPON DROP MOD CODE
//--original code and mod by:--
// Josan12 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=18843) and 
// MIB88 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=4464)
//
	if global_var(WEAPONDROP_MOD_STATUS) and not(global_var(FIXT_BUGFIXES_ONLY)) and (critter_inven_obj(self_obj, 1) or critter_inven_obj(self_obj, 2)) then begin// only run if Weapon Drop is enabled, AND Fixes Only is disabled, AND actually holding something
		variable item1 := 0;  variable item2 := 0;  variable armor := 0;  variable item1PID := 0;  variable item2PID := 0;  variable armorPID := 0;  variable drophex := 0;  if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop BEGINS");  end
		if (critter_inven_obj(self_obj, 1) > 0) then begin  item1 := critter_inven_obj(self_obj, 1);  end    if (critter_inven_obj(self_obj, 2) > 0) then begin  item2 := critter_inven_obj(self_obj, 2);  end    if (critter_inven_obj(self_obj, 0) > 0) then begin  armor := critter_inven_obj(self_obj, 0);  end    if item1 then begin  item1PID := obj_pid(item1);  end    if item2 then begin  item2PID := obj_pid(item2);  end    if armor then begin  armorPID := obj_pid(armor);  end    drophex := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(global_var(WEAPONDROP_MOD_MINIMUM), global_var(WEAPONDROP_MOD_MAXIMUM)));
		if (item1PID != 19) and (item1PID != 21) and (item1PID != 79) and (item1PID != 205) and (item1PID != 234) and (item1PID != 235) and (item1PID != 244) and (item2PID != 19) and (item2PID != 21) and (item2PID != 79) and (item2PID != 205) and (item2PID != 234) and (item2PID != 235) and (item2PID != 244) then begin//Don't drop if:  Rock (19), Brass Knuckles (21), Flare (79), Lit Flare (205), Spiked Knuckles (234), Power Fist (235), or Gold Nugget (244)
			if (item1 > 0) then begin if (obj_item_subtype(item1) == 3) then begin
			rm_obj_from_inven(self_obj, item1);  move_to(item1, drophex, elevation(self_obj));  end  end
			if (item2 > 0) then begin if (obj_item_subtype(item2) == 3) then begin
			rm_obj_from_inven(self_obj, item2);  move_to(item2, drophex, elevation(self_obj));  end  end    if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop ENDS");  end
		end
	end
//END WEAPON DROP MOD CODE
//
	if source_obj == dude_obj then begin
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
	end
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(671, 100));
end

procedure combat_p_proc
begin
end

procedure gideon00
begin
	gsay_reply(671, 101);
	giq_option(8, 671, 102, gideon03, 49 + random(0, 2));
	giq_option(4, 671, 103, gideon02, 49 + random(0, 2));
	giq_option(4, 671, 104, gideon07, 49 + random(0, 2));
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 671, 105, gideon07, 49 + random(0, 2));
	end
	giq_option(-3, 671, 106, gideon08, 49 + random(0, 2));
end

procedure gideon01
begin
	gsay_reply(671, 107);
	giq_option(8, 671, 108, gideon04, 49 + random(0, 2));
	giq_option(4, 671, 109, dialog_end, 49 + random(0, 2));
	giq_option(4, 671, 112, gideon01a, 49 + random(0, 2));
end

procedure gideon01a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -20))) then begin
		call gideon03;
	end
	else begin
		call gideon08;
	end
end

procedure gideon02
begin
	gsay_reply(671, 113);
	giq_option(4, 671, 114, dialog_end, 49 + random(0, 2));
	giq_option(4, 671, 112, gideon02a, 49 + random(0, 2));
	giq_option(-3, 671, 115, gideon08, 49 + random(0, 2));
end

procedure gideon02a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -20))) then begin
		call gideon09;
	end
	else begin
		call gideon08;
	end
end

procedure gideon03
begin
	gsay_reply(671, 116);
	giq_option(8, 671, 108, gideon04, 49 + random(0, 2));
	giq_option(4, 671, 117, gideon04, 49 + random(0, 2));
	giq_option(4, 671, 118, dialog_end, 49 + random(0, 2));
end

procedure gideon04
begin
	gsay_reply(671, 119);
	giq_option(8, 671, 120, gideon05, 49 + random(0, 2));
	giq_option(4, 671, 121, gideon04a, 49 + random(0, 2));
	giq_option(4, 671, 122, gideon04b, 49 + random(0, 2));
	giq_option(4, 671, 124, dialog_end, 49 + random(0, 2));
end

procedure gideon04a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -30))) then begin
		call gideon05;
	end
	else begin
		call gideon08;
	end
end

procedure gideon04b
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -30))) then begin
		call gideon03;
	end
	else begin
		call gideon11;
	end
end

procedure gideon04c
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -30))) then begin
		call gideon07;
	end
	else begin
		call gideon08;
	end
end

procedure gideon05
begin
	gsay_reply(671, 125);
	giq_option(8, 671, 126, gideon06, 49 + random(0, 2));
	giq_option(4, 671, 127, gideon05a, 49 + random(0, 2));
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 671, 128, gideon05b, 49 + random(0, 2));
	end
	giq_option(4, 671, 129, dialog_end, 49 + random(0, 2));
end

procedure gideon05a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -20))) then begin
		call gideon07;
	end
	else begin
		call gideon11;
	end
end

procedure gideon05b
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -20))) then begin
		call gideon10;
	end
	else begin
		call gideon06;
	end
end

procedure gideon06
begin
	gsay_reply(671, 130);
	giq_option(8, 671, 131, gideonnull, 49 + random(0, 2));
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 671, 132, combat, 49 + random(0, 2));
	end
	giq_option(4, 671, 133, gideon06a, 49 + random(0, 2));
	giq_option(4, 671, 134, dialog_end, 49 + random(0, 2));
end

procedure gideon06a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -30))) then begin
		call gideonnull;
	end
	else begin
		call gideon08;
	end
end

procedure gideon07
begin
	gsay_reply(671, 135);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 671, 136, gideon07b, 49 + random(0, 2));
	end
	giq_option(4, 671, 137, gideon07c, 49 + random(0, 2));
	giq_option(4, 671, 138, dialog_end, 49 + random(0, 2));
end

procedure gideon07a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -30))) then begin
		call gideon10;
	end
	else begin
		call gideon08;
	end
end

procedure gideon07b
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -20))) then begin
		call gideon10;
	end
	else begin
		call gideon11;
	end
end

procedure gideon07c
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -30))) then begin
		call gideon06;
	end
	else begin
		call gideon10;
	end
end

procedure gideon08
begin
	gsay_message(671, 139, 49 + random(0, 2));
	call dialog_end;
end

procedure gideon09
begin
	gsay_reply(671, 107);
	giq_option(4, 671, 141, gideon09a, 49 + random(0, 2));
	giq_option(4, 671, 127, gideon09b, 49 + random(0, 2));
	giq_option(4, 671, 124, dialog_end, 49 + random(0, 2));
end

procedure gideon09a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -30))) then begin
		call gideon04;
	end
	else begin
		call gideon08;
	end
end

procedure gideon09b
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -20))) then begin
		call gideon07;
	end
	else begin
		call gideon11;
	end
end

procedure gideon09c
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -30))) then begin
		call gideon10;
	end
	else begin
		call gideon08;
	end
end

procedure gideon10
begin
	gsay_message(671, 143, 49 + random(0, 2));
	call combat;
end

procedure gideon11
begin
	gsay_message(671, 144, 49 + random(0, 2));
	call dialog_end;
end

procedure gideon12
begin
	gsay_reply(671, 145);
	giq_option(8, 671, 146, gideon06, 49 + random(0, 2));
	giq_option(4, 671, 147, gideon12a, 49 + random(0, 2));
	giq_option(4, 671, 148, gideon13, 49 + random(0, 2));
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 671, 136, gideon12a, 49 + random(0, 2));
	end
	giq_option(4, 671, 150, dialog_end, 49 + random(0, 2));
end

procedure gideon12a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call gideon13;
	end
	else begin
		call gideon07;
	end
end

procedure gideon12b
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call gideon10;
	end
	else begin
		call gideon08;
	end
end

procedure gideon13
begin
	gsay_reply(671, 130);
	giq_option(8, 671, 131, gideonnull, 49 + random(0, 2));
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 671, 132, combat, 49 + random(0, 2));
	end
	giq_option(4, 671, 133, gideon13a, 49 + random(0, 2));
	giq_option(4, 671, 151, gideon07, 49 + random(0, 2));
	giq_option(4, 671, 134, dialog_end, 49 + random(0, 2));
end

procedure gideon13a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, -30))) then begin
		call gideonnull;
	end
	else begin
		call gideon08;
	end
end

procedure gideonnull
begin
	if (local_var(5) == 0) then begin
		set_local_var(5, 1);
		use_obj(contpan);
		use_obj(dude_obj);
		add_obj_to_inven(dude_obj, create_object_sid(123, 0, 0, -1));
		temp := 1000;
		display_msg(message_str(671, 501) + temp + message_str(671, 502));
		give_exp_points(temp);
		add_timer_event(self_obj, game_ticks(10), 1);
	end
end

procedure dialog_end
begin
end

