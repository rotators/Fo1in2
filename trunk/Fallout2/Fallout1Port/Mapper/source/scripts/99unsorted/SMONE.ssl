#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;

procedure goto00;
procedure goto01;
procedure goto02;
procedure goto03;

procedure zamin;
procedure combat;

import variable patient;
import variable lets_go;

variable my_tile;
variable lesson_ptr;
variable tmp_hostile;
variable Only_Once := 1;
variable DISGUISED;
variable ARMED;
variable PICK;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		critter_add_trait( self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, TEAM_NECROPOLIS_MUTANT );
		critter_add_trait( self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_SUPER_MUTANT_AGGRESSIVE );
	end
end

procedure timed_event_p_proc begin
	if (tmp_hostile < 1) then begin
		lesson_ptr := lesson_ptr + 1;
		set_local_var(1, lesson_ptr);
		call goto00;
	end
end

procedure combat begin
	tmp_hostile := 1;
end

procedure critter_p_proc begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	my_tile := tile_num(self_obj);
	if (my_tile == 12098) then begin
		move_to(self_obj, 7000, 0);
	end
	else begin
		if (tile_distance(my_tile, tile_num(dude_obj)) < 12) then begin
			if (local_var(2) != 1) then begin
				set_local_var(2, 1);
				lesson_ptr := 0;
				add_timer_event(self_obj, game_ticks(1), 0);
			end
		end
	end
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		call zamin;
		if ((ARMED == 1) or (DISGUISED == 0)) then begin
			call combat;
		end
	end
end

procedure pickup_p_proc begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc begin
	dude_look_at_critter;
	call zamin;
	if ((ARMED == 1) or (DISGUISED == 0)) then begin
		call combat;
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);
	inc_evil_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc begin
	script_overrides;
end

procedure zamin begin
	DISGUISED := 0;
	ARMED := 0;

	if (dude_is_armed) then begin
		ARMED := 1;
	end
	coc_disguise_check
end

procedure goto00 begin
	PICK := lesson_ptr;
	if (PICK == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_SMONE, 101), 2);
	end
	else if (PICK == 2) then begin
		float_msg(patient, message_str(SCRIPT_SMONE, 102), 8);
	end
	else if (PICK == 3) then begin
		float_msg(self_obj, message_str(SCRIPT_SMONE, 103), 2);
	end
	else if (PICK == 4) then begin
		call goto01;
	end
	else if (PICK == 5) then begin
		call goto02;
	end
	else if (PICK == 6) then begin
		float_msg(patient, message_str(SCRIPT_SMONE, 108), 8);
	end
	else if (PICK == 7) then begin
		float_msg(self_obj, message_str(SCRIPT_SMONE, 109), 2);
	end
	else if (PICK == 8) then begin
		float_msg(patient, message_str(SCRIPT_SMONE, 110), 8);
	end
	else if (PICK == 9) then begin
		call goto03;
	end
	add_timer_event(self_obj, game_ticks(3), 1);
end

procedure goto01 begin
	if (dude_is_male) then begin
		float_msg(patient, message_str(SCRIPT_SMONE, 104), 8);
	end
	else begin
		float_msg(patient, message_str(SCRIPT_SMONE, 105), 8);
	end
end

procedure goto02 begin
	if (dude_is_male) then begin
		float_msg(self_obj, message_str(SCRIPT_SMONE, 106), 2);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_SMONE, 107), 2);
	end
end

procedure goto03 begin
	lets_go := 1;
	animate_move_obj_to_tile(self_obj, 12098, 0);
end


