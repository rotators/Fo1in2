#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21

procedure goto00;
procedure goto01;
procedure goto02;
procedure goto03;

procedure zamin;
procedure combat;

import variable patient;
import variable lets_go;

variable my_tile;
variable lesson_ptr;
variable tmp_hostile;
variable Only_Once := 1;
variable DISGUISED;
variable ARMED;
variable PICK;

procedure start
begin
	

	if Only_Once then begin
		Only_Once := 0;
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 34);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 48);
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
					if (tmp_hostile < 1) then begin
						lesson_ptr := lesson_ptr + 1;
						set_local_var(1, lesson_ptr);
						call goto00;
					end
				end
			end
		end
	end
end



procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
	my_tile := tile_num(self_obj);
	if (my_tile == 12098) then begin
		move_to(self_obj, 7000, 0);
	end
	else begin
		if (tile_distance(my_tile, tile_num(dude_obj)) < 12) then begin
			if (local_var(2) != 1) then begin
				set_local_var(2, 1);
				lesson_ptr := 0;
				add_timer_event(self_obj, game_ticks(1), 0);
			end
		end
	end
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		call zamin;
		if ((ARMED == 1) or (DISGUISED == 0)) then begin
			call combat;
		end
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	call zamin;
	if ((ARMED == 1) or (DISGUISED == 0)) then begin
		call combat;
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	if source_obj == dude_obj then begin
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
	end
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
end

procedure zamin
begin
	DISGUISED := 0;
	ARMED := 0;

	if (dude_is_armed) then begin
		ARMED := 1;
	end
	if critter_inven_obj(dude_obj, 0) then begin  variable RobesCheck;  RobesCheck := critter_inven_obj(dude_obj, 0);  end      if (obj_pid(RobesCheck) == PID_PURPLE_ROBE) then begin
		if (metarule(16, 0) > 1) then begin//  PARTY_COUNT > 1.    Is player travelling with homies?
			DISGUISED := 0;
		end
		else begin
			DISGUISED := 1;
		end
	end
end

procedure goto00
begin
	PICK := lesson_ptr;
	if (PICK == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_SMONE, 101), 2);
	end
	else begin
		if (PICK == 2) then begin
			float_msg(patient, message_str(SCRIPT_SMONE, 102), 8);
		end
		else begin
			if (PICK == 3) then begin
				float_msg(self_obj, message_str(SCRIPT_SMONE, 103), 2);
			end
			else begin
				if (PICK == 4) then begin
					call goto01;
				end
				else begin
					if (PICK == 5) then begin
						call goto02;
					end
					else begin
						if (PICK == 6) then begin
							float_msg(patient, message_str(SCRIPT_SMONE, 108), 8);
						end
						else begin
							if (PICK == 7) then begin
								float_msg(self_obj, message_str(SCRIPT_SMONE, 109), 2);
							end
							else begin
								if (PICK == 8) then begin
									float_msg(patient, message_str(SCRIPT_SMONE, 110), 8);
								end
								else begin
									if (PICK == 9) then begin
										call goto03;
									end
								end
							end
						end
					end
				end
			end
		end
	end
	add_timer_event(self_obj, game_ticks(3), 1);
end

procedure goto01
begin
	if (get_critter_stat(dude_obj, STAT_gender) == 0) then begin
		float_msg(patient, message_str(SCRIPT_SMONE, 104), 8);
	end
	else begin
		float_msg(patient, message_str(SCRIPT_SMONE, 105), 8);
	end
end

procedure goto02
begin
	if (get_critter_stat(dude_obj, STAT_gender) == 0) then begin
		float_msg(self_obj, message_str(SCRIPT_SMONE, 106), 2);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_SMONE, 107), 2);
	end
end

procedure goto03
begin
	lets_go := 1;
	animate_move_obj_to_tile(self_obj, 12098, 0);
end
