#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure start_dialogue;
procedure Darrel01;
procedure Darrel02;
procedure Darrel02a;
procedure Darrel02b;
procedure Darrel02c;
procedure Darrel03;
procedure Darrel04;
procedure Darrel05;
procedure Darrel06;
procedure Darrel07;
procedure Darrel08;
procedure Darrel09;
procedure Darrel10;
procedure Darrel11;
procedure Darrel12;
procedure Darrel13;
procedure Darrel14;
procedure Darrel15;
procedure Darrel16;
procedure Darrel58;
procedure Darrel59;
procedure Darrel60;
procedure Darrel61;
procedure Darrel62;
procedure Darrel63;
procedure Darrel64;
procedure Darrel66;
procedure Darrel67;
procedure Darrel68;
procedure Darrel69;
procedure Darrel70;
procedure Darrel71;
procedure Darrel72;
procedure Darrel73;
procedure Darrel75;
procedure Darrel76;
procedure DarrelEnd;
procedure giveradx;
procedure combat;
procedure damage_p_proc;//    script_action == 14
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21

variable known;
variable Only_Once := 1;
variable hostile;
variable radx;
variable second;
variable ccount;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;



procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, 17) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, 17); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 2) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, 2); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 1) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, 1); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 74) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, 74); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 113) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, 113); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if Only_Once then begin
		Only_Once := 0;
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 44);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 64);
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 14) then begin//<-- damage_p_proc - has this Critter or Object been shot, hit with TNT, punched, etc.
			call damage_p_proc;
		end
		else begin
			if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
				call pickup_p_proc;
			end
			else begin
				if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
					call talk_p_proc;
				end
				else begin
					if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
						call critter_p_proc;
					end
					else begin
						if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
							call destroy_p_proc;
						end
					end
				end
			end
		end
	end
end

procedure start_dialogue
begin
	call get_reaction;
	if (global_var(QUEST_BROHOOD_1_JOIN_THEM) == 1) then begin
		start_gdialog(316, self_obj, 4, -1, -1);
		gsay_start;
		if (second) then begin
			call Darrel71;
		end
		else begin
			second := 1;
			call Darrel59;
		end
		gsay_end;
		end_dialogue;
	end
	else begin
		if (local_var(4) == 0) then begin
			start_gdialog(316, self_obj, 4, -1, -1);
			gsay_start;
			call Darrel01;
			gsay_end;
			end_dialogue;
		end
		else begin
			call Darrel16;
		end
	end
	set_local_var(4, 1);
end

procedure Darrel01
begin
	gsay_reply(316, 102);
	giq_option(-3, 316, 103, Darrel02, 50);
	giq_option(4, 316, 104, Darrel03, 50);
	if (global_var(NECROP_WATER_CHIP_TAKEN) != 1) then begin
		giq_option(4, 316, 105, Darrel04, 50);
	end
	if (global_var(MISSING_CARAVAN) == 1) then begin
		giq_option(4, 316, 106, Darrel75, 50);
	end
	giq_option(4, 316, 107, DarrelEnd, 50);
end

procedure Darrel02
begin
	if (local_var(6) == 0) then begin
		gsay_reply(316, 108);
		giq_option(-3, 316, 300, Darrel02a, 50);
	end
	else begin
		gsay_message(316, 108, 50);
	end
end

procedure Darrel02a
begin
	gsay_reply(316, 209);
	giq_option(-3, 316, 300, Darrel02b, 50);
end

procedure Darrel02b
begin
	gsay_reply(316, 210);
	giq_option(-3, 316, 300, Darrel02c, 50);
end

procedure Darrel02c
begin
	gsay_reply(316, 211);
	giq_option(-3, 316, 300, giveradx, 50);
end

procedure Darrel03
begin
	gsay_reply(316, 110);
	giq_option(4, 316, 111, Darrel05, 50);
	giq_option(4, 316, 112, Darrel12, 50);
	giq_option(4, 316, 113, Darrel06, 50);
	giq_option(4, 316, 114, DarrelEnd, 50);
end

procedure Darrel04
begin
	gsay_reply(316, 115);
	giq_option(4, 316, 116, Darrel07, 50);
	giq_option(4, 316, 201, DarrelEnd, 50);
	giq_option(4, 316, 118, Darrel11, 50);
end

procedure Darrel05
begin
	gsay_reply(316, 119);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 316, 120, DarrelEnd, 50);
	end
	giq_option(4, 316, 121, Darrel08, 50);
	giq_option(4, 316, 122, Darrel09, 50);
end

procedure Darrel06
begin
	gsay_reply(316, 123);
	giq_option(4, 316, 202, DarrelEnd, 50);
	giq_option(4, 316, 125, Darrel04, 50);
end

procedure Darrel07
begin
	gsay_reply(316, 126);
	giq_option(4, 316, 202, DarrelEnd, 50);
	giq_option(4, 316, 127, Darrel03, 50);
end

procedure Darrel08
begin
	gsay_reply(316, 128);
	giq_option(4, 316, 129, Darrel10, 50);
	giq_option(4, 316, 130, Darrel11, 50);
end

procedure Darrel09
begin
	gsay_reply(316, 109);
	giq_option(4, 316, 129, Darrel10, 50);
	giq_option(4, 316, 130, Darrel11, 50);
end

procedure Darrel10
begin
	gsay_reply(316, 131);
	giq_option(4, 316, 132, Darrel07, 50);
	giq_option(4, 316, 133, Darrel11, 50);
end

procedure Darrel11
begin
	gsay_message(316, 134, 50);
end

procedure Darrel12
begin
	gsay_reply(316, 135);
	giq_option(4, 316, 136, Darrel13, 50);
	giq_option(4, 316, 137, Darrel15, 50);
	giq_option(4, 316, 203, DarrelEnd, 50);
end

procedure Darrel13
begin
	gsay_reply(316, 139);
	giq_option(4, 316, 140, Darrel13, 50);
	giq_option(4, 316, 132, Darrel07, 50);
	giq_option(4, 316, 204, DarrelEnd, 50);
end

procedure Darrel14
begin
	gsay_reply(316, 143);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 316, 144, combat, 51);
	end
	giq_option(4, 316, 141, Darrel07, 50);
	giq_option(4, 316, 146, Darrel05, 50);
	giq_option(4, 316, 145, DarrelEnd, 50);
end

procedure Darrel15
begin
	gsay_reply(316, 147);
	giq_option(4, 316, 148, Darrel14, 50);
	giq_option(4, 316, 149, Darrel07, 50);
	giq_option(4, 316, 203, DarrelEnd, 50);
end

procedure Darrel16
begin
	float_msg(self_obj, message_str(316, 151), 2);
end

procedure Darrel58
begin
	set_local_var(5, 1);
	if (get_critter_stat(dude_obj, 34) == 0) then begin
		float_msg(self_obj, message_str(316, 152), 2);
	end
	else begin
		float_msg(self_obj, message_str(316, 153), 2);
	end
end

procedure Darrel59
begin
	gsay_reply(316, 154);
	giq_option(4, 316, 155, Darrel60, 50);
	giq_option(4, 316, 156, Darrel61, 50);
	giq_option(4, 316, 157, Darrel62, 50);
	giq_option(4, 316, 158, DarrelEnd, 50);
	giq_option(-3, 316, 103, Darrel02, 50);
end

procedure Darrel60
begin
	gsay_reply(316, 159);
	giq_option(4, 316, 160, Darrel63, 50);
	giq_option(4, 316, 161, Darrel63, 50);
	giq_option(4, 316, 162, Darrel64, 50);
	giq_option(4, 316, 163, Darrel61, 50);
end

procedure Darrel61
begin
	gsay_reply(316, 164);
	giq_option(4, 316, 165, Darrel66, 50);
	giq_option(4, 316, 166, Darrel67, 50);
end

procedure Darrel62
begin
	gsay_message(316, 167, 50);
end

procedure Darrel63
begin
	gsay_reply(316, 168);
	giq_option(4, 316, 203, DarrelEnd, 50);
	giq_option(4, 316, 170, Darrel72, 50);
end

procedure Darrel64
begin
	gsay_reply(316, 171);
	giq_option(4, 316, 205, DarrelEnd, 50);
	giq_option(4, 316, 170, Darrel69, 50);
end

procedure Darrel66
begin
	gsay_reply(316, 174);
	giq_option(4, 316, 175, Darrel68, 50);
	giq_option(4, 316, 176, DarrelEnd, 50);
	giq_option(4, 316, 177, Darrel63, 50);
	giq_option(4, 316, 206, DarrelEnd, 50);
end

procedure Darrel67
begin
	gsay_reply(316, 179);
	giq_option(4, 316, 180, Darrel64, 50);
	giq_option(4, 316, 203, DarrelEnd, 50);
end

procedure Darrel68
begin
	gsay_reply(316, 181);
	giq_option(4, 316, 182, DarrelEnd, 50);
	giq_option(4, 316, 183, Darrel63, 50);
	giq_option(4, 316, 184, DarrelEnd, 50);
end

procedure Darrel69
begin
	gsay_reply(316, 189);
	giq_option(4, 316, 203, DarrelEnd, 50);
	giq_option(4, 316, 190, Darrel72, 50);
end

procedure Darrel70
begin
	gsay_reply(316, 168);
	giq_option(4, 316, 203, DarrelEnd, 50);
	giq_option(4, 316, 190, Darrel72, 50);
end

procedure Darrel71
begin
	gsay_reply(316, 191);
	giq_option(4, 316, 188, Darrel72, 50);
	giq_option(4, 316, 192, DarrelEnd, 50);
	giq_option(-3, 316, 103, Darrel02, 50);
end

procedure Darrel72
begin
	gsay_reply(316, 193);
	giq_option(4, 316, 186, Darrel69, 50);
	giq_option(4, 316, 187, Darrel70, 50);
	if (global_var(MISSING_CARAVAN) == 1) then begin
		giq_option(4, 316, 106, Darrel75, 50);
	end
	giq_option(4, 316, 207, DarrelEnd, 50);
end

procedure Darrel73
begin
	ccount := ccount + 1;
	if (ccount < 6) then begin
		float_msg(self_obj, message_str(723, 200 + random(0, 2)), 2);
	end
	else begin
		if (ccount < 9) then begin
			float_msg(self_obj, message_str(723, 203 + random(0, 4)), 2);
		end
		else begin
			if (ccount < 12) then begin
				float_msg(self_obj, message_str(723, 209 + random(0, 3)), 2);
			end
			else begin
				display_msg(message_str(723, 213));
			end
		end
	end
end

procedure Darrel75
begin
	gsay_reply(316, 195);
	giq_option(4, 316, 196, Darrel11, 50);
	giq_option(4, 316, 197, Darrel76, 50);
	giq_option(4, 316, 104, Darrel03, 50);
	giq_option(4, 316, 198, DarrelEnd, 50);
end

procedure Darrel76
begin
	gsay_reply(316, 199);
	giq_option(4, 316, 104, Darrel03, 50);
	if (global_var(NECROP_WATER_CHIP_TAKEN) != 1) then begin
		giq_option(4, 316, 105, Darrel04, 50);
	end
	giq_option(4, 316, 208, DarrelEnd, 50);
end

procedure DarrelEnd
begin
end

procedure giveradx
begin
	set_local_var(6, 1);
	radx := create_object_sid(109, 0, 0, -1);
	add_obj_to_inven(dude_obj, radx);
	gsay_reply(316, 212);
	giq_option(-3, 316, 300, DarrelEnd, 50);
end

procedure combat
begin
	hostile := 1;
end

procedure damage_p_proc
begin
	set_global_var(ENEMY_BROTHERHOOD, 1);
end

procedure critter_p_proc
begin
	if (global_var(ENEMY_BROTHERHOOD)) then begin
		hostile := 1;
	end
	if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
		hostile := 0;
	end
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		set_global_var(ENEMY_BROTHERHOOD, 1);
		hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
	if (local_var(5) == 0) then begin
		if (global_var(QUEST_BROHOOD_1_JOIN_THEM) == 1) then begin
			call Darrel58;
		end
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		hostile := 1;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (global_var(QUEST_BROHOOD_1_JOIN_THEM) == 5) then begin
		float_msg(self_obj, message_str(40, 233), 2);
	end
	else begin
		if (local_var(4) == 0) then begin
			call start_dialogue;
		end
		else begin
			if (global_var(QUEST_BROHOOD_1_JOIN_THEM) == 2) then begin
				call Darrel73;
			end
			else begin
				call start_dialogue;
			end
		end
	end
end

procedure destroy_p_proc
begin
//
//BEGIN WEAPON DROP MOD CODE
//--original code and mod by:--
// Josan12 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=18843) and 
// MIB88 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=4464)
//
	if global_var(WEAPONDROP_MOD_STATUS) and not(global_var(FIXT_BUGFIXES_ONLY)) and (critter_inven_obj(self_obj, 1) or critter_inven_obj(self_obj, 2)) then begin// only run if Weapon Drop is enabled, AND Fixes Only is disabled, AND actually holding something
		variable item1 := 0;  variable item2 := 0;  variable armor := 0;  variable item1PID := 0;  variable item2PID := 0;  variable armorPID := 0;  variable drophex := 0;  if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop BEGINS");  end
		if (critter_inven_obj(self_obj, 1) > 0) then begin  item1 := critter_inven_obj(self_obj, 1);  end    if (critter_inven_obj(self_obj, 2) > 0) then begin  item2 := critter_inven_obj(self_obj, 2);  end    if (critter_inven_obj(self_obj, 0) > 0) then begin  armor := critter_inven_obj(self_obj, 0);  end    if item1 then begin  item1PID := obj_pid(item1);  end    if item2 then begin  item2PID := obj_pid(item2);  end    if armor then begin  armorPID := obj_pid(armor);  end    drophex := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(global_var(WEAPONDROP_MOD_MINIMUM), global_var(WEAPONDROP_MOD_MAXIMUM)));
		if (item1PID != 19) and (item1PID != 21) and (item1PID != 79) and (item1PID != 205) and (item1PID != 234) and (item1PID != 235) and (item1PID != 244) and (item2PID != 19) and (item2PID != 21) and (item2PID != 79) and (item2PID != 205) and (item2PID != 234) and (item2PID != 235) and (item2PID != 244) then begin//Don't drop if:  Rock (19), Brass Knuckles (21), Flare (79), Lit Flare (205), Spiked Knuckles (234), Power Fist (235), or Gold Nugget (244)
			if (item1 > 0) then begin if (obj_item_subtype(item1) == 3) then begin
			rm_obj_from_inven(self_obj, item1);  move_to(item1, drophex, elevation(self_obj));  end  end
			if (item2 > 0) then begin if (obj_item_subtype(item2) == 3) then begin
			rm_obj_from_inven(self_obj, item2);  move_to(item2, drophex, elevation(self_obj));  end  end    if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop ENDS");  end
		end
	end
//END WEAPON DROP MOD CODE
//
	set_global_var(ENEMY_BROTHERHOOD, 1);
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	if (known) then begin
		display_msg(message_str(316, 100));
	end
	else begin
		display_msg(message_str(316, 101));
	end
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(634, random(100, 105));
end



