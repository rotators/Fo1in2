/*

	Super Mutant

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_MUTANT2
//#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure talk_p_proc;
procedure timeforwhat;
procedure destroy_p_proc;
procedure critter_p_proc;

procedure genericend;
procedure genericcbt;

variable tmp_hostile;
variable init_teams := 0;
variable noevent;
variable loopcount;
variable rndx;
variable rndy;
variable rndz;
variable dist;
variable time;
variable maxsight;
variable maxleash := 9;
variable new_tile;

procedure start begin
	if (not(init_teams)) then begin
		init_teams := 1;
		set_self_team(TEAM_NECROPOLIS_MUTANT );
		if (local_var(2) == 0) then begin
			set_local_var(2, tile_num(self_obj));
		end
	end
	if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
		call timeforwhat;
	end
	else begin
		if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
			call talk_p_proc;
		end
		else begin
			if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
				tmp_hostile := 1;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
					else begin
						if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
							display_msg(message_str(SCRIPT_MUTANT2, 100));
						end
					end
				end
			end
		end
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	start_gdialog(13, self_obj, 4, -1, -1);
	gsay_start;
	set_local_var(0, 1);
	if (dude_is_male) then begin
		gsay_message(13, 101, 50);
	end
	else begin
		gsay_message(13, 102, 50);
	end
	gsay_end;
	end_dialogue;
end

procedure timeforwhat
begin
	noevent := 0;
	rndy := random(1, 6);
	if (rndy > 1) then begin
		dist := 2;
	end
	if (rndy > 5) then begin
		dist := 3;
	end
	rndz := random(0, 5);
	set_local_var(3, tile_num(self_obj));
	new_tile := tile_num_in_direction(local_var(3), rndz, dist);
	if (tile_distance(local_var(2), new_tile) < maxleash) then begin
		animate_move_obj_to_tile(self_obj, new_tile, 0);
	end
end

procedure genericend
begin
end

procedure genericcbt
begin
end

procedure destroy_p_proc
begin
	set_global_var( GVAR_SUPER_MUTANTS_KILLED, (global_var( GVAR_SUPER_MUTANTS_KILLED ) + 1) );
	rm_timer_event(self_obj);
   inc_evil_critter
	rm_timer_event(self_obj);
end

procedure critter_p_proc
begin
	if not(necropolis_invaded) then begin
		if not(is_loading_game) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
	end
	else begin
		maxsight := self_perception;
		time := game_time_hour;
		if ((time > 2300) or (time < 600)) then begin
			maxsight := 4;
		end
		if ((tile_distance_objs(self_obj, dude_obj) <= maxsight) and obj_can_see_obj(self_obj, dude_obj)) then begin
			if ((tmp_hostile > 0) or (local_var(0) > 0)) then begin
				tmp_hostile := 0;
				attack(dude_obj);
			end
			else begin
				call talk_p_proc;
			end
		end
		loopcount := loopcount + 1;
		if (loopcount > 40) then begin
			loopcount := 0;
			if (noevent == 0) then begin
				noevent := 1;
				rndx := 5 + random(1, 10);
				add_timer_event(self_obj, game_ticks(rndx), 0);
			end
		end
	end
end



