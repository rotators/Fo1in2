/*

	Boneyard - Caleb

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_CALEB
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure look_at_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;

procedure DialogWeapon;
procedure DialogExit;
procedure Caleb;
procedure CalebExit;
procedure Caleb1;
procedure Caleb2;
procedure Caleb3;
procedure Caleb4;
procedure Caleb5;
procedure Caleb6;
procedure Caleb7;
procedure Caleb8;
procedure Caleb9;
procedure Caleb10;
procedure Caleb11;
procedure Caleb12;
procedure Caleb13;
procedure Dumb;

variable Only_Once := 1;
variable tmp_hostile;
variable DisplayMessage := 100;

procedure Start begin
	if Only_Once then begin
		Only_Once := 0;
		if (not(is_loading_game) and (self_caps == 0)) then begin
			self_caps_adjust( random(10, 100) );
		end
		set_self_team(TEAM_LA_REGULATORS );
		set_self_ai( AI_REGULATORS );
		if (local_var(7) == 0) then begin
			set_map_var(1, map_var(1) + 1);
			set_local_var(7, 1);
			set_global_var( GVAR_ADYTUM_CALEB_SOMETHING_0, 1 );
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	if (local_var(4) == 1) then begin
		display_msg(message_str(SCRIPT_CALEB, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_CALEB, 101));
	end
	script_overrides;
end

procedure talk_p_proc
begin

	dude_look_at_critter;
	if ((global_var( GVAR_ENEMY_ADYTUM ) == 1) or (global_var( GVAR_DUDE_ENEMY_REGULATORS ) == 1)) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 2);
	end
	else begin
		if ((local_var(4) == 1) and (dude_iq < 4)) then begin
			float_msg(self_obj, message_str(SCRIPT_CALEB, 127), 0);
		end
		else begin
			if (global_var( GVAR_QUEST_BONEYARD_7_GANG_WAR ) == 2) then begin
				float_msg(self_obj, message_str(SCRIPT_CALEB, 147), 0);
			end
			else begin
				get_reaction
				start_gdialog(255, self_obj, -1, -1, -1);
				gsay_start;
				if (dude_is_armed) then begin
					call DialogWeapon;
				end
				else begin
					if (local_var(4) == 0) then begin
						if (local_var(1) < 2) then begin
							DisplayMessage := 102;
						end
						else begin
							DisplayMessage := 103;
						end
						call Caleb;
					end
					else begin
						if (global_var( GVAR_QUEST_BONEYARD_7_GANG_WAR ) == 0) then begin
							if (local_var(1) < 2) then begin
								DisplayMessage := 122;
							end
							if (dude_is_male) then begin
								DisplayMessage := 123;
							end
							else begin
								DisplayMessage := 124;
							end
							call Caleb;
						end
						else begin
							DisplayMessage := 141;
							call Caleb11;
						end
					end
				end
				gsay_end;
				end_dialogue;
			end
		end
	end
end

procedure critter_p_proc
begin
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if ((global_var( GVAR_ENEMY_ADYTUM ) == 1) or (global_var( GVAR_DUDE_ENEMY_REGULATORS ) == 1)) then begin
			attack(dude_obj);
		end
	end
end

procedure damage_p_proc
begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_DUDE_ENEMY_REGULATORS, 1 );//  ENEMY_REGULATOR == 1
	end
end

procedure destroy_p_proc begin
	set_map_var(1, map_var(1) - 1);

	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_DUDE_ENEMY_REGULATORS, 1 );//  ENEMY_REGULATOR == 1
	end
	inc_good_critter
	if (map_var(1) == 0) then begin
		terminate_combat;
	end
end

procedure pickup_p_proc
begin
	set_global_var( GVAR_DUDE_ENEMY_REGULATORS, 1 );//  ENEMY_REGULATOR == 1
end

procedure DialogWeapon
begin
	gsay_message(255, 125, 50);
end

procedure DialogExit
begin
end

procedure Caleb
begin
	gsay_reply(255, DisplayMessage);
	giq_option( 4, SCRIPT_CALEB, 105, Caleb1, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CALEB, 106, Caleb2, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CALEB, 107, Caleb5, NEUTRAL_REACTION );
	if (local_var(5) == 1) then begin
		giq_option( 4, SCRIPT_CALEB, 108, Caleb6, NEUTRAL_REACTION );
	end
	if (local_var(6) == 1) then begin
		giq_option( 4, SCRIPT_CALEB, 109, Caleb7, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_QUEST_BONEYARD_7_GANG_WAR ) == 0) then begin
		giq_option( 4, SCRIPT_CALEB, 110, Caleb8, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CALEB, 111, CalebExit, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_CALEB, 126, Dumb, NEUTRAL_REACTION );
end

procedure Dumb
begin
	set_local_var(4, 1);
	gsay_message(255, 127, 50);
end

procedure CalebExit
begin
	if (local_var(1) < 2) then begin
		gsay_message(255, 120, 50);
	end
	else begin
		gsay_message(255, 121, 50);
	end
end

procedure Caleb1
begin
	set_local_var(4, 1);
	if (local_var(1) < 2) then begin
		DisplayMessage := 116;
	end
	else begin
		set_local_var(5, 1);
		DisplayMessage := 117;
	end
	call Caleb;
end

procedure Caleb2
begin
	gsay_reply(255, 112);
	giq_option( 4, SCRIPT_CALEB, 113, Caleb3, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CALEB, 114, Caleb4, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CALEB, 115, CalebExit, NEUTRAL_REACTION );
end

procedure Caleb3
begin
	DisplayMessage := 128;
	call Caleb;
end

procedure Caleb4
begin
	DisplayMessage := 129;
	call Caleb;
end

procedure Caleb5
begin
	gsay_message(255, 118, 50);
	set_local_var(6, 1);
	DisplayMessage := 119;
	call Caleb;
end

procedure Caleb6
begin
	gsay_message(255, 130, 50);
	DisplayMessage := 131;
	call Caleb;
end

procedure Caleb7
begin
	DisplayMessage := 132;
	call Caleb;
end

procedure Caleb8
begin
	gsay_reply(255, 133);
	giq_option( 4, SCRIPT_CALEB, 134, Caleb10, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CALEB, 135, Caleb9, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CALEB, 136, DialogExit, NEUTRAL_REACTION );
end

procedure Caleb9
begin
	DisplayMessage := 137;
	call Caleb;
end

procedure Caleb10
begin
	gsay_reply(255, 138);
	giq_option( 4, SCRIPT_CALEB, 139, Caleb9, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CALEB, 140, DialogExit, NEUTRAL_REACTION );
end

procedure Caleb11
begin
	gsay_reply(255, DisplayMessage);
	giq_option( 4, SCRIPT_CALEB, 140, Caleb12, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CALEB, 141, Caleb13, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CALEB, 142, DialogExit, NEUTRAL_REACTION );
end

procedure Caleb12
begin
	DisplayMessage := 145;
	call Caleb11;
end

procedure Caleb13
begin
	DisplayMessage := 146;
	call Caleb11;
end
