#include "..\headers\define.h"

procedure start;
procedure use_p_proc;//    script_action == 6
procedure pickup_p_proc;//    script_action == 4
procedure look_at_p_proc;//    script_action == 21
procedure use_skill_on_p_proc;//    script_action == 8
procedure use_obj_on_p_proc;//    script_action == 7
procedure chance;
procedure fixed;
procedure failure;

variable Test;
variable ExpPoints := 500;
variable bonus := 0;


procedure start
begin
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 6) then begin//use_p_proc - Use, Activate, or Manipulate the Object or Item
			call use_p_proc;
		end
		else begin
			if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
				call pickup_p_proc;
			end
			else begin
				if (script_action == 8) then begin//<-- use_skill_on_p_proc
					call use_skill_on_p_proc;
				end
				else begin
					if (script_action == 7) then begin//<-- use_obj_on_p_proc
						call use_obj_on_p_proc;
					end
				end
			end
		end
	end
end

procedure use_p_proc
begin
	if source_obj == dude_obj then begin
		display_msg(message_str(SCRIPT_ARMOR, 101));
	end
end

procedure pickup_p_proc
begin
	call use_p_proc;
end

procedure look_at_p_proc
begin
	display_msg(message_str(SCRIPT_ARMOR, 100));
end

procedure use_skill_on_p_proc
begin
	if (action_being_used == SKILL_REPAIR) then begin//-- REPAIR
		if (global_var(BROTHER_BUILD_POWER_ARMOR) > 1) then begin
			if (global_var(BROTHER_BUILD_POWER_ARMOR) == 3) then begin
				if (has_skill(dude_obj, SKILL_REPAIR) < 75) then begin
					script_overrides;
					display_msg(message_str(SCRIPT_ARMOR, 103));
				end
				else begin
					call chance;
				end
			end
			else begin
				call chance;
			end
		end
		else begin
			script_overrides;
			display_msg(message_str(SCRIPT_ARMOR, 102));
		end
	end
	else begin
		script_overrides;
		display_msg(message_str(SCRIPT_ARMOR, 105));
	end
end

procedure use_obj_on_p_proc
begin
	if (obj_pid(obj_being_used_with) == PID_MULTI_TOOL) then begin
		bonus := 10;
		call use_skill_on_p_proc;
	end
	else begin
		display_msg(message_str(SCRIPT_ARMOR, 105));
	end
end

procedure chance
begin
	Test := roll_vs_skill(dude_obj, SKILL_REPAIR, bonus);
	if (is_success(Test)) then begin
		call fixed;
	end
	else begin
		call failure;
	end
end

procedure fixed
begin
	script_overrides;
	set_global_var(BROTHER_BUILD_POWER_ARMOR, 4);
	display_msg(message_str(SCRIPT_ARMOR, 104));
	create_object( PID_POWERED_ARMOR, 22475, 0 );
	display_msg(message_str(SCRIPT_ARMOR, 107) + ExpPoints + message_str(SCRIPT_ARMOR, 108));
	give_exp_points(ExpPoints);
	destroy_object(self_obj);
end

procedure failure
begin
	script_overrides;
	set_global_var(BROTHER_BUILD_POWER_ARMOR, 3);
	display_msg(message_str(SCRIPT_ARMOR, 106));
end

