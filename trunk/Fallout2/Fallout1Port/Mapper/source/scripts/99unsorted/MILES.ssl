#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;

procedure look_at_p_proc;//    script_action == 21
procedure description_p_proc;//    script_action == 3
procedure talk_p_proc;//    script_action == 11
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4

procedure Miles01;
procedure Miles02;
procedure Miles03;
procedure Miles04;
procedure Miles05;
procedure Miles06;
procedure Miles07;
procedure Miles08;
procedure Miles09;
procedure Miles11;
procedure Miles12;
procedure Miles13;
procedure Miles14;
procedure Miles15;
procedure Miles16;
procedure Miles17;
procedure Miles17a;
procedure Miles18;
procedure Miles19;
procedure Miles22;
procedure Miles22a;
procedure Miles23;
procedure Miles24;
procedure Miles25;
procedure Miles27;
procedure Miles28;
procedure Miles29;
procedure MilesEnd;

variable Only_Once := 1;
variable DisplayMessage := 100;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;



procedure Start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if Only_Once then begin
		/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 41) == 0) then begin
			item_caps_adjust(self_obj, random(500, 750));
		end
		if ((global_var(BLADES_STATUS) == 9103) or (global_var(BLADES_STATUS) == 9102)) then begin
/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 0);
		end
		else begin
/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 49);
		end
/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 6);
		Only_Once := 0;
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	if (local_var(4) == 1) then begin
		display_msg(message_str(SCRIPT_MILES, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_MILES, 101));
	end
end

procedure description_p_proc
begin
	script_overrides;
	if (local_var(4) == 1) then begin
		display_msg(message_str(SCRIPT_MILES, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_MILES, 101));
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (global_var(ENEMY_ADYTUM) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 2);
	end
	else begin
		if ((local_var(4) == 1) and (get_critter_stat(dude_obj, 4) < 4)) then begin
			float_msg(self_obj, message_str(SCRIPT_MILES, 152), 0);
		end
		else begin
			if (local_var(5) == 2) then begin
				float_msg(self_obj, message_str(SCRIPT_MILES, 152), 0);
			end
			else begin
				call get_reaction;
				start_gdialog(249, self_obj, -1, -1, -1);
				gsay_start;
				if (local_var(4) == 0) then begin
					call Miles01;
				end
				else begin
					if (global_var(QUEST_BONEYARD_5_FIX_FARM) == 0) then begin
						DisplayMessage := 118;
						call Miles04;
					end
					else begin
						if (global_var(QUEST_BONEYARD_5_FIX_FARM) == 1) then begin
							call Miles13;
						end
						else begin
							if (global_var(QUEST_BONEYARD_5_FIX_FARM) == 9302) then begin
								call Miles18;
							end
							else begin
								if (global_var(QUEST_BONEYARD_5_FIX_FARM) == 9303) then begin
									call Miles19;
								end
								else begin
									if (global_var(QUEST_BONEYARD_5_FIX_FARM) == 9304) then begin
										if (local_var(5) == 0) then begin
											/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, 3)) then begin
												call Miles22;
											end
											else begin
												call Miles22a;
											end
										end
										else begin
											if (local_var(5) == 9305) then begin
												/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, 3)) then begin
													call Miles24;
												end
												else begin
													call Miles29;
												end
											end
											else begin
												/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, 3)) then begin
													call Miles28;
												end
												else begin
													call Miles29;
												end
											end
										end
									end
								end
							end
						end
					end
				end
				gsay_end;
				end_dialogue;
			end
		end
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_ADYTUM, 1);
/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 49);
	end
end

procedure destroy_p_proc
begin

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
		set_global_var(ENEMY_ADYTUM, 1);
/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 49);
	end
end

procedure critter_p_proc
begin
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if (global_var(ENEMY_ADYTUM) == 1) then begin
			attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
		end
	end
end

procedure pickup_p_proc
begin
	set_global_var(ENEMY_ADYTUM, 1);
end

procedure Miles01
begin
	gsay_reply(249, 102);
	giq_option(4, 249, 103, Miles02, 50);
	giq_option(4, 249, 104, Miles03, 50);
	giq_option(-3, 249, 105, Miles09, 50);
end

procedure Miles02
begin
	gsay_message(249, 106, 50);
end

procedure Miles03
begin
	DisplayMessage := 107;
	call Miles04;
end

procedure Miles04
begin
	set_local_var(4, 1);
	gsay_reply(249, DisplayMessage);
	gsay_option(249, 108, Miles05, 50);
	gsay_option(249, 109, Miles06, 50);
	gsay_option(249, 110, Miles07, 50);
	gsay_option(249, 111, Miles08, 50);
end

procedure Miles05
begin
	gsay_reply(249, 112);
	gsay_option(249, 113, Miles11, 50);
end

procedure Miles06
begin
	DisplayMessage := 114;
	call Miles04;
end

procedure Miles07
begin
	DisplayMessage := 115;
	call Miles04;
end

procedure Miles08
begin
	gsay_message(249, 116, 50);
end

procedure Miles09
begin
	set_local_var(4, 1);
	gsay_message(249, 117, 50);
end

procedure Miles11
begin
	gsay_reply(249, 119);
	gsay_option(249, 120, Miles12, 50);
	gsay_option(249, 121, MilesEnd, 50);
end

procedure Miles12
begin
	gsay_message(249, 122, 50);
	set_global_var(QUEST_BONEYARD_5_FIX_FARM, 1);
end

procedure Miles13
begin
	gsay_reply(249, 123);
	/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, 98)) then begin
		gsay_option(249, 124, Miles15, 50);
	end
	else begin
		gsay_option(249, 125, Miles14, 50);
	end
end

procedure Miles14
begin
	gsay_message(249, 126, 50);
end

procedure Miles15
begin
	gsay_reply(249, 127);
	set_global_var(QUEST_BONEYARD_5_FIX_FARM, 9302);
	gsay_option(249, 128, Miles16, 50);
	gsay_option(249, 129, MilesEnd, 50);
end

procedure Miles16
begin
	gsay_reply(249, 130);
	gsay_option(249, 131, Miles17, 50);
	gsay_option(249, 132, Miles17a, 50);
end

procedure Miles17
begin
	variable LVar0 := 0;
	gsay_message(249, 133, 50);
	LVar0 := obj_carrying_pid_obj(dude_obj, PID_PUMP_PARTS);
	rm_obj_from_inven(dude_obj, LVar0);
	destroy_object(LVar0);
	item_caps_adjust(dude_obj, 125);
	LVar0 := create_object_sid(PID_STIMPAK, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, LVar0, 3);
	set_global_var(QUEST_BONEYARD_5_FIX_FARM, 9304);
	gsay_message(249, 137, 50);
end

procedure Miles17a
begin
	variable LVar0 := 0;
	call UpReactLevel;
	gsay_message(249, 133, 50);
	LVar0 := obj_carrying_pid_obj(dude_obj, PID_PUMP_PARTS);
	rm_obj_from_inven(dude_obj, LVar0);
	destroy_object(LVar0);
	item_caps_adjust(dude_obj, 150);
	LVar0 := create_object_sid(PID_STIMPAK, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, LVar0, 4);
	set_global_var(QUEST_BONEYARD_5_FIX_FARM, 9304);
	gsay_message(249, 137, 50);
end

procedure Miles18
begin
	gsay_reply(249, 134);
	gsay_option(249, 128, Miles16, 50);
	gsay_option(249, 129, MilesEnd, 50);
end

procedure Miles19
begin
	variable LVar0 := 0;
	gsay_message(249, 135, 50);
	gsay_message(249, 136, 50);
	LVar0 := obj_carrying_pid_obj(dude_obj, PID_PUMP_PARTS);
	rm_obj_from_inven(dude_obj, LVar0);
	destroy_object(LVar0);
	item_caps_adjust(dude_obj, 250);
	LVar0 := create_object_sid(PID_STIMPAK, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, LVar0, 6);
	set_global_var(QUEST_BONEYARD_5_FIX_FARM, 9304);
	gsay_message(249, 137, 50);
end

procedure Miles22
begin
	gsay_reply(249, 138);
	set_local_var(5, 9305);
	set_global_var(CHEMISTRY_BOOK, 1);
	gsay_option(249, 139, MilesEnd, 50);
	gsay_option(249, 140, Miles23, 50);
end

procedure Miles22a
begin
	gsay_message(249, 153, 50);
end

procedure Miles23
begin
	gsay_message(249, 141, 50);
end

procedure Miles24
begin
	gsay_reply(249, 142);
	/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, 237)) then begin
		gsay_option(249, 143, Miles25, 50);
	end
	else begin
		gsay_option(249, 144, MilesEnd, 50);
	end
end

procedure Miles25
begin
	variable LVar0 := 0;
	gsay_reply(249, 145);
	LVar0 := obj_carrying_pid_obj(dude_obj, PID_CHEMISTRY_MANUAL);
	rm_obj_from_inven(dude_obj, LVar0);
	add_obj_to_inven(self_obj, LVar0);
	set_local_var(5, 9306);
	gsay_option(249, 146, Miles28, 50);
	gsay_option(249, 147, Miles27, 50);
end

procedure Miles27
begin
	gsay_message(249, 148, 50);
end

procedure Miles28
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	gsay_message(249, 149, 50);
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	game_time_advance(game_ticks(1 * 60 * 60 * 24));// 1 day for bonding to occur
	game_time_advance(game_ticks(60 * 60 * 6));// 6 hours to read the books and perform pre-bonding tasks
	gfade_in(1);
	gsay_message(249, 150, 50);
	LVar1 := create_object_sid(PID_FRIDGE, 0, 0, -1);
	move_obj_inven_to_obj(dude_obj, LVar1);
	move_obj_inven_to_obj(LVar1, dude_obj);
	LVar0 := obj_carrying_pid_obj(dude_obj, PID_POWERED_ARMOR);
	rm_obj_from_inven(dude_obj, LVar0);
	destroy_object(LVar0);
	destroy_object(LVar1);
	LVar0 := create_object_sid(PID_HARDENED_POWER_ARMOR, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	set_local_var(5, 2);
end

procedure Miles29
begin
	gsay_message(249, 151, 50);
end

procedure MilesEnd
begin
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end



