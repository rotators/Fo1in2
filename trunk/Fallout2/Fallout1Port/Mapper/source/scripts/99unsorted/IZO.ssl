#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure destroy_p_proc;//    script_action == 18
procedure description_p_proc;//    script_action == 3
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure map_update_p_proc;//	script_action == 23
procedure map_enter_p_proc;//	script_action == 15
procedure ShowToDoor_talk;
procedure PayPlayer_talk;
procedure IzoEnd;
import variable Gizmo_ptr;
import variable Gizmo_is_angry;
import variable show_to_door;
import variable payment;
variable initialized := 0;
variable HOSTILE;
variable line103flag;

procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, 17) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, 17); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 2) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, 2); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 1) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, 1); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 74) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, 74); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 113) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, 113); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if (not(initialized)) then begin
		initialized := 1;
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 13);
		if (global_var(CAPTURE_GIZMO) == 2) then begin
			kill_critter(self_obj, 62);
		end
	end
	if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
		call critter_p_proc;
	end
	else begin
		if (script_action == 3) then begin//DETAILED ON-CLICK DESCRIPTION (Binoculars icon) - description_p_proc
			call description_p_proc;
		end
		else begin
			if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
				call destroy_p_proc;
			end
			else begin
				if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
					call talk_p_proc;
				end
				else begin
					if (script_action == 23) then begin
						call map_update_p_proc;
					end
					else begin
						if (script_action == 15) then begin
							call map_enter_p_proc;
						end
					end
				end
			end
		end
	end
end

procedure critter_p_proc
begin
	if (global_var(ENEMY_GIZMOS_GANG) == 1) then begin// - ENEMY_GIZMOS_GANG
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			HOSTILE := 1;
			attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
		end
	end
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		HOSTILE := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
	else begin
		if (Gizmo_is_angry) then begin
			Gizmo_is_angry := 0;
			attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);//	HOSTILE := 1;
		end
		else begin
			if (show_to_door) then begin
				if global_var(FADE_TIMES_INCREASED) then begin
					gfade_out(1);
					gfade_out(1);
				end
				gfade_out(1);
				move_to(self_obj, 27719, elevation(self_obj));// was 22916
				move_to(dude_obj, 28119, elevation(dude_obj));// was 23516
				gfade_in(1);
				start_gdialog(622, self_obj, 4, -1, -1);
				gsay_start;
				call ShowToDoor_talk;
				gsay_end;
				end_dialogue;
				animate_move_obj_to_tile(self_obj, 16720, 1);
//				gfade_out(1);
//				move_to(self_obj, 16921, elevation(self_obj));
//				gfade_in(1);
				show_to_door := 0;
			end
/*
//////////////////////////////////////////////////////////
 ORIGINAL:
			if (show_to_door) then begin
				if (tile_distance_objs(dude_obj, Gizmo_ptr) > 8) then begin
					if (tile_num(self_obj) != 16520) then begin
						animate_move_obj_to_tile(self_obj, 16520, 0);
					end
					else begin
						anim(self_obj, 1000, 2);
						line103flag := 0;
						show_to_door := 0;
					end
				end
				else begin
					if (tile_num(self_obj) != 18720) then begin
						animate_move_obj_to_tile(self_obj, 18720, 0);
					end
					else begin
						if (not(line103flag)) then begin
							line103flag := 1;
							display_msg(message_str(622, 103));
						end
					end
				end
			end
//////////////////////////////////////////////////////////
*/
		end
	end
end

procedure map_enter_p_proc
begin
	set_local_var(4, 0);
	if (tile_num(self_obj) == 27719) then begin
		animate_move_obj_to_tile(self_obj, 16720, 1);
	end
end

procedure map_update_p_proc
begin
	if ((tile_num(self_obj) == 16720) and (local_var(4) == 0)) then begin
		set_local_var(4, 1);
		anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), 16920));
	end
end

procedure destroy_p_proc
begin
//
//BEGIN WEAPON DROP MOD CODE
//--original code and mod by:--
// Josan12 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=18843) and 
// MIB88 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=4464)
//
	if global_var(WEAPONDROP_MOD_STATUS) and not(global_var(FIXT_BUGFIXES_ONLY)) and (critter_inven_obj(self_obj, 1) or critter_inven_obj(self_obj, 2)) then begin// only run if Weapon Drop is enabled, AND Fixes Only is disabled, AND actually holding something
		variable item1 := 0;  variable item2 := 0;  variable armor := 0;  variable item1PID := 0;  variable item2PID := 0;  variable armorPID := 0;  variable drophex := 0;  if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop BEGINS");  end
		if (critter_inven_obj(self_obj, 1) > 0) then begin  item1 := critter_inven_obj(self_obj, 1);  end    if (critter_inven_obj(self_obj, 2) > 0) then begin  item2 := critter_inven_obj(self_obj, 2);  end    if (critter_inven_obj(self_obj, 0) > 0) then begin  armor := critter_inven_obj(self_obj, 0);  end    if item1 then begin  item1PID := obj_pid(item1);  end    if item2 then begin  item2PID := obj_pid(item2);  end    if armor then begin  armorPID := obj_pid(armor);  end    drophex := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(global_var(WEAPONDROP_MOD_MINIMUM), global_var(WEAPONDROP_MOD_MAXIMUM)));
		if (item1PID != 19) and (item1PID != 21) and (item1PID != 79) and (item1PID != 205) and (item1PID != 234) and (item1PID != 235) and (item1PID != 244) and (item2PID != 19) and (item2PID != 21) and (item2PID != 79) and (item2PID != 205) and (item2PID != 234) and (item2PID != 235) and (item2PID != 244) then begin//Don't drop if:  Rock (19), Brass Knuckles (21), Flare (79), Lit Flare (205), Spiked Knuckles (234), Power Fist (235), or Gold Nugget (244)
			if (item1 > 0) then begin if (obj_item_subtype(item1) == 3) then begin
			rm_obj_from_inven(self_obj, item1);  move_to(item1, drophex, elevation(self_obj));  end  end
			if (item2 > 0) then begin if (obj_item_subtype(item2) == 3) then begin
			rm_obj_from_inven(self_obj, item2);  move_to(item2, drophex, elevation(self_obj));  end  end    if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop ENDS");  end
		end
	end
//END WEAPON DROP MOD CODE
//
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_GIZMOS_GANG, 1);
	end
	if source_obj == dude_obj then begin
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
	end
end

procedure description_p_proc
begin
	script_overrides;
	display_msg(message_str(622, 100));
end

procedure pickup_p_proc
begin
	HOSTILE := 1;
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	display_msg(message_str(622, 101));
	if ((payment > 0) and (local_var(3) == 0)) then begin
//
//	   use_obj(dude_obj);//What the fuck is this? --Sduibek
//
		item_caps_adjust(dude_obj, payment);
		start_gdialog(622, self_obj, 4, -1, -1);
		gsay_start;
		call PayPlayer_talk;
		gsay_end;
		end_dialogue;
		payment := 0;
		set_local_var(3, 1);
	end
end

procedure ShowToDoor_talk
begin
	if not(global_var(GIZMO_NICE_SHOWDOOR)) then begin
		gsay_message(622, 103, 51);
	end
	else begin
		set_global_var(GIZMO_NICE_SHOWDOOR, 0);
		gsay_message(622, 106, 50);
	end
end

procedure PayPlayer_talk
begin
	gsay_reply(622, 102);
	giq_option(4, 622, 104, IzoEnd, 50);
	giq_option(-3, 622, 105, IzoEnd, 51);
end

procedure IzoEnd
begin
end

