/*

	Supermutant Nightkin

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_FLSUPMUT
//#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

variable tmp_hostile;
variable initial :=  0;
variable in_timed_event;
variable weaponPtr;

procedure start begin
	if not(initial) then begin
		initial :=  1;
		set_self_team(TEAM_NECROPOLIS_MUTANT );
		if (local_var(0) == 0) then begin
			set_local_var(0, random(100, 109));
			weaponPtr := create_object( PID_MINIGUN, 0, 0 );
			add_obj_to_inven(self_obj, weaponPtr);
			wield_obj_critter(self_obj, weaponPtr);
			add_obj_to_inven(self_obj, create_object( PID_5MM_JHP, 0, 0 ));
		end
		anim(self_obj, 1000, random(0, 5));
	end
end

procedure critter_p_proc
begin
	if (global_var( GVAR_ENEMY_FOLL_INVADERS )) then begin
		tmp_hostile := 1;
	end
	if (tmp_hostile and self_can_see_dude) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (not(in_timed_event)) then begin
			in_timed_event := 1;
			add_timer_event(self_obj, game_ticks(random(6, 10)), random(1, 3));
		end
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);

	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_FOLL_INVADERS, 1 );
	end
	inc_evil_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	display_msg(message_str(SCRIPT_FLSUPMUT, local_var(0)));
end

procedure pickup_p_proc
begin
	tmp_hostile := 1;
end

procedure talk_p_proc
begin
	variable LVar0 := 0;
	dude_look_at_critter;
	script_overrides;
	LVar0 := random(110, 118);
	float_msg(self_obj, message_str(SCRIPT_FLSUPMUT, LVar0), 0);
	if ((LVar0 == 112) or (LVar0 == 117)) then begin
		tmp_hostile := 1;
	end
end

procedure timed_event_p_proc
begin
	if (fixed_param == 1) then begin
		anim(self_obj, 1000, random(0, 5));
	end
	else begin
		animate_move_obj_to_tile(self_obj, tile_num_in_direction(self_tile, random(0, 5), random(1, 3)), 0);
	end
	in_timed_event := 0;
end
