#include "..\headers\define.h"

procedure start;
procedure map_enter_p_proc;//    script_action == 15
procedure map_update_p_proc;//    script_action == 23
procedure look_at_p_proc;//    script_action == 21
procedure use_p_proc;//    script_action == 6
procedure use_obj_on_p_proc;//    script_action == 7
procedure use_skill_on_p_proc;//    script_action == 8
procedure timed_event_p_proc;//    script_action == 22
procedure damage_p_proc;//    script_action == 3
procedure description_p_proc;//    script_action == 14

import variable Door_ptr;
import variable Cabbot_Ptr;


procedure start
begin
	if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
		call map_enter_p_proc;
	end
	else begin
		if (script_action == 23) then begin//map_update_p_proc -- called every dozen seconds or so, & additionally on certain events (exit dialog, end combat, load map, etc)
			call map_update_p_proc;
		end
		else begin
			if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
				call look_at_p_proc;
			end
			else begin
				if (script_action == 6) then begin//use_p_proc - Use, Activate, or Manipulate the Object or Item
					call use_p_proc;
				end
				else begin
					if (script_action == 7) then begin//<-- use_obj_on_p_proc
						call use_obj_on_p_proc;
					end
					else begin
						if (script_action == 8) then begin//<-- use_skill_on_p_proc
							call use_skill_on_p_proc;
						end
						else begin
							if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
								call timed_event_p_proc;
							end
							else begin
								if (script_action == 3) then begin
									call description_p_proc;
								end
								else begin
									if (script_action == 14) then begin
										call damage_p_proc;
									end
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure damage_p_proc
begin
	display_msg(message_str(SCRIPT_MBOUT2IN, 106));
end

procedure description_p_proc
begin
	if (obj_is_locked(self_obj)) then begin
		display_msg(message_str(SCRIPT_DOOR, 104));//{104}{}{The door is locked.}
	end
end

procedure map_enter_p_proc
begin
	Door_ptr := self_obj;
	if obj_is_open(self_obj) then begin
		add_timer_event(self_obj, game_ticks(1), 1);
	end
end

procedure timed_event_p_proc
begin
	set_local_var(0, 0);
	obj_close(self_obj);
end

procedure map_update_p_proc
begin
	Door_ptr := self_obj;
end

procedure look_at_p_proc
begin
	if ((global_var(QUEST_BROHOOD_1_JOIN_THEM) == 2) and (local_var(0) == 0)) then begin
		display_msg(message_str(SCRIPT_MBOUT2IN, 102));//"{102}{}{The door is not locked.}"
	end
	else begin
		display_msg(message_str(SCRIPT_MBOUT2IN, 100));//"{100}{}{The door is locked. A security code is required to unlock it.}"
	end
end

procedure use_p_proc
begin
	if ((global_var(QUEST_BROHOOD_1_JOIN_THEM) != 2) and (local_var(0) == 0)) then begin
		if (source_obj != Cabbot_Ptr) then begin
			script_overrides;
			set_map_var(0, map_var(0) + 1);
			display_msg(message_str(SCRIPT_MBOUT2IN, 104));//"{104}{}{You are unable to unlock the door.}"
		end
	end
end

procedure use_obj_on_p_proc
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	LVar0 := obj_being_used_with;
	LVar1 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, -50);
	if (global_var(QUEST_BROHOOD_1_JOIN_THEM) != 2) then begin
		set_map_var(0, map_var(0) + 1);
	end
	if (obj_pid(LVar0) == 77) then begin
		script_overrides;
		if (is_success(LVar1)) then begin
			if (global_var(QUEST_BROHOOD_1_JOIN_THEM) != 2) then begin
				set_map_var(0, map_var(0) + 2);
				set_global_var(ENEMY_BROTHERHOOD, 1);
			end
			set_local_var(0, 1);
			display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
			display_msg(message_str(SCRIPT_GENCHAT, 103) + "75" + message_str(SCRIPT_GENCHAT, 104));
			give_exp_points(75);
		end
		else begin
			if (is_critical(LVar1)) then begin
				rm_obj_from_inven(dude_obj, LVar0);
				destroy_object(LVar0);
				jam_lock(self_obj);
				display_msg(message_str(SCRIPT_DOOR, 101));//{101}{}{You broke your lockpicks!}
			end
			else begin
				display_msg(message_str(SCRIPT_DOOR, 103));//{103}{}{You were not able to pick the lock.}
			end
		end
	end
end

procedure use_skill_on_p_proc
begin
	variable LVar0 := 0;
	if (global_var(QUEST_BROHOOD_1_JOIN_THEM) != 2) then begin
		set_map_var(0, map_var(0) + 1);
	end
	if (local_var(0) == 0) then begin
		if (action_being_used == SKILL_LOCKPICK) then begin//-- LOCKPICK
			script_overrides;
			LVar0 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, -70);
			if (is_success(LVar0)) then begin
				set_local_var(0, 1);
				if (global_var(QUEST_BROHOOD_1_JOIN_THEM) != 2) then begin
					set_map_var(0, map_var(0) + 2);
					set_global_var(ENEMY_BROTHERHOOD, 1);
				end
				display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
				give_exp_points(75);
				display_msg(message_str(SCRIPT_GENCHAT, 103) + "75" + message_str(SCRIPT_GENCHAT, 104));
			end
			else begin
				if (is_critical(LVar0)) then begin
					jam_lock(self_obj);
					display_msg(message_str(SCRIPT_DOOR, 110));//{110}{}{The lock is beyond your ability to pick.}
				end
				else begin
					display_msg(message_str(SCRIPT_DOOR, 103));//{103}{}{You were not able to pick the lock.}
				end
			end
		end
	end
	else begin
		display_msg(message_str(SCRIPT_DOOR, 109));//{109}{}{The door is already unlocked.}
	end
end

