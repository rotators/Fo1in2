#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure Merchant00;
procedure Merchant01;
procedure Merchant02;
procedure Merchant03;
procedure Merchant04;
procedure Merchant05;
procedure Get_Stuff;
procedure Put_Stuff;

variable hostile;
variable Only_Once := 1;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;



procedure start
begin
	
	
	if Only_Once then begin
		Only_Once := 0;
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 41);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 50);
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
				end
			end
		end
	end
end

procedure combat
begin
	hostile := 1;
end

procedure critter_p_proc
begin
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		hostile := 1;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	get_reaction
	call Get_Stuff;
	start_gdialog(782, self_obj, 4, -1, -1);
	gsay_start;
	call Merchant00;
	gsay_end;
	end_dialogue;
	call Put_Stuff;
end

procedure destroy_p_proc
begin

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_ALLNONE, 110));
end

procedure Merchant00
begin
	gsay_reply(782, 101);
	giq_option(4, 782, 102, Merchant01, 50);
	giq_option(4, 782, 103, Merchant02, 50);
	giq_option(4, 782, 104, Merchant03, 50);
	giq_option(-3, 782, 105, Merchant04, 50);
end

procedure Merchant01
begin
	gsay_message(782, 106, 50);
	gdialog_mod_barter(-10);
	call Merchant05;
end

procedure Merchant02
begin
	gsay_message(782, 107, 50);
	gdialog_mod_barter(-10);
	call Merchant05;
end

procedure Merchant03
begin
end

procedure Merchant04
begin
	gsay_message(782, 108, 50);
end

procedure Merchant05
begin
	gsay_message(782, 109, 50);
end

procedure Get_Stuff
begin
	variable LVar0 := 0;
	LVar0 := create_object_sid(PID_FLAMETHROWER_FUEL, 0, 0, -1);
	add_mult_objs_to_inven(self_obj, LVar0, 5);
	LVar0 := create_object_sid(PID_EXPLOSIVE_ROCKET, 0, 0, -1);
	add_mult_objs_to_inven(self_obj, LVar0, 5);
	LVar0 := create_object_sid(PID_FRAG_GRENADE, 0, 0, -1);
	add_mult_objs_to_inven(self_obj, LVar0, 6);
	LVar0 := create_object_sid(PID_FLAMER, 0, 0, -1);
	add_mult_objs_to_inven(self_obj, LVar0, 2);
	LVar0 := create_object_sid(PID_HUNTING_RIFLE, 0, 0, -1);
	add_mult_objs_to_inven(self_obj, LVar0, 2);
	LVar0 := create_object_sid(PID_ASSAULT_RIFLE, 0, 0, -1);
	add_mult_objs_to_inven(self_obj, LVar0, 1);
	LVar0 := create_object_sid(PID_PULSE_GRENADE, 0, 0, -1);
	add_mult_objs_to_inven(self_obj, LVar0, 6);
	LVar0 := create_object_sid(PID_ROCKET_LAUNCHER, 0, 0, -1);
	add_mult_objs_to_inven(self_obj, LVar0, 1);
	LVar0 := create_object_sid(PID_10MM_SMG, 0, 0, -1);
	add_mult_objs_to_inven(self_obj, LVar0, 2);
	LVar0 := create_object_sid(PID_SNIPER_RIFLE, 0, 0, -1);
	add_mult_objs_to_inven(self_obj, LVar0, 1);
end

procedure Put_Stuff
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	LVar0 := obj_carrying_pid_obj(self_obj, PID_FLAMETHROWER_FUEL);
	LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 5);
	destroy_object(LVar0);
	LVar0 := obj_carrying_pid_obj(self_obj, PID_EXPLOSIVE_ROCKET);
	LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 5);
	destroy_object(LVar0);
	LVar0 := obj_carrying_pid_obj(self_obj, PID_FRAG_GRENADE);
	LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 6);
	destroy_object(LVar0);
	LVar0 := obj_carrying_pid_obj(self_obj, PID_FLAMER);
	LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 2);
	destroy_object(LVar0);
	LVar0 := obj_carrying_pid_obj(self_obj, PID_HUNTING_RIFLE);
	LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 2);
	destroy_object(LVar0);
	LVar0 := obj_carrying_pid_obj(self_obj, PID_ASSAULT_RIFLE);
	LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 1);
	destroy_object(LVar0);
	LVar0 := obj_carrying_pid_obj(self_obj, PID_PULSE_GRENADE);
	LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 6);
	destroy_object(LVar0);
	LVar0 := obj_carrying_pid_obj(self_obj, PID_ROCKET_LAUNCHER);
	LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 1);
	destroy_object(LVar0);
	LVar0 := obj_carrying_pid_obj(self_obj, PID_10MM_SMG);
	LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 2);
	destroy_object(LVar0);
	LVar0 := obj_carrying_pid_obj(self_obj, PID_SNIPER_RIFLE);
	LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 1);
	destroy_object(LVar0);
end


