#include "..\headers\define.h"

procedure start;
procedure critter_p_proc;//    script_action == 12
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure pickup_p_proc;//    script_action == 4
procedure timed_event_p_proc;//    script_action == 22
procedure talk_p_proc;//    script_action == 11

procedure Michelle00;
procedure Michelle01;
procedure Michelle02;
procedure Michelle03;
procedure Michelle04;
procedure Michelle05;
procedure Michelle06;
procedure Michelle07;
procedure Michelle08;
procedure Michelle09;
procedure Michelle10;
procedure Michelle11;
procedure Michelle12;
procedure Michelle13;
procedure Michelle14;
procedure Michelle15;
procedure Michelle16;
procedure Michelle17;
procedure MichelleCombat;
procedure MichelleEnd;

procedure show_true_name;
procedure show_false_name;

variable hostile;
variable initial :=  0;



procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, STAT_max_hp) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, PID_BAG) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BACKPACK) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BROWN_BAG) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if not(initial) then begin
		initial :=  1;
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 47);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 27);
	end
	if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
		call critter_p_proc;
	end
	else begin
		if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
			call destroy_p_proc;
		end
		else begin
			if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
				call look_at_p_proc;
			end
			else begin
				if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
					call pickup_p_proc;
				end
				else begin
					if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
						call talk_p_proc;
					end
					else begin
						if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
							call timed_event_p_proc;
						end
					end
				end
			end
		end
	end
end

procedure critter_p_proc
begin
	if (obj_can_see_obj(self_obj, dude_obj) and (global_var(BLADES_LEFT) < 41)) then begin
		hostile := 1;
	end
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
end

procedure destroy_p_proc
begin
	set_global_var(BLADES_LEFT, (global_var(BLADES_LEFT) - 1));
	rm_timer_event(self_obj);

	if source_obj == dude_obj then begin
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	if (((global_var(QUEST_BONEYARD_1_ME_BLADE) == 2) or get_critter_stat(dude_obj, STAT_lu)) > 6) then begin
		call show_true_name;
	end
	else begin
		if (get_critter_stat(dude_obj, STAT_lu) < 4) then begin
			call show_false_name;
		end
		else begin
			if (get_critter_stat(dude_obj, STAT_iq) < 5) then begin
				call show_false_name;
			end
			else begin
				if (random(0, 1)) then begin
					call show_false_name;
				end
				else begin
					call show_true_name;
				end
			end
		end
	end
end

procedure pickup_p_proc
begin
	hostile := 1;
end

procedure timed_event_p_proc
begin
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		hostile := 1;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	start_gdialog(283, self_obj, 4, -1, -1);
	gsay_start;
	set_local_var(0, 1);
	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		call Michelle15;
	end
	else begin
		if (global_var(QUEST_BONEYARD_1_ME_BLADE) == 1) then begin
			call Michelle16;
		end
		else begin
			if (global_var(QUEST_BONEYARD_1_ME_BLADE) == 2) then begin
				call Michelle17;
			end
			else begin
				call Michelle00;
			end
		end
	end
	gsay_end;
	end_dialogue;
end

procedure show_true_name
begin
	script_overrides;
	if (local_var(0)) then begin
		display_msg(message_str(SCRIPT_MICHELLE, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_MICHELLE, 103));
	end
end

procedure show_false_name
begin
	script_overrides;
	display_msg(message_str(SCRIPT_MICHELLE, random(104, 110)));
end

procedure Michelle00
begin
	gsay_reply(283, 111);
	giq_option(-3, 283, 112, Michelle01, 50);
	giq_option(4, 283, 113, Michelle02, 50);
	giq_option(5, 283, 114, Michelle09, 50);
	giq_option(4, 283, 115, MichelleCombat, 50);
end

procedure Michelle01
begin
	gsay_reply(283, 116);
	giq_option(-3, 283, 117, MichelleCombat, 50);
	giq_option(-3, 283, 118, MichelleEnd, 50);
end

procedure Michelle02
begin
	gsay_reply(283, 119);
	giq_option(4, 283, 120, Michelle03, 50);
	giq_option(5, 283, 121, Michelle04, 50);
	giq_option(5, 283, 122, Michelle08, 50);
	giq_option(4, 283, 123, MichelleCombat, 50);
end

procedure Michelle03
begin
	gsay_message(283, 124, 50);
	call MichelleCombat;
end

procedure Michelle04
begin
	gsay_reply(283, 125);
	giq_option(5, 283, 126, Michelle05, 50);
	giq_option(5, 283, 127, Michelle06, 50);
	giq_option(7, 283, 128, Michelle07, 50);
end

procedure Michelle05
begin
	gsay_reply(283, 129);
	giq_option(5, 283, 130, MichelleEnd, 50);
	giq_option(5, 283, 131, MichelleEnd, 50);
end

procedure Michelle06
begin
	gsay_message(283, 132, 50);
	call MichelleCombat;
end

procedure Michelle07
begin
	gsay_message(283, 133, 50);
	call MichelleCombat;
end

procedure Michelle08
begin
	gsay_message(283, 134, 50);
	call MichelleCombat;
end

procedure Michelle09
begin
	gsay_reply(283, 135);
	giq_option(5, 283, 136, Michelle10, 50);
	giq_option(5, 283, 137, Michelle11, 50);
	giq_option(5, 283, 138, Michelle04, 50);
	giq_option(5, 283, 139, Michelle12, 50);
	giq_option(5, 283, 140, MichelleCombat, 50);
end

procedure Michelle10
begin
	gsay_message(283, 141, 50);
	call MichelleCombat;
end

procedure Michelle11
begin
	gsay_message(283, message_str(SCRIPT_MICHELLE, 142) + " " + message_str(SCRIPT_MICHELLE, 143), 50);
	call MichelleCombat;
end

procedure Michelle12
begin
	gsay_reply(283, 144);
	giq_option(5, 283, 145, Michelle13, 50);
	giq_option(5, 283, 146, Michelle14, 50);
	giq_option(5, 283, 147, MichelleCombat, 50);
end

procedure Michelle13
begin
	gsay_message(283, 148, 50);
end

procedure Michelle14
begin
	gsay_message(283, 149, 50);
	call MichelleCombat;
end

procedure Michelle15
begin
	gsay_message(283, 150, 50);
	add_timer_event(self_obj, game_ticks(10), 1);
end

procedure Michelle16
begin
	gsay_message(283, 151, 50);
end

procedure Michelle17
begin
	gsay_message(283, 152, 50);
end

procedure MichelleCombat
begin
	hostile := 1;
end

procedure MichelleEnd
begin
end
