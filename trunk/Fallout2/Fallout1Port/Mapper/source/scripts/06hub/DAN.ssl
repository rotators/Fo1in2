#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure timed_event_p_proc;//    script_action == 22
procedure damage_p_proc;//    script_action == 14

procedure Dan00;
procedure Dan01;
procedure Dan02;
procedure Dan03;
procedure Dan04;
procedure Dan05;
procedure Dan06;
procedure Dan07;
procedure Dan08;
procedure Dan09;
procedure Dan10;
procedure Dan11;
procedure Dan12;
procedure Dan13;
procedure Dan14;
procedure Dan15;
procedure Dan16;
procedure Dan17;
procedure Dan18;
procedure Dan19;
procedure Dan20;
procedure Dan21;
procedure Dan22;
procedure Dan23;
procedure Dan24;
procedure Dan25;
procedure Dan26;
procedure Dan27;
procedure Dan28;

procedure DanAtNight;
procedure SendToStart;
procedure SendToStreet;
procedure SendToCattle1;
procedure SendToCattle2;
procedure SendToSleep;
procedure DanEnd;

variable tmp_hostile;
variable Only_Once := 1;
variable SetDayNight;
variable NightCount;
variable Talky;
variable WalkToTalker;
variable Sleeping;

import variable Billy_ptr;
import variable Dan_ptr;

procedure start
begin
	

	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_DAN_THE_BRAHMIN_MAN );
		set_self_ai( AI_MERCHANT );
		Dan_ptr := self_obj;
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
					else begin
						if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
							call timed_event_p_proc;
						end
					end
				end
			end
		end
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if ((game_time_hour >= 600) and (game_time_hour < 700)) then begin
		if (SetDayNight == 0) then begin
			add_timer_event(self_obj, game_ticks(30), 3);
			SetDayNight := 1;
		end
	end
	if (map_var(0) == 1) then begin
		if (WalkToTalker == 0) then begin
			reg_anim_func(2, self_obj);
			reg_anim_func(1, 1);
			reg_anim_obj_move_to_tile(self_obj, 13891, -1);
			reg_anim_func(3, 0);
			WalkToTalker := 1;
		end
	end
	if (tile_num(self_obj) == 13891) then begin
		if (map_var(0) == 1) then begin
			if (Talky == 0) then begin
				call Dan27;
				Talky := 1;
				add_timer_event(self_obj, game_ticks(60 * 2), 1);
			end
		end
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		call DanAtNight;
	end
	else begin
		if (local_var(4) == 1) then begin
			set_local_var(4, 2);
			if ((map_var(0) == 2) and (local_var(8) == 0)) then begin
				if (local_var(1) > 1) then begin
					start_gdialog(562, self_obj, 4, -1, -1);
					gsay_start;
					call Dan15;
					gsay_end;
					end_dialogue;
				end
				else begin
					call Dan28;
				end
			end
			else begin
				call Dan28;
			end
		end
		else begin
			if (local_var(4) == 2) then begin
				if ((map_var(0) == 2) and (local_var(8) == 0)) then begin
					if (local_var(1) == 1) then begin
						start_gdialog(562, self_obj, 4, -1, -1);
						gsay_start;
						call Dan16;
						gsay_end;
						end_dialogue;
					end
					else begin
						call Dan28;
					end
				end
				else begin
					call Dan28;
				end
			end
			else begin
				start_gdialog(562, self_obj, 4, -1, -1);
				gsay_start;
				call Dan00;
				gsay_end;
				end_dialogue;
				set_local_var(4, 1);
			end
		end
	end
end

procedure destroy_p_proc
begin
	set_global_var(DAN_HUB_STATUS, 1);
	rm_timer_event(self_obj);

	inc_good_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_DAN, 100));
end

procedure timed_event_p_proc
begin
	if ((game_time_hour >= 600) and (game_time_hour < 700) or ((game_time_hour >= 700) and (game_time_hour < 1800))) then begin
		if (Sleeping == 1) then begin
			reg_anim_func(2, self_obj);
			reg_anim_func(1, 1);
			reg_anim_obj_move_to_tile(self_obj, 12871, -1);
			reg_anim_func(3, 0);
			add_timer_event(self_obj, game_ticks(60 * 25), 2);
			Sleeping := 0;
		end
		else begin
			if (fixed_param == 1) then begin
				call SendToStart;
			end
			else begin
				if (fixed_param == 2) then begin
					call SendToStreet;
				end
				else begin
					if (fixed_param == 3) then begin
						call SendToCattle1;
					end
					else begin
						if (fixed_param == 4) then begin
							call SendToCattle2;
						end
					end
				end
			end
		end
	end
	else begin
		call SendToSleep;
		if (fixed_param == 4) then begin
			if (tile_distance_objs(self_obj, dude_obj) <= 10) then begin
				float_msg(self_obj, message_str(SCRIPT_DAN, 215), 2);
			end
		end
		else begin
			if (fixed_param == 5) then begin
				NightCount := 0;
				if (tile_distance_objs(self_obj, dude_obj) <= 10) then begin
					float_msg(self_obj, message_str(SCRIPT_DAN, 216), 2);
					tmp_hostile := 1;
				end
			end
		end
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_HUB, 1);
	end
end

procedure Dan00
begin
	gsay_reply(562, 102);
	giq_option(5, 562, 106, Dan11, 50);
	giq_option(4, 562, 107, Dan01, 50);
	if (map_var(0) == 2) then begin
		giq_option(4, 562, 108, Dan14, 50);
		set_local_var(8, 1);
	end
	giq_option(-3, 562, 109, Dan02, 50);
end

procedure Dan01
begin
	gsay_reply(562, 110);
	giq_option(4, 562, 111, Dan03, 50);
	giq_option(4, 562, 112, Dan05, 50);
	giq_option(5, 562, 113, Dan11, 50);
	giq_option(4, 562, 114, DanEnd, 50);
end

procedure Dan02
begin
	gsay_message(562, 115, 51);
end

procedure Dan03
begin
	if (dude_is_male) then begin
		gsay_reply(562, 118);
	end
	else begin
		gsay_reply(562, 119);
	end
	giq_option(4, 562, 120, Dan04, 51);
	giq_option(5, 562, 121, Dan11, 50);
	giq_option(4, 562, 122, DanEnd, 50);
end

procedure Dan04
begin
	gsay_reply(562, 123);
	giq_option(4, 562, 124, Dan06, 51);
	giq_option(4, 562, 125, DanEnd, 50);
end

procedure Dan05
begin
	gsay_reply(562, 126);
	giq_option(4, 562, 127, Dan06, 51);
	giq_option(4, 562, 128, DanEnd, 50);
end

procedure Dan06
begin
	set_local_var(5, 1);
	gsay_reply(562, 129);
	giq_option(4, 562, 130, Dan07, 51);
	giq_option(4, 562, 131, Dan09, 50);
end

procedure Dan07
begin
	gsay_reply(562, 132);
	giq_option(4, 562, 133, Dan10, 51);
	giq_option(4, 562, 134, Dan08, 50);
end

procedure Dan08
begin
	gsay_reply(562, 135);
	giq_option(4, 562, 136, Dan09, 50);
	giq_option(4, 562, 137, Dan11, 50);
end

procedure Dan09
begin
	if (dude_is_male) then begin
		gsay_message(562, 138, 51);
	end
	else begin
		gsay_message(562, 139, 51);
	end
end

procedure Dan10
begin
	gsay_message(562, 141, 51);
	call combat;
end

procedure Dan11
begin
	if (dude_is_male) then begin
		gsay_reply(562, 142);
	end
	else begin
		gsay_reply(562, message_str(SCRIPT_DAN, 142) + " " + message_str(SCRIPT_DAN, 143));
	end
	giq_option(7, 562, 144, Dan12, 50);
	giq_option(4, 562, 145, Dan13, 50);
	giq_option(4, 562, 146, DanEnd, 50);
end

procedure Dan12
begin
	gsay_reply(562, 147);
	giq_option(4, 562, 148, DanEnd, 50);
	giq_option(4, 562, 149, DanEnd, 50);
	giq_option(5, 562, 150, Dan13, 50);
end

procedure Dan13
begin
	gsay_message(562, 151, 50);
end

procedure Dan14
begin
	gsay_reply(562, 152);
	giq_option(4, 562, 153, Dan17, 50);
	giq_option(4, 562, 154, DanEnd, 50);
end

procedure Dan15
begin
	gsay_reply(562, 155);
	giq_option(5, 562, 156, Dan11, 50);
	giq_option(4, 562, 157, Dan01, 50);
	if (map_var(0) == 2) then begin
		giq_option(4, 562, 158, Dan14, 50);
	end
	giq_option(4, 562, 159, DanEnd, 50);
	giq_option(-3, 562, 160, Dan02, 50);
end

procedure Dan16
begin
	gsay_reply(562, 161);
	if (map_var(0) == 2) then begin
		giq_option(4, 562, 162, Dan14, 50);
	end
	giq_option(4, 562, 163, DanEnd, 50);
	giq_option(-3, 562, 164, Dan02, 50);
end

procedure Dan17
begin
	gsay_reply(562, 168);
	giq_option(4, 562, 169, Dan19, 50);
	giq_option(4, 562, 170, Dan18, 50);
	giq_option(4, 562, 171, DanEnd, 50);
end

procedure Dan18
begin
	gsay_reply(562, 172);
	giq_option(5, 562, 173, Dan19, 50);
	giq_option(4, 562, 174, DanEnd, 50);
end

procedure Dan19
begin
	gsay_reply(562, 175);
	giq_option(4, 562, 176, Dan20, 51);
	giq_option(4, 562, 177, DanEnd, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 562, 178, Dan20, 51);
	end
	giq_option(4, 562, 179, Dan22, 50);
	giq_option(4, 562, 180, Dan23, 50);
end

procedure Dan20
begin
	gsay_reply(562, 181);
	giq_option(4, 562, 182, Dan21, 51);
	giq_option(4, 562, 183, Dan21, 51);
	giq_option(4, 562, 184, Dan24, 50);
	giq_option(4, 562, 185, Dan25, 50);
end

procedure Dan21
begin
	gsay_reply(562, 186);
	giq_option(4, 562, 187, DanEnd, 50);
	giq_option(4, 562, 188, DanEnd, 50);
	giq_option(4, 562, 189, DanEnd, 50);
end

procedure Dan22
begin
	set_local_var(7, 1);
	set_map_var(1, 1);
	gsay_message(562, 190, 50);
end

procedure Dan23
begin
	gsay_message(562, 191, 50);
end

procedure Dan24
begin
	gsay_reply(562, 192);
	giq_option(4, 562, 193, DanEnd, 51);
	giq_option(4, 562, 194, DanEnd, 51);
	giq_option(4, 562, 195, DanEnd, 51);
end

procedure Dan25
begin
	gsay_message(562, 196, 50);
end

procedure Dan26
begin
	if (tile_num(Billy_ptr) != 9858) then begin
		float_msg(self_obj, message_str(SCRIPT_DAN, random(197, 199)), 2);
	end
end

procedure Dan27
begin
	float_msg(self_obj, message_str(SCRIPT_DAN, random(200, 203)), 2);
	set_map_var(0, 2);
end

procedure Dan28
begin
	float_msg(self_obj, message_str(SCRIPT_DAN, random(208, 213)), 2);
end

procedure DanAtNight
begin
	if (NightCount == 0) then begin
		float_msg(self_obj, message_str(SCRIPT_DAN, 214), 2);
		NightCount := 1;
		add_timer_event(self_obj, game_ticks(5), 4);
		add_timer_event(self_obj, game_ticks(10), 5);
	end
end

procedure SendToStart
begin
	reg_anim_func(2, self_obj);
	reg_anim_func(1, 1);
	reg_anim_obj_move_to_tile(self_obj, 15522, -1);
	reg_anim_func(3, 0);
	add_timer_event(self_obj, game_ticks(60 * 12), 2);
end

procedure SendToStreet
begin
	reg_anim_func(2, self_obj);
	reg_anim_func(1, 1);
	reg_anim_obj_move_to_tile(self_obj, 15295, -1);
	reg_anim_func(3, 0);
	add_timer_event(self_obj, game_ticks(60 * 2), 3);
end

procedure SendToCattle1
begin
	reg_anim_func(2, self_obj);
	reg_anim_func(1, 1);
	reg_anim_obj_move_to_tile(self_obj, 12871, -1);
	reg_anim_func(3, 0);
	if (random(1, 10) >= 6) then begin
		add_timer_event(self_obj, game_ticks(60 * 3), 4);
	end
	else begin
		add_timer_event(self_obj, game_ticks(60 * 4), 1);
	end
end

procedure SendToCattle2
begin
	reg_anim_func(2, self_obj);
	reg_anim_func(1, 1);
	reg_anim_obj_move_to_tile(self_obj, 12871, -1);
	reg_anim_func(3, 0);
	add_timer_event(self_obj, game_ticks(60 * 4), 1);
end

procedure SendToSleep
begin
	if (Sleeping == 0) then begin
		reg_anim_func(2, self_obj);
		reg_anim_func(1, 1);
		reg_anim_obj_move_to_tile(self_obj, 14932, -1);
		reg_anim_func(3, 0);
		SetDayNight := 0;
		Sleeping := 1;
	end
end

procedure DanEnd
begin
end



