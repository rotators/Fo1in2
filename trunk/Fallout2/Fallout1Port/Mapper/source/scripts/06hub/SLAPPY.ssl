/*

	Hub - Slappy

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_SLAPPY
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;

procedure Slappy01;
procedure Slappy02;
procedure Slappy03;
procedure Slappy04;
procedure Slappy05;
procedure Slappy06;
procedure Slappy07;
procedure Slappy08;
procedure Slappy09;
procedure Slappy10;
procedure Slappy11;
procedure SlappyEnd;
procedure SlappyClaw;

variable tmp_hostile;
variable Only_Once := 1;
variable lastBabble;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_HUB_SKAG );
		set_self_ai( AI_HUB_MUTANTS );
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if (tile_distance_objs(self_obj, dude_obj) <= 20) then begin
		if (((game_time / 10) - lastBabble) >= 10) then begin
			lastBabble := game_time / 10;
			float_msg(self_obj, message_str(SCRIPT_SLAPPY, random(101, 107)), 2);
		end
	end
	if (self_tile == 25131) then begin
		reg_anim_func(1, 1);
		reg_anim_obj_move_to_tile(self_obj, 25331, -1);
		reg_anim_func(3, 0);
	end
	else begin
		if (self_tile == 25331) then begin
			reg_anim_func(1, 1);
			reg_anim_obj_move_to_tile(self_obj, 25132, -1);
			reg_anim_func(3, 0);
		end
		else begin
			if (self_tile == 25132) then begin
				reg_anim_func(1, 1);
				reg_anim_obj_move_to_tile(self_obj, 24932, -1);
				reg_anim_func(3, 0);
			end
			else begin
				if (self_tile == 24932) then begin
					reg_anim_func(1, 1);
					reg_anim_obj_move_to_tile(self_obj, 25131, -1);
					reg_anim_func(3, 0);
				end
			end
		end
	end
end

procedure pickup_p_proc
begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	if (global_var( GVAR_MISSING_CARAVANS_STATUS ) == 5) then begin
		call Slappy10;
	end
	else begin
		start_gdialog(842, self_obj, 4, -1, -1);
		gsay_start;
		call Slappy01;
		gsay_end;
		end_dialogue;
	end
end

procedure destroy_p_proc begin
	inc_good_critter
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_SLAPPY, 100));
end

procedure Slappy01
begin
	gsay_reply(842, 108);
	if (global_var( GVAR_MISSING_CARAVANS_STATUS ) == 3) then begin
		giq_option( 4, SCRIPT_SLAPPY, 109, Slappy03, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_MISSING_CARAVANS_STATUS ) == 2) then begin
		giq_option( 4, SCRIPT_SLAPPY, 110, Slappy11, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_SLAPPY, 111, Slappy04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SLAPPY, 112, Slappy05, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_SLAPPY, 113, Slappy02, NEUTRAL_REACTION );
end

procedure Slappy02
begin
	gsay_reply(842, 114);
	giq_option( -3, SCRIPT_SLAPPY, 115, SlappyEnd, NEUTRAL_REACTION );
end

procedure Slappy03
begin
	gsay_reply(842, 116);
	giq_option( 4, SCRIPT_SLAPPY, 117, Slappy06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SLAPPY, 118, Slappy05, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SLAPPY, 119, Slappy09, NEUTRAL_REACTION );
end

procedure Slappy04
begin
	gsay_reply(842, 120);
	giq_option( 4, SCRIPT_SLAPPY, 121, Slappy08, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SLAPPY, 122, SlappyEnd, NEUTRAL_REACTION );
end

procedure Slappy05
begin
	gsay_reply(842, 123);
	giq_option( 4, SCRIPT_SLAPPY, 124, SlappyEnd, NEUTRAL_REACTION );
end

procedure Slappy06
begin
	gsay_reply(842, 125);
	giq_option( 4, SCRIPT_SLAPPY, 126, Slappy07, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SLAPPY, 127, SlappyEnd, NEUTRAL_REACTION );
end

procedure Slappy07
begin
	gsay_reply(842, 128);
	giq_option( 4, SCRIPT_SLAPPY, 129, SlappyClaw, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SLAPPY, 130, SlappyEnd, NEUTRAL_REACTION );
end

procedure Slappy08
begin
	gsay_reply(842, 131);
	giq_option( 4, SCRIPT_SLAPPY, 132, SlappyEnd, NEUTRAL_REACTION );
end

procedure Slappy09
begin
	gsay_message(842, 133, 50);
end

procedure Slappy10
begin
	float_msg(self_obj, message_str(SCRIPT_SLAPPY, 134), 2);
end

procedure Slappy11
begin
	gsay_reply(842, 135);
	giq_option( 4, SCRIPT_SLAPPY, 136, SlappyEnd, NEUTRAL_REACTION );
end

procedure SlappyEnd
begin
end

procedure SlappyClaw
begin
	if (map_var(10) == 0) then begin
		set_map_var(10, 1);
		give_exp_points(EXP_FIND_DEATHCLAW);
		display_msg(message_str(SCRIPT_GENCHAT, 103) + EXP_FIND_DEATHCLAW + message_str(SCRIPT_GENCHAT, 104));
	end
	load_map(MAP_DETHCLAW, 0);
end
