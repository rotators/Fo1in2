#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure Slappy01;
procedure Slappy02;
procedure Slappy03;
procedure Slappy04;
procedure Slappy05;
procedure Slappy06;
procedure Slappy07;
procedure Slappy08;
procedure Slappy09;
procedure Slappy10;
procedure Slappy11;
procedure SlappyEnd;
procedure SlappyClaw;

variable tmp_hostile;
variable Only_Once := 1;
variable lastBabble;

procedure start
begin
	if Only_Once then begin
		Only_Once := 0;
critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 41);
critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 53);
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
				end
			end
		end
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if (tile_distance_objs(self_obj, dude_obj) <= 20) then begin
		if (((game_time / 10) - lastBabble) >= 10) then begin
			lastBabble := game_time / 10;
			float_msg(self_obj, message_str(SCRIPT_SLAPPY, random(101, 107)), 2);
		end
	end
	if (tile_num(self_obj) == 25131) then begin
		reg_anim_func(1, 1);
		reg_anim_obj_move_to_tile(self_obj, 25331, -1);
		reg_anim_func(3, 0);
	end
	else begin
		if (tile_num(self_obj) == 25331) then begin
			reg_anim_func(1, 1);
			reg_anim_obj_move_to_tile(self_obj, 25132, -1);
			reg_anim_func(3, 0);
		end
		else begin
			if (tile_num(self_obj) == 25132) then begin
				reg_anim_func(1, 1);
				reg_anim_obj_move_to_tile(self_obj, 24932, -1);
				reg_anim_func(3, 0);
			end
			else begin
				if (tile_num(self_obj) == 24932) then begin
					reg_anim_func(1, 1);
					reg_anim_obj_move_to_tile(self_obj, 25131, -1);
					reg_anim_func(3, 0);
				end
			end
		end
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	get_reaction
	if (global_var(MISSING_CARAVANS_STATUS) == 5) then begin
		call Slappy10;
	end
	else begin
		start_gdialog(842, self_obj, 4, -1, -1);
		gsay_start;
		call Slappy01;
		gsay_end;
		end_dialogue;
	end
end

procedure destroy_p_proc
begin

	inc_good_critter
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_SLAPPY, 100));
end

procedure Slappy01
begin
	gsay_reply(842, 108);
	if (global_var(MISSING_CARAVANS_STATUS) == 3) then begin
		giq_option(4, 842, 109, Slappy03, 50);
	end
	if (global_var(MISSING_CARAVANS_STATUS) == 2) then begin
		giq_option(4, 842, 110, Slappy11, 50);
	end
	giq_option(4, 842, 111, Slappy04, 50);
	giq_option(4, 842, 112, Slappy05, 50);
	giq_option(-3, 842, 113, Slappy02, 50);
end

procedure Slappy02
begin
	gsay_reply(842, 114);
	giq_option(-3, 842, 115, SlappyEnd, 50);
end

procedure Slappy03
begin
	gsay_reply(842, 116);
	giq_option(4, 842, 117, Slappy06, 50);
	giq_option(4, 842, 118, Slappy05, 50);
	giq_option(4, 842, 119, Slappy09, 50);
end

procedure Slappy04
begin
	gsay_reply(842, 120);
	giq_option(4, 842, 121, Slappy08, 50);
	giq_option(4, 842, 122, SlappyEnd, 50);
end

procedure Slappy05
begin
	gsay_reply(842, 123);
	giq_option(4, 842, 124, SlappyEnd, 50);
end

procedure Slappy06
begin
	gsay_reply(842, 125);
	giq_option(4, 842, 126, Slappy07, 50);
	giq_option(4, 842, 127, SlappyEnd, 50);
end

procedure Slappy07
begin
	gsay_reply(842, 128);
	giq_option(4, 842, 129, SlappyClaw, 50);
	giq_option(4, 842, 130, SlappyEnd, 50);
end

procedure Slappy08
begin
	gsay_reply(842, 131);
	giq_option(4, 842, 132, SlappyEnd, 50);
end

procedure Slappy09
begin
	gsay_message(842, 133, 50);
end

procedure Slappy10
begin
	float_msg(self_obj, message_str(SCRIPT_SLAPPY, 134), 2);
end

procedure Slappy11
begin
	gsay_reply(842, 135);
	giq_option(4, 842, 136, SlappyEnd, 50);
end

procedure SlappyEnd
begin
end

procedure SlappyClaw
begin
	if (map_var(10) == 0) then begin
		set_map_var(10, 1);
		give_exp_points(800);
		display_msg(message_str(SCRIPT_GENCHAT, 103) + 800 + message_str(SCRIPT_GENCHAT, 104));
	end
	load_map(MAP_DETHCLAW, 0);
end
