/*

	Hub - Vance

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\mapnecro.h"

#define NAME                    SCRIPT_VANCE
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;

procedure Vance00;
procedure Vance01;
procedure Vance02;
procedure Vance02a;
procedure Vance03;
procedure Vance04;
procedure Vance05;
procedure Vance06;
procedure Vance07;
procedure Vance08;
procedure Vance09;
procedure Vance10;
procedure Vance11;
procedure Vance11a;
procedure Vance12;
procedure Vance13;
procedure Vance14;
procedure Vance15;
procedure Vance16;
procedure VanceEnd;
procedure VanceKnowsPC;
procedure Get_Stuff;
procedure Put_Stuff;
procedure Barter;

import variable Vance_Box_Ptr;


variable tmp_hostile;
variable Only_Once := 1;
variable kickOut;
variable initiateDialogue := 1;

// local_var(5) == BeenIntroduced
// local_var(6) == BarterMod


procedure start begin
	if Only_Once then begin
		set_local_var(6, -20);
		set_self_team(TEAM_HUB_VANCE );
		set_self_ai( AI_GUARD );
		call Put_Stuff;
		Only_Once := 0;
	end
end

procedure combat begin
	tmp_hostile := 1;
end

procedure critter_p_proc begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if ((initiateDialogue == 1) and (tile_distance_objs(self_obj, dude_obj) <= 4)) then begin
			initiateDialogue := 0;
			dialogue_system_enter;
		end
		else begin
			if (kickOut == 1) then begin
				kickOut := 0;
				initiateDialogue := 1;
				gfade_out(1);
				move_to(dude_obj, 16265, 0);
				gfade_in(1);
			end
			if (tile_distance_objs(self_obj, dude_obj) >= 5) then begin
				initiateDialogue := 1;
			end
		end
	end
end

procedure pickup_p_proc begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure look_at_p_proc begin
	if (global_var( GVAR_VANCE_KNOWS_PLAYER ) == 1) or (local_var(5) == 1) then begin
	end
	else begin
		script_overrides;
		display_msg(message_str(SCRIPT_VANCE, 100));
	end
end

procedure description_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_VANCE, 119));
end

procedure talk_p_proc begin
   dude_look_at_critter;

	get_reaction
	call Get_Stuff;
	if (global_var( GVAR_VANCE_KNOWS_PLAYER ) == 1) then begin// Has the player been introduced to Vance by Lemmy or Jacob? ("HUBJAKE")
		set_local_var(6, 20);
	end
	else begin
		if (local_var(5) == 1) then begin
			set_local_var(6, 0);
		end
		else begin
			set_local_var(6, -20);
		end
	end
	gdialog_set_barter_mod(local_var(6));
	if (global_var( GVAR_ENEMY_HUB ) == 1) or (local_var(1) == 1) or (local_var(0) <= 25) then begin// gvar248 = ENEMY_HUB
		start_dialog_at_node(Vance12);
	end
	else begin
		if (global_var( GVAR_VANCE_KNOWS_PLAYER ) == 1) then begin// Has the player been introduced to Vance by Lemmy or Jacob? ("HUBJAKE")
			if (local_var(5) != 1) then begin
				start_dialog_at_node(VanceKnowsPC);
				set_local_var(5, 1);
			end
			else begin
				start_dialog_at_node(Vance06);
			end
		end
		else begin
			if (local_var(1) == 1) then begin
				start_dialog_at_node(Vance11);
				set_local_var(5, 1);
			end
			else begin
				if ((local_var(4) == 0) or (global_var( GVAR_VANCE_KNOWS_PLAYER ) == 0)) then begin// Has the player been introduced to Vance by Lemmy or Jacob? ("HUBJAKE")
					set_local_var(4, 1);
					start_dialog_at_node(Vance01);
					set_local_var(5, 1);
				end
				else begin
					start_dialog_at_node(Vance06);
					set_local_var(5, 1);
				end
			end
		end
	end
	call Put_Stuff;
end

procedure VanceKnowsPC begin
	gsay_reply(822, 101);
	giq_option( 4, SCRIPT_VANCE, 105, Barter, BAD_REACTION );
	giq_option( 4, SCRIPT_VANCE, 104, Vance03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 106, Vance04, BAD_REACTION );
	giq_option( -3, SCRIPT_VANCE, 161, Vance05, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_VANCE, 162, VanceEnd, BAD_REACTION );
end

procedure Vance00 begin
	gsay_reply(822, message_str(SCRIPT_VANCE, 157) + message_str(SCRIPT_VANCE, 107));
	giq_option( 4, SCRIPT_VANCE, 152, Vance16, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 110, Vance02a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 111, Vance04, NEUTRAL_REACTION );

end

procedure Vance01 begin
	gsay_reply(822, 153);// was 101
	giq_option( 4, SCRIPT_VANCE, 103, Vance02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 104, Vance03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 106, Vance04, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_VANCE, 102, Vance16, BAD_REACTION );
	giq_option( -3, SCRIPT_VANCE, message_str(SCRIPT_VANCE, 154) + dude_name + message_str(SCRIPT_VANCE, 155), Vance00, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_VANCE, message_str(SCRIPT_VANCE, 154) + dude_name + message_str(SCRIPT_VANCE, 156), Vance00, BAD_REACTION );

end

procedure Vance02 begin
	gsay_reply(822, 107);
	giq_option( 4, SCRIPT_VANCE, 108, Vance03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 109, Vance02a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 111, Vance04, NEUTRAL_REACTION );
end

procedure Vance02a begin
	if ((is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -30)) == 1) or is_success(do_check(dude_obj, STAT_ch, -3))) then begin
		call Vance05;
	end
	else begin
		call Vance03;
	end
end

procedure Vance03 begin
	gsay_reply(822, 112);
	giq_option( 4, SCRIPT_VANCE, 113, Vance13, BAD_REACTION );
	giq_option( 4, SCRIPT_VANCE, 114, Vance14, NEUTRAL_REACTION );
end

procedure Vance04 begin
	gsay_reply(822, 115);
	giq_option( 4, SCRIPT_VANCE, 116, Vance13, BAD_REACTION );
	giq_option( 4, SCRIPT_VANCE, 117, Vance14, NEUTRAL_REACTION );
end

procedure Vance05 begin
	call Barter;
end

procedure Vance06 begin
	gsay_reply(822, 120);
	giq_option( -3, SCRIPT_VANCE, 121, Barter, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 122, Barter, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 123, Vance07, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 124, Vance08, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 125, Vance09, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 126, Vance15, NEUTRAL_REACTION );
end

procedure Vance07 begin
	gsay_reply(822, 127);
	giq_option( 4, SCRIPT_VANCE, 128, Vance13, BAD_REACTION );
	giq_option( 4, SCRIPT_VANCE, 129, Vance14, NEUTRAL_REACTION );
end

procedure Vance08 begin
	gsay_reply(822, 130);
	giq_option( 4, SCRIPT_VANCE, 131, Vance13, BAD_REACTION );
	giq_option( 4, SCRIPT_VANCE, 132, Vance10, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 133, Vance15, NEUTRAL_REACTION );
end

procedure Vance09 begin
	gsay_reply(822, 134);
	giq_option( 4, SCRIPT_VANCE, 135, Barter, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 136, Vance07, BAD_REACTION );
	giq_option( 4, SCRIPT_VANCE, 137, Vance15, NEUTRAL_REACTION );
end

procedure Vance10 begin
	gsay_reply(822, 138);
	giq_option( 4, SCRIPT_VANCE, 139, Barter, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 140, Vance15, NEUTRAL_REACTION );
end

procedure Vance11 begin
	gsay_reply(822, 141);
	giq_option( 4, SCRIPT_VANCE, 142, Vance13, BAD_REACTION );
	giq_option( 4, SCRIPT_VANCE, 143, Vance14, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VANCE, 144, Vance11a, GOOD_REACTION );
end

procedure Vance11a begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20)) == 1) then begin
		call Vance02;
	end
	else begin
		call Vance13;
	end
end

procedure Vance12 begin
	gsay_reply(822, 145);
	giq_option( 4, SCRIPT_VANCE, 148, Vance13, BAD_REACTION );
	giq_option( 4, SCRIPT_VANCE, 149, Vance14, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_VANCE, 146, Vance13, BAD_REACTION );
	giq_option( -3, SCRIPT_VANCE, 147, Vance14, NEUTRAL_REACTION );
end

procedure Vance13 begin
	BottomReact
	call combat;
	float_msg(self_obj, message_str(SCRIPT_VANCE, 160), 2);
end

procedure Vance14 begin
	kickOut := 1;
end

procedure Vance15 begin
end

procedure Vance16 begin
	gsay_reply(822, 158);
	giq_option( -3, SCRIPT_VANCE, 159, VanceEnd, NEUTRAL_REACTION );
end

procedure VanceEnd begin
end

procedure Barter begin
	gsay_message(822, 118, 49);
	gdialog_mod_barter(local_var(6));
	gsay_reply(822, 150);
	giq_option( 4, SCRIPT_VANCE, 151, VanceEnd, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_VANCE, 152, VanceEnd, NEUTRAL_REACTION );
end

procedure destroy_p_proc begin
	inc_good_critter
	call Get_Stuff;
end

procedure Get_Stuff begin
	move_obj_inven_to_obj(Vance_Box_Ptr, self_obj);
end

procedure Put_Stuff begin
	move_obj_inven_to_obj(self_obj, Vance_Box_Ptr);
end



