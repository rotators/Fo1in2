#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure damage_p_proc;//    script_action == 14
procedure look_at_p_proc;//    script_action == 21
procedure combat;

procedure Staple00;
procedure Staple01;
procedure Staple02;
procedure Staple03;
procedure Staple04;
procedure Staple05;
procedure Staple06;
procedure Staple06a;
procedure Staple06b;
procedure Staple06c;
procedure Staple07;
procedure Staple08;
procedure Staple09;
procedure Staple10;
procedure Staple11;
procedure Staple12;
procedure Staple13;
procedure Staple14;
procedure Staple15;
procedure Staple15a;
procedure Staple16;
procedure Staple17;
procedure StapleEnd;

import variable Staple_Box_Ptr;

procedure Get_Stuff;
procedure Put_Stuff;

variable tmp_hostile;
variable Only_Once := 1;

procedure start
begin


	if Only_Once then begin
		Only_Once := 0;
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 70);
		critter_add_trait( self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_MERCHANT );
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
				end
			end
		end
	end
end

procedure combat
begin
	attack(dude_obj);
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc begin
	if source_obj == dude_obj then begin
		script_overrides;
		float_msg(self_obj, message_str(SCRIPT_RAZLO, 308), 2);
		BigDownReact
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	call Get_Stuff;
	get_reaction
	gdialog_set_barter_mod(-40);
	if (local_var(4) == 0) then begin
		set_local_var(4, 1);
		start_gdialog(862, self_obj, 4, -1, -1);
		gsay_start;
		call Staple00;
		gsay_end;
		end_dialogue;
	end
	else if (local_var(6) == 1) then begin
		call Staple13;
	end
	else begin
		start_gdialog(862, self_obj, 4, -1, -1);
		gsay_start;
		call Staple01;
		gsay_end;
		end_dialogue;
	end
	call Put_Stuff;
end

procedure destroy_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var(ENEMY_HUB, 1);
	end
	call Get_Stuff;// Her store inventory moves to her corpse

	inc_good_critter
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var(ENEMY_HUB, 1);
	end
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_STAPLE, 100));
end

procedure Staple00 begin
	gsay_reply(862, 102);
	call Staple02;
end

procedure Staple01
begin
	gsay_reply(862, 103);
	call Staple02;
end

procedure Staple02
begin
	giq_option(4, 862, 104, Staple03, 50);
	if ((global_var(QUEST_VAULT13_4_WATERCHIP) != 2) and (local_var(5) == 0)) then begin
		giq_option(4, 862, 105, Staple04, 50);
	end
	if (global_var(CHEMISTRY_BOOK) == 1) then begin
		giq_option(4, 862, 130, Staple15, 50);
	end
	giq_option(4, 862, 106, StapleEnd, 50);
	giq_option(-3, 862, 125, Staple14, 50);
end

procedure Staple03
begin
	gsay_message(862, 107, 50);
	gdialog_mod_barter(-40);
	gsay_reply(862, 127);
	giq_option(4, 862, 128, StapleEnd, 50);
	giq_option(-3, 862, 129, StapleEnd, 50);
end

procedure Staple04
begin
	gsay_reply(862, 108);
	giq_option(4, 862, 109, Staple05, 50);
	giq_option(4, 862, 110, Staple06, 50);
end

procedure Staple05
begin
	gsay_reply(862, 111);
	giq_option(4, 862, 112, Staple06, 50);
end

procedure Staple06
begin
	gsay_reply(862, 113);
	giq_option(4, 862, 114, Staple06a, 50);
	giq_option(4, 862, 115, Staple06b, 50);
	giq_option(4, 862, 116, Staple06c, 50);
	giq_option(4, 862, 117, StapleEnd, 50);
end

procedure Staple06a
begin
	if (item_caps_total(dude_obj) >= 750) then begin
		call Staple09;
	end
	else begin
		call Staple07;
	end
end

procedure Staple06b
begin
	if (is_success(do_check(dude_obj, STAT_ch, 0)) or is_success(roll_vs_skill(dude_obj, SKILL_BARTER, 0))) then begin
		if (item_caps_total(dude_obj) >= 500) then begin
			call Staple10;
		end
		else begin
			call Staple07;
		end
	end
	else begin
		call Staple07;
	end
end

procedure Staple06c
begin
	if (is_success(do_check(dude_obj, STAT_st, 0))) then begin
		call Staple11;
	end
	else begin
		call Staple08;
	end
end

procedure Staple07
begin
	gsay_message(862, 118, 50);
end

procedure Staple08
begin
	set_local_var(6, 1);
	gsay_message(862, 119, 51);
end

procedure Staple09
begin
	item_caps_adjust(dude_obj, -750);
	gsay_message(862, 120, 50);
	call Staple12;
end

procedure Staple10
begin
	item_caps_adjust(dude_obj, -500);
	gsay_message(862, 121, 50);
	call Staple12;
end

procedure Staple11
begin
	set_local_var(6, 1);
	gsay_message(862, 122, 51);
	call Staple12;
end

procedure Staple12 begin
	if local_var(5) != 1 then begin
		variable disk := 0;
		disk := create_object_sid(PID_HOLODISK, 0, 0, SCRIPT_VALTDISK);
		add_obj_to_inven(dude_obj, disk);
		set_local_var(5, 1);
	end
	gsay_message(862, 123, 50);
end

procedure Staple13 begin
	float_msg(self_obj, message_str(SCRIPT_STAPLE, 124), 2);
end

procedure Staple14
begin
	gsay_message(862, 126, 50);
end

procedure Staple15
begin
	gsay_reply(862, 131);
	giq_option(4, 862, 114, Staple15a, 50);
	giq_option(4, 862, 117, StapleEnd, 50);
end

procedure Staple15a
begin
	if (item_caps_total(dude_obj) >= 750) then begin
		call Staple16;
	end
	else begin
		call Staple17;
	end
end

procedure Staple16
begin
	variable item := 0;
	item_caps_adjust(dude_obj, -750);
	set_global_var(CHEMISTRY_BOOK, 2);
	item := create_object( PID_CHEMISTRY_MANUAL, 0, 0 );
	add_obj_to_inven(dude_obj, item);
	gsay_message(862, 132, 50);
end

procedure Staple17
begin
	gsay_message(862, 133, 50);
end

procedure StapleEnd
begin
end

procedure Get_Stuff
begin
	move_obj_inven_to_obj(Staple_Box_Ptr, self_obj);
end

procedure Put_Stuff
begin
	move_obj_inven_to_obj(self_obj, Staple_Box_Ptr);
end


