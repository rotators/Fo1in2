#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure flee_dude;
procedure damage_p_proc;//    script_action == 14

procedure Flower00;
procedure Flower01;
procedure Flower02;
procedure Flower03;
procedure Flower03a;
procedure Flower04;
procedure Flower04a;
procedure Flower05;
procedure Flower05a;
procedure Flower06;
procedure Flower07;
procedure Flower08;
procedure Flower09;
procedure Flower10;
procedure Flower11;
procedure Flower12;
procedure Flower13;
procedure Flower14;

variable tmp_hostile;
variable Only_Once := 1;

procedure start
begin
	

	if Only_Once then begin
		Only_Once := 0;
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 72);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 68);
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
				end
			end
		end
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if ((map_var(6) == 1) and (obj_can_see_obj(self_obj, dude_obj) == 1)) then begin
		critter_set_flee_state(self_obj, 1);
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	if ((global_var(CATHEDRAL_ENEMY) == 1) or (map_var(0) == 1)) then begin
		call Flower00;
	end
	else begin
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			call Flower01;
		end
		else begin
			/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, PID_FLOWER) == 1) then begin
				float_msg(self_obj, message_str(SCRIPT_HUBFLRCD, 114), 2);
			end
			else begin
				start_gdialog(588, self_obj, 4, -1, -1);
				gsay_start;
				call Flower02;
				gsay_end;
				end_dialogue;
			end
		end
	end
end

procedure destroy_p_proc begin
	inc_good_critter
	inc_childkiller
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_HUBFLRCD, 100));
end

procedure flee_dude
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;
	while(LVar1 < 5) do begin
		if (tile_distance(tile_num(dude_obj), tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
			LVar0 := tile_num_in_direction(tile_num(self_obj), LVar1, 3);
			LVar2 := tile_distance(tile_num(dude_obj), LVar0);
		end
		LVar1 := LVar1 + 1;
	end
	animate_move_obj_to_tile(self_obj, LVar0, 0);
end

procedure damage_p_proc
begin
	if party_member_obj(obj_pid(source_obj)) then begin
		set_map_var(6, 1);
	end
end

procedure Flower00
begin
	float_msg(self_obj, message_str(SCRIPT_HUBFLRCD, 101), 2);
	call flee_dude;
end

procedure Flower01
begin
	float_msg(self_obj, message_str(SCRIPT_HUBFLRCD, 102), 2);
	call flee_dude;
end

procedure Flower02
begin
	if (dude_is_male) then begin
		gsay_reply(588, 103);
	end
	else begin
		gsay_reply(588, 104);
	end
	giq_option(7, 588, 106, Flower03, 50);
	giq_option(7, 588, 107, Flower04, 50);
	giq_option(4, 588, 108, Flower05, 50);
	giq_option(4, 588, 109, Flower06, 49);
	giq_option(4, 588, 110, Flower07, 51);
	giq_option(4, 588, 111, Flower07, 51);
	giq_option(-3, 588, 112, Flower08, 49);
	giq_option(-3, 588, 113, Flower09, 51);
end

procedure Flower03
begin
	gsay_reply(588, 115);
	giq_option(7, 588, 116, Flower03a, 49);
	giq_option(7, 588, 107, Flower04, 50);
	giq_option(4, 588, 109, Flower06, 49);
	giq_option(4, 588, 110, Flower07, 51);
	giq_option(4, 588, 119, Flower07, 51);
end

procedure Flower03a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 20)) == 1) then begin
		call Flower10;
	end
	else begin
		call Flower11;
	end
end

procedure Flower04
begin
	gsay_reply(588, 121);
	giq_option(7, 588, 123, Flower12, 50);
	giq_option(7, 588, 124, Flower04a, 49);
	giq_option(4, 588, 125, Flower05, 50);
	giq_option(4, 588, 126, Flower06, 49);
	giq_option(4, 588, 110, Flower07, 51);
	giq_option(4, 588, 119, Flower07, 51);
end

procedure Flower04a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0)) == 1) then begin
		call Flower13;
	end
	else begin
		call Flower11;
	end
end

procedure Flower05
begin
	gsay_reply(588, 129);
	giq_option(7, 588, 130, Flower05a, 49);
	giq_option(7, 588, 131, Flower04a, 49);
	giq_option(4, 588, 132, Flower06, 49);
	giq_option(4, 588, 110, Flower07, 51);
	giq_option(4, 588, 119, Flower07, 51);
end

procedure Flower05a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0)) == 1) then begin
		call Flower14;
	end
	else begin
		call Flower11;
	end
end

procedure Flower06
begin
	variable LVar0 := 0;
	LVar0 := create_object_sid(PID_FLOWER, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	gsay_message(588, 135, 49);
end

procedure Flower07
begin
	gsay_message(588, 136, 51);
	call flee_dude;
end

procedure Flower08
begin
	variable LVar0 := 0;
	LVar0 := create_object_sid(PID_FLOWER, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	gsay_message(588, 137, 49);
end

procedure Flower09
begin
	gsay_message(588, 138, 51);
	call flee_dude;
end

procedure Flower10
begin
	variable LVar0 := 0;
	LVar0 := create_object_sid(PID_FLOWER, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	gsay_message(588, 139, 49);
end

procedure Flower11
begin
	gsay_message(588, 140, 51);
	call flee_dude;
end

procedure Flower12
begin
	gsay_reply(588, 141);
	giq_option(7, 588, 142, Flower05a, 50);
	giq_option(7, 588, 143, Flower04a, 50);
	giq_option(4, 588, 144, Flower06, 49);
	giq_option(4, 588, 145, Flower07, 51);
	giq_option(4, 588, 146, Flower07, 51);
end

procedure Flower13
begin
	gsay_reply(588, 147);
	giq_option(7, 588, 148, Flower11, 50);
	giq_option(4, 588, 149, Flower06, 49);
	giq_option(4, 588, 150, Flower07, 51);
	giq_option(4, 588, 151, Flower07, 51);
end

procedure Flower14
begin
	set_global_var(DESTROY_VATS_9, 1);
	gsay_reply(588, 152);
	giq_option(7, 588, 153, Flower11, 50);
	giq_option(4, 588, 154, Flower06, 49);
	giq_option(4, 588, 155, Flower07, 51);
	giq_option(4, 588, 151, Flower07, 51);
end


