#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure Jasmine00;
procedure Jasmine01;
procedure Jasmine02;
procedure Jasmine03;
procedure Jasmine04;
procedure Jasmine05;
procedure Jasmine06;
procedure Jasmine07;
procedure Jasmine08;
procedure Jasmine09;
procedure Jasmine10;
procedure Jasmine11;
procedure Jasmine12;
procedure Jasmine13;
procedure Jasmine14;
procedure Jasmine15;
procedure Jasmine16;
procedure Jasmine17;
procedure JasmineEnd;

variable tmp_hostile;
variable Only_Once := 1;


procedure start
begin
	

	if Only_Once then begin
		Only_Once := 0;
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 39);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 52);
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
				end
			end
		end
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	if (map_var(1) == 1) then begin
		call Jasmine01;
	end
	else begin
		if (global_var(STEAL_NECKLACE) == 0) then begin
			call Jasmine02;
		end
		else begin
			if ((global_var(STEAL_NECKLACE) == 1) and (local_var(6) == 0)) then begin
				start_gdialog(592, self_obj, 4, -1, -1);
				gsay_start;
				call Jasmine03;
				gsay_end;
				end_dialogue;
			end
			else begin
				if (global_var(STEAL_NECKLACE) == 1) then begin
					call Jasmine05;
				end
				else begin
					if ((map_var(3) == 1) and (local_var(5) == 0)) then begin
						start_gdialog(592, self_obj, 4, -1, -1);
						gsay_start;
						call Jasmine06;
						gsay_end;
						end_dialogue;
					end
					else begin
						call Jasmine07;
					end
				end
			end
		end
	end
end

procedure destroy_p_proc
begin

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_JASMINE, 100));
end

procedure Jasmine00
begin
	float_msg(self_obj, message_str(SCRIPT_JASMINE, 102), 2);
	call combat;
end

procedure Jasmine01
begin
	float_msg(self_obj, message_str(SCRIPT_JASMINE, 103), 2);
end

procedure Jasmine02
begin
	float_msg(self_obj, message_str(SCRIPT_JASMINE, 104), 2);
end

procedure Jasmine03
begin
	variable LVar0 := 0;
	LVar0 := create_object( PID_LOCKPICKS, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object( PID_FLARE, 0, 0 );
	add_mult_objs_to_inven(dude_obj, LVar0, 2);
	LVar0 := create_object( PID_NUKA_COLA, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	set_local_var(6, 1);
	gsay_reply(592, 105);
	giq_option(4, 592, 106, Jasmine08, 50);
	giq_option(4, 592, 107, Jasmine09, 50);
	giq_option(4, 592, 109, Jasmine11, 50);
	giq_option(4, 592, 110, Jasmine12, 50);
	giq_option(4, 592, 111, Jasmine13, 50);
	giq_option(-3, 592, 112, Jasmine14, 50);
end

procedure Jasmine04
begin
	if (dude_is_male) then begin
		float_msg(self_obj, message_str(SCRIPT_JASMINE, 113), 2);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_JASMINE, 114), 2);
	end
end

procedure Jasmine05
begin
	float_msg(self_obj, message_str(SCRIPT_JASMINE, 117), 2);
end

procedure Jasmine06
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	set_local_var(5, 1);
	item_caps_adjust(dude_obj, 3000);
	LVar1 := create_object( PID_ELECTRONIC_LOCKPICKS, 0, 0 );
	add_obj_to_inven(dude_obj, LVar1);
	if (dude_is_male) then begin
		gsay_message(592, 118, 50);
	end
	else begin
		gsay_message(592, 119, 50);
	end
	gsay_message(592, 121, 50);
	gsay_message(592, 135, 50);
end

procedure Jasmine07
begin
	float_msg(self_obj, message_str(SCRIPT_JASMINE, 122), 2);
end

procedure Jasmine08
begin
	gsay_message(592, 123, 50);
end

procedure Jasmine09
begin
	if (dude_is_male) then begin
		gsay_message(592, 124, 50);
	end
	else begin
		gsay_message(592, 134, 50);
	end
end

procedure Jasmine10
begin
	gsay_message(592, 125, 50);
end

procedure Jasmine11
begin
	gsay_message(592, 126, 50);
end

procedure Jasmine12
begin
	gsay_message(592, 127, 50);
end

procedure Jasmine13
begin
	gsay_message(592, 128, 50);
end

procedure Jasmine14
begin
	gsay_message(592, 129, 50);
end

procedure Jasmine15
begin
	float_msg(self_obj, message_str(SCRIPT_JASMINE, 130), 2);
end

procedure Jasmine16
begin
	float_msg(self_obj, message_str(SCRIPT_JASMINE, 131), 2);
end

procedure Jasmine17
begin
	float_msg(self_obj, message_str(SCRIPT_JASMINE, 132), 2);
end

procedure JasmineEnd
begin
end



