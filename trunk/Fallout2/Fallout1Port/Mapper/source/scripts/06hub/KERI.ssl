#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure timed_event_p_proc;//    script_action == 22
procedure damage_p_proc;//    script_action == 14

procedure Keri00;
procedure Keri01;
procedure Keri02;
procedure Keri03;
procedure Keri04;
procedure Keri04a;
procedure Keri04b;
procedure Keri05;
procedure Keri06;
procedure Keri07;
procedure Keri08;
procedure Keri09;
procedure Keri10;
procedure Keri10a;
procedure Keri11;
procedure Keri12;
procedure Keri13;
procedure Keri14;
procedure Keri15;
procedure Keri16;
procedure Keri17;
procedure Keri18;
procedure Keri19;
procedure Keri20;
procedure Keri21a;
procedure Keri21b;
procedure Keri21c;
procedure Keri21d;
procedure Keri27;
procedure Keri28;
procedure Keri29;
procedure Keri30;
procedure Keri33;
procedure Keri34;
procedure Keri35;
procedure Keri36;
procedure Keri37;
procedure Keri38;
procedure Keri39;
procedure KeriEnd;

procedure KeriCombat;
procedure Jailed;
procedure RecalcDate;
procedure RecalcDateString;
procedure SendAroundHouse;
procedure combat;

variable hostile;
variable Only_Once := 1;
variable days;
variable DayString := "None";
variable SetDayNight;
variable Destination;
variable LastMove;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;
variable exit_line;



procedure start
begin
	fixt_critter_healing
	
	if Only_Once then begin
		Only_Once := 0;
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 36);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 50);
		LastMove := 12127;
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
					else begin
						if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
							call timed_event_p_proc;
						end
					end
				end
			end
		end
	end
end

procedure combat
begin
	hostile := 1;
end

procedure critter_p_proc
begin
	variable LVar0 := 0;
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
	if (SetDayNight == 0) then begin
		add_timer_event(self_obj, game_ticks(random(3, 8)), 1);
		SetDayNight := 1;
	end
	LVar0 := tile_num(self_obj);
	if (LVar0 == 12126) then begin
		if (anim_busy(self_obj) == 0) then begin
			if (has_trait(1, self_obj, 10) != 0) then begin
				anim(self_obj, 1000, 0);
			end
		end
	end
	else begin
		if (LVar0 == 11927) then begin
			if (anim_busy(self_obj) == 0) then begin
				if (has_trait(1, self_obj, 10) != 5) then begin
					anim(self_obj, 1000, 5);
				end
			end
		end
		else begin
			if (LVar0 == 12127) then begin
				if (anim_busy(self_obj) == 0) then begin
					if (has_trait(1, self_obj, 10) != 2) then begin
						anim(self_obj, 1000, 2);
					end
				end
			end
		end
	end
end

procedure pickup_p_proc
begin
	if (local_var(5) == 0) then begin
		dialogue_system_enter;
	end
	else begin
		call Keri10;
	end
end

procedure talk_p_proc
begin
	variable LVar0 := 0;
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	call get_reaction;
	if (local_var(13) == 1) then begin
		if (local_var(11) < (game_time / (10 * 60 * 60 * 24 * 365))) then begin
			set_local_var(13, 0);
		end
		else begin
			if ((local_var(10) < get_month) or (local_var(10) == 12) and (get_month == 1) and ((local_var(10) != 1) or (get_month != 12))) then begin
				set_local_var(13, 0);
			end
			else begin
				if ((local_var(9) < get_day) and ((local_var(10) != 1) or (get_month != 12))) then begin
					set_local_var(13, 0);
				end
			end
		end
	end
	call RecalcDate;
	LVar0 := local_var(9);
	if ((map_var(24) == 1) and (map_var(28) == 0)) then begin
		call Keri13;
	end
	else begin
		if (local_var(5) == 1) then begin
			call Keri14;
		end
		else begin
			if (map_var(25) == 1) then begin
				call Keri15;
			end
			else begin
				if (global_var(CC_JOB) == 5) then begin
					set_global_var(CC_JOB, 6);
					set_map_var(25, 1);
					call BottomReact;
					call Keri19;
				end
				else begin
					if (global_var(CC_JOB) == 3) then begin
						set_global_var(CC_JOB, 6);
						set_map_var(25, 1);
						call BottomReact;
						start_gdialog(595, self_obj, 4, -1, -1);
						gsay_start;
						call Keri35;
						gsay_end;
						end_dialogue;
					end
					else begin
						if (map_var(26) == 0) then begin
							call Keri00;
						end
						else begin
							if (global_var(CC_JOB) == 4) then begin
								start_gdialog(595, self_obj, 4, -1, -1);
								gsay_start;
								call Keri27;
								gsay_end;
								end_dialogue;
							end
							else begin
								if ((map_var(26) == 1) and (local_var(13) == 0)) then begin
									start_gdialog(595, self_obj, 4, -1, -1);
									gsay_start;
									if (local_var(4) == 0) then begin
										call Keri01;
									end
									else begin
										call Keri03;
									end
									gsay_end;
									end_dialogue;
								end
								else begin
									if ((local_var(13) == 1) and (LVar0 == get_day)) then begin
										start_gdialog(595, self_obj, 4, -1, -1);
										gsay_start;
										call Keri28;
										gsay_end;
										end_dialogue;
									end
									else begin
										if ((local_var(13) == 1) and (LVar0 != get_day)) then begin
											start_gdialog(595, self_obj, 4, -1, -1);
											gsay_start;
											call Keri29;
											gsay_end;
											end_dialogue;
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure destroy_p_proc
begin
	set_map_var(28, 1);
	rm_timer_event(self_obj);

	inc_good_critter		
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_KERI, 100));
end

procedure timed_event_p_proc
begin
	call SendAroundHouse;
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_HUB, 1);
	end
end

procedure Keri00
begin
	if (local_var(7) == 0) then begin
		set_local_var(7, 1);
		float_msg(self_obj, message_str(SCRIPT_KERI, 101), 2);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_KERI, 102), 2);
	end
end

procedure Keri01
begin
	if (global_var(WORLDMAPLIST_JUNKTOWN) == 0) then begin
		set_global_var(WORLDMAPLIST_JUNKTOWN, 1);
	end
	if (global_var(WORLDMAPLIST_BROTHERHOOD) == 0) then begin
		set_global_var(WORLDMAPLIST_BROTHERHOOD, 1);
	end
	if (global_var(WORLDMAPLIST_NECROPOLIS) == 0) then begin
		set_global_var(WORLDMAPLIST_NECROPOLIS, 1);
	end
	if (global_var(WORLDMAPLIST_BONEYARD) == 0) then begin
		set_global_var(WORLDMAPLIST_BONEYARD, 1);
	end
	if (get_critter_stat(dude_obj, STAT_gender) == 1) then begin
		if ((global_var(FOLLOWERS_INVADED) == 0) and (global_var(NECROPOLIS_WAS_INVADED) == 0)) then begin
			gsay_reply(595, 103);
		end
		else begin
			if ((global_var(FOLLOWERS_INVADED) == 0) and (global_var(NECROPOLIS_WAS_INVADED) == 1)) then begin
				gsay_reply(595, 304);
			end
			else begin
				if ((global_var(FOLLOWERS_INVADED) == 1) and (global_var(NECROPOLIS_WAS_INVADED) == 0)) then begin
					gsay_reply(595, 302);
				end
				else begin
					gsay_reply(595, 300);
				end
			end
		end
	end
	else begin
		if ((global_var(FOLLOWERS_INVADED) == 0) and (global_var(NECROPOLIS_WAS_INVADED) == 0)) then begin
			gsay_reply(595, 104);
		end
		else begin
			if ((global_var(FOLLOWERS_INVADED) == 0) and (global_var(NECROPOLIS_WAS_INVADED) == 1)) then begin
				gsay_reply(595, 305);
			end
			else begin
				if ((global_var(FOLLOWERS_INVADED) == 1) and (global_var(NECROPOLIS_WAS_INVADED) == 0)) then begin
					gsay_reply(595, 303);
				end
				else begin
					gsay_reply(595, 301);
				end
			end
		end
	end
	giq_option(4, 595, 105, Keri02, 50);
	giq_option(-3, 595, 106, Keri02, 50);
end

procedure Keri02
begin
	variable LVar0 := 0;
	call RecalcDateString;
	LVar0 := local_var(9);
	if (LVar0 == get_day) then begin
		gsay_reply(595, message_str(SCRIPT_KERI, 107) + message_str(SCRIPT_KERI, 108));
	end
	else begin
		gsay_reply(595, message_str(SCRIPT_KERI, 107) + message_str(SCRIPT_KERI, 109) + DayString + message_str(SCRIPT_KERI, 112));
	end
	call Keri04;
end

procedure Keri03
begin
	variable LVar0 := 0;
	if (local_var(1) != 1) then begin
		call RecalcDateString;
		LVar0 := local_var(9);
		if (LVar0 == get_day) then begin
			gsay_reply(595, message_str(SCRIPT_KERI, 113));
		end
		else begin
			gsay_reply(595, message_str(SCRIPT_KERI, 114) + DayString + message_str(SCRIPT_KERI, 117));
		end
		call Keri04;
	end
	else begin
		gsay_reply(595, 118);
		call Keri04;
	end
end

procedure Keri04
begin
	giq_option(4, 595, 119, Keri04a, 50);
	giq_option(4, 595, 120, Keri05, 50);
	if ((get_critter_stat(dude_obj, STAT_gender) == 0) and (local_var(14) == 0)) then begin
		giq_option(4, 595, 121, Keri04b, 50);
	end
	giq_option(4, 595, 122, Keri06, 50);
	giq_option(-3, 595, 123, Keri07, 50);
end

procedure Keri04a
begin
	variable LVar0 := 0;
	set_local_var(13, 1);
	call RecalcDate;
	LVar0 := local_var(9);
	if (LVar0 == get_day) then begin
		call Keri17;
	end
	else begin
		call Keri18;
	end
end

procedure Keri04b
begin
	variable LVar0 := 0;
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		call Keri08;
	end
	else begin
		LVar0 := get_critter_stat(dude_obj, STAT_ch);
		if (LVar0 <= 6) then begin
			call Keri16;
		end
		else begin
			if (is_success(do_check(dude_obj, STAT_ch, 0))) then begin
				call Keri09;
			end
			else begin
				call Keri16;
			end
		end
	end
end

procedure Keri05
begin
	set_local_var(13, 0);
	gsay_message(595, 124, 50);
end

procedure Keri06
begin
	set_local_var(13, 0);
	gsay_message(595, 126, 50);
end

procedure Keri07
begin
	gsay_message(595, 127, 50);
end

procedure Keri08
begin
	variable LVar0 := 0;
	set_local_var(14, 1);
	gsay_message(595, 130, 50);
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	game_time_advance(game_ticks(60 * 60 * 2));
	gfade_in(1);
	LVar0 := create_object_sid(PID_MENTATS, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object_sid(PID_BUFFOUT, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object_sid(PID_PSYCHO, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	display_msg(message_str(SCRIPT_KERI, 229));
	gsay_message(595, 131, 50);
	gsay_message(595, 132, 50);
end

procedure Keri09
begin
	variable LVar0 := 0;
	set_local_var(14, 1);
	gsay_message(595, 133, 50);
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	game_time_advance(game_ticks(60 * 60 * 2));
	gfade_in(1);
	LVar0 := create_object_sid(PID_MENTATS, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object_sid(PID_BUFFOUT, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object_sid(PID_PSYCHO, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	display_msg(message_str(SCRIPT_KERI, 229));
	gsay_message(595, 131, 50);
	gsay_message(595, 132, 50);
end

procedure Keri10
begin
	if (local_var(5) == 0) then begin
		set_local_var(5, 1);
		set_map_var(25, 1);
		gsay_reply(595, 136);
		giq_option(4, 595, 137, Keri10a, 50);
		giq_option(4, 595, 138, KeriCombat, 51);
		giq_option(4, 595, 139, KeriCombat, 51);
		giq_option(-3, 595, 141, KeriCombat, 51);
	end
	else begin
		if (get_critter_stat(dude_obj, STAT_gender) == 0) then begin
			float_msg(self_obj, message_str(SCRIPT_KERI, 143), 2);
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_KERI, 142), 2);
		end
		call KeriCombat;
	end
end

procedure Keri10a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
		call Keri11;
	end
	else begin
		call Keri12;
	end
end

procedure Keri11
begin
	gsay_message(595, 144, 50);
end

procedure Keri12
begin
	gsay_reply(595, 145);
	call KeriCombat;
end

procedure Keri13
begin
	float_msg(self_obj, message_str(SCRIPT_KERI, 148), 2);
	call KeriCombat;
end

procedure Keri14
begin
	float_msg(self_obj, message_str(SCRIPT_KERI, random(149, 150)), 2);
	call KeriCombat;
end

procedure Keri15
begin
	if (local_var(6) != 3) then begin
		float_msg(self_obj, message_str(SCRIPT_KERI, 151 + local_var(6)), 2);
		set_local_var(6, local_var(6) + 1);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_KERI, 154), 2);
	end
end

procedure Keri16
begin
	gsay_message(595, 155, 50);
end

procedure Keri17
begin
	gsay_reply(595, 156);
	call Keri33;
	call Keri20;
end

procedure Keri18
begin
	call RecalcDateString;
	gsay_reply(595, message_str(SCRIPT_KERI, 157) + DayString + message_str(SCRIPT_KERI, 158));
	giq_option(4, 595, 159, Keri30, 50);
	giq_option(4, 595, 160, Keri34, 50);
end

procedure Keri19
begin
	if (get_critter_stat(dude_obj, STAT_gender) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_KERI, 161), 2);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_KERI, 162), 2);
	end
end

procedure Keri20
begin
	giq_option(4, 595, 163, Keri21a, 50);
	giq_option(4, 595, 164, Keri21b, 50);
	if (global_var(NECROPOLIS_WAS_INVADED) == 0) then begin
		giq_option(4, 595, 165, Keri21c, 50);
	end
	if (global_var(FOLLOWERS_INVADED) == 0) then begin
		giq_option(4, 595, 166, Keri21d, 50);
	end
	giq_option(4, 595, 167, Keri34, 50);
end

procedure Keri21a
begin
	variable LVar0 := 0;
	set_global_var(CRIMSON_CARAVANS_STATUS, 1);
	LVar0 := random(1, 8);
	if (LVar0 == 1) then begin
		gsay_message(595, 168, 50);
	end
	else begin
		if (LVar0 == 2) then begin
			gsay_message(595, 169, 50);
		end
		else begin
			if (LVar0 == 3) then begin
				gsay_message(595, 170, 50);
			end
			else begin
				if (LVar0 == 4) then begin
					gsay_message(595, 171, 50);
				end
				else begin
					if (LVar0 == 5) then begin
						gsay_message(595, 172, 50);
					end
					else begin
						if (LVar0 == 6) then begin
							gsay_message(595, 173, 50);
						end
						else begin
							if (LVar0 == 7) then begin
								gsay_message(595, 174, 50);
							end
							else begin
								if (LVar0 == 8) then begin
									gsay_message(595, 175, 50);
								end
							end
						end
					end
				end
			end
		end
	end
	load_map(MAP_MNTCRVN2, 3);
end

procedure Keri21b
begin
	variable LVar0 := 0;
	set_global_var(CRIMSON_CARAVANS_STATUS, 1);
	LVar0 := random(1, 7);
	if (LVar0 == 1) then begin
		gsay_message(595, 168, 50);
	end
	else begin
		if (LVar0 == 2) then begin
			gsay_message(595, 169, 50);
		end
		else begin
			if (LVar0 == 3) then begin
				gsay_message(595, 170, 50);
			end
			else begin
				if (LVar0 == 4) then begin
					gsay_message(595, 171, 50);
				end
				else begin
					if (LVar0 == 5) then begin
						gsay_message(595, 176, 50);
					end
					else begin
						if (LVar0 == 6) then begin
							gsay_message(595, 177, 50);
						end
						else begin
							if (LVar0 == 7) then begin
								gsay_message(595, 178, 50);
							end
						end
					end
				end
			end
		end
	end
	load_map(MAP_MNTCRVN1, 3);
end

procedure Keri21c
begin
	variable LVar0 := 0;
	set_global_var(CRIMSON_CARAVANS_STATUS, 1);
	LVar0 := random(1, 7);
	if (LVar0 == 1) then begin
		gsay_message(595, 168, 50);
	end
	else begin
		if (LVar0 == 2) then begin
			gsay_message(595, 169, 50);
		end
		else begin
			if (LVar0 == 3) then begin
				gsay_message(595, 170, 50);
			end
			else begin
				if (LVar0 == 4) then begin
					gsay_message(595, 171, 50);
				end
				else begin
					if (LVar0 == 5) then begin
						gsay_message(595, 179, 50);
					end
					else begin
						if (LVar0 == 6) then begin
							gsay_message(595, 180, 50);
						end
						else begin
							if (LVar0 == 7) then begin
								gsay_message(595, 181, 50);
							end
						end
					end
				end
			end
		end
	end
	load_map(MAP_DESCRVN2, 3);
end

procedure Keri21d
begin
	variable LVar0 := 0;
	set_global_var(CRIMSON_CARAVANS_STATUS, 1);
	LVar0 := random(1, 7);
	if (LVar0 == 1) then begin
		gsay_message(595, 168, 50);
	end
	else begin
		if (LVar0 == 2) then begin
			gsay_message(595, 169, 50);
		end
		else begin
			if (LVar0 == 3) then begin
				gsay_message(595, 170, 50);
			end
			else begin
				if (LVar0 == 4) then begin
					gsay_message(595, 171, 50);
				end
				else begin
					if (LVar0 == 5) then begin
						gsay_message(595, 182, 50);
					end
					else begin
						if (LVar0 == 6) then begin
							gsay_message(595, 183, 50);
						end
						else begin
							if (LVar0 == 7) then begin
								gsay_message(595, 184, 50);
							end
						end
					end
				end
			end
		end
	end
	load_map(MAP_DESCRVN1, 3);
end

procedure Keri27
begin
	gsay_reply(595, 198);
	giq_option(4, 595, 199, Keri04a, 50);
	giq_option(4, 595, 200, Keri05, 50);
	giq_option(4, 595, 201, Keri06, 50);
	giq_option(-3, 595, 202, Keri07, 50);
	giq_option(-3, 595, 203, Keri07, 50);
end

procedure Keri28
begin
	gsay_reply(595, 204);
	giq_option(4, 595, 205, Keri17, 50);
	giq_option(4, 595, 206, KeriEnd, 50);
	giq_option(-3, 595, 207, Keri07, 50);
end

procedure Keri29
begin
	variable LVar0 := 0;
	call RecalcDateString;
	LVar0 := local_var(9);
	gsay_message(595, message_str(SCRIPT_KERI, 209) + DayString + message_str(SCRIPT_KERI, 212), 50);
end

procedure Keri30
begin
	set_local_var(13, 1);
end

procedure Keri33
begin
	variable LVar0 := 0;
	set_local_var(13, 0);
	set_global_var(CC_JOB, 1);
	LVar0 := local_var(4);
	set_local_var(4, (LVar0 + 1));
end

procedure Keri34
begin
	set_local_var(13, 0);
end

procedure Keri35
begin
	gsay_reply(595, 185);
	giq_option(4, 595, 186, KeriCombat, 51);
	giq_option(4, 595, 187, Keri36, 50);
	giq_option(4, 595, 188, KeriEnd, 50);
	giq_option(-3, 595, 189, KeriEnd, 50);
	giq_option(-3, 595, 190, KeriEnd, 50);
end

procedure Keri36
begin
	gsay_reply(595, 191);
	giq_option(4, 595, 192, Keri37, 50);
	giq_option(4, 595, 193, Keri38, 50);
	giq_option(4, 595, 194, Keri39, 50);
end

procedure Keri37
begin
	gsay_message(595, 195, 50);
end

procedure Keri38
begin
	gsay_message(595, 196, 50);
end

procedure Keri39
begin
	gsay_message(595, 197, 50);
end

procedure KeriEnd
begin
end

procedure KeriCombat
begin
	set_map_var(24, 1);
	set_map_var(25, 1);
	call combat;
end

procedure Jailed
begin
	set_map_var(25, 1);
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	move_to(dude_obj, 21867, 0);
	gfade_in(1);
end

procedure RecalcDate
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;
	LVar0 := get_day;
	if (LVar0 <= 3) then begin
		LVar0 := 3;
		LVar1 := get_month;
		LVar2 := game_time / (10 * 60 * 60 * 24 * 365);
	end
	else begin
		if ((LVar0 > 3) and (LVar0 <= 17)) then begin
			LVar0 := 17;
			LVar1 := get_month;
			LVar2 := game_time / (10 * 60 * 60 * 24 * 365);
		end
		else begin
			if (LVar0 > 17) then begin
				LVar0 := 3;
				LVar1 := get_month;
				if (LVar1 == 12) then begin
					LVar1 := 1;
					LVar2 := (game_time / (10 * 60 * 60 * 24 * 365)) + 1;
				end
				else begin
					LVar1 := LVar1 + 1;
					LVar2 := game_time / (10 * 60 * 60 * 24 * 365);
				end
			end
		end
	end
	set_local_var(9, LVar0);
	set_local_var(10, LVar1);
	set_local_var(11, LVar2);
end

procedure RecalcDateString
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	call RecalcDate;
	LVar0 := local_var(10);
	LVar1 := local_var(9);
	if (LVar0 == 1) then begin
		DayString := message_str(SCRIPT_KERI, 217);
	end
	else begin
		if (LVar0 == 2) then begin
			DayString := message_str(SCRIPT_KERI, 218);
		end
		else begin
			if (LVar0 == 3) then begin
				DayString := message_str(SCRIPT_KERI, 219);
			end
			else begin
				if (LVar0 == 4) then begin
					DayString := message_str(SCRIPT_KERI, 220);
				end
				else begin
					if (LVar0 == 5) then begin
						DayString := message_str(SCRIPT_KERI, 221);
					end
					else begin
						if (LVar0 == 6) then begin
							DayString := message_str(SCRIPT_KERI, 222);
						end
						else begin
							if (LVar0 == 7) then begin
								DayString := message_str(SCRIPT_KERI, 223);
							end
							else begin
								if (LVar0 == 8) then begin
									DayString := message_str(SCRIPT_KERI, 224);
								end
								else begin
									if (LVar0 == 9) then begin
										DayString := message_str(SCRIPT_KERI, 225);
									end
									else begin
										if (LVar0 == 10) then begin
											DayString := message_str(SCRIPT_KERI, 226);
										end
										else begin
											if (LVar0 == 11) then begin
												DayString := message_str(SCRIPT_KERI, 227);
											end
											else begin
												if (LVar0 == 12) then begin
													DayString := message_str(SCRIPT_KERI, 228);
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	if (LVar1 == 3) then begin
		DayString := DayString + message_str(SCRIPT_KERI, 210);
	end
	else begin
		if (LVar1 == 17) then begin
			DayString := DayString + message_str(SCRIPT_KERI, 211);
		end
	end
end

procedure SendAroundHouse
begin
	variable LVar0 := 0;
	Destination := 0;
	LVar0 := random(10, 20);
	while(Destination == 0) do begin
		Destination := random(1, 3);
		if (Destination == 1) then begin
			Destination := 12127;
		end
		else begin
			if (Destination == 2) then begin
				Destination := 12126;
			end
			else begin
				if (Destination == 3) then begin
					Destination := 11927;
				end
			end
		end
		if (Destination == LastMove) then begin
			Destination := 0;
		end
	end
	LastMove := Destination;
	reg_anim_func(2, self_obj);
	reg_anim_func(1, 1);
	reg_anim_obj_move_to_tile(self_obj, Destination, -1);
	reg_anim_func(3, 0);
	rm_timer_event(self_obj);
	add_timer_event(self_obj, game_ticks(LVar0), 1);
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, STAT_ch)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end