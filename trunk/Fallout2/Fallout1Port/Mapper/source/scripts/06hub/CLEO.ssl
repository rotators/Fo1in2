/*

	Hub - Cleo

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_CLEO
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;

procedure Cleo00;
procedure Cleo01;
procedure Cleo02;
procedure Cleo03;
procedure Cleo04;
procedure Cleo05;
procedure Cleo06;
procedure Cleo07;
procedure Cleo08;
procedure Cleo09;
procedure Cleo10;
procedure Cleo11;
procedure Cleo12;
procedure Cleo13;
procedure Cleo14;
procedure Cleo15;
procedure Cleo16;
procedure Cleo17;
procedure Cleo18;
procedure Cleo19;
procedure Cleo20;
procedure Cleo21;
procedure Cleo22;
procedure CleoEnd;

variable tmp_hostile;
variable Only_Once := 1;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_HUB_THIEVES_CIRCLE );
		set_self_ai( AI_HUB_THIEF );
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc
begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_self;
	get_reaction
	if (map_var(1) == 1) then begin
		call Cleo01;
	end
	else begin
		if (global_var( GVAR_STEAL_NECKLACE ) != 2) then begin
			start_gdialog(560, self_obj, 4, -1, -1);
			gsay_start;
			call Cleo02;
			gsay_end;
			end_dialogue;
		end
		else begin
			start_gdialog(560, self_obj, 4, -1, -1);
			gsay_start;
			call Cleo03;
			gsay_end;
			end_dialogue;
		end
	end
end

procedure destroy_p_proc begin
	inc_good_critter
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_CLEO, 100));
end

procedure Cleo00
begin
	if (dude_is_male) then begin
		float_msg(self_obj, message_str(SCRIPT_CLEO, 101), 2);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_CLEO, 102), 2);
	end
	call combat;
end

procedure Cleo01
begin
	float_msg(self_obj, message_str(SCRIPT_CLEO, 103), 2);
end

procedure Cleo02
begin
	gsay_reply(560, 104);
	if (map_var(2) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 106, Cleo05, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_LOXLEY_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 105, Cleo04, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 107, Cleo06, NEUTRAL_REACTION );
	if (global_var( GVAR_DECKER_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 108, Cleo07, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_MISSING_CARAVAN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 109, Cleo08, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 110, Cleo09, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_CLEO, 111, Cleo10, NEUTRAL_REACTION );
end

procedure Cleo03
begin
	gsay_reply(560, 112);
	if (global_var( GVAR_LOXLEY_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 113, Cleo11, NEUTRAL_REACTION );
	end
	if (map_var(2) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 114, Cleo05, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 115, Cleo12, NEUTRAL_REACTION );
	if (global_var( GVAR_DECKER_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 116, Cleo13, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_MISSING_CARAVAN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 117, Cleo14, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 119, Cleo09, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_CLEO, 120, Cleo10, NEUTRAL_REACTION );
end

procedure Cleo04
begin
	gsay_reply(560, 121);
	if (map_var(2) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 122, Cleo05, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 123, Cleo06, NEUTRAL_REACTION );
	if (global_var( GVAR_DECKER_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 124, Cleo07, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_MISSING_CARAVAN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 125, Cleo08, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 126, Cleo09, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_CLEO, 127, Cleo10, NEUTRAL_REACTION );
end

procedure Cleo05
begin
	gsay_reply(560, 128);
	if (global_var( GVAR_LOXLEY_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 129, Cleo04, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 131, Cleo06, NEUTRAL_REACTION );
	if (global_var( GVAR_DECKER_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 132, Cleo07, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_MISSING_CARAVAN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 133, Cleo08, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 134, Cleo09, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_CLEO, 135, Cleo10, NEUTRAL_REACTION );
end

procedure Cleo06
begin
	gsay_reply(560, 136);
	if (global_var( GVAR_LOXLEY_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 137, Cleo04, NEUTRAL_REACTION );
	end
	if (map_var(2) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 138, Cleo05, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_DECKER_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 139, Cleo07, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_MISSING_CARAVAN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 140, Cleo08, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 141, Cleo09, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_CLEO, 142, Cleo10, NEUTRAL_REACTION );
end

procedure Cleo07
begin
	gsay_reply(560, 143);
	if (global_var( GVAR_LOXLEY_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 144, Cleo04, NEUTRAL_REACTION );
	end
	if (map_var(2) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 145, Cleo05, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 146, Cleo06, NEUTRAL_REACTION );
	if (global_var( GVAR_MISSING_CARAVAN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 147, Cleo08, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 148, Cleo09, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_CLEO, 149, Cleo10, NEUTRAL_REACTION );
end

procedure Cleo08
begin
	gsay_reply(560, 150);
	if (global_var( GVAR_LOXLEY_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 151, Cleo04, NEUTRAL_REACTION );
	end
	if (map_var(2) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 152, Cleo05, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 153, Cleo06, NEUTRAL_REACTION );
	if (global_var( GVAR_DECKER_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 154, Cleo07, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 155, Cleo09, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_CLEO, 156, Cleo10, NEUTRAL_REACTION );
end

procedure Cleo09
begin
	gsay_message(560, 157, 50);
end

procedure Cleo10
begin
	gsay_message(560, 158, 50);
end

procedure Cleo11
begin
	gsay_reply(560, 159);
	if (map_var(2) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 160, Cleo05, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 161, Cleo12, NEUTRAL_REACTION );
	if (global_var( GVAR_DECKER_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 162, Cleo13, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_MISSING_CARAVAN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 163, Cleo14, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 165, Cleo09, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_CLEO, 166, Cleo10, NEUTRAL_REACTION );
end

procedure Cleo12
begin
	gsay_reply(560, 167);
	if (global_var( GVAR_LOXLEY_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 168, Cleo11, NEUTRAL_REACTION );
	end
	if (map_var(2) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 169, Cleo05, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_DECKER_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 170, Cleo13, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_MISSING_CARAVAN ) == 1) then begin
		giq_option( 4, SCRIPT_CLEO, 171, Cleo14, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_CLEO, 173, Cleo09, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_CLEO, 174, Cleo10, NEUTRAL_REACTION );
end

procedure Cleo13
begin
	gsay_message(560, 175, 50);
end

procedure Cleo14
begin
	set_global_var( GVAR_DECKER_KNOWN, 1 );
	gsay_reply(560, 176);
	giq_option( 4, SCRIPT_CLEO, 177, Cleo15, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CLEO, 178, Cleo16, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CLEO, 179, Cleo17, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CLEO, 180, Cleo18, NEUTRAL_REACTION );
end

procedure Cleo15
begin
	gsay_message(560, 181, 50);
end

procedure Cleo16
begin
	gsay_message(560, 182, 50);
end

procedure Cleo17
begin
	gsay_reply(560, 183);
	giq_option( 4, SCRIPT_CLEO, 184, Cleo20, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CLEO, 185, Cleo20, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CLEO, 186, Cleo21, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_CLEO, 187, Cleo22, NEUTRAL_REACTION );
end

procedure Cleo18
begin
	gsay_message(560, 188, 50);
end

procedure Cleo19
begin
	gsay_message(560, 189, 50);
end

procedure Cleo20
begin
	gsay_message(560, 190, 50);
end

procedure Cleo21
begin
	gsay_message(560, 191, 50);
end

procedure Cleo22
begin
	gsay_message(560, 192, 50);
end

procedure CleoEnd
begin
end





