#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure damage_p_proc;//    script_action == 14
procedure combat_p_proc;//    script_action == 13
procedure look_at_p_proc;//    script_action == 21

procedure Cop00;
procedure Cop01;
procedure Cop02;
procedure items_held;
procedure spawn_items;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable hostile;
variable Only_Once := 1;
variable exit_line;

variable RightHand := 0;
variable LeftHand := 0;
variable PIDright := 0;
variable PIDleft := 0;
variable SubtypeWEP := 0;


procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if Only_Once then begin
		Only_Once := 0;
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 40);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 86);
		call spawn_items;
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
				end
			end
		end
	end
end

procedure items_held
begin
	SubtypeWEP := 0;
	if critter_inven_obj(dude_obj, 1) then begin
		RightHand := critter_inven_obj(dude_obj, 1);
		PIDright := obj_pid(RightHand);
		if obj_item_subtype(RightHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		RightHand := 0;
		PIDright := 0;
	end
	if critter_inven_obj(dude_obj, 2) then begin
		LeftHand := critter_inven_obj(dude_obj, 2);
		PIDleft := obj_pid(LeftHand);
		if obj_item_subtype(LeftHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		LeftHand := 0;
		PIDleft := 0;
	end
end

procedure spawn_items
begin	
	variable Item := 0;
	if (obj_pid(self_obj) == (16777253 or 16777469)) then begin
		/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 40) <= 0) then begin
			Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
			add_obj_to_inven(self_obj, Item);
			Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
			add_obj_to_inven(self_obj, Item);
		end
		/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 234) <= 0) then begin
			Item := create_object_sid(PID_SPIKED_KNUCKLES, 0, 0, -1);
			add_obj_to_inven(self_obj, Item);
		end
		/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 236) <= 0) then begin
			Item := create_object_sid(PID_COMBAT_KNIFE, 0, 0, -1);
			add_obj_to_inven(self_obj, Item);
		end
	end
	else begin
		/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 40) <= 0) then begin
			Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
			add_obj_to_inven(self_obj, Item);
		end
		if (obj_pid(self_obj) == (16777243 or 16777464)) then begin
			/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 21) <= 0) then begin
				Item := create_object_sid(PID_BRASS_KNUCKLES, 0, 0, -1);
				add_obj_to_inven(self_obj, Item);
			end
			/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 8) <= 0) and (obj_is_carrying_obj_pid(self_obj, 18) <= 0) then begin
				if (random(0, 1)) then begin
					/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 8) <= 0) then begin
						Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
						add_obj_to_inven(self_obj, Item);
						if (random(0, 1)) then begin
							/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 29) <= 0) then begin
								Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
								add_obj_to_inven(self_obj, Item);
							end
						end
						else begin
							/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 30) <= 0) then begin
								Item := create_object_sid(PID_10MM_AP, 0, 0, -1);
								add_obj_to_inven(self_obj, Item);
							end
						end
					end
				end
				else begin
					/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 8) <= 0) and (obj_is_carrying_obj_pid(self_obj, 18) <= 0) then begin
						/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 18) <= 0) then begin
							Item := create_object_sid(PID_DESERT_EAGLE, 0, 0, -1);
							add_obj_to_inven(self_obj, Item);
							if (random(0, 1)) then begin
								/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 31) <= 0) then begin
									Item := create_object_sid(PID_44_MAGNUM_JHP, 0, 0, -1);
									add_obj_to_inven(self_obj, Item);
								end
							end
							else begin
								/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 111) <= 0) then begin
									Item := create_object_sid(PID_44_FMJ_MAGNUM, 0, 0, -1);
									add_obj_to_inven(self_obj, Item);
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure critter_p_proc
begin
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
	else begin
		if (global_var(ENEMY_HUB) == 1) then begin
			hostile := 1;
			attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
		end
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		hostile := 1;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	call get_reaction;
	if (cur_map_index == 36) then begin //    THE HUB - ENTRANCE
		call Cop01;
	end
	else begin
		if (cur_map_index == 38) then begin //  THE HUB - DOWNTOWN
			call Cop00;
		end
		else begin
			call Cop02;
		end
	end
end

procedure destroy_p_proc
begin

	if source_obj == dude_obj then begin
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_HUB, 1);
		hostile := 1;
	end
end

procedure combat_p_proc
begin
	if (global_var(ENEMY_HUB) == 1) then begin
		hostile := 1;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_GENCOP, 100));
end

procedure Cop00
begin
	if (random(0, 3) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_GENCOP, random(101, 106)), 2);
	end
	else begin
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			float_msg(self_obj, message_str(SCRIPT_GENCOP, random(113, 116)), 2);
		end
		else begin
			if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
				if (get_critter_stat(dude_obj, 34) == 0) then begin
					float_msg(self_obj, message_str(SCRIPT_GENCOP, random(110, 112)), 2);
				end
				else begin
					float_msg(self_obj, message_str(SCRIPT_GENCOP, random(110, 111)), 2);
				end
			end
			else begin
				if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
					float_msg(self_obj, message_str(SCRIPT_GENCOP, random(117, 118)), 2);
				end
				else begin
					call items_held;
					if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
						float_msg(self_obj, message_str(SCRIPT_GENCOP, random(107, 109)), 2);
					end
					else begin
						if (global_var(KILL_DEATHCLAW) == 2) or (global_var(MISSING_CARAVANS_STATUS) == 5) then begin
							if random(0, 1) == 1 then begin
								float_msg(self_obj, message_str(SCRIPT_GENCOP, 119), 3);
							end
							else begin
								float_msg(self_obj, message_str(SCRIPT_GENCOP, random(103, 106)), 0);
							end
						end
						else begin
							float_msg(self_obj, message_str(SCRIPT_GENCOP, random(101, 106)), 2);
						end
					end
				end
			end
		end
	end
end

procedure Cop01
begin
	if (random(0, 3) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_GENCOP, random(120, 129)), 0);
	end
	else begin
		call items_held;
		if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
			float_msg(self_obj, message_str(SCRIPT_GENCOP, random(130, 133)), 2);
		end
		else begin
			if (obj_pid(critter_inven_obj(dude_obj, 0)) == 3) then begin
				float_msg(self_obj, message_str(SCRIPT_GENCOP, 134), 2);
			end
			else begin
				if (global_var(PC_WANTED) == 1) then begin
					float_msg(self_obj, message_str(SCRIPT_GENCOP, random(135, 137)), 2);
				end
				else begin
					if (global_var(FARGO_TRADERS_STATUS) == 1) then begin
						float_msg(self_obj, message_str(SCRIPT_GENCOP, 138), 2);
					end
					else begin
						if (global_var(WATER_MERCHANTS_STATUS) == 1) then begin
							float_msg(self_obj, message_str(SCRIPT_GENCOP, 139), 2);
						end
						else begin
							if (global_var(CRIMSON_CARAVANS_STATUS) == 1) then begin
								float_msg(self_obj, message_str(SCRIPT_GENCOP, 140), 2);
							end
							else begin
								if (global_var(UNDERGROUND_STATUS) == 1) then begin
									float_msg(self_obj, message_str(SCRIPT_GENCOP, random(141, 143)), 2);
								end
								else begin
									float_msg(self_obj, message_str(SCRIPT_GENCOP, random(120, 129)), 0);
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure Cop02
begin
	variable LVar0 := 0;
	if (random(0, 3) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_GENCOP, 144), 2);
	end
	else begin
		if (global_var(PC_WANTED) == 1) then begin
			float_msg(self_obj, message_str(SCRIPT_GENCOP, random(155, 157)), 2);
		end
		else begin
			if (global_var(FARGO_TRADERS_STATUS) == 1) then begin
				float_msg(self_obj, message_str(SCRIPT_GENCOP, 158), 2);
			end
			else begin
				if (global_var(WATER_MERCHANTS_STATUS) == 1) then begin
					float_msg(self_obj, message_str(SCRIPT_GENCOP, 159), 2);
				end
				else begin
					if (global_var(CRIMSON_CARAVANS_STATUS) == 1) then begin
						float_msg(self_obj, message_str(SCRIPT_GENCOP, 160), 2);
					end
					else begin
						if (global_var(UNDERGROUND_STATUS) == 1) then begin
							float_msg(self_obj, message_str(SCRIPT_GENCOP, random(161, 163)), 2);
						end
						else begin
							LVar0 := random(144, 154);
							if ((LVar0 == 145) or (LVar0 == 146)) then begin
								if (get_critter_stat(dude_obj, 34) == 0) then begin
									LVar0 := 145;
								end
								else begin
									LVar0 := 146;
								end
							end
							float_msg(self_obj, message_str(SCRIPT_GENCOP, LVar0), 2);
						end
					end
				end
			end
		end
	end
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end

