/*

	Hub - Justin Green, the sheriff

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_JUSTIN
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;

procedure Justin00;
procedure Justin01;
procedure Justin01a;
procedure Justin01b;
procedure Justin02;
procedure Justin03;
procedure Justin04;
procedure Justin05a;
procedure Justin05b;
procedure Justin06;
procedure Justin07;
procedure Justin08;
procedure Justin09;
procedure Justin10;
procedure Justin11;
procedure Justin12;
procedure Justin13;
procedure Justin14;
procedure Justin15;
procedure Justin15a;
procedure Justin15b;
procedure Justin15c;
procedure Justin15d;
procedure Justin16;
procedure Justin17;
procedure Justin18;
procedure Justin19;
procedure Justin20;
procedure Justin22;
procedure Justin26;
procedure Justin27;
procedure Justin28;
procedure Justin29;
procedure Justin30;
procedure Justin31;
procedure Justin32;
procedure Justin33;
procedure Justin34;
procedure Justin35;
procedure JustinEnd;
procedure JustinCombat;
procedure JustinTravel;
procedure GoToDecker;

variable tmp_hostile;
variable Only_Once := 1;
variable travel;

import variable Kane_Ptr;
import variable Decker_Ptr;
import variable Justin_Ptr;
import variable Fry_Stub_Ptr;

procedure ReportBob;
procedure BobGuilty;
procedure BobReward;
procedure BobReward2;


procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		Justin_Ptr := self_obj;
		if (global_var( GVAR_GREENE_DEAD ) == 1) then begin
			if not(is_loading_game) then begin    set_self_visible;    end//  MAKE VISIBLE
		end
		set_self_team(TEAM_HUB_POLICE );
		set_self_ai( AI_HUB_POLICE );
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if (travel == 1) then begin
		travel := 0;
		call GoToDecker;
	end
end

procedure pickup_p_proc
begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	if (map_var(53) == 1) then begin
		set_map_var(53, 0);
		start_gdialog(696, self_obj, 4, -1, -1);
		gsay_start;
		call Justin35;
		gsay_end;
		end_dialogue;
	end
	else begin
		if (local_var(7) == 1) then begin
			start_gdialog(696, self_obj, 4, -1, -1);
			gsay_start;
			call Justin29;
			gsay_end;
			end_dialogue;
		end
		else begin
			if (global_var( GVAR_DECKER_STATUS ) == 1) then begin
				start_gdialog(696, self_obj, 4, -1, -1);
				gsay_start;
				call Justin27;
				gsay_end;
				end_dialogue;
			end
			else begin
				if (local_var(6) == 1) then begin
					start_gdialog(696, self_obj, 4, -1, -1);
					gsay_start;
					call Justin26;
					gsay_end;
					end_dialogue;
				end
				else begin
					if (local_var(6) == 2) then begin
						start_gdialog(696, self_obj, 4, -1, -1);
						gsay_start;
						call Justin28;
						gsay_end;
						end_dialogue;
					end
					else begin
						if (local_var(4) == 0) then begin
							set_local_var(4, 1);
							start_gdialog(696, self_obj, 4, -1, -1);
							gsay_start;
							call Justin00;
							gsay_end;
							end_dialogue;
						end
						else begin
							if has_rep_childkiller then begin
								call Justin03;
							end
							else begin
								if ((local_var(1) == 3) or (local_var(1) == 0)) then begin
									start_gdialog(696, self_obj, 4, -1, -1);
									gsay_start;
									call Justin31;
									gsay_end;
									end_dialogue;
								end
								else begin
									if (local_var(1) == 2) then begin
										start_gdialog(696, self_obj, 4, -1, -1);
										gsay_start;
										call Justin32;
										gsay_end;
										end_dialogue;
									end
									else begin
										if (local_var(1) == 1) then begin
											start_gdialog(696, self_obj, 4, -1, -1);
											gsay_start;
											call Justin33;
											gsay_end;
											end_dialogue;
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure destroy_p_proc
begin
	set_global_var( GVAR_GREENE_DEAD, 1 );

	inc_good_critter
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_JUSTIN, 100));
end

procedure combat_p_proc
begin
	if (map_var(54) == 1) then begin
		script_overrides;
	end
end

procedure damage_p_proc
begin
	if (source_obj == dude_obj) then begin
		if (map_var(52) == 0) then begin
			set_global_var( GVAR_ENEMY_HUB, 1 );
		end
	end
end

procedure Justin00
begin
	if has_rep_childkiller then begin
		gsay_message(696, 101, 50);
	end
	else begin
		if (dude_is_male) then begin
			gsay_reply(696, 102);
		end
		else begin
			gsay_reply(696, 103);
		end
		call Justin30;
	end
end

procedure Justin01
begin
	gsay_reply(696, 104);
	if ((global_var( GVAR_DECKER_STATUS ) == 0) and ((map_var(46) > 0) and (map_var(46) != 6))) then begin
		giq_option( 4, SCRIPT_JUSTIN, 105, Justin01a, NEUTRAL_REACTION );
	end
	if ((global_var( GVAR_DECKER_STATUS ) == 0) and ((map_var(47) > 0) and (map_var(47) != 7))) then begin
		giq_option( 4, SCRIPT_JUSTIN, 106, Justin01b, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_GRETCH_PRIMECUTS ) and global_var( GVAR_CAN_REPORT_BITS_BOB ) and not(global_var( GVAR_BITS_BOB_REPORTED )) and not(global_var( GVAR_FIXT_BUGFIXES_ONLY ))) then begin// player knows about Bob's human meat, CAN_REPORT_BITS_BOB==true, haven't already reported him, and BugFixesOnly==false
		giq_option( 4, SCRIPT_JUSTIN, 180, ReportBob, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_JUSTIN, 107, JustinEnd, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 108, Justin04, NEUTRAL_REACTION );
end

procedure ReportBob
begin
	gsay_reply(696, 181);
	giq_option( 4, SCRIPT_JUSTIN, 182, BobGuilty, NEUTRAL_REACTION );
end

procedure BobGuilty
begin
	variable LVar0 := 500;
	gfade_out(1);
	game_time_advance(10 * 60 * 60 * 2);
	gfade_in(1);
	gsay_reply(696, 183);
	set_global_var( GVAR_BITS_BOB_REPORTED, 1 );
	give_exp_points(LVar0);
	display_msg(message_str(SCRIPT_GENCHAT, 103) + LVar0 + message_str(SCRIPT_GENCHAT, 104));
	giq_option( 4, SCRIPT_JUSTIN, 184, BobReward, NEUTRAL_REACTION );
end

procedure BobReward
begin
	set_global_var( GVAR_PLAYER_REPUTATION, check_general_rep + 2 );
	gsay_reply(696, 186);
	giq_option( 4, SCRIPT_JUSTIN, 189, Justin22, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 187, Justin22, GOOD_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 188, BobReward2, BAD_REACTION );
end

procedure BobReward2
begin
	gsay_reply(696, 190);
	item_caps_adjust(dude_obj, 250);
	giq_option( 4, SCRIPT_JUSTIN, 191, Justin22, BAD_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 192, Justin22, BAD_REACTION );
	set_global_var( GVAR_PLAYER_REPUTATION, (check_general_rep - 1) );
end

procedure Justin01a
begin
	if (global_var( GVAR_KILL_MERCHANT ) != 2) then begin
		call Justin05a;
	end
	else begin
		if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
			call Justin06;
		end
		else begin
			call Justin07;
		end
	end
end

procedure Justin01b
begin
	if (global_var( GVAR_KILL_JAIN ) != 2) then begin
		call Justin05a;
	end
	else begin
		if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
			call Justin06;
		end
		else begin
			call Justin08;
		end
	end
end

procedure Justin02
begin
	if (local_var(5) == 0) then begin
		UpReact
		set_local_var(5, 1);
		gsay_message(696, 109, 49);
	end
	else begin
		gsay_message(696, 110, 49);
	end
end

procedure Justin03
begin
	float_msg(self_obj, message_str(SCRIPT_JUSTIN, 111), 2);
end

procedure Justin04
begin
	gsay_message(696, 112, 50);
end

procedure Justin05a
begin
	gsay_reply(696, 170);
	giq_option( 4, SCRIPT_JUSTIN, 171, Justin05b, NEUTRAL_REACTION );
end

procedure Justin05b
begin
	gsay_reply(696, 113);
	call Justin09;
end

procedure Justin06
begin
	gsay_reply(696, 114);
	call Justin09;
end

procedure Justin07
begin
	gsay_reply(696, 115);
	call Justin15;
end

procedure Justin08
begin
	gsay_reply(696, 116);
	call Justin15;
end

procedure Justin09
begin
	giq_option( 4, SCRIPT_JUSTIN, 117, Justin11, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 118, Justin10, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 119, Justin12, NEUTRAL_REACTION );
end

procedure Justin10
begin
	gsay_reply(696, 120);
	giq_option( 4, SCRIPT_JUSTIN, 121, Justin11, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 122, Justin12, NEUTRAL_REACTION );
end

procedure Justin11
begin
	variable LVar0 := 0;
	set_local_var(6, 1);
	item_caps_adjust(dude_obj, 300);
	gsay_message(696, 123, 50);
	gsay_reply(696, 174);
	giq_option( 4, SCRIPT_JUSTIN, 124, Justin20, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 125, JustinEnd, NEUTRAL_REACTION );
end

procedure Justin12
begin
	set_local_var(6, 2);
	gsay_reply(696, 126);
	giq_option( 4, SCRIPT_JUSTIN, 127, Justin13, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 128, Justin14, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 129, JustinEnd, NEUTRAL_REACTION );
end

procedure Justin13
begin
	variable LVar0 := 0;
	set_local_var(6, 1);
	item_caps_adjust(dude_obj, 300);
	gsay_message(696, 130, 49);
	gsay_message(696, 175, 50);
end

procedure Justin14
begin
	gsay_message(696, 131, 50);
end

procedure Justin15
begin
	giq_option( 4, SCRIPT_JUSTIN, 132, JustinCombat, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 133, Justin15a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 134, Justin15b, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 135, Justin15c, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 136, Justin15d, NEUTRAL_REACTION );
end

procedure Justin15a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 30))) then begin
		call Justin16;
	end
	else begin
		call Justin17;
	end
end

procedure Justin15b
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call Justin16;
	end
	else begin
		call Justin17;
	end
end

procedure Justin15c
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 15))) then begin
		call Justin16;
	end
	else begin
		call Justin17;
	end
end

procedure Justin15d
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -50))) then begin
		call Justin18;
	end
	else begin
		call Justin19;
	end
end

procedure Justin16
begin
	gsay_reply(696, 137);
	call Justin09;
end

procedure Justin17
begin
	set_local_var(7, 1);
	gsay_message(696, 138, 51);
end

procedure Justin18
begin
	gsay_reply(696, 139);
	call Justin09;
end

procedure Justin19
begin
	set_local_var(7, 1);
	gsay_message(696, 140, 51);
end

procedure Justin20
begin
	gsay_message(696, 141, 50);
	call JustinTravel;
end

procedure Justin22
begin
	gsay_message(696, 129, 50);
end

procedure Justin26
begin
	gsay_reply(696, 151);
	giq_option( 4, SCRIPT_JUSTIN, 152, JustinTravel, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 153, JustinEnd, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_JUSTIN, 154, Justin34, NEUTRAL_REACTION );
end

procedure Justin27
begin
	gsay_message(696, 155, 49);
end

procedure Justin28
begin
	gsay_reply(696, 156);
	giq_option( 4, SCRIPT_JUSTIN, 157, Justin11, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 158, JustinEnd, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_JUSTIN, 159, Justin34, NEUTRAL_REACTION );
end

procedure Justin29
begin
	gsay_message(696, 160, 50);
end

procedure Justin30
begin
	giq_option( 4, SCRIPT_JUSTIN, 161, Justin01, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 162, Justin02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_JUSTIN, 163, JustinEnd, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_JUSTIN, 164, Justin34, NEUTRAL_REACTION );
end

procedure Justin31
begin
	if (dude_is_male) then begin
		gsay_reply(696, 165);
	end
	else begin
		gsay_reply(696, 166);
	end
	call Justin30;
end

procedure Justin32
begin
	gsay_reply(696, 167);
	call Justin30;
end

procedure Justin33
begin
	gsay_reply(696, 168);
	call Justin30;
end

procedure Justin34
begin
	gsay_message(696, 169, 50);
end

procedure Justin35 begin
	variable LVar0 := 0;
	item_caps_adjust(dude_obj, 1000);

	set_global_var( GVAR_PLAYER_REPUTATION, check_general_rep + 4 );
	inc_hub_rep(REP_BONUS_KILLED_DECKER);

	give_exp_points(1400);
	display_msg(message_str(SCRIPT_GENCHAT, 103) + 1400 + message_str(SCRIPT_GENCHAT, 104));
	gsay_message(696, 172, 49);
	gsay_message(696, 173, 49);
end

procedure JustinEnd
begin
end

procedure JustinCombat
begin
	call combat;
end

procedure JustinTravel
begin
	travel := 1;
end

procedure GoToDecker
begin
	set_map_var(52, 1);
	gfade_out(1);
	if not(is_loading_game) then begin	set_obj_visibility(Fry_Stub_Ptr, 0);	end
	move_to(self_obj, 23926, 1);
	anim(self_obj, 1000, rotation_to_tile(self_tile, tile_num(Decker_Ptr)));
	set_self_team(TEAM_PLAYER );
	if (map_var(49) == 0) then begin
		move_to(Kane_Ptr, 22526, 1);
		anim(Kane_Ptr, 1000, rotation_to_tile(tile_num(Kane_Ptr), tile_num(Decker_Ptr)));
	end
	move_to(dude_obj, 24125, 1);
	anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(Decker_Ptr)));
	gfade_in(1);
end
