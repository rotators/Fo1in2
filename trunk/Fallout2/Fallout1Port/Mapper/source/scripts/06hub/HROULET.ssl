#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure Dealer00;
procedure Dealer01;
procedure Dealer02;
procedure Dealer03;
procedure Dealer04;
procedure Dealer05;
procedure Dealer06;
procedure CheckMoney00;
procedure CheckMoney01;
procedure CheckMoney02;
procedure CheckMoney03;
procedure DealerEnd;
procedure GetOdds;

variable tmp_hostile;
variable Bet;
variable Only_Once := 1;


procedure start
begin
	

	if Only_Once then begin
		Only_Once := 0;
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 38);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 50);
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
				end
			end
		end
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	get_reaction
	start_gdialog(697, self_obj, 4, -1, -1);
	gsay_start;
	call Dealer00;
	gsay_end;
	end_dialogue;
end

procedure destroy_p_proc
begin

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_FALCON1, 167));
end

procedure Dealer00
begin
	gsay_reply(697, 173);
	giq_option(4, 697, 174, CheckMoney00, 50);
	giq_option(4, 697, 175, CheckMoney01, 50);
	giq_option(4, 697, 176, CheckMoney02, 50);
	giq_option(4, 697, 177, CheckMoney03, 50);
	giq_option(4, 697, 178, DealerEnd, 50);
	giq_option(-3, 697, 179, Dealer01, 50);
end

procedure Dealer01
begin
	gsay_message(697, message_str(SCRIPT_FALCON1, 180) + message_str(SCRIPT_FALCON1, 181), 50);
end

procedure Dealer02
begin
	gsay_message(697, 182, 50);
end

procedure Dealer03
begin
	gsay_message(697, 183, 50);
	item_caps_adjust(dude_obj, Bet);
end

procedure Dealer04
begin
	gsay_message(697, 184, 50);
	item_caps_adjust(dude_obj, Bet * 2);
end

procedure Dealer05
begin
	gsay_message(697, 185, 50);
	item_caps_adjust(dude_obj, Bet * 3);
end

procedure Dealer06
begin
	if (get_critter_stat(dude_obj, STAT_gender) == 0) then begin
		gsay_message(697, 186, 50);
	end
	else begin
		gsay_message(697, 187, 50);
	end
end

procedure CheckMoney00
begin
	Bet := 5;
	if (item_caps_total(dude_obj) < Bet) then begin
		call Dealer06;
	end
	else begin
		call GetOdds;
	end
end

procedure CheckMoney01
begin
	Bet := 15;
	if (item_caps_total(dude_obj) < Bet) then begin
		call Dealer06;
	end
	else begin
		call GetOdds;
	end
end

procedure CheckMoney02
begin
	Bet := 25;
	if (item_caps_total(dude_obj) < Bet) then begin
		call Dealer06;
	end
	else begin
		call GetOdds;
	end
end

procedure CheckMoney03
begin
	Bet := 50;
	if (item_caps_total(dude_obj) < Bet) then begin
		call Dealer06;
	end
	else begin
		call GetOdds;
	end
end

procedure DealerEnd
begin
end

procedure GetOdds
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	LVar0 := random(1, 36) - 10;
	LVar1 := roll_vs_skill(dude_obj, SKILL_GAMBLING, -15);
	if (is_critical(LVar1)) then begin
		if (is_success(LVar1)) then begin
			LVar0 := LVar0 + 10;
		end
		else begin
			LVar0 := LVar0 - 5;
		end
	end
	else begin
		if (is_success(LVar1)) then begin
			LVar0 := LVar0 + 5;
		end
	end
	//debug_msg("dice == " + LVar0);
	if (LVar0 < 10) then begin
		call Dealer02;
	end
	else begin
		if (LVar0 < 20) then begin
			call Dealer03;
		end
		else begin
			if (LVar0 < 30) then begin
				call Dealer04;
			end
			else begin
				call Dealer05;
			end
		end
	end
end


