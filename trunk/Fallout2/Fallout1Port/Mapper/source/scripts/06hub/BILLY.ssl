/*

	Hub - ?

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_BILLY
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure damage_p_proc;//    script_action == 14
procedure look_at_p_proc;//    script_action == 21
procedure combat_p_proc;//    script_action == 13
procedure timed_event_p_proc;//    script_action == 22

procedure Billy00;
procedure Billy01;
procedure Billy02;
procedure Billy03;
procedure Billy04;
procedure Billy05;
procedure Billy06;
procedure Billy07;
procedure Billy08;
procedure Billy09;
procedure Billy10;
procedure Billy11;
procedure Billy12;
procedure Billy13;
procedure Billy14;
procedure Billy14a;
procedure Billy15;
procedure Billy15a;
procedure Billy16;
procedure Billy17;
procedure Billy18;
procedure Billy19;
procedure Billy20;
procedure Billy21;
procedure Billy22;
procedure Billy23;

procedure BillyRunAway;
procedure SendToStart;
procedure SendToLeft;
procedure SendToRight;
procedure SendToLower;
procedure SendToSleep;
procedure BillyEnd;

import variable Billy_ptr;
import variable Dan_ptr;

variable tmp_hostile;
variable Only_Once := 1;
variable Once_Which_One;
variable Runaway;
variable Sleeping;
variable SetDayNight;

procedure start
begin


	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_DAN_THE_BRAHMIN_MAN );
		set_self_ai( AI_HUB_PEASANTS );
		Billy_ptr := self_obj;
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
					else begin
						if (script_action == 13) then begin//<-- combat_p_proc , basically does combat_is_initialized == 1
							call combat_p_proc;
						end
						else begin
							if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
								call timed_event_p_proc;
							end
						end
					end
				end
			end
		end
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if (Runaway == 0) then begin
		if (global_var( GVAR_DAN_HUB_STATUS ) == 1) then begin
			call BillyRunAway;
		end
		if (morning) then begin
			if (SetDayNight != 1) then begin
				add_timer_event(self_obj, game_ticks(10), 1);
				SetDayNight := 1;
			end
		end
	end
end

procedure pickup_p_proc begin
	if (source_obj == dude_obj) then begin
		call Billy11;
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	if (local_var(6) == 1) then begin
		call Billy10;
	end
	else begin
		if (obj_can_see_obj(self_obj, Dan_ptr) or obj_can_hear_obj(self_obj, Dan_ptr)) then begin
			if (map_var(0) != 2) then begin
				set_map_var(0, 1);
			end
		end
		if (local_var(4) == 1) then begin
			if (map_var(1) == 1) then begin
				call Billy21;
			end
			else begin
				if (map_var(0) == 2) then begin
					call Billy14;
				end
				else begin
					call Billy23;
				end
			end
		end
		else begin
			call Billy00;
		end
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);

	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_HUB, 1 );
	end

	inc_good_critter
	inc_childkiller

	rm_timer_event(self_obj);
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_HUB, 1 );
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_BILLY, 100));
end

procedure combat_p_proc
begin
	set_local_var(6, 1);
end

procedure timed_event_p_proc
begin
	if (Runaway == 0) then begin
		if (morning or (day)) then begin
			if (Sleeping == 1) then begin
				reg_anim_func(2, self_obj);
				reg_anim_func(1, 1);
				reg_anim_obj_move_to_tile(self_obj, 13889, -1);
				reg_anim_func(3, 0);
				add_timer_event(self_obj, game_ticks(60 * 5), 2);
				Sleeping := 0;
			end
			else begin
				if (fixed_param == 1) then begin
					call SendToStart;
				end
				if (fixed_param == 2) then begin
					call SendToRight;
				end
				if (fixed_param == 3) then begin
					call SendToLeft;
				end
				if (fixed_param == 4) then begin
					call SendToLower;
				end
			end
		end
		else begin
			call SendToSleep;
		end
	end
end

procedure Billy00
begin
	set_local_var(4, 1);
	start_gdialog(556, self_obj, 4, -1, -1);
	gsay_start;
	gsay_reply(556, 101);
	NOption( 102, Billy04, 4 );
	NOption( 103, Billy01, 4 );
	NOption( 104, BillyEnd, 4 );
	NOption( 105, Billy06, -3 );
	NOption( 106, Billy06, -3 );
	gsay_end;
	end_dialogue;
end

procedure Billy01
begin
	set_local_var(11, 1);
	gsay_reply(556, 107);
	NOption( 108, Billy02, 4 );
	NOption( 109, Billy03, 4 );
end

procedure Billy02
begin
	set_global_var( GVAR_MISSING_CARAVAN, 1 );
	gsay_message(556, 110, 50);
end

procedure Billy03
begin
	gsay_message(556, 111, 50);
end

procedure Billy04
begin
	set_local_var(10, 1);
	gsay_reply(556, 112);
	NOption( 113, Billy12, 4 );
	NOption( 114, Billy05, 4 );
end

procedure Billy05
begin
	gsay_reply(556, 115);
	NOption( 116, Billy08, 4 );
	GOption( 117, Billy07, 4 );
	NOption( 118, BillyEnd, 4 );
end

procedure Billy06
begin
	gsay_message(556, 119, 50);
end

procedure Billy07
begin
	gsay_message(556, 120, 49);
end

procedure Billy08
begin
	gsay_reply(556, 121);
	NOption( 122, BillyEnd, 4 );
	GOption( 123, Billy09, 4 );
end

procedure Billy09
begin
	gsay_message(556, 124, 49);
end

procedure Billy10
begin
	if (Once_Which_One == 0) then begin
		Once_Which_One := 1;
		float_msg(self_obj, message_str(SCRIPT_BILLY, 125), 8);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_BILLY, random(126, 129)), 8);
	end
	animate_move_obj_to_tile(self_obj, 15890, 1);
end

procedure Billy11
begin
	if (local_var(5) == 0) then begin
		set_local_var(5, 1);
		float_msg(self_obj, message_str(SCRIPT_BILLY, 130), 8);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_BILLY, 131), 8);
	end
end

procedure Billy12
begin
	gsay_reply(556, 132);
	NOption( 133, Billy13, 4 );
	NOption( 134, BillyEnd, 4 );
end

procedure Billy13
begin
	gsay_message(556, 135, 50);
end

procedure Billy14
begin
	if (local_var(7) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_BILLY, 142), 8);
	end
	else begin
		set_local_var(7, 1);
		start_gdialog(556, self_obj, 4, -1, -1);
		gsay_start;
		gsay_reply(556, 136);
		NOption( 137, Billy15, 4 );
		NOption( 138, Billy14a, 4 );
		NOption( 139, BillyEnd, 4 );
		NOption( 140, Billy06, -3 );
		NOption( 141, Billy06, -3 );
		gsay_end;
		end_dialogue;
	end
end

procedure Billy14a
begin
	if (dude_caps >= 50) then begin
		dude_caps_adjust( -50 );
		call Billy19;
	end
	else begin
		call Billy20;
	end
end

procedure Billy15
begin
	gsay_reply(556, 143);
	NOption( 144, Billy15a, 4 );
	BOption( 145, Billy18, 4 );
	NOption( 146, BillyEnd, 4 );
end

procedure Billy15a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call Billy16;
	end
	else begin
		call Billy17;
	end
end

procedure Billy16
begin
	gsay_message(556, 147, 50);
end

procedure Billy17
begin
	gsay_message(556, 148, 51);
end

procedure Billy18
begin
	if (dude_is_male) then begin
		gsay_message(556, 149, 51);
	end
	else begin
		gsay_message(556, 150, 51);
	end
end

procedure Billy19
begin
	if (dude_is_male) then begin
		gsay_message(556, 151, 49);
	end
	else begin
		gsay_message(556, 152, 49);
	end
	call BillyRunAway;
end

procedure Billy20
begin
	gsay_message(556, 153, 49);
end

procedure Billy21
begin
	if (local_var(8) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_BILLY, random(158, 164)), 8);
	end
	else begin
		set_local_var(8, 1);
		start_gdialog(556, self_obj, 4, -1, -1);
		gsay_start;
		gsay_reply(556, 154);
		NOption( 155, Billy22, 4 );
		NOption( 156, BillyEnd, 4 );
		NOption( 157, Billy06, -3 );
		gsay_end;
		end_dialogue;
	end
end

procedure Billy22
begin
	gsay_message(556, 165, 50);
end

procedure Billy23
begin
	if (local_var(9) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_BILLY, random(172, 178)), 8);
	end
	else begin
		set_local_var(9, 1);
		start_gdialog(556, self_obj, 4, -1, -1);
		gsay_start;
		gsay_reply(556, 166);
		if (local_var(10) == 0) then begin
			NOption( 167, Billy04, 4 );
		end
		if (local_var(11) == 4) then begin
			NOption( 168, Billy01, 4 );
		end
		NOption( 169, BillyEnd, 4 );
		NOption( 170, Billy06, -3 );
		NOption( 171, Billy06, -3 );
		gsay_end;
		end_dialogue;
	end
end

procedure BillyRunAway
begin
	Runaway := 1;
	animate_move_obj_to_tile(self_obj, 9858, 1);
end

procedure SendToStart
begin
	if (random(1, 10) >= 7) then begin
		reg_anim_func(2, self_obj);
		reg_anim_func(1, 1);
		reg_anim_obj_move_to_tile(self_obj, 13889, -1);
		reg_anim_func(3, 0);
	end
	else begin
		animate_move_obj_to_tile(self_obj, 13889, 1);
	end
	add_timer_event(self_obj, game_ticks(120), 2);
end

procedure SendToLeft
begin
	if (random(1, 10) >= 7) then begin
		reg_anim_func(2, self_obj);
		reg_anim_func(1, 1);
		reg_anim_obj_move_to_tile(self_obj, 13889, -1);
		reg_anim_func(3, 0);
	end
	else begin
		animate_move_obj_to_tile(self_obj, 13889, 1);
	end
	add_timer_event(self_obj, game_ticks(60), 4);
end

procedure SendToRight
begin
	if (random(1, 10) >= 7) then begin
		reg_anim_func(2, self_obj);
		reg_anim_func(1, 1);
		reg_anim_obj_move_to_tile(self_obj, 12072, -1);
		reg_anim_func(3, 0);
	end
	else begin
		animate_move_obj_to_tile(self_obj, 12072, 1);
	end
	add_timer_event(self_obj, game_ticks(60), 3);
end

procedure SendToLower
begin
	if (random(1, 10) >= 7) then begin
		reg_anim_func(2, self_obj);
		reg_anim_func(1, 1);
		reg_anim_obj_move_to_tile(self_obj, 13872, -1);
		reg_anim_func(3, 0);
	end
	else begin
		animate_move_obj_to_tile(self_obj, 13872, 1);
	end
	add_timer_event(self_obj, game_ticks(90), 1);
end

procedure SendToSleep
begin
	if (Sleeping == 0) then begin
		reg_anim_func(2, self_obj);
		reg_anim_func(1, 1);
		reg_anim_obj_move_to_tile(self_obj, 16285, -1);
		reg_anim_func(3, 0);
		Sleeping := 1;
		SetDayNight := 0;
	end
end

procedure BillyEnd
begin
end
