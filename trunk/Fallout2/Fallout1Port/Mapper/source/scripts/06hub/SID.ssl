/*

	Hub - Sid

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_SID
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure look_at_p_proc;
procedure Sid00;

variable tmp_hostile;
variable Only_Once := 1;

import variable Sid_Ptr;
import variable Beth_Ptr;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		Sid_Ptr := self_obj;
		set_self_team( TEAM_HUB_FAR_GO_TRADERS );
		set_self_ai( AI_GUARD );
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc
begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	call Sid00;
end

procedure destroy_p_proc
begin

	inc_good_critter
end

procedure damage_p_proc
begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_HUB, 1 );
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_SID, 100));
end

procedure Sid00
begin
	variable LVar0 := 0;
	LVar0 := random(1, 7);
	if (LVar0 == 1) then begin
		if ((game_time_hour >= 800) and (game_time_hour < 1200)) then begin
			float_msg(self_obj, message_str(SCRIPT_SID, 101), 8);
		end
		else begin
			if ((game_time_hour >= 1200) and (game_time_hour < 1600)) then begin
				if (dude_is_male) then begin
					float_msg(self_obj, message_str(SCRIPT_SID, 102), 8);
				end
				else begin
					float_msg(self_obj, message_str(SCRIPT_SID, 103), 8);
				end
			end
			else begin
				float_msg(self_obj, message_str(SCRIPT_SID, 104), 8);
			end
		end
	end
	else begin
		if (LVar0 == 2) then begin
			float_msg(self_obj, message_str(SCRIPT_SID, 105), 8);
		end
		else begin
			if (LVar0 == 3) then begin
				float_msg(self_obj, message_str(SCRIPT_SID, 106), 8);
				float_msg(Beth_Ptr, message_str(SCRIPT_HBETH, 374), 2);
			end
			else begin
				if (LVar0 == 4) then begin
					float_msg(self_obj, message_str(SCRIPT_SID, 107), 8);
					float_msg(Beth_Ptr, message_str(SCRIPT_HBETH, 375), 2);
				end
				else begin
					if (LVar0 == 5) then begin
						float_msg(self_obj, message_str(SCRIPT_SID, 108), 8);
						float_msg(Beth_Ptr, message_str(SCRIPT_HBETH, 376), 2);
					end
					else begin
						if (LVar0 == 6) then begin
							float_msg(self_obj, message_str(SCRIPT_SID, 109), 8);
							float_msg(Beth_Ptr, message_str(SCRIPT_HBETH, 377), 2);
						end
						else begin
							float_msg(self_obj, message_str(SCRIPT_SID, 110), 8);
							float_msg(Beth_Ptr, message_str(SCRIPT_HBETH, 378), 2);
							float_msg(self_obj, message_str(SCRIPT_SID, 111), 8);
						end
					end
				end
			end
		end
	end
end




