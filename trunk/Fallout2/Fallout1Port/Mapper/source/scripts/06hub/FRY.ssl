/*

	Hub - Fry, Hub Police

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_FRY
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;

procedure FryDialog;
procedure FryCombat;
procedure FryEnd;
procedure Fry00;
procedure Fry01;
procedure Fry02;
procedure Fry03;
procedure Fry04;
procedure Fry05;
procedure Fry06;
procedure Fry07;
procedure Fry08;
procedure Fry09;
procedure Fry10;
procedure Fry11;
procedure Fry12;
procedure Fry13;
procedure Fry14;
procedure Fry15;
procedure Fry16;
procedure Fry17;
procedure Fry18;
procedure Fry19;
procedure Fry20;
procedure Fry21;
procedure Fry22;
procedure Fry23;
procedure Fry24;

variable tmp_hostile;
variable Only_Once := 1;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		if (global_var( GVAR_FRY_DEAD ) == 1) then begin
			if not(is_loading_game) then begin    set_self_invisible;    end//  MAKE INVISIBLE
		end
		set_self_team( TEAM_HUB_POLICE );
		set_self_ai( AI_HUB_POLICE );
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if ((game_time_hour >= 600) and (game_time_hour < 700) or ((game_time_hour >= 700) and (game_time_hour < 1800))) then begin
		if (self_tile != 21508) then begin
			animate_move_obj_to_tile(self_obj, 21508, 0);
		end
		else begin
			if (random(1, 150) == 1) then begin
				animate_move_obj_to_tile(self_obj, tile_num_in_direction(self_tile, random(0, 5), random(3, 5)), 0);
			end
		end
	end
	else begin
		if (self_tile != 22280) then begin
			animate_move_obj_to_tile(self_obj, 22280, 0);
		end
	end
end

procedure pickup_p_proc
begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	call FryDialog;
end

procedure destroy_p_proc begin
	inc_good_critter
	set_global_var( GVAR_FRY_DEAD, 1 );
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_FRY, 100));
end

procedure damage_p_proc
begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_HUB, 1 );
	end
end

procedure FryDialog
begin
	if ((game_time_hour >= 1800) and (game_time_hour < 1900) or ((game_time_hour >= 1900) or (game_time_hour < 600))) then begin
		float_msg(self_obj, message_str(SCRIPT_FRY, 146), 3);
	end
	else begin
		start_gdialog(567, self_obj, 4, -1, -1);
		gsay_start;
		if (global_var( GVAR_WANTED_FOR_MURDER ) > 2) then begin
			call Fry11;
		end
		else begin
			if (global_var( GVAR_GREENE_DEAD ) == 1) then begin
				call Fry12;
			end
			else begin
				if (global_var( GVAR_WANTED_THEFT ) > 2) then begin
					call Fry13;
				end
				else begin
					if (local_var(4) == 0) then begin
						call Fry00;
						set_local_var(4, 1);
					end
					else begin
						if has_rep_childkiller then begin
							call Fry10;
						end
						else begin
							if (local_var(1) == 3) then begin
								call Fry14;
							end
							else begin
								if (local_var(1) == 2) then begin
									call Fry15;
								end
								else begin
									call Fry16;
								end
							end
						end
					end
				end
			end
		end
		gsay_end;
		end_dialogue;
	end
end

procedure FryCombat
begin
	tmp_hostile := 1;
end

procedure FryEnd
begin
end

procedure Fry00
begin
	if has_rep_childkiller then begin
		gsay_reply(567, 101);
	end
	else begin
		gsay_reply(567, 102);
	end
	giq_option( 4, SCRIPT_FRY, 103, Fry01, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FRY, 104, FryEnd, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_FRY, 105, Fry09, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_FRY, 106, Fry09, NEUTRAL_REACTION );
end

procedure Fry01
begin
	gsay_reply(567, 107);
	giq_option( 4, SCRIPT_FRY, 108, Fry02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FRY, 109, Fry03, NEUTRAL_REACTION );
end

procedure Fry02
begin
	set_global_var( GVAR_DECKER_KNOWN, 1 );
	gsay_reply(567, 110);
	if (global_var( GVAR_MISSING_CARAVAN ) != 2) then begin
		set_global_var( GVAR_MISSING_CARAVAN, 1 );
	end
	call Fry05;
end

procedure Fry03
begin
	set_global_var( GVAR_DECKER_KNOWN, 1 );
	gsay_reply(567, 111);
	if (global_var( GVAR_MISSING_CARAVAN ) != 2) then begin
		set_global_var( GVAR_MISSING_CARAVAN, 1 );
	end
	giq_option( 4, SCRIPT_FRY, 112, Fry07, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FRY, 113, Fry04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FRY, 114, Fry06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FRY, 115, Fry21, NEUTRAL_REACTION );
	if (global_var( GVAR_QUEST_VAULT13_4_WATERCHIP ) != 2) then begin
		giq_option( 4, SCRIPT_FRY, 147, Fry23, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_FRY, 116, Fry08, NEUTRAL_REACTION );
end

procedure Fry04
begin
	gsay_reply(567, 117);
	call Fry05;
end

procedure Fry05
begin
	if (global_var( GVAR_DECKER_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_FRY, 112, Fry07, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_MISSING_CARAVAN ) == 1) then begin
		giq_option( 4, SCRIPT_FRY, 114, Fry06, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_FRY, 115, Fry21, NEUTRAL_REACTION );
	if (global_var( GVAR_QUEST_VAULT13_4_WATERCHIP ) != 2) then begin
		giq_option( 4, SCRIPT_FRY, 147, Fry23, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_FRY, 116, Fry08, NEUTRAL_REACTION );
end

procedure Fry06
begin
	gsay_reply(567, 118);
	call Fry05;
end

procedure Fry07
begin
	gsay_reply(567, 119);
	call Fry05;
end

procedure Fry08
begin
	gsay_message(567, 120, 50);
	call FryEnd;
end

procedure Fry09
begin
	gsay_message(567, 121, 50);
	call FryEnd;
end

procedure Fry10
begin
	gsay_message(567, 122, 50);
	call FryEnd;
end

procedure Fry11
begin
	gsay_message(567, 123, 50);
	call FryCombat;
end

procedure Fry12
begin
	gsay_message(567, 124, 50);
	call FryEnd;
end

procedure Fry13
begin
	gsay_reply(567, 125);
	call FryCombat;
end

procedure Fry14
begin
	if (dude_is_male) then begin
		gsay_reply(567, 130);
	end
	else begin
		gsay_reply(567, 131);
	end
	call Fry17;
end

procedure Fry15
begin
	gsay_reply(567, 132);
	call Fry17;
end

procedure Fry16
begin
	gsay_reply(567, 133);
	call Fry17;
end

procedure Fry17
begin
	if (global_var( GVAR_QUEST_VAULT13_4_WATERCHIP ) != 2) then begin
		giq_option( 4, SCRIPT_FRY, 147, Fry24, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_FRY, 134, Fry18, GOOD_REACTION );
	giq_option( 4, SCRIPT_FRY, 135, Fry19, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FRY, 136, Fry20, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FRY, 137, Fry21, GOOD_REACTION );
	giq_option( 4, SCRIPT_FRY, 138, FryEnd, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_FRY, 139, Fry09, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_FRY, 140, Fry09, NEUTRAL_REACTION );
end

procedure Fry18
begin
	gsay_reply(567, 141);
	call Fry17;
end

procedure Fry19
begin
	gsay_reply(567, 142);
	call Fry17;
end

procedure Fry20
begin
	gsay_reply(567, 143);
	call Fry17;
end

procedure Fry21
begin
	gsay_reply(567, 144);
	call Fry17;
end

procedure Fry22
begin
	gsay_message(567, 145, 50);
	call FryEnd;
end

procedure Fry23
begin
	gsay_reply(567, 148);
	call Fry05;
end

procedure Fry24
begin
	gsay_reply(567, 148);
	call Fry17;
end
