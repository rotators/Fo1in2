/*

	Hub - Jain, guard

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_HCHDGRD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;

procedure ChildGuard00;
procedure ChildGuard01;
procedure ChildGuard02;
procedure ChildGuard02a;
procedure ChildGuard03;
procedure ChildGuard04;
procedure ChildGuard05;
procedure ChildGuard06;
procedure ChildGuard07;
procedure ChildGuard08;
procedure ChildGuard09;
procedure ChildGuard10;
procedure ChildGuard11;
procedure ChildGuard12;
procedure ChildGuard13;
procedure ChildGuard14;
procedure ChildGuard15;
procedure ChildGuard16;
procedure ChildGuard17;
procedure ChildGuard18;
procedure ChildGuard19;
procedure ChildGuard20;
procedure ChildGuard21;
procedure ChildGuard22;
procedure ChildGuard23;
procedure ChildGuard24;
procedure ChildGuard25;
procedure ChildGuard26;
procedure ChildGuard27;
procedure ChildGuard28;
procedure ChildGuard29;
procedure ChildGuard30;
procedure ChildGuard31;
procedure ChildGuard32;
procedure ChildGuard33;
procedure ChildGuard34;
procedure ChildGuard35;
procedure ChildGuard36;
procedure ChildGuard37;

variable tmp_hostile;
variable Only_Once := 1;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_HUB_CATHEDRAL );
		set_self_ai( AI_COC_HUB_BRAINWASHED );
	end
end

procedure combat begin
	tmp_hostile := 1;
end

procedure critter_p_proc begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if ((map_var(6) == 1) and (obj_can_see_obj(self_obj, dude_obj) == 1)) then begin
		call combat;
	end
	if (map_var(4) == 1) then begin
		dialogue_system_enter;
	end
end

procedure pickup_p_proc begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc begin
	dude_look_at_critter;
	get_reaction
	if (map_var(4) == 1) then begin
		set_map_var(4, 0);
		if (local_var(6) == 0) then begin
			start_gdialog(579, self_obj, 4, -1, -1);
			gsay_start;
			call ChildGuard32;
			gsay_end;
			end_dialogue;
		end
		else begin
			call ChildGuard37;
		end
	end
	else begin
		if (global_var( GVAR_ENEMY_CATHEDRAL ) == 1) then begin
			call ChildGuard00;
		end
		else begin
			if (map_var(0) == 1) then begin
				call ChildGuard36;
			end
			else begin
				if has_rep_childkiller or (global_var( GVAR_BERSERKER_REPUTATION ) == 1) then begin
					call ChildGuard01;
				end
				else begin
					if (local_var(5) == 0) then begin
						start_gdialog(579, self_obj, 4, -1, -1);
						gsay_start;
						call ChildGuard02;
						gsay_end;
						end_dialogue;
					end
					else begin
						call ChildGuard30;
					end
				end
			end
		end
	end
end

procedure destroy_p_proc begin
	set_map_var(5, 1);
	inc_good_critter
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_HCHDGRD, 100));
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_map_var(6, 1);
	end
end

procedure ChildGuard00 begin
	set_global_var( GVAR_ENEMY_CATHEDRAL, 1 );
	float_msg(self_obj, message_str(SCRIPT_HCHDGRD, 101), 2);
	call combat;
end

procedure ChildGuard01
begin
	float_msg(self_obj, message_str(SCRIPT_HCHDGRD, 102), 2);
end

procedure ChildGuard02
begin
	set_local_var(5, 1);
	gsay_reply(579, 103);
	giq_option( 7, SCRIPT_HCHDGRD, 104, ChildGuard03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 105, ChildGuard04, NEUTRAL_REACTION );
	if (global_var( GVAR_QUEST_VAULT13_4_WATERCHIP ) != 2) then begin
		giq_option( 4, SCRIPT_HCHDGRD, 106, ChildGuard05, GOOD_REACTION );
	end
	if (global_var( GVAR_DECKER_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_HCHDGRD, 107, ChildGuard06, GOOD_REACTION );
	end
	giq_option( 4, SCRIPT_HCHDGRD, 108, ChildGuard02a, GOOD_REACTION );
	giq_option( -3, SCRIPT_HCHDGRD, 109, ChildGuard09, NEUTRAL_REACTION );
end

procedure ChildGuard02a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0)) == 1) then begin
		call ChildGuard07;
	end
	else begin
		call ChildGuard08;
	end
end

procedure ChildGuard03
begin
	gsay_reply(579, 110);
	giq_option( 7, SCRIPT_HCHDGRD, 111, ChildGuard10, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 112, ChildGuard11, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 113, ChildGuard12, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 114, ChildGuard13, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 115, ChildGuard14, BAD_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 116, ChildGuard15, NEUTRAL_REACTION );
end

procedure ChildGuard04
begin
	gsay_reply(579, 117);
	giq_option( 7, SCRIPT_HCHDGRD, 118, ChildGuard16, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 119, ChildGuard17, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 120, ChildGuard12, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 121, ChildGuard18, NEUTRAL_REACTION );
end

procedure ChildGuard05
begin
	gsay_reply(579, 122);
	giq_option( 4, SCRIPT_HCHDGRD, 123, ChildGuard19, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 124, ChildGuard20, BAD_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 125, ChildGuard21, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 126, ChildGuard22, NEUTRAL_REACTION );
end

procedure ChildGuard06
begin
	gsay_reply(579, 127);
	giq_option( 4, SCRIPT_HCHDGRD, 128, ChildGuard23, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 129, ChildGuard24, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 130, ChildGuard25, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 131, ChildGuard21, NEUTRAL_REACTION );
end

procedure ChildGuard07
begin
	gsay_reply(579, 132);
	giq_option( 7, SCRIPT_HCHDGRD, 133, ChildGuard26, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 134, ChildGuard27, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 135, ChildGuard28, NEUTRAL_REACTION );
	if (global_var( GVAR_QUEST_VAULT13_4_WATERCHIP ) != 2) then begin
		giq_option( 4, SCRIPT_HCHDGRD, 136, ChildGuard29, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_DECKER_KNOWN ) == 1) then begin
		giq_option( 4, SCRIPT_HCHDGRD, 137, ChildGuard06, NEUTRAL_REACTION );
	end
end

procedure ChildGuard08
begin
	gsay_message(579, 138, 50);
end

procedure ChildGuard09
begin
	gsay_message(579, 139, 50);
end

procedure ChildGuard10
begin
	gsay_message(579, 140, 50);
end

procedure ChildGuard11
begin
	gsay_message(579, 141, 50);
end

procedure ChildGuard12
begin
	gsay_message(579, 142, 50);
end

procedure ChildGuard13
begin
	gsay_message(579, 143, 50);
end

procedure ChildGuard14
begin
	set_global_var( GVAR_ENEMY_CATHEDRAL, 1 );
	gsay_message(579, 144, 50);
	call combat;
end

procedure ChildGuard15
begin
	gsay_message(579, 145, 50);
end

procedure ChildGuard16
begin
	gsay_message(579, 146, 50);
end

procedure ChildGuard17
begin
	gsay_message(579, 147, 50);
end

procedure ChildGuard18
begin
	gsay_message(579, 148, 50);
end

procedure ChildGuard19
begin
	gsay_message(579, 149, 50);
end

procedure ChildGuard20
begin
	gsay_message(579, 150, 50);
end

procedure ChildGuard21
begin
	gsay_message(579, 151, 50);
end

procedure ChildGuard22
begin
	gsay_message(579, 152, 50);
end

procedure ChildGuard23
begin
	gsay_message(579, 153, 50);
end

procedure ChildGuard24
begin
	gsay_message(579, 154, 50);
end

procedure ChildGuard25
begin
	gsay_message(579, 155, 50);
end

procedure ChildGuard26
begin
	gsay_message(579, 156, 50);
end

procedure ChildGuard27
begin
	gsay_message(579, 157, 50);
end

procedure ChildGuard28
begin
	set_global_var( GVAR_DECKER_KNOWN, 1 );
	gsay_message(579, 158, 50);
end

procedure ChildGuard29
begin
	gsay_message(579, 159, 50);
end

procedure ChildGuard30
begin
	float_msg(self_obj, message_str(SCRIPT_HCHDGRD, 160), 2);
end

procedure ChildGuard31
begin
	set_global_var( GVAR_ENEMY_CATHEDRAL, 1 );
	gsay_message(579, 161, 50);
	call combat;
end

procedure ChildGuard32
begin
	set_local_var(6, 1);
	gsay_reply(579, 162);
	giq_option( 4, SCRIPT_HCHDGRD, 163, ChildGuard33, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 164, ChildGuard34, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 165, ChildGuard35, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HCHDGRD, 166, ChildGuard37, NEUTRAL_REACTION );
end

procedure ChildGuard33
begin
	gsay_message(579, 167, 50);
end

procedure ChildGuard34
begin
	gsay_message(579, 168, 50);
end

procedure ChildGuard35
begin
	gsay_message(579, 169, 50);
end

procedure ChildGuard36
begin
	float_msg(self_obj, message_str(SCRIPT_HCHDGRD, 170), 2);
end

procedure ChildGuard37
begin
	set_global_var( GVAR_ENEMY_CATHEDRAL, 1 );
	call combat;
end






