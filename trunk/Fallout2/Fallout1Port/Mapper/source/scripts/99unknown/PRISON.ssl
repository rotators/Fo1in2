#include "..\headers\define.h"

procedure start;
procedure combat;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure goto01;
procedure goto02;
procedure goto03;
procedure goto04;
procedure goto05;
procedure goto06;
procedure goto07;
procedure goto08;
procedure goto09;
procedure goto10;
procedure goto11;
procedure explode;
procedure escape;
procedure dialog_end;

variable hostile;
variable Only_Once := 1;
variable target_hex;
variable said;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin


	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_BROTHERHOOD );
		if global_var( GVAR_DEBUG_MODE_MESSAGES_ON ) then begin
			display_msg("INIT PRISON.SSL at map number " + cur_map_index + " and elevation " + self_elevation);
			display_msg("Please take a screenshot now and send to Sduibek. Thanks!");
		end
	end
	if (script_action == 21) then begin
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin
						call destroy_p_proc;
					end
				end
			end
		end
	end
end

procedure combat
begin
	hostile := 1;
end

procedure critter_p_proc
begin
	if (tile_num(self_obj) < 25000) then begin
		call explode;
	end
	else begin
		if (map_var(2) == 1) then begin
			call escape;
		end
		else begin
			if (hostile == 1) then begin
				attack(dude_obj);
			end
		end
	end
end

procedure pickup_p_proc
begin
	if source_obj == dude_obj then begin
		hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	start_gdialog(682, self_obj, 4, -1, -1);
	gsay_start;
	if dude_wearing_coc_robe then begin
		if (local_var(5) == 1) then begin
			call goto05;
		end
		else begin
			call goto01;
		end
		set_local_var(5, 1);
	end
	else begin
		if (local_var(4) == 1) then begin
			call goto09;
		end
		else begin
			call goto07;
		end
		set_local_var(4, 1);
	end
	gsay_end;
	end_dialogue;
end

procedure destroy_p_proc
begin
	if source_obj == dude_obj then begin
		set_global_var( GVAR_GOOD_MONSTER, global_var( GVAR_GOOD_MONSTER ) + 1 );// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_MLPRISON, 100));
end

procedure goto01
begin
	gsay_reply(682, 108);
	giq_option( -3, SCRIPT_MLPRISON, 109, goto02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MLPRISON, 110, goto03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MLPRISON, 111, goto04, NEUTRAL_REACTION );
end

procedure goto02
begin
	gsay_message(682, 112, 50);
	call dialog_end;
end

procedure goto03
begin
	gsay_message(682, 113, 50);
	call dialog_end;
end

procedure goto04
begin
	gsay_message(682, 128, 50);
	call dialog_end;
end

procedure goto05
begin
	gsay_reply(682, 114);
	giq_option( -3, SCRIPT_MLPRISON, 115, goto02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MLPRISON, 116, goto06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MLPRISON, 117, dialog_end, NEUTRAL_REACTION );
end

procedure goto06
begin
	gsay_message(682, 118, 50);
	call dialog_end;
end

procedure goto07
begin
	gsay_reply(682, 119);
	giq_option( -3, SCRIPT_MLPRISON, 115, goto02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MLPRISON, 120, goto08, NEUTRAL_REACTION );
end

procedure goto08
begin
	gsay_message(682, 122, 50);
	call dialog_end;
end

procedure goto09
begin
	gsay_reply(682, 123);
	giq_option( -3, SCRIPT_MLPRISON, 115, goto02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MLPRISON, 124, goto11, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MLPRISON, 125, dialog_end, NEUTRAL_REACTION );
end

procedure goto10
begin
	gsay_message(682, 126, 50);
	call dialog_end;
end

procedure goto11
begin
	gsay_message(682, 127, 50);
	call dialog_end;
end

procedure explode
begin
	reg_anim_func(2, self_obj);
	reg_anim_func(1, 1);
	reg_anim_animate(self_obj, 31, 0);
	reg_anim_func(3, 0);
	critter_dmg( self_obj, random(128, 150), DMG_explosion );
end

procedure escape
begin
	if (said == 0) then begin
		said := 1;
		float_msg(self_obj, message_str(SCRIPT_MLPRISON, 107), 2);
	end
	target_hex := 22912;
	animate_move_obj_to_tile(self_obj, target_hex, 1);
end

procedure dialog_end
begin
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
		set_local_var(0, local_var(0) + (10 * dude_presence));
		if (dude_perk( PERK_cult_of_personality )) then begin
			if (check_general_rep > 0) then begin
				set_local_var(0, local_var(0) + check_general_rep);
			end
			else begin
				set_local_var(0, local_var(0) - check_general_rep);
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - check_general_rep);
			end
			else begin
				set_local_var(0, local_var(0) + check_general_rep);
			end
		end
		if has_rep_childkiller then begin
			set_local_var(0, local_var(0) - 30);
		end
		if ((global_var( GVAR_BAD_MONSTER ) > (3 * global_var( GVAR_GOOD_MONSTER ))) or (global_var( GVAR_CHAMPION_REPUTATION ) == 1)) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if ((global_var( GVAR_GOOD_MONSTER ) > (2 * global_var( GVAR_BAD_MONSTER ))) or (global_var( GVAR_BERSERKER_REPUTATION ) == 1)) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	LevelToReact
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	LevelToReact
end

procedure Goodbyes
begin
	exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
