#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21

variable hostile;
variable Only_Once := 1;
variable message;
variable Pick;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;



procedure start
begin
	
		
	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_BROTHERHOOD );
		set_self_ai( AI_BROTHERHOOD_KNIGHT );
	end
	if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
		call look_at_p_proc;
	end
	else begin
		if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
			call pickup_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
				end
			end
		end
	end
end

procedure combat
begin
	hostile := 1;
end

procedure critter_p_proc
begin
	if (global_var(ENEMY_BROTHERHOOD)) then begin
		hostile := 1;
	end
	if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
		hostile := 0;
	end
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		set_global_var(ENEMY_BROTHERHOOD, 1);
		hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc
begin
	if (source_obj == dude_obj) then begin
		hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	Pick := random(1, 6);
	if (Pick == 1) then begin
		message := message_str(SCRIPT_ROOMGRD, 101);
	end
	else begin
		if (Pick == 2) then begin
			message := message_str(SCRIPT_ROOMGRD, 102);
		end
		else begin
			if (Pick == 3) then begin
				message := message_str(SCRIPT_ROOMGRD, 103);
			end
			else begin
				if (Pick == 4) then begin
					message := message_str(SCRIPT_ROOMGRD, 104);
				end
				else begin
					if (Pick == 5) then begin
						message := message_str(SCRIPT_ROOMGRD, 105);
					end
					else begin
						if (Pick == 6) then begin
							if (dude_is_male) then begin
								message := message_str(SCRIPT_ROOMGRD, 106);
							end
							else begin
								message := message_str(SCRIPT_ROOMGRD, 107);
							end
						end
					end
				end
			end
		end
	end
	float_msg(self_obj, message, 0);
end

procedure destroy_p_proc
begin

	set_global_var(ENEMY_BROTHERHOOD, 1);
	rm_timer_event(self_obj);
	if (source_obj == dude_obj) then begin
		if (((global_var( GVAR_BAD_MONSTER ) + global_var( GVAR_GOOD_MONSTER )) >= 25) and ((global_var( GVAR_GOOD_MONSTER ) > (2 * global_var( GVAR_BAD_MONSTER ))) or (global_var( GVAR_BERSERKER_REPUTATION ) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var( GVAR_CHAMPION_REPUTATION, 0 );
		end
		if (((global_var( GVAR_BAD_MONSTER ) + global_var( GVAR_GOOD_MONSTER )) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var( GVAR_GOOD_MONSTER ))) or (global_var( GVAR_CHAMPION_REPUTATION ) == 1))) then begin
			set_global_var( GVAR_CHAMPION_REPUTATION, 1 );
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var( GVAR_GOOD_MONSTER, global_var( GVAR_GOOD_MONSTER ) + 1 );// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var( GVAR_GOOD_MONSTER ) % 5) == 0) then begin
			set_global_var( GVAR_PLAYER_REPUTATION, (global_var( GVAR_PLAYER_REPUTATION ) - 1) );
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_ROOMGRD, 100));
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
		set_local_var(0, local_var(0) + (10 * dude_presence));
		if (dude_perk( PERK_cult_of_personality )) then begin
			if (global_var( GVAR_PLAYER_REPUTATION ) > 0) then begin
				set_local_var(0, local_var(0) + global_var( GVAR_PLAYER_REPUTATION ));
			end
			else begin
				set_local_var(0, local_var(0) - global_var( GVAR_PLAYER_REPUTATION ));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var( GVAR_PLAYER_REPUTATION ));
			end
			else begin
				set_local_var(0, local_var(0) + global_var( GVAR_PLAYER_REPUTATION ));
			end
		end
		if (global_var( GVAR_CHILDKILLER_REPUTATION ) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var( GVAR_BAD_MONSTER ) + global_var( GVAR_GOOD_MONSTER )) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var( GVAR_GOOD_MONSTER ))) or (global_var( GVAR_CHAMPION_REPUTATION ) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var( GVAR_BAD_MONSTER ) + global_var( GVAR_GOOD_MONSTER )) >= 25) and ((global_var( GVAR_GOOD_MONSTER ) > (2 * global_var( GVAR_BAD_MONSTER ))) or (global_var( GVAR_BERSERKER_REPUTATION ) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	LevelToReact
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	LevelToReact
end

procedure Goodbyes
begin
	exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end



