/*

	Shady Sands - generic niceguy in town

*/

#include "..\headers\define.h"

#define NAME                    SCRIPT_PLEASANT
#define TOWN_REP_VAR            (GVAR_TOWN_REP_SHADYSANDS)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure push_p_proc;

variable tmp_hostile;
variable initial :=  0;
variable round_counter;
variable PsstTime;


procedure PickDeadBodyType;
variable DeathType := 56;

procedure push_p_proc begin
end

procedure start begin
	if global_var(GVAR_SHADY_SANDS_WAS_INVADED) then begin
		if (cur_map_index == MAP_SHADYE) or (cur_map_index == MAP_SHADYW) then begin //  SHADY SANDS - EAST OR WEST
			if (local_var(4) != 1) then begin
				set_local_var(4, 1);
				call PickDeadBodyType;
				kill_critter(self_obj, DeathType);
			end
		end
	end

	if not(initial) then begin
		initial :=  1;
		set_self_team(TEAM_SHADY_SANDS );
		set_self_ai( AI_PEASANT );
		add_timer_event(self_obj, game_ticks(random(15, 60)), 1);
		add_timer_event(self_obj, game_ticks(random(3, 5)), 1);
	end
end

procedure combat_p_proc begin
	if (fixed_param == 4) then begin
		round_counter := round_counter + 1;
		if (round_counter > 3) then begin
			if (not(global_var( GVAR_ENEMY_SHADY_SANDS )) and ((cur_map_index == MAP_SHADYW) or (cur_map_index == MAP_SHADYE))) then begin
				set_global_var( GVAR_ENEMY_SHADY_SANDS, 1 );//Set ENEMY_SHADY_SANDS to True
				set_global_var( GVAR_PLAYER_REPUTATION, check_general_rep - 5 );
			end
		end
	end
end

procedure critter_p_proc begin
	//variable LVar0 := 0;
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if (global_var( GVAR_ENEMY_SHADY_SANDS ) and ((cur_map_index == MAP_SHADYW) or (cur_map_index == MAP_SHADYE))) then begin
			tmp_hostile := 1;
		end
	end
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (local_var(0)) then begin
			if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
				call flee_dude;
			end
		end
	end
	LVar0 := global_var( GVAR_CITIZEN_LOSER_PLEASANT_0 );
	if ((((game_time / 10) - LVar0) >= 10) and (tile_distance_objs(self_obj, dude_obj) <= 4) and not(global_var( GVAR_ENEMY_SHADY_SANDS )) and ((cur_map_index == MAP_SHADYW) or (cur_map_index == MAP_SHADYE))) then begin
		float_msg(self_obj, message_str(SCRIPT_CITIZEN, random(110, 114)), 0);
		LVar0 := game_time / 10;
		set_global_var( GVAR_CITIZEN_LOSER_PLEASANT_0, LVar0 );
	end
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_local_var(0, 1);
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);
	if (source_obj == dude_obj) then begin
		if (cur_map_index == MAP_SHADYE) or (cur_map_index == MAP_SHADYW) then begin
			set_global_var( GVAR_ENEMY_SHADY_SANDS, 1 );//Set ENEMY_SHADY_SANDS to True
		end
	end
	inc_good_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_PLEASANT, 100));
end

procedure pickup_p_proc
begin
	tmp_hostile := 1;
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	if (local_var(0) or global_var( GVAR_ENEMY_SHADY_SANDS )) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 0);
	end
	else begin
		if (global_var( GVAR_RADSCORPION_SEED ) == 2) then begin
			float_msg(self_obj, message_str(SCRIPT_PLEASANT, random(101, 104)), 0);
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_PLEASANT, random(101, 107)), 0);
		end
	end
end

procedure timed_event_p_proc
begin
	if (obj_on_screen(self_obj)) then begin
		animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(1, 5)), 0);
	end
	add_timer_event(self_obj, game_ticks(random(6, 10)), 1);
end

procedure PickDeadBodyType
begin
	pick_dead_body_type
end



