#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat_p_proc;//    script_action == 13
procedure map_update_p_proc;//    script_action == 23
procedure talk_p_proc;//    script_action == 11
procedure critter_p_proc;//    script_action == 12
procedure look_at_p_proc;//    script_action == 21
procedure destroy_p_proc;//    script_action == 18
procedure pickup_p_proc;//    script_action == 4

procedure razlo00;
procedure razlo00a;
procedure razlo01;
procedure razlo02;
procedure razlo03;
procedure razlo04;
procedure razlo05;
procedure razlo06;
procedure razlo06na;
procedure razlo06nb;
procedure razlo07;
procedure razlo08;
procedure razlo09;
procedure razlo10;
procedure razlo11;
procedure razlo12;
procedure razlo14;
procedure razlo15;
procedure razlo17;
procedure razlo18;
procedure razlo19;
procedure razlo20;
procedure razlo21;
procedure razlo22;
procedure razlo23;
procedure razlo23a;
procedure razlo24;
procedure razlo25;
procedure razlo26;
procedure razlo27;
procedure razlo27a;
procedure razlo28;
procedure razlo29;
procedure razlo30;
procedure razlo31;
procedure razlo00n;
procedure razlo00n_a;
procedure razlo01n;
procedure razlo02n;
procedure razlo03n;
procedure razlo04n;
procedure razlo05n;
procedure razlo06n;
procedure razlo07n;
procedure razlo08n;
procedure razlo09n;
procedure razlo10n;
procedure razlo11n;
procedure razlo14n;
procedure razlo15n;
procedure razlo16n;
procedure razlowmpa;
procedure razlowmpb;
procedure razlofixa;
procedure razlofixb;
procedure razlofixc;
procedure razlox;
procedure razloend;

procedure givestuff;
procedure remove_items;
procedure sleeping;

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;
variable STIM;
variable FRUIT;
variable damage;
variable HOSTILE;
variable heal;
variable COST;
variable BONUS;
variable NIGHT;
variable round_counter;
variable dummyvar;
variable MONEY;
variable MAX_HITS;
variable HITS;
variable initial :=  0;
variable tail;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;
variable exit_line;



procedure PickDeadBodyType;
variable DeathType := 56;


procedure start
begin
	if global_var(SHADY_SANDS_WAS_INVADED) then begin
		if (cur_map_index == 25) or (cur_map_index == 26) then begin //  SHADY SANDS - EAST OR WEST
			if (local_var(6) != 1) then begin
				set_local_var(6, 1);
				call PickDeadBodyType;
				kill_critter(self_obj, DeathType);
			end
		end
	end
	else begin
		if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
			if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
				if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
					if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
					if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
						variable A; if obj_carrying_pid_obj(self_obj, 17) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, 17); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 2) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, 2); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 1) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, 1); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 74) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, 74); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 113) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, 113); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
					set_local_var(12, 1);
				end
			end
		end
		if (script_action == 13) then begin//<-- combat_p_proc , basically does combat_is_initialized == 1
			call combat_p_proc;
		end
		else begin
			if (script_action == 23) then begin//map_update_p_proc -- called every dozen seconds or so, & additionally on certain events (exit dialog, end combat, load map, etc)
				call map_update_p_proc;
			end
			else begin
				if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
					call talk_p_proc;
				end
				else begin
					if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
						call pickup_p_proc;
					end
					else begin
						if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
							call critter_p_proc;
						end
						else begin
							if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
								call look_at_p_proc;
							end
							else begin
								if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
									call destroy_p_proc;
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure combat_p_proc
begin
	if (fixed_param == 4) then begin
		round_counter := round_counter + 1;
	end
	if (round_counter > 3) then begin
		if not(global_var(ENEMY_SHADY_SANDS)) then begin//Shady Sands is NOT hostile to player;  i.e. globalvar ENEMY_SHADY_SANDS is not enabled
			set_global_var(ENEMY_SHADY_SANDS, 1);//Set ENEMY_SHADY_SANDS to True
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) - 5);
		end
	end
end

procedure map_update_p_proc
begin
	if not(initial) then begin
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 2);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 6);
		home_tile := 24529;
		sleep_tile := 23133;
		wake_time := 630;
		sleep_time := 2230;
		initial :=  0;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	MAX_HITS := get_critter_stat(dude_obj, 7);
	HITS := get_critter_stat(dude_obj, 35);
	call get_reaction;
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		set_global_var(BERSERKER_REPUTATION, 1);
		set_global_var(CHAMPION_REPUTATION, 0);
	end
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
		set_global_var(CHAMPION_REPUTATION, 1);
		set_global_var(BERSERKER_REPUTATION, 0);
	end
	if (local_var(9) == 1) then begin
		float_msg(self_obj, message_str(185, 166), 0);
	end
	else begin
		if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
			set_local_var(6, 1);
			start_gdialog(129, self_obj, 4, -1, -1);
			gsay_start;
			call razlo00n;
			gsay_end;
			end_dialogue;
		end
		else begin
			if (global_var(RADSCORPION_SEED) == 1) then begin
				if ((global_var(TANDI_HIRELING_STATUS) == 1) and (local_var(4) == 0) and (global_var(TANDI_TALKED_ABOUT) == 1)) then begin
					set_local_var(4, 1);
					start_gdialog(129, self_obj, 4, -1, -1);
					gsay_start;
					call razlo01;
					gsay_end;
					end_dialogue;
				end
				else begin
					start_gdialog(129, self_obj, 4, -1, -1);
					gsay_start;
					call razlo23;
					gsay_end;
					end_dialogue;
				end
			end
			else begin
				/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, 92)) then begin
					start_gdialog(129, self_obj, 4, -1, -1);
					gsay_start;
					call razlo23;
					gsay_end;
					end_dialogue;
				end
				else begin
					if ((local_var(6) == 0) and (local_var(1) >= 2)) then begin
						set_local_var(6, 1);
						start_gdialog(129, self_obj, 4, -1, -1);
						gsay_start;
						call razlo10;
						gsay_end;
						end_dialogue;
					end
					else begin
						if (local_var(6) == 0) then begin
							set_local_var(6, 1);
							start_gdialog(129, self_obj, 4, -1, -1);
							gsay_start;
							call razlo18;
							gsay_end;
							end_dialogue;
						end
						else begin
							if (global_var(TANDI_HIRELING_STATUS) == 3) then begin
								call razlo09;
							end
							else begin
								if ((global_var(TANDI_HIRELING_STATUS) == 2) and (local_var(5) == 0)) then begin
									set_local_var(5, 1);
									call razlo08;
								end
								else begin
									if ((global_var(TANDI_HIRELING_STATUS) == 1) and (local_var(4) == 0) and (global_var(TANDI_TALKED_ABOUT) == 1)) then begin
										set_local_var(4, 1);
										start_gdialog(129, self_obj, 4, -1, -1);
										gsay_start;
										call razlo01;
										gsay_end;
										end_dialogue;
									end
									else begin
										if ((global_var(TANDI_HIRELING_STATUS) == 1) and (global_var(TANDI_TALKED_ABOUT) == 1) and (local_var(4) == 1)) then begin
											set_local_var(4, 2);
											call razlo07;
										end
										else begin
											if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1)) or (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS))) then begin
												start_gdialog(129, self_obj, 4, -1, -1);
												gsay_start;
												call razlo00;
												gsay_end;
												end_dialogue;
												display_msg(message_str(129, 103));
											end
											else begin
												if (local_var(1) >= 2) then begin
													start_gdialog(129, self_obj, 4, -1, -1);
													gsay_start;
													call razlo19;
													gsay_end;
													end_dialogue;
												end
												else begin
													start_gdialog(129, self_obj, 4, -1, -1);
													gsay_start;
													call razlo21;
													gsay_end;
													end_dialogue;
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	call remove_items;
end

procedure razlo00
begin
	gsay_message(129, 101, 50);
end

procedure razlo00a
begin
	display_msg(message_str(129, 103));
end

procedure razlo01
begin
	gsay_reply(129, 104);
	if ((global_var(TANDI_HIRELING_STATUS) == 1) and (global_var(TANDI_TALKED_ABOUT) == 1)) then begin
		giq_option(4, 129, 105, razlo03, 50);
	end
	giq_option(4, 129, 143, razlo22, 50);
	giq_option(4, 129, 144, razlo23a, 50);
	giq_option(-3, 129, 106, razlo02, 50);
end

procedure razlo02
begin
	gsay_message(129, 107, 50);
	set_local_var(4, 1);
end

procedure razlo03
begin
	set_local_var(4, 1);
	gsay_reply(129, 108);
	giq_option(5, 129, 110, razlo04, 50);
	giq_option(4, 129, 109, razloend, 50);
	giq_option(5, 129, 111, razloend, 50);
end

procedure razlo04
begin
	gsay_reply(129, 112);
	giq_option(4, 129, 113, razlo05, 50);
	giq_option(4, 129, 114, razlo06, 50);
end

procedure razlo05
begin
	gsay_message(129, 115, 50);
end

procedure razlo06
begin
	gsay_message(129, 116, 50);
	call givestuff;
end

procedure razlo06na
begin
	gsay_message(129, 306, 50);
	call razlo06nb;
end

procedure razlo06nb
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	gsay_message(129, 307, 50);
	LVar0 := create_object_sid(49, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	LVar1 := obj_carrying_pid_obj(dude_obj, 92);
	rm_obj_from_inven(dude_obj, LVar1);
	destroy_object(LVar1);
	if (local_var(7) == 0) then begin
		set_local_var(7, 1);
		give_exp_points(250);
		display_msg(message_str(129, 300));
	end
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	game_time_advance(game_ticks(1200 * damage));
	gfade_in(1);
	critter_heal(dude_obj, damage);
end

procedure razlo07
begin
	float_msg(self_obj, message_str(129, 117), 2);
end

procedure razlo08
begin
	float_msg(self_obj, message_str(129, 118), 7);
end

procedure razlo09
begin
	float_msg(self_obj, message_str(129, 119), 12);
end

procedure razlo10
begin
	gsay_reply(129, 120);
	giq_option(4, 129, 122, razlo14, 50);
	giq_option(4, 129, 144, razlo23a, 50);
	giq_option(4, 129, 121, razloend, 50);
	giq_option(-3, 129, 123, razlo11, 50);
end

procedure razlo11
begin
	gsay_message(129, 124, 50);
	damage := MAX_HITS - HITS;
	if (damage > (MAX_HITS / 4)) then begin
		call razlo14;
	end
	else begin
		call razlo12;
	end
end

procedure razlo12
begin
	gsay_message(129, 125, 50);
end

procedure razlo14
begin
	gsay_message(129, 126, 50);
	damage := MAX_HITS - HITS;
	if (damage < (MAX_HITS / 4)) then begin
		call razlowmpa;
	end
	else begin
		if (damage < (MAX_HITS / 2)) then begin
			call razlofixa;
		end
		else begin
			if (damage < (3 * MAX_HITS / 4)) then begin
				call razlofixb;
			end
			else begin
				call razlofixc;
			end
		end
	end
end

procedure razlo15
begin
	gsay_message(129, 127, 50);
end

procedure razlo17
begin
	variable LVar0 := 0;
	if (damage < (MAX_HITS / 2)) then begin
		LVar0 := create_object_sid(218, 0, 0, -1);
		add_obj_to_inven(self_obj, LVar0);
	end
	else begin
		if (damage < (3 * MAX_HITS / 4)) then begin
			LVar0 := create_object_sid(219, 0, 0, -1);
			add_obj_to_inven(self_obj, LVar0);
		end
		else begin
			LVar0 := create_object_sid(220, 0, 0, -1);
			add_obj_to_inven(self_obj, LVar0);
		end
	end
	gdialog_mod_barter(0);
	gsay_message(129, 126, 50);
	call razlo08n;
end

procedure razlo18
begin
	gsay_reply(129, 128);
	giq_option(4, 129, 130, razlo14, 50);
	giq_option(4, 129, 144, razlo23a, 50);
	giq_option(5, 129, 129, razloend, 50);
end

procedure razlo19
begin
	gsay_reply(129, 131);
	giq_option(4, 129, 132, razlo20, 50);
	giq_option(4, 129, 143, razlo22, 50);
	giq_option(4, 129, 144, razlo23a, 50);
	giq_option(-3, 129, 134, razlo11, 50);
end

procedure razlo20
begin
	gsay_message(129, 135, 50);
end

procedure razlo21
begin
	gsay_reply(129, 136);
	giq_option(4, 129, 138, razlo22, 50);
	giq_option(4, 129, 144, razlo23a, 50);
	giq_option(-3, 129, 139, razlo11, 50);
	giq_option(4, 129, 137, razloend, 50);
end

procedure razlo22
begin
	gsay_message(129, 140, 50);
	call razlo14;
end

procedure razlo23
begin
	gsay_reply(129, 141);
	giq_option(4, 129, 143, razlo22, 50);
	giq_option(4, 129, 144, razlo23a, 50);
	giq_option(5, 129, 145, razlo27, 50);
	/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, 92)) then begin
		giq_option(4, 129, 146, razlo30, 50);
		giq_option(-3, 129, 303, razlo30, 50);
	end
	giq_option(4, 129, 142, razloend, 50);
	giq_option(-3, 129, 147, razlo11, 50);
end

procedure razlo23a
begin
	if (local_var(8) == 1) then begin
		call razlo25;
	end
	else begin
		call razlo24;
	end
end

procedure razlo24
begin
	gsay_message(129, 148, 50);
end

procedure razlo25
begin
	gsay_message(129, 149, 50);
	if (get_critter_stat(dude_obj, 36) != 0) then begin
		gsay_message(129, 150, 50);
		poison(dude_obj, -get_critter_stat(dude_obj, 36));
		call razlo26;
	end
	else begin
		gsay_message(129, 151, 50);
	end
end

procedure razlo26
begin
	gsay_message(129, 152, 50);
end

procedure razlo27
begin
	gsay_message(129, 153, 50);
	gsay_reply(129, 154);
	giq_option(5, 129, 156, razlo29, 50);
	giq_option(5, 129, 157, razlo28, 50);
	giq_option(4, 129, 155, razlo27a, 49);
end

procedure razlo27a
begin
	call UpReact;
end

procedure razlo28
begin
	gsay_reply(129, 158);
	giq_option(5, 129, 159, razloend, 50);
end

procedure razlo29
begin
	gsay_message(129, 160, 50);
end

procedure razlo30
begin
	gsay_message(129, 161, 50);
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	game_time_advance(game_ticks(14400));
	gfade_in(1);
	set_local_var(8, 1);
	call razlo31;
end

procedure razlo31
begin
	variable LVar0 := 0;
	gsay_message(129, 162, 50);
	LVar0 := create_object_sid(49, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	tail := obj_carrying_pid_obj(dude_obj, 92);
	rm_obj_from_inven(dude_obj, tail);
	destroy_object(tail);
	if (local_var(7) == 0) then begin
		set_local_var(7, 1);
		give_exp_points(250);
		display_msg(message_str(129, 300));
	end
end

procedure razlo00n
begin
	gsay_reply(129, 163);
	giq_option(4, 129, 164, razlo00n_a, 50);
	if (global_var(RADSCORPION_SEED) == 1) then begin
		giq_option(5, 129, 165, razlo09n, 50);
	end
	if ((global_var(TANDI_HIRELING_STATUS) == 1) and (global_var(TANDI_TALKED_ABOUT) == 1)) then begin
		giq_option(5, 129, 166, razlo15n, 50);
	end
	giq_option(-3, 129, 167, razlo01n, 50);
end

procedure razlo01n
begin
	gsay_message(129, 168, 50);
	call DownReact;
end

procedure razlo02n
begin
	gsay_reply(129, 169);
	giq_option(4, 129, 170, razlo04n, 50);
	giq_option(4, 129, 171, razlo03n, 50);
end

procedure razlo03n
begin
	gsay_message(129, 172, 50);
	call DownReact;
end

procedure razlo04n
begin
	gsay_reply(129, 173);
	giq_option(4, 129, 174, razlo05n, 50);
end

procedure razlo05n
begin
	damage := MAX_HITS - HITS;
	if (damage < (MAX_HITS / 4)) then begin
		call razlowmpb;
	end
	else begin
		if (damage < (MAX_HITS / 2)) then begin
			call razlofixa;
		end
		else begin
			if (damage < (3 * MAX_HITS / 4)) then begin
				call razlofixb;
			end
			else begin
				call razlofixc;
			end
		end
	end
end

procedure razlo06n
begin
	gsay_reply(129, 186);
	giq_option(4, 129, 187, razlo17, 50);
	/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, 92)) then begin
		giq_option(4, 129, 305, razlo06na, 50);
		giq_option(-3, 129, 303, razlo06na, 50);
	end
	giq_option(4, 129, 188, razloend, 50);
	giq_option(-3, 129, 304, razlo17, 50);
	giq_option(-3, 129, 302, razloend, 50);
end

procedure razlo07n
begin
	gsay_message(129, 189, 49);
end

procedure razlo08n
begin
	/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, 218) or obj_is_carrying_obj_pid(dude_obj, 219) or obj_is_carrying_obj_pid(dude_obj, 220)) then begin
		call razlo14n;
	end
	else begin
		if (item_caps_total(dude_obj) >= COST) then begin
			item_caps_adjust(dude_obj, -COST);
			call razlo14n;
		end
		else begin
			call razlo06n;
		end
	end
end

procedure razlo09n
begin
	gsay_reply(129, 190);
	giq_option(6, 129, 191, razlo10n, 50);
end

procedure razlo10n
begin
	gsay_message(129, 192, 50);
end

procedure razlo11n
begin
	gsay_reply(129, 108);
	giq_option(5, 129, 194, razlo04, 50);
	giq_option(5, 129, 195, razloend, 50);
end

procedure razlo14n
begin
	gsay_message(129, 196, 50);
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	game_time_advance(game_ticks(1200 * damage));
	gfade_in(1);
	critter_heal(dude_obj, damage);
end

procedure razlo15n
begin
	if (local_var(11) == 1) then begin
		call razlo16n;
	end
	else begin
		set_local_var(11, 1);
		call razlo11n;
	end
end

procedure razlo16n
begin
	gsay_message(129, 197, 50);
end

procedure razlowmpa
begin
	gsay_message(129, 175, 50);
end

procedure razlowmpb
begin
	gsay_message(129, 176, 50);
end

procedure razlofixa
begin
	COST := 25;
	gsay_reply(129, 177);
	giq_option(4, 129, 178, razlo08n, 50);
	giq_option(4, 129, 179, razlo06n, 50);
	giq_option(-3, 129, 301, razlo08n, 50);
	giq_option(-3, 129, 302, razloend, 50);
end

procedure razlofixb
begin
	COST := 50;
	gsay_reply(129, 180);
	giq_option(4, 129, 181, razlo08n, 50);
	giq_option(4, 129, 182, razlo06n, 50);
	giq_option(-3, 129, 301, razlo08n, 50);
	giq_option(-3, 129, 302, razloend, 50);
end

procedure razlofixc
begin
	COST := 100;
	gsay_reply(129, 183);
	giq_option(4, 129, 184, razlo08n, 50);
	giq_option(4, 129, 185, razlo06n, 50);
	giq_option(-3, 129, 301, razlo08n, 50);
	giq_option(-3, 129, 302, razloend, 50);
end

procedure razlox
begin
end

procedure razloend
begin
end

procedure givestuff
begin
	variable LVar0 := 0;
	LVar0 := create_object_sid(40, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object_sid(40, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object_sid(71, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	if (local_var(8) == 1) then begin
		LVar0 := create_object_sid(49, 0, 0, -1);
		add_obj_to_inven(dude_obj, LVar0);
	end
end

procedure remove_items
begin
	variable LVar0 := 0;
	/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, 218)) then begin
		LVar0 := obj_carrying_pid_obj(dude_obj, 218);
		rm_obj_from_inven(dude_obj, LVar0);
		destroy_object(LVar0);
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 218)) then begin
		LVar0 := obj_carrying_pid_obj(self_obj, 218);
		rm_obj_from_inven(self_obj, LVar0);
		destroy_object(LVar0);
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, 219)) then begin
		LVar0 := obj_carrying_pid_obj(dude_obj, 219);
		rm_obj_from_inven(dude_obj, LVar0);
		destroy_object(LVar0);
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 219)) then begin
		LVar0 := obj_carrying_pid_obj(self_obj, 219);
		rm_obj_from_inven(self_obj, LVar0);
		destroy_object(LVar0);
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, 220)) then begin
		LVar0 := obj_carrying_pid_obj(dude_obj, 220);
		rm_obj_from_inven(dude_obj, LVar0);
		destroy_object(LVar0);
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 220)) then begin
		LVar0 := obj_carrying_pid_obj(self_obj, 220);
		rm_obj_from_inven(self_obj, LVar0);
		destroy_object(LVar0);
	end
end

procedure critter_p_proc
begin
	if (map_var(2) == 1) then begin
		set_local_var(10, local_var(10) + 1);
		set_map_var(2, 0);
		if (local_var(10) < 3) then begin
			float_msg(self_obj, message_str(129, 308), 2);
		end
		else begin
			HOSTILE := 1;
		end
	end
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if global_var(ENEMY_SHADY_SANDS) then begin//   Is Shady Sands hostile to player?
			HOSTILE := 1;
		end
	end
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		HOSTILE := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(129, 100));
end

procedure destroy_p_proc
begin
//
//BEGIN WEAPON DROP MOD CODE
//--original code and mod by:--
// Josan12 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=18843) and 
// MIB88 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=4464)
//
	if global_var(WEAPONDROP_MOD_STATUS) and not(global_var(FIXT_BUGFIXES_ONLY)) and (critter_inven_obj(self_obj, 1) or critter_inven_obj(self_obj, 2)) then begin// only run if Weapon Drop is enabled, AND Fixes Only is disabled, AND actually holding something
		variable item1 := 0;  variable item2 := 0;  variable armor := 0;  variable item1PID := 0;  variable item2PID := 0;  variable armorPID := 0;  variable drophex := 0;  if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop BEGINS");  end
		if (critter_inven_obj(self_obj, 1) > 0) then begin  item1 := critter_inven_obj(self_obj, 1);  end    if (critter_inven_obj(self_obj, 2) > 0) then begin  item2 := critter_inven_obj(self_obj, 2);  end    if (critter_inven_obj(self_obj, 0) > 0) then begin  armor := critter_inven_obj(self_obj, 0);  end    if item1 then begin  item1PID := obj_pid(item1);  end    if item2 then begin  item2PID := obj_pid(item2);  end    if armor then begin  armorPID := obj_pid(armor);  end    drophex := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(global_var(WEAPONDROP_MOD_MINIMUM), global_var(WEAPONDROP_MOD_MAXIMUM)));
		if (item1PID != 19) and (item1PID != 21) and (item1PID != 79) and (item1PID != 205) and (item1PID != 234) and (item1PID != 235) and (item1PID != 244) and (item2PID != 19) and (item2PID != 21) and (item2PID != 79) and (item2PID != 205) and (item2PID != 234) and (item2PID != 235) and (item2PID != 244) then begin//Don't drop if:  Rock (19), Brass Knuckles (21), Flare (79), Lit Flare (205), Spiked Knuckles (234), Power Fist (235), or Gold Nugget (244)
			if (item1 > 0) then begin if (obj_item_subtype(item1) == 3) then begin
			rm_obj_from_inven(self_obj, item1);  move_to(item1, drophex, elevation(self_obj));  end  end
			if (item2 > 0) then begin if (obj_item_subtype(item2) == 3) then begin
			rm_obj_from_inven(self_obj, item2);  move_to(item2, drophex, elevation(self_obj));  end  end    if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop ENDS");  end
		end
	end
//END WEAPON DROP MOD CODE
//
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
		set_global_var(ENEMY_SHADY_SANDS, 1);//Set ENEMY_SHADY_SANDS to True
	end
end

procedure pickup_p_proc
begin
	HOSTILE := 1;
end

procedure sleeping
begin
	if (local_var(9) == 1) then begin
		if (not(night_person) and (game_time_hour >= wake_time) and (game_time_hour < sleep_time) or (night_person and ((game_time_hour >= wake_time) or (game_time_hour < sleep_time)))) then begin
			if (((game_time_hour - wake_time) < 10) and ((game_time_hour - wake_time) > 0)) then begin
				if (tile_num(self_obj) != home_tile) then begin
					animate_move_obj_to_tile(self_obj, home_tile, 0);
				end
				else begin
					set_local_var(9, 0);
				end
			end
			else begin
				move_to(self_obj, home_tile, elevation(self_obj));
				if (tile_num(self_obj) == home_tile) then begin
					set_local_var(9, 0);
				end
			end
		end
	end
	else begin
		if (night_person and (game_time_hour >= sleep_time) and (game_time_hour < wake_time) or (not(night_person) and ((game_time_hour >= sleep_time) or (game_time_hour < wake_time)))) then begin
			if (((game_time_hour - sleep_time) < 10) and ((game_time_hour - sleep_time) > 0)) then begin
				if (tile_num(self_obj) != sleep_tile) then begin
					animate_move_obj_to_tile(self_obj, self_obj, 0);
				end
				else begin
					set_local_var(9, 1);
				end
			end
			else begin
				if (tile_num(self_obj) != sleep_tile) then begin
					move_to(self_obj, sleep_tile, elevation(self_obj));
				end
				else begin
					set_local_var(9, 1);
				end
			end
		end
	end
end

procedure razlo00n_a
begin
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1)) or (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS))) then begin
		call razlo02n;
	end
	else begin
		call razlo00;
	end
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(634, random(100, 105));
end

procedure PickDeadBodyType
begin
	variable LVar0 := 0;
	LVar0 := (random(0, 6) + random(0, 6) + random(0, 6));
//
	if (LVar0 <= 5) then begin// 31.5%
		DeathType := 57;//		burnt, face down  [FLAMER]
	end
	else begin
		if (LVar0 <= 10) then begin// 26%
			DeathType := 56;//		cut in half  [LASER RIFLE, GATLING LASER]
		end
		else begin
			if (LVar0 <= 14) then begin// 21%
				DeathType := 53;//		head & arm gone - full auto  [MINIGUN]
			end
			else begin
				if (LVar0 <= 16) then begin// 10.5%
					DeathType := 63;//		face down, blood pool  (generic death, no weapon associated)
				end
				else begin// <--------------------	16%
					variable LVar1 := 0;
					LVar1 := random(0, 2);
					if (LVar1 == 0) then begin
						DeathType := 54;// bullet holes - full auto partial hit
					end
					else begin
						if (LVar1 == 1) then begin
							DeathType := 59;// exploded  [ROCKET LAUNCHER]
						end
						else begin
							if (LVar1 == 2) then begin
								DeathType := 60;// melted pile  [PLASMA RIFLE]
							end
						end
					end
				end
			end
		end
	end
end

