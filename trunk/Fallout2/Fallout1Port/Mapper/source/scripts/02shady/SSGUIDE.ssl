#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure look_at_p_proc;//    script_action == 21
procedure description_p_proc;//    script_action == 3
procedure talk_p_proc;//    script_action == 11
procedure critter_p_proc;//    script_action == 12
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure pickup_p_proc;//    script_action == 4

procedure DialogWeapon;
procedure DialogFirstTime;
procedure DialogSubsequent;
procedure DialogExit;
procedure DialogWeapon1;
procedure DialogWeapon2;
procedure DialogWeapon3;
procedure DialogWeapon4;
procedure DialogMain;
procedure DialogMain1;
procedure DialogMain2;
procedure DialogMain3;
procedure DialogMain4;
procedure DialogMain5;
procedure DialogMain6;
procedure DialogMain7;
procedure DialogMain8;
procedure DialogMain9;
procedure DialogMain10;
procedure DialogSpecial1;
procedure DialogSpecial2;
procedure DialogSpecial3;
procedure DialogSpecial4;

variable Only_Once := 1;
variable tmp_hostile;
variable DisplayMessage;
variable Hurt;
variable Equipment;
variable Barter;
variable Bartered;
variable Place;
variable World;
variable Yourself;
variable Vault;
variable Vaulted;

procedure PickDeadBodyType;
variable DeathType := 56;


procedure start
begin
	if (map_first_run) and (local_var(7) != 1) then begin
		variable LVar0;
		set_local_var(7, 1);
		if (self_item( PID_BROWN_BAG ) > 0) then begin
			LVar0 := self_item( PID_BROWN_BAG );
			rm_obj_from_inven(self_obj, LVar0);
			destroy_object(LVar0);
			LVar0 := 0;
		end
		if (self_item( PID_LEATHER_JACKET ) > 0) then begin
			LVar0 := self_item( PID_LEATHER_JACKET );
			rm_obj_from_inven(self_obj, LVar0);
			destroy_object(LVar0);
			LVar0 := 0;
		end
	end
	if global_var(GVAR_SHADY_SANDS_WAS_INVADED) then begin
		if (cur_map_index == MAP_SHADYE) or (cur_map_index == MAP_SHADYW) then begin //  SHADY SANDS - EAST OR WEST
			if (local_var(8) != 1) then begin
				set_local_var(8, 1);
				call PickDeadBodyType;
				kill_critter(self_obj, DeathType);
			end
		end
	end
	else begin
		

		if (Only_Once == 1) then begin
			Only_Once := 0;
			set_self_team(TEAM_SHADY_SANDS );
			set_self_ai( AI_PEASANT );
		end
		if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
			call talk_p_proc;
		end
		else begin
			if (script_action == 21) then begin
				call look_at_p_proc;
			end
			else begin
				if (script_action == 3) then begin
					call description_p_proc;
				end
				else begin
					if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
						call pickup_p_proc;
					end
					else begin
						if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
							call destroy_p_proc;
						end
						else begin
							if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
								call critter_p_proc;
							end
							else begin
								if (script_action == 14) then begin
									call damage_p_proc;
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_SSGUIDE, 100));
end

procedure description_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_SSGUIDE, 100));
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	if global_var(ENEMY_SHADY_SANDS) then begin//   Is Shady Sands hostile to player?
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 2);
	end
	else begin
		get_reaction
		start_gdialog(211, self_obj, -1, -1, -1);
		gsay_start;
		if dude_is_armed then begin
			call DialogWeapon;
		end
		else begin
			if (local_var(4) == 0) then begin
				set_local_var(4, 1);
				call DialogFirstTime;
			end
			else begin
				call DialogSubsequent;
			end
		end
		gsay_end;
		end_dialogue;
		Hurt := 0;
		Equipment := 0;
		Barter := 0;
		Bartered := 0;
		Place := 0;
		World := 0;
		Yourself := 0;
		Vault := 0;
		Vaulted := 0;
	end
end

procedure critter_p_proc
begin
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if global_var(ENEMY_SHADY_SANDS) then begin//   Is Shady Sands hostile to player?
			attack(dude_obj);
		end
	end
end

procedure damage_p_proc
begin
	if (source_obj == dude_obj) then begin
		set_global_var(ENEMY_SHADY_SANDS, 1);//Set ENEMY_SHADY_SANDS to True
	end
end

procedure destroy_p_proc
begin

	if (source_obj == dude_obj) then begin
		set_global_var(ENEMY_SHADY_SANDS, 1);//Set ENEMY_SHADY_SANDS to True
	end
	if source_obj == dude_obj then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
end

procedure pickup_p_proc
begin
	if (local_var(6) == 0) then begin
		float_msg(self_obj, message_str(SCRIPT_SSGUIDE, 151), 2);
		set_local_var(6, 1);
	end
	else begin
		set_global_var(ENEMY_SHADY_SANDS, 1);//Set ENEMY_SHADY_SANDS to True
	end
end

procedure DialogWeapon
begin
	gsay_reply(211, 101);
	giq_option( -3, SCRIPT_SSGUIDE, 102, DialogWeapon1, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SSGUIDE, 103, DialogWeapon2, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SSGUIDE, 104, DialogWeapon3, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SSGUIDE, 105, DialogWeapon4, NEUTRAL_REACTION );
end

procedure DialogFirstTime
begin
	gsay_reply(211, 111);
	DisplayMessage := 125;
	giq_option( -3, SCRIPT_SSGUIDE, 112, DialogSpecial1, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SSGUIDE, 113, DialogMain5, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SSGUIDE, 114, DialogMain, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_SSGUIDE, 115, DialogMain8, NEUTRAL_REACTION );
	if tandi_is_kidnapped then begin
		giq_option( 4, SCRIPT_SSGUIDE, 116, DialogMain9, NEUTRAL_REACTION );
	end
	if (global_var(RADSCORPION_SEED) == 1) then begin
		giq_option( 4, SCRIPT_SSGUIDE, 117, DialogMain10, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_SSGUIDE, 118, DialogExit, NEUTRAL_REACTION );
end

procedure DialogSubsequent
begin
	variable LVar0 := 0;
	LVar0 := game_time_hour;
	gsay_reply(211, 144);
	DisplayMessage := 125;
	giq_option( -3, SCRIPT_SSGUIDE, 112, DialogSpecial1, NEUTRAL_REACTION );
	if ((LVar0 > 1800) or (LVar0 < 800)) then begin
		giq_option( 4, SCRIPT_SSGUIDE, 145, DialogSpecial4, NEUTRAL_REACTION );
	end
	else begin
		giq_option( 4, SCRIPT_SSGUIDE, 113, DialogMain5, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_SSGUIDE, 114, DialogMain, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_SSGUIDE, 115, DialogMain8, NEUTRAL_REACTION );
	if tandi_is_kidnapped then begin
		giq_option( 4, SCRIPT_SSGUIDE, 116, DialogMain9, NEUTRAL_REACTION );
	end
	if (global_var(RADSCORPION_SEED) == 1) then begin
		giq_option( 4, SCRIPT_SSGUIDE, 117, DialogMain10, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_SSGUIDE, 118, DialogExit, NEUTRAL_REACTION );
end

procedure DialogExit
begin
end

procedure DialogWeapon1
begin
	gsay_message(211, 106, 50);
end

procedure DialogWeapon2
begin
	gsay_reply(211, 107);
	giq_option( 4, SCRIPT_SSGUIDE, 108, DialogExit, NEUTRAL_REACTION );
end

procedure DialogWeapon3
begin
	gsay_reply(211, 109);
	giq_option( 4, SCRIPT_SSGUIDE, 110, DialogExit, NEUTRAL_REACTION );
end

procedure DialogWeapon4
begin
	gsay_reply(211, 109);
	giq_option( 4, SCRIPT_SSGUIDE, 110, DialogExit, NEUTRAL_REACTION );
end

procedure DialogMain
begin
	gsay_reply(211, DisplayMessage);
	if (Hurt == 0) then begin
		giq_option( 4, SCRIPT_SSGUIDE, 126, DialogMain1, NEUTRAL_REACTION );
	end
	if (Equipment == 0) then begin
		giq_option( 4, SCRIPT_SSGUIDE, 127, DialogMain2, NEUTRAL_REACTION );
	end
	else begin
		if (Barter == 1) then begin
			giq_option( 4, SCRIPT_SSGUIDE, 134, DialogMain6, NEUTRAL_REACTION );
		end
	end
	if (Place == 0) then begin
		giq_option( 4, SCRIPT_SSGUIDE, 128, DialogMain3, NEUTRAL_REACTION );
	end
	if (World == 0) then begin
		giq_option( 4, SCRIPT_SSGUIDE, 129, DialogMain4, NEUTRAL_REACTION );
	end
	if (Yourself == 0) then begin
		giq_option( 4, SCRIPT_SSGUIDE, 130, DialogMain5, NEUTRAL_REACTION );
	end
	else begin
		if (Vault == 1) then begin
			giq_option( 4, SCRIPT_SSGUIDE, 138, DialogMain7, NEUTRAL_REACTION );
		end
	end
	giq_option( 4, SCRIPT_SSGUIDE, 131, DialogExit, NEUTRAL_REACTION );
	if ((local_var(5) == 0) and ((Hurt == 1) and (Equipment == 1) and (Place == 1) and (World == 1) and (Yourself == 1) and (Bartered == 1) and (Vaulted == 1))) then begin
		set_local_var(5, 1);
		give_exp_points(250);
		display_msg(message_str(SCRIPT_SSGUIDE, 150));
	end
end

procedure DialogMain1
begin
	Hurt := 1;
	DisplayMessage := 132;
	call DialogMain;
end

procedure DialogMain2
begin
	Equipment := 1;
	DisplayMessage := 133;
	Barter := 1;
	call DialogMain;
end

procedure DialogMain3
begin
	Place := 1;
	DisplayMessage := 135;
	call DialogMain;
end

procedure DialogMain4
begin
	World := 1;
	DisplayMessage := 136;
	call DialogMain;
end

procedure DialogMain5
begin
	Yourself := 1;
	DisplayMessage := 137;
	Vault := 1;
	call DialogMain;
end

procedure DialogMain6
begin
	Barter := 0;
	DisplayMessage := 139;
	Bartered := 1;
	call DialogMain;
end

procedure DialogMain7
begin
	Vault := 0;
	DisplayMessage := 140;
	Vaulted := 1;
	call DialogMain;
end

procedure DialogMain8
begin
	DisplayMessage := 143;
	call DialogMain;
end

procedure DialogMain9
begin
	DisplayMessage := 141;
	call DialogMain;
end

procedure DialogMain10
begin
	DisplayMessage := 142;
	call DialogMain;
end

procedure DialogSpecial1
begin
	gsay_reply(211, 119);
	giq_option( -3, SCRIPT_SSGUIDE, 120, DialogSpecial2, NEUTRAL_REACTION );
end

procedure DialogSpecial2
begin
	gsay_reply(211, 121);
	giq_option( -3, SCRIPT_SSGUIDE, 122, DialogSpecial3, NEUTRAL_REACTION );
end

procedure DialogSpecial3
begin
	gsay_reply(211, 123);
	giq_option( -3, SCRIPT_SSGUIDE, 124, DialogExit, NEUTRAL_REACTION );
end

procedure DialogSpecial4
begin
	gsay_reply(211, 146);
	giq_option( 4, SCRIPT_SSGUIDE, 147, DialogExit, NEUTRAL_REACTION );
end

procedure PickDeadBodyType
begin
	pick_dead_body_type
end



