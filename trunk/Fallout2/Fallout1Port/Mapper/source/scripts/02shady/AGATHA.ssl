#include "..\headers\define.h"

procedure start;
procedure description_p_proc;//    script_action == 3
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure talk_p_proc;//    script_action == 11

procedure Agatha00;
procedure Agatha01;
procedure Agatha02;
procedure Agatha03;
procedure Agatha04;
procedure Agatha05;
procedure Agatha06;
procedure Agatha07;
procedure Agatha08;
procedure Agatha09;
procedure Agatha10;
procedure Agatha11;
procedure Agatha12;
procedure Agatha13;
procedure Agatha14;
procedure Agatha15;
procedure Agatha16;
procedure Agatha17;
procedure Agatha18;
procedure Agatha19;
procedure Agatha20;
procedure AgathaEnd;

procedure PickDeadBodyType;
variable DeathType := 56;
variable exit_line;
variable initial :=  0;
variable KillBox_ptr := 0;

procedure BigDownReact;
procedure BigUpReact;
procedure BottomReact;
procedure DownReact;
procedure DownReactLevel;
procedure get_reaction;
procedure Goodbyes;
procedure LevelToReact;
procedure ReactToLevel;
procedure TopReact;
procedure UpReact;
procedure UpReactLevel;


procedure start
begin
	if global_var(FIXT_BUGFIXES_ONLY) then begin
		KillBox_ptr := 0;
		KillBox_ptr := create_object_sid(PID_DEAD_TRAVELER, 0, 0, -1);// <-- Dead Traveler (Ghoul)  Was:  create_object_sid(PID_IGUANA_STAND, 0, 0, -1);// <-- Bob's Iguana Stand. MAX_SIZE = 1000, biggest of all containers. -1 = NO SCRIPT ATTACHED.
		move_to(KillBox_ptr, 0, 0);
		//inven_unwield;
		move_obj_inven_to_obj(self_obj, KillBox_ptr);
		destroy_object(KillBox_ptr);
		move_to(self_obj, 0, 0);
		destroy_object(self_obj);
	end
	else begin
		if global_var(AGATHA_IS_ENABLED) == 0 then begin
			KillBox_ptr := 0;
			KillBox_ptr := create_object_sid(PID_DEAD_TRAVELER, 0, 0, -1);// <-- Dead Traveler (Ghoul)  Was:  create_object_sid(PID_IGUANA_STAND, 0, 0, -1);// <-- Bob's Iguana Stand. MAX_SIZE = 1000, biggest of all containers. -1 = NO SCRIPT ATTACHED.
			move_to(KillBox_ptr, 0, 0);
			//inven_unwield;
			move_obj_inven_to_obj(self_obj, KillBox_ptr);
			destroy_object(KillBox_ptr);
			move_to(self_obj, 0, 0);
			destroy_object(self_obj);
		end
	end
	if global_var(GVAR_SHADY_SANDS_WAS_INVADED) then begin
		if (cur_map_index == MAP_SHADYE) or (cur_map_index == MAP_SHADYW) then begin //  SHADY SANDS - EAST OR WEST
			if (local_var(4) != 1) then begin
				set_local_var(4, 1);
				call PickDeadBodyType;
				kill_critter(self_obj, DeathType);
			end
		end
	end
	
		
	if not(initial) then begin
		initial :=  1;
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 2);
	end
	if (script_action == 3) then begin//DETAILED ON-CLICK DESCRIPTION (Binoculars icon) - description_p_proc
		call description_p_proc;
	end
	else begin
		if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
			call destroy_p_proc;
		end
		else begin
			if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
				call look_at_p_proc;
			end
			else begin
				if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
					call talk_p_proc;
				end
			end
		end
	end
end

procedure description_p_proc
begin
	if (is_success(do_check(dude_obj, STAT_pe, has_trait(0, dude_obj, 0)))) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_AGATHA, 102));
	end
end

procedure destroy_p_proc
begin

	if source_obj == dude_obj then begin
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	if (global_var(AGATHA_4_ONCE)) then begin
		display_msg(message_str(SCRIPT_AGATHA, 101));
	end
	else begin
		display_msg(message_str(SCRIPT_AGATHA, 100));
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	start_gdialog(663, self_obj, 4, -1, -1);
	gsay_start;
	if (global_var(AGATHA_4_ONCE)) then begin
		if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
			call Agatha14;
		end
		else begin
			call Agatha16;
		end
	end
	else begin
		set_global_var(AGATHA_4_ONCE, 1);
		call Agatha08;
	end
	gsay_end;
	end_dialogue;
end

procedure Agatha00
begin
	float_msg(self_obj, message_str(SCRIPT_AGATHA, 103), 0);
end

procedure Agatha01
begin
	gsay_reply(663, 104);
	giq_option(-3, 663, 105, Agatha02, 49);
	giq_option(4, 663, 106, AgathaEnd, 50);
	giq_option(5, 663, 107, Agatha03, 50);
	giq_option(4, 663, 108, Agatha04, 50);
end

procedure Agatha02
begin
	gsay_message(663, 109, 49);
end

procedure Agatha03
begin
	gsay_reply(663, 110);
	giq_option(5, 663, 111, AgathaEnd, 49);
	giq_option(6, 663, 112, Agatha04, 50);
	giq_option(5, 663, 113, AgathaEnd, 50);
end

procedure Agatha04
begin
	gsay_reply(663, 114);
	giq_option(5, 663, 115, AgathaEnd, 49);
end

procedure Agatha05
begin
	gsay_message(663, 116, 50);
end

procedure Agatha06
begin
	UpReact
	gsay_message(663, 117, 49);
end

procedure Agatha07
begin
	gsay_message(663, 118, 50);
end

procedure Agatha08
begin
	gsay_reply(663, 119);
	giq_option(-3, 663, 120, Agatha09, 50);
	giq_option(4, 663, 121, Agatha10, 50);
	if (get_critter_stat(dude_obj, STAT_gender) == 1) then begin
		giq_option(5, 663, 122, Agatha13, 50);
	end
	else begin
		giq_option(7, 663, 123, Agatha13, 50);
	end
	giq_option(4, 663, 124, Agatha09, 51);
end

procedure Agatha09
begin
	gsay_message(663, 125, 50);
end

procedure Agatha10
begin
	gsay_reply(663, 126);
	giq_option(4, 663, 127, Agatha11, 50);
	giq_option(4, 663, 128, AgathaEnd, 50);
	giq_option(6, 663, 129, Agatha12, 49);
end

procedure Agatha11
begin
	gsay_message(663, 130, 50);
end

procedure Agatha12
begin
	UpReact
	gsay_message(663, 131, 50);
end

procedure Agatha13
begin
	gsay_message(663, 132, 50);
end

procedure Agatha14
begin
	gsay_reply(663, 133);
	giq_option(-3, 663, 134, AgathaEnd, 50);
	giq_option(4, 663, 135, AgathaEnd, 50);
	giq_option(6, 663, 136, Agatha15, 50);
end

procedure Agatha15
begin
	gsay_message(663, 137, 50);
end

procedure Agatha16
begin
	gsay_reply(663, 138);
	giq_option(-3, 663, 139, Agatha17, 50);
	giq_option(4, 663, 140, Agatha20, 50);
	giq_option(6, 663, 141, Agatha18, 50);
	giq_option(4, 663, 142, AgathaEnd, 50);
end

procedure Agatha17
begin
	gsay_message(663, 143, 50);
end

procedure Agatha18
begin
	gsay_reply(663, 144);
	giq_option(5, 663, 145, Agatha20, 50);
	giq_option(5, 663, 146, Agatha19, 51);
end

procedure Agatha19
begin
	DownReactLevel
	DownReactLevel
	gsay_message(663, 147, 51);
end

procedure Agatha20
begin
	gsay_message(663, 128, 50);
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	game_time_advance(600);
	gfade_in(1);
end

procedure AgathaEnd
begin
end

procedure get_reaction
begin
	variable LVar0 := 520;
	if (global_var(AGATHA_2_REACTION) == 0) then begin
		set_global_var(AGATHA_0_REACTION, 50);
		set_global_var(AGATHA_1_ATTRACTION, 2);
		set_global_var(AGATHA_2_REACTION, 1);
		set_global_var(AGATHA_0_REACTION, global_var(AGATHA_0_REACTION) + (5 * get_critter_stat(dude_obj, STAT_ch)) - 25);
		set_global_var(global_var(AGATHA_0_REACTION), 10 + (0 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_global_var(AGATHA_0_REACTION, global_var(AGATHA_0_REACTION) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_global_var(AGATHA_0_REACTION, global_var(AGATHA_0_REACTION) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (global_var(AGATHA_3_REACTION) == 1) then begin
				set_global_var(AGATHA_0_REACTION, global_var(AGATHA_0_REACTION) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_global_var(AGATHA_0_REACTION, global_var(AGATHA_0_REACTION) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_global_var(AGATHA_0_REACTION, global_var(AGATHA_0_REACTION) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(AGATHA_0_REACTION, global_var(AGATHA_0_REACTION) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(AGATHA_0_REACTION, global_var(AGATHA_0_REACTION) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (global_var(AGATHA_0_REACTION) <= 25) then begin
		set_global_var(AGATHA_1_ATTRACTION, 1);
	end
	else begin
		if (global_var(AGATHA_0_REACTION) <= 75) then begin
			set_global_var(AGATHA_1_ATTRACTION, 2);
		end
		else begin
			set_global_var(AGATHA_1_ATTRACTION, 3);
		end
	end
end

procedure LevelToReact
begin
	if (global_var(AGATHA_1_ATTRACTION) == 1) then begin
		set_global_var(AGATHA_0_REACTION, random(1, 25));
	end
	else begin
		if (global_var(AGATHA_1_ATTRACTION) == 2) then begin
			set_global_var(AGATHA_0_REACTION, random(26, 75));
		end
		else begin
			set_global_var(AGATHA_0_REACTION, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_global_var(AGATHA_0_REACTION, global_var(AGATHA_0_REACTION) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_global_var(AGATHA_0_REACTION, global_var(AGATHA_0_REACTION) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_global_var(AGATHA_1_ATTRACTION, 1);
	set_global_var(AGATHA_0_REACTION, 1);
end

procedure TopReact
begin
	set_global_var(AGATHA_0_REACTION, 100);
	set_global_var(AGATHA_1_ATTRACTION, 3);
end

procedure BigUpReact
begin
	set_global_var(AGATHA_0_REACTION, global_var(AGATHA_0_REACTION) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_global_var(AGATHA_0_REACTION, global_var(AGATHA_0_REACTION) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_global_var(AGATHA_1_ATTRACTION, global_var(AGATHA_1_ATTRACTION) + 1);
	if (global_var(AGATHA_1_ATTRACTION) > 3) then begin
		set_global_var(AGATHA_1_ATTRACTION, 3);
	end
	LevelToReact
end

procedure DownReactLevel
begin
	set_global_var(AGATHA_1_ATTRACTION, global_var(AGATHA_1_ATTRACTION) - 1);
	if (global_var(AGATHA_1_ATTRACTION) < 1) then begin
		set_global_var(AGATHA_1_ATTRACTION, 1);
	end
	LevelToReact
end

procedure Goodbyes
begin
	exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end

procedure PickDeadBodyType
begin
	pick_dead_body_type
end
