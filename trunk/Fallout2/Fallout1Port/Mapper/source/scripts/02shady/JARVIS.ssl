#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure look_at_p_proc;//    script_action == 21
procedure map_enter_p_proc;//    script_action == 15
procedure talk_p_proc;//    script_action == 11
procedure use_skill_on_p_proc;//    script_action == 8
procedure use_obj_on_p_proc;//    script_action == 7
procedure destroy_p_proc;//    script_action == 18
procedure combat_p_proc;//    script_action == 13
procedure description_p_proc;//    script_action == 3
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure timed_event_p_proc;//    script_action == 22
procedure map_exit_p_proc;//    script_action == 16

procedure Jarvis01;
procedure Jarvis02;
procedure Jarvis03;
procedure Jarvis04;
procedure Jarvis05;
procedure Jarvis06;
procedure Jarvisend;

variable use_skill;
variable hostile;


procedure PickDeadBodyType;
variable DeathType := 56;


procedure start
begin
	if global_var(SHADY_SANDS_WAS_INVADED) then begin
		if (cur_map_index == MAP_SHADYE) or (cur_map_index == MAP_SHADYW) then begin //  SHADY SANDS - EAST OR WEST
			if (local_var(6) != 1) then begin
				set_local_var(6, 1);
				call PickDeadBodyType;
				kill_critter(self_obj, DeathType);
			end
		end
	end
	else begin
		fixt_critter_healing
		
		if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
			call talk_p_proc;
		end
		else begin
			if (script_action == 16) then begin//map_exit_p_proc (also appears as "remove_party"!) - called on red exit grids
				call map_exit_p_proc;
			end
			else begin
				if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
					call map_enter_p_proc;
				end
				else begin
					if ((script_action == 21) or (script_action == 3)) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
						call look_at_p_proc;
					end
					else begin
						if (script_action == 7) then begin//<-- use_obj_on_p_proc
							call use_obj_on_p_proc;
						end
						else begin
							if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
								call pickup_p_proc;
							end
							else begin
								if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
									call destroy_p_proc;
								end
								else begin
									if (script_action == 13) then begin//<-- combat_p_proc , basically does combat_is_initialized == 1
										call combat_p_proc;
									end
									else begin
										if (script_action == 8) then begin//<-- use_skill_on_p_proc
											call use_skill_on_p_proc;
										end
										else begin
											if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
												call critter_p_proc;
											end
											else begin
												if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
													call timed_event_p_proc;
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	if (local_var(4) == 0) then begin
		display_msg(message_str(SCRIPT_JARVIS, 102));
	end
	else begin
		display_msg(message_str(SCRIPT_JARVIS, 103));
	end
end

procedure map_enter_p_proc
begin
	if (local_var(5) == 0) then begin
		anim(self_obj, 48, 0);
		add_timer_event(self_obj, game_ticks(3600), 1);
	end
	critter_add_trait(self_obj, 1, 6, 2);
	critter_add_trait(self_obj, 1, 5, 6);
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (local_var(5) == 0) then begin
		call Jarvis01;
	end
	else begin
		start_gdialog(440, self_obj, 4, -1, -1);
		gsay_start;
		if (local_var(4) == 0) then begin
			call Jarvis02;
		end
		else begin
			call Jarvis03;
		end
		gsay_end;
		end_dialogue;
	end
end

procedure use_skill_on_p_proc
begin
	variable LVar0 := 0;
	LVar0 := roll_vs_skill(dude_obj, action_being_used, 0);
	if (local_var(5) == 0) then begin
		script_overrides;
		if (action_being_used == SKILL_FIRST_AID) then begin
			if (is_success(LVar0)) then begin
				display_msg(message_str(SCRIPT_JARVIS, 112));
			end
			else begin
				display_msg(message_str(SCRIPT_JARVIS, 113));
			end
		end
		else begin
			if (action_being_used == SKILL_DOCTOR) then begin
				if (is_success(LVar0)) then begin
					display_msg(message_str(SCRIPT_JARVIS, 114));
				end
				else begin
					display_msg(message_str(SCRIPT_JARVIS, 115));
				end
			end
			else begin
				display_msg(message_str(SCRIPT_JARVIS, 116));
			end
		end
	end
end

procedure use_obj_on_p_proc
begin
	if ((obj_pid(obj_being_used_with) == PID_ANTIDOTE) and (local_var(5) == 0)) then begin
		script_overrides;
		rm_timer_event(self_obj);
		set_local_var(5, 1);
		rm_obj_from_inven(dude_obj, obj_being_used_with);
		destroy_object(obj_being_used_with);
		display_msg(message_str(SCRIPT_JARVIS, 117));
		give_exp_points(400);
		set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		display_msg(message_str(SCRIPT_JARVIS, 200));
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_SHADY_SANDS, 1);//Set ENEMY_SHADY_SANDS to True
	end
	if source_obj == dude_obj then begin
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
	rm_timer_event(self_obj);
end

procedure combat_p_proc
begin
	if ((fixed_param == 4) and (local_var(5) == 0)) then begin
		script_overrides;
	end
end

procedure Jarvis01
begin
	float_msg(self_obj, message_str(SCRIPT_JARVIS, 104), 0);
end

procedure Jarvis02
begin
	gsay_reply(440, 105);
	set_local_var(4, 1);
	call Jarvis04;
end

procedure Jarvis03
begin
	gsay_reply(440, 106);
	call Jarvis04;
end

procedure Jarvis04
begin
	giq_option(4, 440, 107, Jarvis05, 50);
	giq_option(4, 440, 108, Jarvis06, 50);
	giq_option(4, 440, 109, Jarvisend, 50);
	giq_option(-3, 440, 118, Jarvis05, 50);
	giq_option(-3, 440, 119, Jarvis06, 50);
	giq_option(-3, 440, 120, Jarvisend, 50);
end

procedure Jarvis05
begin
	gsay_reply(440, 110);
	call Jarvis04;
end

procedure Jarvis06
begin
	gsay_reply(440, 111);
	call Jarvis04;
end

procedure Jarvisend
begin
end

procedure description_p_proc
begin
	script_overrides;
	if (local_var(4) == 0) then begin
		display_msg(message_str(SCRIPT_JARVIS, 102));
	end
	else begin
		display_msg(message_str(SCRIPT_JARVIS, 103));
	end
end

procedure critter_p_proc
begin
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack(dude_obj);
	end
	if ((local_var(5) == 1) and (anim_busy(self_obj) == 0)) then begin
		if (critter_state(self_obj) == 2) then begin
			reg_anim_func(2, self_obj);
			reg_anim_func(1, 1);
			reg_anim_animate(self_obj, 37, -1);
			reg_anim_func(3, 0);
		end
		else begin
			if (critter_state(self_obj) == 0) then begin
				set_local_var(5, 2);
				anim(self_obj, 1000, 2);
			end
		end
	end
end

procedure pickup_p_proc
begin
	hostile := 1;
end

procedure timed_event_p_proc
begin
	if (local_var(5) == 0) then begin
		add_timer_event(self_obj, game_ticks(7200), 1);
	end
	if (tile_distance_objs(dude_obj, self_obj) < get_critter_stat(dude_obj, STAT_pe)) then begin
		display_msg(message_str(SCRIPT_JARVIS, 100));
		float_msg(self_obj, message_str(SCRIPT_JARVIS, 101), 0);
	end
end

procedure map_exit_p_proc
begin
	rm_timer_event(self_obj);
end

procedure PickDeadBodyType
begin
	pick_dead_body_type
end
