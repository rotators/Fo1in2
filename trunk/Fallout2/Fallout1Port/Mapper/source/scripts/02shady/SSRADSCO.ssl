#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure destroy_p_proc;//    script_action == 18
procedure timed_event_p_proc;//    script_action == 22
procedure use_skill_on_p_proc;//    script_action == 8
procedure combat_p_proc;//    script_action == 13
procedure description_p_proc;//    script_action == 3
procedure damage_p_proc;//    script_action == 14
variable critter_tile;
variable hostile := 0;
variable Only_Once := 1;
variable Start_Moving;
variable rndz;
variable ExpReward;

procedure start
begin
	
	
	if Only_Once then begin
		variable HasTail := 0;
		variable NewTail := 0;
		Only_Once := 0;
		HasTail := obj_carrying_pid_obj(self_obj, PID_SCORPION_TAIL);
		if not(HasTail) and (obj_pid(self_obj) != (16777216 + 394)) then begin//Check if already has one, exception if Baby Radscorp
			NewTail := create_object_sid(PID_SCORPION_TAIL, 0, 0, -1);//Scorpion Tail
			add_obj_to_inven(self_obj, NewTail);//Scorpion Tail
		end
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 14);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 5);
		if cur_map_index != MAP_CAVES then begin
//			//display_msg("INIT SSRADSCO.SSL at map " + cur_map_index + " elevation " + elevation(self_obj) + ". Please tell Sduibek when and where you saw this message. Thank you!");
		end
	end
	if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
		call timed_event_p_proc;
	end
	else begin
		if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
			call critter_p_proc;
		end
		else begin
			if (script_action == 14) then begin//<-- damage_p_proc - has this Critter or Object been shot, hit with TNT, punched, etc.
				call damage_p_proc;
			end
			else begin
				if (script_action == 13) then begin//<-- combat_p_proc , basically does combat_is_initialized == 1
					call combat_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
					else begin
						if (script_action == 8) then begin//<-- use_skill_on_p_proc
							call use_skill_on_p_proc;
						end
						else begin
							if (script_action == 3) then begin//DETAILED ON-CLICK DESCRIPTION (Binoculars icon) - description_p_proc
								call description_p_proc;
							end
						end
					end
				end
			end
		end
	end
end

procedure critter_p_proc
begin
	if ((random(1, 10) == 1) and (Start_Moving == 0)) then begin
		Start_Moving := 1;
		add_timer_event(self_obj, game_ticks(5), 1);
	end
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (global_var(FIXT_BUGFIXES_ONLY) == 1) then begin
			if (obj_can_hear_obj(self_obj, dude_obj) > 0) or (obj_can_see_obj(self_obj, dude_obj) > 0) then begin// or (tile_distance_objs(self_obj, dude_obj) <= (get_critter_stat(self_obj, STAT_pe) * 2)) then begin
				hostile := 1;
				attack(dude_obj);
			end
		end
		else begin
			if (global_var(ANIMAL_FRIEND_RADSCORPS) == 1) then begin
				if not(dude_is_animal_friend) then begin
					if (obj_can_hear_obj(self_obj, dude_obj) > 0) or (obj_can_see_obj(self_obj, dude_obj) > 0) then begin// or (tile_distance_objs(self_obj, dude_obj) <= (get_critter_stat(self_obj, STAT_pe) * 2)) then begin
						hostile := 1;
						attack(dude_obj);
					end
				end
			end
			else begin
				if (obj_can_hear_obj(self_obj, dude_obj) > 0) or (obj_can_see_obj(self_obj, dude_obj) > 0) then begin// or (tile_distance_objs(self_obj, dude_obj) <= (get_critter_stat(self_obj, STAT_pe) * 2)) then begin
					hostile := 1;
					attack(dude_obj);
				end
			end
		end
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);
	set_global_var(SHADYSANDS_RADSCORPS_LEFT, (global_var(SHADYSANDS_RADSCORPS_LEFT) - 1));//reduce Scorpions Left counter
	if global_var(SHADYSANDS_RADSCORPS_LEFT) <= 0 then begin
		set_global_var(SHADYSANDS_RADSCORPS_LEFT, 0);
		set_global_var(RADSCORPIONS_KILLED, 1);
		set_global_var(RADSCORPION_SEED, 2);
		if not(global_var(ALL_SS_RADSCORPS_KILLED)) then begin
			ExpReward := 500;
			give_exp_points(ExpReward);
			display_msg(message_str(SCRIPT_SSRADSCO, 100) + ExpReward + message_str(SCRIPT_SSRADSCO, 101));
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 6);
			set_global_var(ALL_SS_RADSCORPS_KILLED, 1);
		end
	end
	if source_obj == dude_obj then begin
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
	end
	rm_timer_event(self_obj);
end

procedure timed_event_p_proc
begin
	variable LVar0 := 0;
	if (Start_Moving == 1) then begin
		LVar0 := tile_num_in_direction(tile_num(self_obj), random(0, 5), 3);
		Start_Moving := 0;
		reg_anim_func(2, self_obj);
		reg_anim_func(1, 1);
		reg_anim_obj_move_to_tile(self_obj, LVar0, -1);
		reg_anim_func(3, 0);
	end
end

procedure use_skill_on_p_proc
begin
	if (action_being_used == SKILL_STEAL) then begin//-- STEAL
		script_overrides;
		display_msg(message_str(SCRIPT_GENCHAT, 211));
		script_overrides;
	end
end

procedure combat_p_proc
begin
	if (target_obj == dude_obj) then begin
		if (fixed_param == 2) then begin
			if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
				variable LuckRoll := 0;
				variable EnduranceRoll := 0;
				LuckRoll := do_check(dude_obj, STAT_lu, 0);
				EnduranceRoll := do_check(dude_obj, STAT_en, 0);
				if (not(is_success(LuckRoll)) and not(is_success(EnduranceRoll))) then begin
					rndz := (random(5, 12) + (combat_difficulty * 3));// EASY 5-to-12, NORMAL 8-to-15, HARD 11-to-18
					poison(target_obj, rndz);
				end
				else begin
					if not(is_success(LuckRoll)) or not(is_success(EnduranceRoll)) then begin
						rndz := (random(3, 9) + (combat_difficulty * 2));// EASY 3-to-9, NORMAL 5-to-11, HARD 7-to-13
						poison(target_obj, rndz);
					end
					else begin// EASY: never, NORMAL: 50% chance, HARD: 66% chance
						if (random(0, combat_difficulty) >= 1) then begin
							rndz := (random(1, 6) + combat_difficulty);// EASY 1-to-6, NORMAL 2-to-7, HARD 3-to-8
							poison(target_obj, rndz);
						end
					end
				end
			end
			else begin
				if (not(is_success(do_check(dude_obj, STAT_lu, -1)))) then begin
					rndz := random(1, 6);
					poison(target_obj, rndz);
				end
			end
		end
	end
end

procedure description_p_proc
begin
	if (has_trait(0, dude_obj, 0)) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_SSRADSCO, 102));
		script_overrides;
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		hostile := 1;
	end
end
