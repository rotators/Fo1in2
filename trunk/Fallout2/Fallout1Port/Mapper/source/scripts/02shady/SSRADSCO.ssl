/*

	Shady Sands - Radscorpion in scorpion cave

*/

/* Include Files */
#include "..\headers\define.h"

#define NAME                    SCRIPT_SSRADSCO

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure timed_event_p_proc;
procedure use_skill_on_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure damage_p_proc;

variable critter_tile;
variable tmp_hostile := 0;
variable Only_Once := 1;
variable Start_Moving;
variable rndz;
variable ExpReward;

procedure start begin
end

procedure map_enter_p_proc begin
	if Only_Once then begin
		variable HasTail := 0;
		variable NewTail := 0;
		Only_Once := 0;
		HasTail := self_item( PID_SCORPION_TAIL );
		if not(HasTail) then begin
			NewTail := create_object( PID_SCORPION_TAIL, 0, 0 );//Scorpion Tail
			add_obj_to_inven(self_obj, NewTail);//Scorpion Tail
		end
		set_self_ai(AI_RADSCORPION);
		set_self_team(TEAM_RADSCORPIONS);
	end
end

procedure map_update_p_proc begin
end

procedure critter_p_proc begin
	if ((random(1, 10) == 1) and (Start_Moving == 0)) then begin
		Start_Moving := 1;
		add_timer_event(self_obj, game_ticks(random(2,5)), 1);
	end

	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else if (self_can_see_dude or self_can_hear_dude) then begin// or (tile_distance_objs(self_obj, dude_obj) <= (self_perception * 2)) then begin
		tmp_hostile := 1;
		attack(dude_obj);
	end

	if is_map(MAP_CAVES) and (global_var(RADSCORPION_SEED) >= 2) then
		destroy_object(self_obj);
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);
	set_global_var(SHADYSANDS_RADSCORPS_LEFT, (global_var(SHADYSANDS_RADSCORPS_LEFT) - 1));//reduce Scorpions Left counter
	if global_var(SHADYSANDS_RADSCORPS_LEFT) <= 0 then begin
		set_global_var(SHADYSANDS_RADSCORPS_LEFT, 0);
		set_global_var(RADSCORPIONS_KILLED, 1);
		set_global_var(RADSCORPION_SEED, 2);
		if not(global_var(ALL_SS_RADSCORPS_KILLED)) then begin
			ExpReward := EXP_KILLED_SS_RADSCORPION;

			inc_shady_rep(REP_BONUS_RADSCORPIONS_GONE);
			give_exp_points(ExpReward);
			display_msg(mstr(100) + ExpReward + mstr(101));

			set_global_var( GVAR_PLAYER_REPUTATION, check_general_rep + 6 );
			set_global_var(ALL_SS_RADSCORPS_KILLED, 1);
		end
	end
	inc_evil_critter
	rm_timer_event(self_obj);
end

procedure timed_event_p_proc begin
	variable LVar0 := 0;
	if (Start_Moving == 1) then begin
		LVar0 := tile_num_in_direction(tile_num(self_obj), random(0, 5), 3);
		Start_Moving := 0;
		reg_anim_func(2, self_obj);
		reg_anim_func(1, 1);
		reg_anim_obj_move_to_tile(self_obj, LVar0, -1);
		reg_anim_func(3, 0);
	end
end

procedure use_skill_on_p_proc begin
	if (action_being_used == SKILL_STEAL) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_GENCHAT, 211));
	end
end

procedure combat_p_proc begin
	if (target_obj == dude_obj) then begin
		if (fixed_param == 2) then begin
			if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
				variable LuckRoll := 0;
				variable EnduranceRoll := 0;
				LuckRoll := do_check(dude_obj, STAT_lu, 0);
				EnduranceRoll := do_check(dude_obj, STAT_en, 0);
				if (not(is_success(LuckRoll)) and not(is_success(EnduranceRoll))) then begin
					rndz := (random(5, 12) + (combat_difficulty * 3));// EASY 5-to-12, NORMAL 8-to-15, HARD 11-to-18
					poison(target_obj, rndz);
				end
				else begin
					if not(is_success(LuckRoll)) or not(is_success(EnduranceRoll)) then begin
						rndz := (random(3, 9) + (combat_difficulty * 2));// EASY 3-to-9, NORMAL 5-to-11, HARD 7-to-13
						poison(target_obj, rndz);
					end
					else begin// EASY: never, NORMAL: 50% chance, HARD: 66% chance
						if (random(0, combat_difficulty) >= 1) then begin
							rndz := (random(1, 6) + combat_difficulty);// EASY 1-to-6, NORMAL 2-to-7, HARD 3-to-8
							poison(target_obj, rndz);
						end
					end
				end
			end
			else begin
				if (not(is_success(do_check(dude_obj, STAT_lu, -1)))) then begin
					rndz := random(1, 6);
					poison(target_obj, rndz);
				end
			end
		end
	end
end

procedure description_p_proc begin
	if (dude_awareness) then begin
		script_overrides;
		display_msg(mstr(102));
		script_overrides;
	end
end

procedure damage_p_proc begin
	if obj_in_party(source_obj) then begin
		tmp_hostile := 1;
	end
end





