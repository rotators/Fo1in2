#include "..\headers\define.h"

#define NAME                    SCRIPT_IAN

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

procedure start;
procedure critter_p_proc;//    script_action == 12
procedure description_p_proc;//    script_action == 3
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure map_enter_p_proc;//    script_action == 15
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure use_obj_on_p_proc;//    script_action == 7
procedure push_p_proc;

procedure join_party;
procedure hire_Ian;

procedure Ian01;
procedure Ian02;
procedure Ian03;
procedure Ian04;
procedure Ian05;
procedure Ian06;
procedure Ian07;
procedure Ian08;
procedure Ian09;
procedure Ian10;
procedure Ian11;
procedure Ian12;
procedure Ian12a;
procedure Ian13;
procedure Ian14;
procedure Ian15;
procedure Ian16;
procedure Ian17;
procedure Ian17a;
procedure Ian18;
procedure Ian19;
procedure Ian20;
procedure Ian21;

procedure StepAside;
procedure IanEnd;
procedure IanCombat;
procedure follow_player;
procedure map_commentary;
procedure IanTactics;
procedure IanClose;
procedure IanModerate;
procedure IanFar;
procedure IanCombatTactics;
procedure IanBestWeapon;
procedure IanArmor;
procedure IanSniper;
procedure IanNearCombat;
procedure IanFreeCombat;

variable tmp_hostile;
variable item;
variable line151flag;
variable line152flag;
variable line153flag;
variable line154flag;
variable line155flag;
variable line162flag;
variable line163flag;
variable line164flag;
variable line165flag;
variable line166flag;
variable line167flag;
variable line170flag;
variable line172flag;

//variable dest_tile;
variable bestweapon_flag;
variable armor_flag;
variable exit_line;
variable tmp;
variable armor_ptr;
variable armor_pid;
variable new_proto;

import variable Katja_ptr;
import variable Ian_ptr;

procedure get_armor_ptr;
procedure get_proto(variable arg0);

variable NewHex;

//////////////////////////////////////
//Added by Sduibek for Fallout Fixt:
//////////////////////////////////////
procedure TEAMX_DISTANCE;
procedure SDUIBEK_DISTANCE;
procedure IanClose_SDUIBEK;
procedure IanModerate_SDUIBEK;
procedure IanFar_SDUIBEK;

procedure PickDeadBodyType;
variable DeathType := 56;

// Added by Lexx
#define float_ian(x)    float_msg(self_obj, message_str(SCRIPT_GENCHAT, x), FLOAT_MSG_NORMAL)
#define Ian_In_Party    (global_var(IAN_HIRELING_STATUS) == 2)

procedure push_p_proc begin
   if (Ian_In_Party == false) then begin
      script_overrides;
   end
   else begin
      float_ian(random(300,302));
   end
end

procedure start begin

	if ((global_var(SHADY_SANDS_WAS_INVADED) == 1) and (global_var(IAN_HIRELING_STATUS) != 2)) then begin
		if (cur_map_index == MAP_SHADYE) or (cur_map_index == MAP_SHADYW) then begin //  SHADY SANDS - EAST OR WEST
			if (local_var(7) != 1) then begin
				set_local_var(7, 1);
				call PickDeadBodyType;
				kill_critter(self_obj, DeathType);
			end
		end
	end

end

procedure critter_p_proc begin
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (global_var(IAN_HIRELING_STATUS) == 2) then begin// if Ian's in your party currently
			call map_commentary;
			call follow_player;
			if (global_var(IAN_LEVEL) < 2) then begin
				if ((get_pc_stat(1) - global_var(IAN_DUDE_LAST_LEVEL)) > 0) then begin
					set_global_var(IAN_LEVEL_COUNTER, global_var(IAN_LEVEL_COUNTER) + (get_pc_stat(1) - global_var(IAN_DUDE_LAST_LEVEL)));
					set_global_var(IAN_DUDE_LAST_LEVEL, get_pc_stat(1));
				end
				if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
					if (global_var(IAN_LEVEL_COUNTER) > 3) then begin// Dude has leveled four times since getting Ian (or since last Ian level-up)
						set_global_var(IAN_LEVEL_COUNTER, 0);// IAN_LEVEL_COUNTER
						set_global_var(IAN_LEVEL, global_var(IAN_LEVEL) + 1);// IAN_LEVEL = IAN_LEVEL + 1
						armor_ptr := critter_inven_obj(self_obj, 0);// set armor_ptr to whatever armor Ian is wearing
						armor_pid := obj_pid(armor_ptr);// get PID of armor_ptr (the armor he was wearing)
						new_proto := get_proto(armor_ptr);// get_proto determines new .PRO file for Ian critter, based on armor worn
						tmp := create_object_sid(new_proto, tile_num(self_obj), elevation(self_obj), SCRIPT_IAN);//create new .PRO in same hex as Ian
						anim(tmp, 1000, has_trait(1, self_obj, 10));// ?
						inven_unwield;// unwield items on old Ian
						move_obj_inven_to_obj(self_obj, tmp);// move inventory to new Ian
						armor_ptr := obj_carrying_pid_obj(tmp, armor_pid);// sets pointer checking if armor worn (see above) is in inventory
						if (armor_ptr) then begin
							wield_obj_critter(tmp, armor_ptr);// if so, equip it (on new Ian)
						end
						party_remove(self_obj);// disband old Ian
						party_add(tmp);// join new Ian
						critter_add_trait(tmp, 1, 6, 0);
						display_msg(message_str(SCRIPT_GENCHAT, 192) + (global_var(IAN_LEVEL) + 1) + ".");
						float_msg(tmp, message_str(SCRIPT_IAN, 1999), 0);
						Ian_ptr := tmp;
						move_to(self_obj, 0, 0);// destroy old Ian
						destroy_object(self_obj);// destroy old Ian
					end
				end
			end
		end
	end
end

procedure description_p_proc begin
	variable PerceptionRoll := 0;
	PerceptionRoll := do_check(dude_obj, STAT_pe, 1);
	if is_success(PerceptionRoll) or has_trait(0, dude_obj, 0) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_IAN, 130));
		script_overrides;
	end
end

procedure destroy_p_proc begin
	set_global_var(IAN_HIRELING_STATUS, 3);
	party_remove(self_obj);
	party_remove(Ian_ptr);

	inc_good_critter
	Ian_ptr := 0;
end

procedure look_at_p_proc begin
	script_overrides;
// If not in party and haven't had introductions, display "short stocky man" description
	if (global_var(IAN_HIRELING_STATUS) == 0) then begin
		display_msg(message_str(SCRIPT_IAN, 100));
	end
	else begin
// if have had introductions or was in party but was asked to leave, display "Ian"
		if ((global_var(IAN_HIRELING_STATUS) == 1) or (global_var(IAN_HIRELING_STATUS) == 3)) then begin
			display_msg(message_str(SCRIPT_IAN, 113));
		end
		else begin
// if is currently in party, display "Ian" and what type of armor currently worn.
			if (global_var(IAN_HIRELING_STATUS) == 2) then begin
				variable LVar0 := 0;
				variable LVar1 := 0;
				LVar0 := critter_inven_obj(self_obj, 0);
				LVar1 := obj_pid(LVar0);
				if (LVar1) then begin
					if (LVar1 == 1) then begin// ( 1 = Leather )
						display_msg(message_str(SCRIPT_IAN, 113) + message_str(SCRIPT_GENCHAT, 198) + message_str(SCRIPT_GENCHAT, 189));
					end
					else if (LVar1 == 2) then begin// ( 2 = Metal )
						display_msg(message_str(SCRIPT_IAN, 113) + message_str(SCRIPT_GENCHAT, 198) + message_str(SCRIPT_GENCHAT, 188));
					end
					else if (LVar1 == 3) then begin// ( 3 = Power )
						display_msg(message_str(SCRIPT_IAN, 113) + message_str(SCRIPT_GENCHAT, 198) + message_str(SCRIPT_GENCHAT, 204));
					end
					else if (LVar1 == 17) then begin// ( 17 = Combat )
						display_msg(message_str(SCRIPT_IAN, 113) + message_str(SCRIPT_GENCHAT, 198) + message_str(SCRIPT_GENCHAT, 205));
					end
					else if (LVar1 == 74) then begin// ( 74 = Jacket )
						display_msg(message_str(SCRIPT_IAN, 113) + message_str(SCRIPT_GENCHAT, 198) + message_str(SCRIPT_GENCHAT, 206));
					end
					else if (LVar1 == 113) then begin// ( 113 = Robes )
						display_msg(message_str(SCRIPT_IAN, 113) + message_str(SCRIPT_GENCHAT, 198) + message_str(SCRIPT_GENCHAT, 207));
					end
					else if (LVar1 == 232) then begin// ( 232 = Hardened Power )
						display_msg(message_str(SCRIPT_IAN, 113) + message_str(SCRIPT_GENCHAT, 198) + message_str(SCRIPT_GENCHAT, 208));
					end
					else if (LVar1 == 239) then begin// ( 239 = Brotherhood )
						display_msg(message_str(SCRIPT_IAN, 113) + message_str(SCRIPT_GENCHAT, 198) + message_str(SCRIPT_GENCHAT, 209));
					end
					else if (LVar1 == 240) then begin// ( 240 = Tesla )
						display_msg(message_str(SCRIPT_IAN, 113) + message_str(SCRIPT_GENCHAT, 198) + message_str(SCRIPT_GENCHAT, 210));
					end
				end
			end
		end
	end
	script_overrides;
end

procedure map_enter_p_proc
begin
	Ian_ptr := self_obj;
	if (cur_map_index == MAP_SHADYW) then begin //  SHADY SANDS - WEST
		if (map_first_run) then begin
			if (global_var(IAN_REFRESH_GFX_FLAG) == 0) then begin
				variable IanTile := 0;
				variable NewIan := 0;
				variable LeatherJacket := 0;
				variable Pistol := 0;
				IanTile := tile_num(self_obj);
				NewIan := create_object_sid(PID_IAN, 0, 0, SCRIPT_IAN);
				Ian_ptr := NewIan;
				move_to(self_obj, 0, 0);
				critter_attempt_placement(Ian_ptr, IanTile, 0);
				move_obj_inven_to_obj(self_obj, Ian_ptr);
				LeatherJacket := obj_carrying_pid_obj(Ian_ptr, PID_LEATHER_JACKET);
				wield_obj_critter(Ian_ptr, LeatherJacket);
				Pistol := obj_carrying_pid_obj(Ian_ptr, PID_10MM_PISTOL);
				wield_obj_critter(Ian_ptr, Pistol);
				anim(Ian_ptr, 1000, rotation_to_tile(IanTile, 15883));
				set_global_var(IAN_REFRESH_GFX_FLAG, 1);
				destroy_object(self_obj);
				set_global_var(IAN_HIRELING_STATUS, 0);
			end
		end
	end
	if (global_var(IAN_HIRELING_STATUS) == 2) then begin
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 0);
	end
	else begin
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 2);
	end
	if ((has_trait(1, self_obj, 5) != 89) and (has_trait(1, self_obj, 5) != 95) and (has_trait(1, self_obj, 5) != 96)) then begin
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 89);
	end
end

procedure pickup_p_proc begin

	if (global_var(IAN_HIRELING_STATUS) < 2) then begin
		tmp_hostile := 1;
	end
	else begin
		script_overrides;
	end

end

procedure talk_p_proc begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));

	get_reaction

	start_gdialog(235, self_obj, 4, -1, -1);
	if (global_var(IAN_HIRELING_STATUS) == 2) or (global_var(IAN_HIRELING_STATUS) == 3) then begin
		gdialog_set_barter_mod(255);
	end

	gsay_start;

	if (global_var(ENEMY_SHADY_SANDS) and (global_var(IAN_HIRELING_STATUS) != 2)) then begin
		call Ian14;
	end
	else if (global_var(IAN_HIRELING_STATUS) == 0) then begin
		call Ian02;
	end
	else if (global_var(IAN_HIRELING_STATUS) == 2) then begin
		call Ian15;
	end
	else if (global_var(IAN_HIRELING_STATUS) == 3) then begin
		call Ian21;
	end
	else begin
		call Ian12;
	end

	gsay_end;
	end_dialogue;
	if ((global_var(IAN_HIRELING_STATUS) == 2) and (global_var(DESTROY_MASTER_9) == 0)) then begin
		set_global_var(DESTROY_MASTER_9, 1);
		display_msg(message_str(SCRIPT_IAN, 169));
		give_exp_points(EXP_HIRED_IAN);
	end
	if (bestweapon_flag == 1) then begin
		bestweapon_flag := 0;
		inven_unwield;
	end
	if (armor_flag == 1) then begin
		armor_flag := 0;
		new_proto := get_proto(armor_ptr);
		if (new_proto) then begin
			tmp := create_object_sid(new_proto, tile_num(self_obj), elevation(self_obj), SCRIPT_IAN);
			anim(tmp, 1000, has_trait(1, self_obj, 10));
			inven_unwield;
			move_obj_inven_to_obj(self_obj, tmp);
			wield_obj_critter(tmp, armor_ptr);
			party_remove(self_obj);
			party_add(tmp);
			critter_add_trait(tmp, 1, 6, 0);
			Ian_ptr := tmp;
			move_to(self_obj, 0, 0);
			destroy_object(self_obj);
		end
	end

end

procedure use_obj_on_p_proc begin
	if (global_var(IAN_HIRELING_STATUS) == 2) then begin
		item := obj_pid(obj_being_used_with);
		if ((item != 40) and (item != 71) and (item != 81) and (item != 103) and (item != 144)) then begin
			script_overrides;
			if (obj_item_subtype(obj_being_used_with) != 3) then begin
				rm_obj_from_inven(dude_obj, obj_being_used_with);
				add_obj_to_inven(self_obj, obj_being_used_with);
			end
			else begin
				if ((item == 4) or (item == 8) or (item == 18) or (item == 120) or (item == 22) or (item == 9) or (item == 16) or (item == 24) or (item == 241) or (item == 116) or (item == 236) or (item == 234) or (item == 235) or (item == 21)) then begin
					rm_obj_from_inven(dude_obj, obj_being_used_with);
					add_obj_to_inven(self_obj, obj_being_used_with);
					float_msg(self_obj, message_str(SCRIPT_GENCHAT, 215), 0);
				end
				else begin
					float_msg(self_obj, message_str(SCRIPT_MODREACT, 109), 3);
				end
			end
		end
	end
end

procedure join_party begin
	set_global_var(IAN_HIRELING_STATUS, 2);
	set_global_var(DESTROY_VATS_5, 4);
	set_global_var(IAN_DUDE_LAST_LEVEL, get_pc_stat(1));
	party_add(self_obj);
	critter_add_trait(self_obj, 1, 6, 0);
	gsay_message(235, 150, 50);
end

procedure hire_Ian begin
	item_caps_adjust(dude_obj, -100);
	call join_party;
end

procedure Ian01 begin
	gsay_message(235, 101, 51);
end

procedure Ian02 begin
	gsay_reply(235, 102);
	giq_option(4, 235, 103, Ian03, 51);
	giq_option(4, 235, message_str(SCRIPT_IAN, 104) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_IAN, 105), Ian04, 50);
	giq_option(-3, 235, 106, Ian05, 50);
end

procedure Ian03 begin
	gsay_message(235, 107, 51);
end

procedure Ian04 begin
	gsay_reply(235, 108);
	set_global_var(IAN_HIRELING_STATUS, 1);
	giq_option(4, 235, 109, Ian06, 50);
	giq_option(5, 235, 110, Ian07, 50);
end

procedure Ian05 begin
	gsay_message(235, 111, 50);
end

procedure Ian06 begin
	gsay_reply(235, 112);
	giq_option(4, 235, 114, Ian18, 50);
	giq_option(4, 235, 115, Ian13, 50);
	giq_option(4, 235, 149, Ian17, 50);
	giq_option(5, 235, 116, Ian08, 50);
end

procedure Ian07 begin
	gsay_reply(235, 117);
	giq_option(4, 235, 118, Ian09, 50);
	giq_option(4, 235, 119, Ian08, 50);
end

procedure Ian08 begin
	gsay_reply(235, 120);
	giq_option(4, 235, 121, Ian10, 50);
	giq_option(5, 235, 122, Ian11, 50);
end

procedure Ian09 begin
	gsay_reply(235, 123);
	giq_option(4, 634, 104, IanEnd, 50);
end

procedure Ian10 begin
	gsay_reply(235, 125);
	giq_option(4, 235, 126, Ian09, 50);
	giq_option(4, 634, 101, IanEnd, 50);
end

procedure Ian11 begin
	gsay_reply(235, 128);
	giq_option(4, 235, 129, Ian07, 50);
	giq_option(4, 634, 101, IanEnd, 50);
end

procedure Ian12 begin
	gsay_reply(235, message_str(SCRIPT_IAN, 131) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_IAN, 132));
	call Ian12a;
end

procedure Ian12a begin
	giq_option(4, 235, 133, Ian11, 50);
	giq_option(4, 235, 134, Ian09, 50);
	giq_option(4, 235, 135, Ian07, 50);
	giq_option(4, 235, 136, Ian10, 50);
	giq_option(4, 235, 137, Ian13, 50);
	giq_option(4, 235, 149, Ian17, 50);
	giq_option(4, 235, 138, IanEnd, 50);
end

procedure Ian13 begin
	if (not(global_var(WORLDMAPLIST_THE_HUB))) then begin
		set_global_var(WORLDMAPLIST_THE_HUB, 1);
	end
	if (not(global_var(WORLDMAPLIST_JUNKTOWN))) then begin
		set_global_var(WORLDMAPLIST_JUNKTOWN, 1);
	end
	gsay_reply(235, 139);
	if (global_var(IAN_HIRELING_STATUS) == 2) then begin
		giq_option(4, 235, 140, Ian15, 50);
	end
	else begin
		giq_option(4, 235, 140, Ian12, 50);
	end
end

procedure Ian14 begin
	tmp_hostile := 1;
	gsay_message(235, 141, 51);
end

// Primary dialog node:
procedure Ian15 begin
	gsay_reply(235, message_str(SCRIPT_IAN, 142) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_IAN, 143));
	giq_option(4, 235, 145, Ian16, 50);
	giq_option(4, 235, 146, Ian13, 50);
	giq_option(4, 235, 173, Ian20, 50);
	giq_option(4, 235, 2000, IanCombatTactics, 50);
	giq_option(4, 389, 159, IanTactics, 50);
	giq_option(4, 235, 144, IanEnd, 50);
	giq_option(-3, 817, 139, IanEnd, 50);
end

procedure Ian16 begin
	set_global_var(IAN_HIRELING_STATUS, 3);
	party_remove(self_obj);
	gsay_message(235, 147, 50);
end

procedure Ian17 begin
	if (local_var(LVAR_reaction_level) == 1) then begin
		gsay_message(235, 148, 51);
	end
	else begin
		if (local_var(LVAR_reaction_level) == 2) then begin
			gsay_reply(235, 156);
			if (item_caps_total(dude_obj) >= 100) then begin
				giq_option(4, 235, 157, hire_Ian, 49);
			end
			giq_option(6, 235, 159, Ian17a, 50);
			giq_option(4, 235, 158, IanEnd, 50);
		end
		else begin
			call join_party;
		end
	end
end

procedure Ian17a begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 20))) then begin
		gsay_reply(235, 160);
		giq_option(4, 634, 106, join_party, 49);
	end
	else begin
		DownReact
		gsay_message(235, 161, 51);
	end
end

procedure Ian18 begin
	gsay_reply(235, 124);
	UpReact
	giq_option(4, 634, 106, Ian19, 50);
end

procedure Ian19 begin
	gsay_reply(235, 127);
	call Ian12a;
end

procedure Ian20 begin
	gsay_message(235, 174, 50);
	call Ian15;
end

procedure Ian21 begin
	gsay_reply(235, 202);
	giq_option(4, 235, 203, join_party, 50);
	giq_option(4, 235, 204, IanEnd, 50);
	giq_option(-3, 766, 196, join_party, 50);
end

procedure IanEnd begin
end

procedure IanCombat begin
	tmp_hostile := 1;
end

procedure SDUIBEK_DISTANCE begin
	if (tile_distance_objs(self_obj, dude_obj) >= (2 * global_var(DESTROY_VATS_5))) then begin// was 1.5
		animate_move_obj_to_tile(self_obj, dest_tile, 1 bwor 16);
	end
end

procedure TEAMX_DISTANCE begin
	if (tile_distance_objs(self_obj, dude_obj) > (2 * global_var(DESTROY_VATS_5))) then begin
		animate_move_obj_to_tile(self_obj, dest_tile, 1 bwor 16);
	end
	else begin
		animate_move_obj_to_tile(self_obj, dest_tile, 0 bwor 16);
	end
end

procedure follow_player begin
	if (tile_distance_objs(self_obj, dude_obj) > global_var(DESTROY_VATS_5)) then begin
		if (anim_busy(self_obj) == 0) then begin
			dest_tile := tile_num_in_direction(tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), global_var(DESTROY_VATS_5)), random(0, 5), random(0, 2));
			if (local_var(4) or local_var(5) or local_var(6)) then begin
				call SDUIBEK_DISTANCE;
			end
			else begin
				call TEAMX_DISTANCE;
			end
		end
	end
end

procedure map_commentary
begin
	if (cur_map_index == MAP_JUNKKILL) then begin //  JUNKTOWN - KILLIAN, CRASH HOUSE
		if (tile_distance(tile_num(self_obj), 27883) < 4) then begin
			if (not(line151flag)) then begin
				float_msg(self_obj, message_str(SCRIPT_IAN, 151), 0);
				line151flag := 1;
			end
		end
	end
	else begin
		if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
			if (tile_distance(tile_num(self_obj), 27919) < 4) then begin
				if (not(line152flag)) then begin
					float_msg(self_obj, message_str(SCRIPT_IAN, 152), 0);
					line152flag := 1;
				end
			end
		end
		else begin
			if (cur_map_index == MAP_HALLDED) then begin //  NECROPOLIS - HALLS OF THE DEAD
				if (not(line153flag)) then begin
					float_msg(self_obj, message_str(SCRIPT_IAN, 153), 0);
					line153flag := 1;
				end
			end
			else begin
				if (cur_map_index == MAP_GLOWENT) then begin //  THE GLOW - ENTRANCE (CRATER)
					if (not(line154flag)) then begin
						float_msg(self_obj, message_str(SCRIPT_IAN, 154), 0);
						if (global_var(KATJA_HIRELING_STATUS) == 2) then begin
							float_msg(Katja_ptr, message_str(SCRIPT_KATJA, 185), 5);
						end
						line154flag := 1;
					end
				end
				else begin
					if (cur_map_index == MAP_MBENT) then begin //  MILITARY BASE - OUTSIDE ENTRANCE
						if (not(line155flag)) then begin
							float_msg(self_obj, message_str(SCRIPT_IAN, 155), 0);
							line155flag := 1;
						end
					end
					else begin
						if (cur_map_index == MAP_HUBDWNTN) then begin //  THE HUB - DOWNTOWN
							if (tile_distance(tile_num(self_obj), 24890) < 4) then begin
								if (not(line162flag)) then begin
									float_msg(self_obj, message_str(SCRIPT_IAN, 162), 0);
									line162flag := 1;
								end
							end
							else begin
								if (tile_distance(tile_num(self_obj), 14116) < 4) then begin
									if (not(line165flag)) then begin
										float_msg(self_obj, message_str(SCRIPT_IAN, 165), 0);
										line165flag := 1;
									end
								end
								else begin
									if (tile_distance(tile_num(self_obj), 18464) < 4) then begin
										if (not(line166flag)) then begin
											float_msg(self_obj, message_str(SCRIPT_IAN, 166), 0);
											line166flag := 1;
										end
									end
									else begin
										if (tile_distance(tile_num(self_obj), 21730) < 4) then begin
											if (not(line167flag)) then begin
												float_msg(self_obj, message_str(SCRIPT_IAN, 167), 0);
												line167flag := 1;
											end
										end
									end
								end
							end
						end
						else begin
							if (cur_map_index == MAP_HUBOLDTN) then begin //  THE HUB - OLDTOWN
								if (tile_distance(tile_num(self_obj), 16082) < 4) then begin
									if (line163flag == 0) then begin
										float_msg(self_obj, message_str(SCRIPT_IAN, 163), 0);
										line163flag := 1;
									end
								end
							end
							else begin
								if (cur_map_index == MAP_HUBWATER) then begin //  THE HUB - WATER MERCHANTS
									if (tile_distance(tile_num(self_obj), 22497) < 4) then begin
										if (line164flag == 0) then begin
											float_msg(self_obj, message_str(SCRIPT_IAN, 164), 0);
											line164flag := 1;
										end
									end
								end
								else begin
									if (cur_map_index == MAP_VAULT13) then begin //  VAULT 13 - INSIDE
										if (line170flag == 0) then begin
											float_msg(self_obj, message_str(SCRIPT_IAN, 170), 0);
											line170flag := 1;
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure IanTactics begin
	gsay_reply(389, 160);
	giq_option(4, 389, message_str(SCRIPT_TYCHO, 161) + message_str(SCRIPT_GENCHAT, 216), IanClose, 50);
	giq_option(4, 389, message_str(SCRIPT_TYCHO, 161) + message_str(SCRIPT_GENCHAT, 217), IanClose_SDUIBEK, 50);
	giq_option(4, 389, message_str(SCRIPT_TYCHO, 162) + message_str(SCRIPT_GENCHAT, 216), IanModerate, 50);
	giq_option(4, 389, message_str(SCRIPT_TYCHO, 162) + message_str(SCRIPT_GENCHAT, 217), IanModerate_SDUIBEK, 50);
	giq_option(4, 389, message_str(SCRIPT_TYCHO, 163) + message_str(SCRIPT_GENCHAT, 216), IanFar, 50);
	giq_option(4, 389, message_str(SCRIPT_TYCHO, 163) + message_str(SCRIPT_GENCHAT, 217), IanFar_SDUIBEK, 50);
end

procedure IanClose_SDUIBEK begin
	set_local_var(4, 1);
	set_local_var(5, 0);
	set_local_var(6, 0);
	set_global_var(DESTROY_VATS_5, 2);
	gsay_message(235, 201, 50);
	call Ian15;
end

procedure IanModerate_SDUIBEK begin
	set_local_var(4, 0);
	set_local_var(5, 1);
	set_local_var(6, 0);
	set_global_var(DESTROY_VATS_5, 4);
	gsay_message(235, 201, 50);
	call Ian15;
end

procedure IanFar_SDUIBEK begin
	set_local_var(4, 0);
	set_local_var(5, 0);
	set_local_var(6, 1);
	set_global_var(DESTROY_VATS_5, 6);
	gsay_message(235, 201, 50);
	call Ian15;
end

procedure IanClose begin
	set_local_var(4, 0);
	set_local_var(5, 0);
	set_local_var(6, 0);
	set_global_var(DESTROY_VATS_5, 2);
	gsay_message(235, 201, 50);
	call Ian15;
end

procedure IanModerate begin
	set_local_var(4, 0);
	set_local_var(5, 0);
	set_local_var(6, 0);
	set_global_var(DESTROY_VATS_5, 4);
	gsay_message(235, 201, 50);
	call Ian15;
end

procedure IanFar begin
	set_local_var(4, 0);
	set_local_var(5, 0);
	set_local_var(6, 0);
	set_global_var(DESTROY_VATS_5, 6);
	gsay_message(235, 201, 50);
	call Ian15;
end

procedure IanCombatTactics begin
	armor_ptr := get_armor_ptr;
	gsay_reply(235, 2001);
	giq_option(4, 235, 2010, IanBestWeapon, 49);
	if (armor_ptr) then begin
		giq_option(4, 235, 2011, IanArmor, 49);
	end
	giq_option(4, 235, 2012, IanSniper, 49);
	giq_option(4, 235, 2013, IanNearCombat, 49);
	giq_option(4, 235, 2014, IanFreeCombat, 49);
	giq_option(4, 235, 2015, Ian15, 49);
end

procedure IanBestWeapon begin
	gsay_message(235, 2100, 49);
	bestweapon_flag := 1;
	call IanCombatTactics;
end

procedure IanArmor begin
	gsay_message(235, 2100, 49);
	armor_flag := 1;
	call IanCombatTactics;
end

procedure IanSniper begin
	gsay_message(235, 2100, 49);
	critter_add_trait(self_obj, 1, 5, 95);
	call IanCombatTactics;
end

procedure IanNearCombat begin
	gsay_message(235, 2100, 49);
	critter_add_trait(self_obj, 1, 5, 96);
	call IanCombatTactics;
end

procedure IanFreeCombat begin
	gsay_message(235, 2100, 49);
	critter_add_trait(self_obj, 1, 5, 89);
	call IanCombatTactics;
end

procedure get_armor_ptr begin
	variable LVar0 := 0;
	variable LVar1 := 0;

	LVar1 := obj_pid(critter_inven_obj(self_obj, 0));
	/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_LEATHER_JACKET) and (LVar1 != 74)) then begin//  JACKET
		LVar0 := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET);
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_PURPLE_ROBE) and (LVar1 != 113)) then begin//  ROBES
		LVar0 := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE);
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_LEATHER_ARMOR) and (LVar1 != 1)) then begin//  LEATHER
		LVar0 := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR);
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_METAL_ARMOR) and (LVar1 != 2)) then begin//  METAL
		LVar0 := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR);
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_TESLA_ARMOR) and (LVar1 != 240)) then begin//  TESLA
		LVar0 := obj_carrying_pid_obj(self_obj, PID_TESLA_ARMOR);
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_COMBAT_ARMOR) and (LVar1 != 17)) then begin//  COMBAT
		LVar0 := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR);
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_BROTHERHOOD_COMBAT_ARMOR) and (LVar1 != 239)) then begin//  BROTHERHOOD
		LVar0 := obj_carrying_pid_obj(self_obj, PID_BROTHERHOOD_COMBAT_ARMOR);
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_POWERED_ARMOR) and (LVar1 != 3)) then begin//  POWER
		LVar0 := obj_carrying_pid_obj(self_obj, PID_POWERED_ARMOR);
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_HARDENED_POWER_ARMOR) and (LVar1 != 232)) then begin//  HARDENED POWER
		LVar0 := obj_carrying_pid_obj(self_obj, PID_HARDENED_POWER_ARMOR);
	end
	return LVar0;
end

procedure get_proto(variable arg0) begin
	variable LVar1 := 0;
	if (obj_pid(arg0) == PID_LEATHER_JACKET) then begin
		LVar1 := 16777529 + (9 * global_var(IAN_LEVEL));
	end
	else if (obj_pid(arg0) == PID_LEATHER_ARMOR) then begin
		LVar1 := 16777530 + (9 * global_var(IAN_LEVEL));
	end
	else if (obj_pid(arg0) == PID_PURPLE_ROBE) then begin
		LVar1 := 16777531 + (9 * global_var(IAN_LEVEL));
	end
	else if (obj_pid(arg0) == PID_METAL_ARMOR) then begin
		LVar1 := 16777532 + (9 * global_var(IAN_LEVEL));
	end
	else if (obj_pid(arg0) == PID_COMBAT_ARMOR) then begin
		LVar1 := 16777533 + (9 * global_var(IAN_LEVEL));
	end
	else if (obj_pid(arg0) == PID_TESLA_ARMOR) then begin
		LVar1 := 16777534 + (9 * global_var(IAN_LEVEL));
	end
	else if (obj_pid(arg0) == PID_BROTHERHOOD_COMBAT_ARMOR) then begin
		LVar1 := 16777535 + (9 * global_var(IAN_LEVEL));
	end
	else if (obj_pid(arg0) == PID_POWERED_ARMOR) then begin
		LVar1 := 16777536 + (9 * global_var(IAN_LEVEL));
	end
	else if (obj_pid(arg0) == PID_HARDENED_POWER_ARMOR) then begin
		LVar1 := 16777537 + (9 * global_var(IAN_LEVEL));
	end
	return LVar1;
end

procedure PickDeadBodyType begin
	pick_dead_body_type
end


