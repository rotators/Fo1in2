#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure talk_p_proc;//    script_action == 11
procedure initialize_p_proc;
procedure critter_p_proc;//    script_action == 12
procedure map_enter_p_proc;//    script_action == 15
procedure timed_event_p_proc;//    script_action == 22
procedure destroy_p_proc;//    script_action == 18

variable Only_Once := 1;
variable Hex_Number;


procedure start
begin
	if global_var(DEBUG_MODE_MESSAGES_ON) then begin
		display_msg("attempting to move BroInvad...");
		move_to(self_obj, 26893, elevation(dude_obj));
		display_msg("dude at " + tile_num(dude_obj));
		display_msg("self at " + tile_num(self_obj));
	end
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if Only_Once then begin
		call initialize_p_proc;
	end
	if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
		call destroy_p_proc;
	end
	else begin
		if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
			call talk_p_proc;
		end
		else begin
			if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
				call critter_p_proc;
			end
			else begin
				if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
					call map_enter_p_proc;
				end
			end
		end
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (global_var(BROTHERHOOD_SEND_HELP) != 10) then begin
		if (get_critter_stat(dude_obj, 34) == 0) then begin
			float_msg(self_obj, message_str(SCRIPT_BROINVAD, random(100, 105)), 9);
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_BROINVAD, random(106, 111)), 9);
		end
	end
end

procedure initialize_p_proc
begin
	critter_add_trait(self_obj, 1, 6, 0);
	critter_add_trait(self_obj, 1, 5, 65);
	Only_Once := 0;
end

procedure critter_p_proc
begin
// Remove and destroy if on an invalid map.
	if (not((cur_map_index == 17) or (cur_map_index == 18) or (cur_map_index == 33) or (cur_map_index == 34) or (cur_map_index == 30) or (cur_map_index == 31) or (cur_map_index == 32))) then begin //  CHILDREN - ALL LEVELS, MILITARY BASE ENTRANCE (now all levels), MASTER'S LAIR ALL LEVELS
		party_remove(self_obj);
		destroy_object(self_obj);
	end
// Follow player if on valid map, and, display one-time float message on ground-floor maps.
	if ((global_var(BROTHERHOOD_SEND_HELP) == 1) and ((cur_map_index == 17) or (cur_map_index == 18) or (cur_map_index == 33) or (cur_map_index == 34))) or ((global_var(BROTHERHOOD_SEND_HELP) == 2) and ((cur_map_index == 30) or (cur_map_index == 31) or (cur_map_index == 32))) then begin //  CHILDREN - ALL LEVELS, MILITARY BASE ENTRANCE, MASTER'S LAIR ALL LEVELS
		if (tile_distance_objs(dude_obj, self_obj) > 6) then begin
			animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), random(0, 5), random(3, 6)), 1);
		end
		if (local_var(0) == 0) then begin
			if ((tile_distance_objs(dude_obj, self_obj) < 8) and ((cur_map_index == 17) or (cur_map_index == 30))) then begin //  CHILDREN - ENTRANCE AND GROUND FLOOR, MILITARY BASE ENTRANCE
				set_local_var(0, 1);
				float_msg(self_obj, message_str(SCRIPT_BROINVAD, 112), 9);
			end
		end
	end
// Removal processes after coming back to ground floor.
	if ((local_var(4) == 1) and (cur_map_index == 17) and (elevation(self_obj) == local_var(3)) and not(combat_is_initialized)) then begin //  CHILDREN - ENTRANCE AND GROUND FLOOR
		set_local_var(4, 0);
		set_local_var(1, 2);
		party_remove(self_obj);
		set_global_var(BROTHERHOOD_SEND_HELP, 10);
		reg_anim_func(2, self_obj);
		float_msg(self_obj, message_str(SCRIPT_BROINVAD, 115), 9);
		add_timer_event(self_obj, 10, 1);
	end
	if ((global_var(WATER_CHIP_14) == 2) and (local_var(1) == 1) and (cur_map_index == 30) and (local_var(5) == 1) and not(combat_is_initialized)) then begin //  MILITARY BASE - ENTRANCE
		set_local_var(1, 2);
		party_remove(self_obj);
		set_global_var(BROTHERHOOD_SEND_HELP, 10);
		reg_anim_func(2, self_obj);
		float_msg(self_obj, message_str(SCRIPT_BROINVAD, 115), 9);
		add_timer_event(self_obj, 10, 1);
	end
end

procedure map_enter_p_proc
begin
// Not IS_LOADING_GAME
	if (metarule(22, 0) == 0) then begin
		// Add to party if first time on valid entrance map.
		if ((local_var(1) == 0) and ((global_var(BROTHERHOOD_SEND_HELP) == 1) and (cur_map_index == 17) or ((global_var(BROTHERHOOD_SEND_HELP) == 2) and (cur_map_index == 30)))) then begin //  CHILDREN - ENTRANCE AND GROUND FLOOR, MILITARY BASE ENTRANCE
			set_local_var(1, 1);
			if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 0);    end//  MAKE VISIBLE
			party_add(self_obj);
		end
		else begin
			// Remove and destroy if on valid map but player not supposed to have them.
			if (((global_var(BROTHERHOOD_SEND_HELP) != 1) and ((cur_map_index == 17) or (cur_map_index == 18) or (cur_map_index == 33) or (cur_map_index == 34))) or ((global_var(BROTHERHOOD_SEND_HELP) != 2) and ((cur_map_index == 30) or (cur_map_index == 31) or (cur_map_index == 32)))) then begin //  CHILDREN - ALL LEVELS, MILITARY BASE ENTRANCE, MASTER'S LAIR ALL LEVELS
				if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
				if (local_var(1) != 0) then begin
					party_remove(self_obj);
					destroy_object(self_obj);
				end
			end
			else begin
				// Remove and destroy when triggered to leave.
				if ((global_var(BROTHERHOOD_SEND_HELP) >= 10) and (local_var(1) != 0)) then begin
					destroy_object(self_obj);
				end
			end
		end
		// Boring float messages inside Master's Vault.
		if ((global_var(BROTHERHOOD_SEND_HELP) == 1) or (global_var(BROTHERHOOD_SEND_HELP) == 2)) then begin
			if (cur_map_index == 33) then begin //  MASTER'S VAULT -  ENTRANCE AND FIRST LEVEL   (LEVELS 1 AND 2)
				float_msg(self_obj, message_str(SCRIPT_BROINVAD, 113), 9);
			end
			if (cur_map_index == 34) then begin //  MASTER'S VAULT -  LEVELS 3 AND 4
				float_msg(self_obj, message_str(SCRIPT_BROINVAD, 114), 9);
			end
		end
	end
// Flags to initiate process of them leaving the map.
	if (cur_map_index == 33) then begin //  MASTER'S VAULT -  ENTRANCE AND FIRST LEVEL   (LEVELS 1 AND 2)
		set_local_var(4, 1);
	end
// Flag that they've reached Vats, so it'll trigger leaving map when get back to surface.
	if local_var(5) == 0 then begin
		if cur_map_index == 32 then begin
			set_local_var(5, 1);
		end
	end
end

procedure timed_event_p_proc
begin
	if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
	if (global_var(BROTHERHOOD_SEND_HELP) == 10) then begin
		set_global_var(BROTHERHOOD_SEND_HELP, 11);
		if global_var(FADE_TIMES_INCREASED) then begin
			gfade_out(1);
			gfade_out(1);
		end
		game_time_advance(600);//Hopefully help make the floating msgs not linger around after...
		gfade_out(1);
		gfade_in(1);
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);
	if (combat_is_initialized == 1) then begin
		//
		//BEGIN WEAPON DROP MOD CODE
		//--original code and mod by:--
		// Josan12 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=18843) and 
		// MIB88 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=4464)
		//
				if global_var(WEAPONDROP_MOD_STATUS) and not(global_var(FIXT_BUGFIXES_ONLY)) and (critter_inven_obj(self_obj, 1) or critter_inven_obj(self_obj, 2)) then begin// only run if Weapon Drop is enabled, AND Fixes Only is disabled, AND actually holding something
					variable item1 := 0;  variable item2 := 0;  variable armor := 0;  variable item1PID := 0;  variable item2PID := 0;  variable armorPID := 0;  variable drophex := 0;  if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop BEGINS");  end
					if (critter_inven_obj(self_obj, 1) > 0) then begin  item1 := critter_inven_obj(self_obj, 1);  end    if (critter_inven_obj(self_obj, 2) > 0) then begin  item2 := critter_inven_obj(self_obj, 2);  end    if (critter_inven_obj(self_obj, 0) > 0) then begin  armor := critter_inven_obj(self_obj, 0);  end    if item1 then begin  item1PID := obj_pid(item1);  end    if item2 then begin  item2PID := obj_pid(item2);  end    if armor then begin  armorPID := obj_pid(armor);  end    drophex := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(global_var(WEAPONDROP_MOD_MINIMUM), global_var(WEAPONDROP_MOD_MAXIMUM)));
					if (item1PID != 19) and (item1PID != 21) and (item1PID != 79) and (item1PID != 205) and (item1PID != 234) and (item1PID != 235) and (item1PID != 244) and (item2PID != 19) and (item2PID != 21) and (item2PID != 79) and (item2PID != 205) and (item2PID != 234) and (item2PID != 235) and (item2PID != 244) then begin//Don't drop if:  Rock (19), Brass Knuckles (21), Flare (79), Lit Flare (205), Spiked Knuckles (234), Power Fist (235), or Gold Nugget (244)
						if (item1 > 0) then begin if (obj_item_subtype(item1) == 3) then begin
						rm_obj_from_inven(self_obj, item1);  move_to(item1, drophex, elevation(self_obj));  end  end
						if (item2 > 0) then begin if (obj_item_subtype(item2) == 3) then begin
						rm_obj_from_inven(self_obj, item2);  move_to(item2, drophex, elevation(self_obj));  end  end    if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop ENDS");  end
					end
				end
		//END WEAPON DROP MOD CODE
		//
	end
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_BROTHERHOOD, 1);
	end
	if source_obj == dude_obj then begin
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
	rm_timer_event(self_obj);
end

