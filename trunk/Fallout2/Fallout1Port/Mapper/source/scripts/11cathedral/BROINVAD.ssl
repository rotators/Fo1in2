#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure talk_p_proc;//    script_action == 11
procedure initialize_p_proc;
procedure critter_p_proc;//    script_action == 12
procedure map_enter_p_proc;//    script_action == 15
procedure timed_event_p_proc;//    script_action == 22
procedure destroy_p_proc;//    script_action == 18

variable Only_Once := 1;
variable Hex_Number;


procedure start
begin
	if global_var(DEBUG_MODE_MESSAGES_ON) then begin
		display_msg("attempting to move BroInvad...");
		move_to(self_obj, 26893, elevation(dude_obj));
		display_msg("dude at " + tile_num(dude_obj));
		display_msg("self at " + tile_num(self_obj));
	end
	
	
	if Only_Once then begin
		call initialize_p_proc;
	end
	if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
		call destroy_p_proc;
	end
	else begin
		if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
			call talk_p_proc;
		end
		else begin
			if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
				call critter_p_proc;
			end
			else begin
				if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
					call map_enter_p_proc;
				end
			end
		end
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	if (global_var(BROTHERHOOD_SEND_HELP) != 10) then begin
		if (get_critter_stat(dude_obj, STAT_gender) == 0) then begin
			float_msg(self_obj, message_str(SCRIPT_BROINVAD, random(100, 105)), 9);
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_BROINVAD, random(106, 111)), 9);
		end
	end
end

procedure initialize_p_proc
begin
	critter_add_trait(self_obj, 1, 6, 0);
	critter_add_trait(self_obj, 1, 5, 65);
	Only_Once := 0;
end

procedure critter_p_proc
begin
// Remove and destroy if on an invalid map.
	if (not((cur_map_index == MAP_CHILDRN1) or (cur_map_index == MAP_CHILDRN2) or (cur_map_index == MAP_MSTRLR12) or (cur_map_index == MAP_MSTRLR34) or (cur_map_index == MAP_MBENT) or (cur_map_index == MAP_MBSTRG12) or (cur_map_index == MAP_MBVATS12))) then begin //  CHILDREN - ALL LEVELS, MILITARY BASE ENTRANCE (now all levels), MASTER'S LAIR ALL LEVELS
		party_remove(self_obj);
		destroy_object(self_obj);
	end
// Follow player if on valid map, and, display one-time float message on ground-floor maps.
	if ((global_var(BROTHERHOOD_SEND_HELP) == 1) and ((cur_map_index == MAP_CHILDRN1) or (cur_map_index == MAP_CHILDRN2) or (cur_map_index == MAP_MSTRLR12) or (cur_map_index == MAP_MSTRLR34))) or ((global_var(BROTHERHOOD_SEND_HELP) == 2) and ((cur_map_index == MAP_MBENT) or (cur_map_index == MAP_MBSTRG12) or (cur_map_index == MAP_MBVATS12))) then begin //  CHILDREN - ALL LEVELS, MILITARY BASE ENTRANCE, MASTER'S LAIR ALL LEVELS
		if (tile_distance_objs(dude_obj, self_obj) > 6) then begin
			animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), random(0, 5), random(3, 6)), 1);
		end
		if (local_var(0) == 0) then begin
			if ((tile_distance_objs(dude_obj, self_obj) < 8) and ((cur_map_index == MAP_CHILDRN1) or (cur_map_index == MAP_MBENT))) then begin //  CHILDREN - ENTRANCE AND GROUND FLOOR, MILITARY BASE ENTRANCE
				set_local_var(0, 1);
				float_msg(self_obj, message_str(SCRIPT_BROINVAD, 112), 9);
			end
		end
	end
// Removal processes after coming back to ground floor.
	if ((local_var(4) == 1) and (cur_map_index == MAP_CHILDRN1) and (elevation(self_obj) == local_var(3)) and not(combat_is_initialized)) then begin //  CHILDREN - ENTRANCE AND GROUND FLOOR
		set_local_var(4, 0);
		set_local_var(1, 2);
		party_remove(self_obj);
		set_global_var(BROTHERHOOD_SEND_HELP, 10);
		reg_anim_func(2, self_obj);
		float_msg(self_obj, message_str(SCRIPT_BROINVAD, 115), 9);
		add_timer_event(self_obj, 10, 1);
	end
	if ((global_var(WATER_CHIP_14) == 2) and (local_var(1) == 1) and (cur_map_index == MAP_MBENT) and (local_var(5) == 1) and not(combat_is_initialized)) then begin //  MILITARY BASE - ENTRANCE
		set_local_var(1, 2);
		party_remove(self_obj);
		set_global_var(BROTHERHOOD_SEND_HELP, 10);
		reg_anim_func(2, self_obj);
		float_msg(self_obj, message_str(SCRIPT_BROINVAD, 115), 9);
		add_timer_event(self_obj, 10, 1);
	end
end

procedure map_enter_p_proc
begin
// Not IS_LOADING_GAME
	if (metarule(22, 0) == 0) then begin
		// Add to party if first time on valid entrance map.
		if ((local_var(1) == 0) and ((global_var(BROTHERHOOD_SEND_HELP) == 1) and (cur_map_index == MAP_CHILDRN1) or ((global_var(BROTHERHOOD_SEND_HELP) == 2) and (cur_map_index == MAP_MBENT)))) then begin //  CHILDREN - ENTRANCE AND GROUND FLOOR, MILITARY BASE ENTRANCE
			set_local_var(1, 1);
			if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 0);    end//  MAKE VISIBLE
			party_add(self_obj);
		end
		else begin
			// Remove and destroy if on valid map but player not supposed to have them.
			if (((global_var(BROTHERHOOD_SEND_HELP) != 1) and ((cur_map_index == MAP_CHILDRN1) or (cur_map_index == MAP_CHILDRN2) or (cur_map_index == MAP_MSTRLR12) or (cur_map_index == MAP_MSTRLR34))) or ((global_var(BROTHERHOOD_SEND_HELP) != 2) and ((cur_map_index == MAP_MBENT) or (cur_map_index == MAP_MBSTRG12) or (cur_map_index == MAP_MBVATS12)))) then begin //  CHILDREN - ALL LEVELS, MILITARY BASE ENTRANCE, MASTER'S LAIR ALL LEVELS
				if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
				if (local_var(1) != 0) then begin
					party_remove(self_obj);
					destroy_object(self_obj);
				end
			end
			else begin
				// Remove and destroy when triggered to leave.
				if ((global_var(BROTHERHOOD_SEND_HELP) >= 10) and (local_var(1) != 0)) then begin
					destroy_object(self_obj);
				end
			end
		end
		// Boring float messages inside Master's Vault.
		if ((global_var(BROTHERHOOD_SEND_HELP) == 1) or (global_var(BROTHERHOOD_SEND_HELP) == 2)) then begin
			if (cur_map_index == MAP_MSTRLR12) then begin //  MASTER'S VAULT -  ENTRANCE AND FIRST LEVEL   (LEVELS 1 AND 2)
				float_msg(self_obj, message_str(SCRIPT_BROINVAD, 113), 9);
			end
			if (cur_map_index == MAP_MSTRLR34) then begin //  MASTER'S VAULT -  LEVELS 3 AND 4
				float_msg(self_obj, message_str(SCRIPT_BROINVAD, 114), 9);
			end
		end
	end
// Flags to initiate process of them leaving the map.
	if (cur_map_index == MAP_MSTRLR12) then begin //  MASTER'S VAULT -  ENTRANCE AND FIRST LEVEL   (LEVELS 1 AND 2)
		set_local_var(4, 1);
	end
// Flag that they've reached Vats, so it'll trigger leaving map when get back to surface.
	if local_var(5) == 0 then begin
		if cur_map_index == MAP_MBVATS12 then begin
			set_local_var(5, 1);
		end
	end
end

procedure timed_event_p_proc
begin
	if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
	if (global_var(BROTHERHOOD_SEND_HELP) == 10) then begin
		set_global_var(BROTHERHOOD_SEND_HELP, 11);
		if global_var(FADE_TIMES_INCREASED) then begin
			gfade_out(1);
			gfade_out(1);
		end
		game_time_advance(600);//Hopefully help make the floating msgs not linger around after...
		gfade_out(1);
		gfade_in(1);
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);
	if (combat_is_initialized == 1) then begin

	end
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_BROTHERHOOD, 1);
	end
	inc_good_critter		
	rm_timer_event(self_obj);
end
