/*

	Cathedral - Lasher

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPV13CAVE.h"

#define NAME                    SCRIPT_LASHER
#define TOWN_REP_VAR            (GVAR_TOWN_REP_CATHEDRAL)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure timed_event_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure lasher00;
procedure lasher01;
procedure lasher02;
procedure lasher03;
procedure lasher04;
procedure lasher05;
procedure lasher06;
procedure lasher06a;
procedure lasher07;
procedure lasher07a;
procedure lasher08;
procedure lasher08a;
procedure lasher09;
procedure lasher10;
procedure lasher10a;
procedure lasher11;
procedure lasher12;
procedure lasher13;
procedure lasher14;
procedure lasher14a;
procedure lasher15;
procedure lasher16;
procedure lasher17;
procedure lasher17a;
procedure lasher18;
procedure lasher19;
procedure lasher20_1;
procedure lasher20_2;
procedure lasher21;
procedure lasher22;
procedure lasher23;
procedure lasher24;
procedure lasher25;
procedure lasher26;
procedure lasher26a;
procedure lasher27;
procedure lasher28;
procedure lasher29;
procedure lasher30;
procedure lasher31;
procedure lasher32;
procedure lasher33;
procedure lasher34;
procedure lasher35;
procedure lasher36;
procedure lasher37;
procedure lasher38;
procedure lasher39;
procedure lasher40_1;
procedure lasher40_2;
procedure lasher41_1;
procedure lasher41_2;
procedure lasher42;
procedure lasher43;
procedure lasher44;
procedure lasherend;
procedure combat;

variable tmp_hostile;
variable Lasher_Abuse;
variable Only_Once := 1;

#define EVENT_ATTACK 		(1)

#define float(x)    						float_msg(self_obj, mstr(x), FLOAT_MSG_RED)

procedure start begin
	if Only_Once then begin
		set_self_team(TEAM_CATHEDRAL);
		set_self_ai(AI_COC_LASHER);
		Only_Once := 0;
	end
end

procedure critter_p_proc begin
	if ((local_var(1) == 0) and self_can_see_dude) then begin
		set_local_var(1, 1);
		dialogue_system_enter;
	end
	else begin

		if (self_can_see_dude and (dude_is_armed)) then begin
			//tmp_hostile := 1;
			add_timer_event(self_obj, game_ticks(5), EVENT_ATTACK);
		end
		if (tmp_hostile) then begin
			tmp_hostile := 0;
			attack(dude_obj);
		end

	end
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure timed_event_p_proc begin
	// Player still nearby with weapons out?
	if (fixed_param == EVENT_ATTACK) then begin
		if (self_can_see_dude and (dude_is_armed)) then
			float(250);
			tmp_hostile := 1;
	end
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_LASHER, 100));
end

procedure description_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_LASHER, 100));
end

procedure pickup_p_proc begin
	tmp_hostile := 1;
end

procedure destroy_p_proc begin
	inc_inv_evil_crit
end

procedure talk_p_proc begin
script_overrides;

	if dude_armor then begin
		variable RobesCheck;
		RobesCheck := dude_armor;
	end

	if (obj_pid(RobesCheck) == PID_PURPLE_ROBE) then begin
		if (dude_is_armed) then begin
			start_gdialog(384, self_obj, 4, -1, -1);
			gsay_start;
			call lasher04;
			gsay_end;
			end_dialogue;
		end
		else begin
			start_gdialog(384, self_obj, 4, -1, -1);
			gsay_start;
			call lasher05;
			gsay_end;
			end_dialogue;
		end
	end
	else if (dude_is_armed) then begin
		start_gdialog(384, self_obj, 4, -1, -1);
		gsay_start;
		call lasher06;
		gsay_end;
		end_dialogue;
	end
	else if (global_var( GVAR_CATHEDRAL_ENEMY ) == 1) then begin
		start_gdialog(384, self_obj, 4, -1, -1);
		gsay_start;
		call lasher00;
		gsay_end;
		end_dialogue;
	end
	else if has_rep_childkiller then begin
		start_gdialog(384, self_obj, 4, -1, -1);
		gsay_start;
		call lasher01;
		gsay_end;
		end_dialogue;
	end
	else if (has_rep_berserker) then begin
		start_gdialog(384, self_obj, 4, -1, -1);
		gsay_start;
		call lasher02;
		gsay_end;
		end_dialogue;
	end
	else if (local_var(0) == 1) then begin
		start_gdialog(384, self_obj, 4, -1, -1);
		gsay_start;
		call lasher03;
		gsay_end;
		end_dialogue;
	end
	else begin
		start_gdialog(384, self_obj, 4, -1, -1);
		gsay_start;
		call lasher07;
		gsay_end;
		end_dialogue;
	end

	set_local_var(0, 1);
end

procedure lasher00
begin
	if (dude_is_male) then begin
		gsay_reply(384, 101);
	end
	else begin
		gsay_reply(384, 102);
	end
	gsay_option(384, 223, lasherend, 50);
end

procedure lasher01
begin
	gsay_message(384, 103, 50);
	call combat;
end

procedure lasher02
begin
	gsay_message(384, 104, 50);
	call combat;
end

procedure lasher03
begin
	gsay_reply(384, 105);
	gsay_option(384, 223, lasherend, 50);
end

procedure lasher04
begin
	gsay_reply(384, 106);
	NOption( 107, lasher08, 7 );
	NOption( 108, lasher09, 4 );
	NOption( 109, lasher10, 4 );
	NOption( 110, lasher11, 4 );
	if (Lasher_Abuse) then begin
		NOption( 111, lasher12, 4 );
	end
	if (has_rep_berserker) then begin
		NOption( 112, lasher02, 4 );
	end
	NOption( 113, lasher13, -3 );
end

procedure lasher05
begin
	gsay_reply(384, 114);
	NOption( 115, lasher14, 7 );
	NOption( 116, lasher15, 7 );
	if (Lasher_Abuse) then begin
		NOption( 117, lasher12, 4 );
	end
	NOption( 118, lasher16, 4 );
	NOption( 119, lasher11, 4 );
	NOption( 109, lasher10, 4 );
	if (has_rep_berserker) then begin
		NOption( 120, lasher02, 4 );
	end
	NOption( 121, lasher13, -3 );
end

procedure lasher06
begin
	if (dude_is_male) then begin
		gsay_reply(384, 122);
	end
	else begin
		gsay_reply(384, 123);
	end
	NOption( 124, lasher06a, 7 );
	NOption( 125, lasher15, 7 );
	if (Lasher_Abuse) then begin
		NOption( 126, lasher12, 4 );
	end
	NOption( 127, lasher16, 4 );
	NOption( 128, lasher11, 4 );
	NOption( 109, lasher10, 4 );
	if (has_rep_berserker) then begin
		NOption( 129, lasher02, 4 );
	end
	NOption( 130, lasher13, -3 );
end

procedure lasher06a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call lasher17;
	end
	else begin
		call lasher18;
	end
end

procedure lasher07
begin
	gsay_reply(384, 131);
	NOption( 132, lasher07a, 7 );
	if (Lasher_Abuse) then begin
		NOption( 133, lasher12, 4 );
	end
	NOption( 134, lasher19, 4 );
	NOption( 109, lasher10, 4 );
	NOption( 135, lasher11, 4 );
	if (has_rep_berserker) then begin
		NOption( 136, lasher02, 4 );
	end
	NOption( 137, lasher13, -3 );
end

procedure lasher07a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call lasher17;
	end
	else begin
		call lasher18;
	end
end

procedure lasher08
begin
	gsay_reply(384, 138);
	NOption( 139, lasher08a, 7 );
	if (Lasher_Abuse) then begin
		NOption( 140, lasher12, 4 );
	end
	NOption( 141, lasher19, 4 );
	NOption( 142, lasher22, 4 );
	if (has_rep_berserker) then begin
		NOption( 143, lasher13, 4 );
	end
end

procedure lasher08a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call lasher20_1;
	end
	else begin
		call lasher18;
	end
end

procedure lasher09
begin
	gsay_reply(384, 144);
	gsay_option(384, 223, lasherend, 50);
end

procedure lasher10
begin
	gsay_reply(384, 145);
	NOption( 146, lasher10a, 7 );
	if (Lasher_Abuse) then begin
		NOption( 147, lasher26, 4 );
	end
	NOption( 148, lasher27, 4 );
	NOption( 149, lasher28, 4 );
	if (has_rep_berserker) then begin
		NOption( 150, lasher29, 4 );
	end
end

procedure lasher10a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call lasher24;
	end
	else begin
		call lasher25;
	end
end

procedure lasher11
begin
	gsay_reply(384, 151);
	NOption( 152, lasher09, 4 );
	NOption( 153, lasher30, 4 );
	if (has_rep_berserker) then begin
		NOption( 154, lasher02, 4 );
	end
end

procedure lasher12
begin
	gsay_reply(384, 155);
	NOption( 156, lasher31, 7 );
	NOption( 157, lasher30, 4 );
	NOption( 158, lasher02, 4 );
	NOption( 159, lasher32, 4 );
	if (has_rep_berserker) then begin
		NOption( 160, lasher33, 4 );
	end
end

procedure lasher13 begin
	gsay_message(384, 161, 50);
end

procedure lasher14
begin
	if (dude_is_male) then begin
		gsay_reply(384, 163);
	end
	else begin
		gsay_reply(384, 162);
	end
	NOption( 164, lasher31, 7 );
	NOption( 165, lasher30, 4 );
	NOption( 166, lasher02, 4 );
	if (has_rep_berserker) then begin
		NOption( 167, lasher33, 4 );
	end
end

procedure lasher14a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call lasher34;
	end
	else begin
		call lasher18;
	end
end

procedure lasher15
begin
	gsay_reply(384, 168);
	NOption( 169, lasher18, 7 );
	NOption( 170, lasher35, 4 );
	NOption( 171, lasher36, 4 );
	NOption( 172, lasher09, 4 );
	if (has_rep_berserker) then begin
		NOption( 173, lasher37, 4 );
	end
end

procedure lasher16
begin
	gsay_message(384, 174, 50);
end

procedure lasher17
begin
	gsay_reply(384, 175);
	if (global_var( GVAR_MORPHEUS_KNOWN ) == 1) then begin
		NOption( 176, lasher17a, 7 );
	end
	NOption( 177, lasher40_1, 4 );
	NOption( 178, lasher41_1, 4 );
	NOption( 179, lasher12, 4 );
	if (has_rep_berserker) then begin
		NOption( 180, lasher35, 4 );
	end
end

procedure lasher17a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call lasher38;
	end
	else begin
		call lasher39;
	end
end

procedure lasher18
begin
	gsay_message(384, 181, 50);
end

procedure lasher19
begin
	gsay_message(384, 182, 50);
end

procedure lasher20_1
begin
	gsay_message(384, message_str(SCRIPT_LASHER, 183) + message_str(SCRIPT_LASHER, 183), 50);
end

procedure lasher20_2
begin
end

procedure lasher21
begin
	gsay_message(384, 186, 50);
end

procedure lasher22
begin
	gsay_message(384, 187, 50);
end

procedure lasher23
begin
	gsay_message(384, 188, 50);
end

procedure lasher24
begin
	variable LVar0 := 0;
	LVar0 := create_object( PID_RED_COC_BADGE, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	gsay_message(384, 189, 50);
end

procedure lasher25
begin
	gsay_message(384, 190, 50);
end

procedure lasher26
begin
	gsay_reply(384, 191);
	NOption( 192, lasher26a, 7 );
	NOption( 193, lasher25, 4 );
	NOption( 194, lasher27, 4 );
	NOption( 195, lasher28, 4 );
	if (has_rep_berserker) then begin
		NOption( 196, lasher23, 4 );
	end
end

procedure lasher26a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call lasher24;
	end
	else begin
		call lasher25;
	end
end

procedure lasher27
begin
	gsay_message(384, 197, 50);
end

procedure lasher28
begin
	variable LVar0 := 0;
	LVar0 := create_object( PID_RED_COC_BADGE, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	gsay_message(384, 198, 50);
end

procedure lasher29
begin
	gsay_message(384, 199, 50);
end

procedure lasher30
begin
	gsay_message(384, 200, 50);
end

procedure lasher31
begin
	gsay_message(384, 201, 50);
end

procedure lasher32
begin
	gsay_reply(384, 202);
	NOption( 203, lasher21, 7 );
	NOption( 204, lasher42, 4 );
	NOption( 205, lasher43, 4 );
	NOption( 206, lasher44, 4 );
	NOption( 207, lasher28, 4 );
	if (has_rep_berserker) then begin
		NOption( 208, lasher35, 4 );
	end
end

procedure lasher33
begin
	if (dude_is_female) then begin
		gsay_message(384, 209, 50);
	end
	else begin
		gsay_message(384, 210, 50);
	end
end

procedure lasher34
begin
	gsay_message(384, 211, 50);
end

procedure lasher35
begin
	gsay_message(384, 212, 50);
end

procedure lasher36
begin
	gsay_message(384, 213, 50);
end

procedure lasher37
begin
	gsay_message(384, 214, 50);
end

procedure lasher38
begin
	variable LVar0 := 0;
	LVar0 := create_object( PID_RED_COC_BADGE, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	gsay_message(384, 224, 50);
end

procedure lasher39
begin
	gsay_message(384, 215, 50);
end

procedure lasher40_1
begin
	gsay_message(384, message_str(SCRIPT_LASHER, 216) + message_str(SCRIPT_LASHER, 217), 50);
end

procedure lasher40_2
begin
end

procedure lasher41_1
begin
	gsay_message(384, message_str(SCRIPT_LASHER, 218) + message_str(SCRIPT_LASHER, 219), 50);
end

procedure lasher41_2
begin
end

procedure lasher42
begin
	gsay_message(384, 220, 50);
end

procedure lasher43
begin
	gsay_message(384, 221, 50);
end

procedure lasher44
begin
	gsay_message(384, 222, 50);
end

procedure lasherend
begin
end

procedure combat
begin
	tmp_hostile := 1;
end
