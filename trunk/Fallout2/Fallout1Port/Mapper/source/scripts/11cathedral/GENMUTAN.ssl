#include "..\headers\define.h"

procedure start;
procedure damage_p_proc;//    script_action == 14
procedure do_dialogue;//    script_action == 11
procedure critter_p_proc;//    script_action == 12
procedure destroy_p_proc;//    script_action == 18

procedure pre_dialogue;
procedure mutan00;
procedure mutan01;
procedure mutan02;
procedure mutan03;
procedure mutan03a;
procedure mutan04;
procedure mutan05;
procedure mutan05a;
procedure mutan05b;
procedure mutan06;
procedure mutan07;
procedure mutan08;
procedure mutan08a;
procedure mutan08b;
procedure mutan09;
procedure mutan10;
procedure mutan11;
procedure mutan11a;
procedure mutan12;
procedure mutan13;
procedure mutan13a;
procedure mutan13b;
procedure mutan14;
procedure mutan15;
procedure mutanend;
procedure mutancbt;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;
procedure items_held;

variable RightHand := 0;
variable LeftHand := 0;
variable PIDright := 0;
variable PIDleft := 0;
variable SubtypeWEP := 0;

import variable signal_mutants;

variable HOSTILE;
variable Only_Once := 1;
variable Weapons;
variable DISGUISED;
variable again;
variable rndx;
variable exit_line;
variable RobesCheck; 


procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if Only_Once then begin
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 34);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 48);
		Only_Once := 0;
	end
	if (script_action == 14) then begin//<-- damage_p_proc - has this Critter or Object been shot, hit with TNT, punched, etc.
		call damage_p_proc;
	end
	else begin
		if (script_action == 11) then begin//<--- do_dialogue (Face icon), can also call "do_dialogue" or "do_dialog"
			call pre_dialogue;
		end
		else begin
			if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
				HOSTILE := 1;
			end
			else begin
				if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
					call critter_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
				end
			end
		end
	end
end

procedure items_held
begin
	SubtypeWEP := 0;
	if critter_inven_obj(dude_obj, 1) then begin
		RightHand := critter_inven_obj(dude_obj, 1);
		PIDright := obj_pid(RightHand);
		if obj_item_subtype(RightHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		RightHand := 0;
		PIDright := 0;
	end
	if critter_inven_obj(dude_obj, 2) then begin
		LeftHand := critter_inven_obj(dude_obj, 2);
		PIDleft := obj_pid(LeftHand);
		if obj_item_subtype(LeftHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		LeftHand := 0;
		PIDleft := 0;
	end
end

procedure critter_p_proc
begin
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		HOSTILE := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
	else begin
		if (signal_mutants == 1) then begin
			signal_mutants := 0;
			call mutancbt;
		end
		else begin
			if (obj_can_see_obj(self_obj, dude_obj)) then begin
				call items_held;
				if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
					if (Weapons == 0) then begin
						Weapons := 1;
						if (tile_distance_objs(self_obj, dude_obj) < 6) then begin
							dialogue_system_enter;
						end
					end
				end
				DISGUISED := 0;
				if critter_inven_obj(dude_obj, 0) then begin
					RobesCheck := critter_inven_obj(dude_obj, 0);
				end
				if (obj_pid(RobesCheck) == 113) then begin
					if (metarule(16, 0) > 1) then begin//  PARTY_COUNT > 1.    Is player travelling with homies?
						DISGUISED := 0;
					end
					else begin
						DISGUISED := 1;
					end
				end
				if ((DISGUISED == 0) and (again == 0)) then begin
					if (tile_distance_objs(self_obj, dude_obj) < 6) then begin
						again := 1;
						dialogue_system_enter;
					end
				end
			end
		end
	end
end

procedure do_dialogue
begin
	set_local_var(3, 1);
	call get_reaction;
	start_gdialog(524, self_obj, 4, -1, -1);
	gsay_start;
	if (Weapons == 1) then begin
		call mutan01;
	end
	else begin
		if (local_var(4)) then begin
			call mutan13;
		end
		else begin
			set_local_var(4, 1);
			call mutan05;
		end
	end
	gsay_end;
	end_dialogue;
end

procedure pre_dialogue
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if critter_inven_obj(dude_obj, 0) then begin
		RobesCheck := critter_inven_obj(dude_obj, 0);
	end
	if (obj_pid(RobesCheck) == 113) then begin
		if (metarule(16, 0) > 1) then begin//  PARTY_COUNT > 1.    Is player travelling with homies?
			DISGUISED := 0;
		end
		else begin
			DISGUISED := 1;
		end
	end
	if (Weapons == 1) then begin
		if (DISGUISED) then begin
			call do_dialogue;
		end
		else begin
			call mutan00;
		end
	end
	else begin
		if (DISGUISED) then begin
			call do_dialogue;
		end
		else begin
			call mutan00;
		end
	end
end

procedure mutan00
begin
	rndx := random(1, 8);
	if (rndx <= 2) then begin
		float_msg(self_obj, message_str(SCRIPT_GENMUTAN, 100), 2);
	end
	else begin
		if (rndx <= 4) then begin
			float_msg(self_obj, message_str(SCRIPT_GENMUTAN, 101), 2);
		end
		else begin
			if (rndx <= 6) then begin
				float_msg(self_obj, message_str(SCRIPT_GENMUTAN, 102), 2);
			end
			else begin
				float_msg(self_obj, message_str(SCRIPT_GENMUTAN, 103), 2);
			end
		end
	end
	call mutancbt;
end

procedure mutan01
begin
	if (get_critter_stat(dude_obj, 34) == 0) then begin
		gsay_reply(524, 104);
	end
	else begin
		gsay_reply(524, 105);
	end
	giq_option(4, 524, 107, mutan02, 51);
	giq_option(6, 524, 108, mutan03, 50);
	giq_option(9, 524, 109, mutan04, 50);
	giq_option(-3, 524, 106, mutan02, 51);
end

procedure mutan02
begin
	gsay_message(524, 110, 51);
	call mutancbt;
end

procedure mutan03
begin
	gsay_reply(524, 111);
	giq_option(6, 524, 112, mutan03a, 50);
	giq_option(6, 524, 113, mutancbt, 51);
end

procedure mutan03a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call mutan04;
	end
	else begin
		call mutan02;
	end
end

procedure mutan04
begin
	gsay_message(524, 114, 50);
	set_local_var(5, 1);
end

procedure mutan05
begin
	if (get_critter_stat(dude_obj, 34) == 0) then begin
		gsay_reply(524, 115);
	end
	else begin
		gsay_reply(524, 116);
	end
	giq_option(4, 524, 118, mutan05a, 50);
	giq_option(6, 524, 119, mutan05b, 50);
	giq_option(-3, 524, 106, mutan06, 50);
end

procedure mutan05a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call mutan08;
	end
	else begin
		call mutan07;
	end
end

procedure mutan05b
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call mutan10;
	end
	else begin
		call mutan11;
	end
end

procedure mutan06
begin
	gsay_message(524, 120, 50);
	set_local_var(5, 1);
end

procedure mutan07
begin
	gsay_message(524, 121, 51);
	call mutancbt;
end

procedure mutan08
begin
	gsay_reply(524, 122);
	giq_option(4, 524, 123, mutan08a, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 524, 124, mutancbt, 51);
	end
	giq_option(7, 524, 125, mutan08b, 50);
end

procedure mutan08a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call mutan04;
	end
	else begin
		call mutan07;
	end
end

procedure mutan08b
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 20))) then begin
		call mutan04;
	end
	else begin
		call mutan09;
	end
end

procedure mutan09
begin
	gsay_message(524, 126, 51);
	call mutancbt;
end

procedure mutan10
begin
	gsay_message(524, 127, 50);
	set_local_var(5, 1);
end

procedure mutan11
begin
	gsay_reply(524, 128);
	giq_option(6, 524, 129, mutan11a, 50);
	giq_option(6, 524, 130, mutancbt, 51);
end

procedure mutan11a
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		call mutan12;
	end
	else begin
		call mutan09;
	end
end

procedure mutan12
begin
	gsay_message(524, 131, 50);
	set_local_var(5, 1);
end

procedure mutan13
begin
	gsay_reply(524, 132);
	giq_option(4, 524, 134, mutancbt, 51);
	giq_option(4, 524, 135, mutan13a, 50);
	giq_option(6, 524, 136, mutan13b, 50);
	giq_option(-3, 524, 133, mutan14, 51);
end

procedure mutan13a
begin
	if (is_success(do_check(dude_obj, 6, 0))) then begin
		call mutan12;
	end
	else begin
		call mutan09;
	end
end

procedure mutan13b
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 20))) then begin
		call mutan10;
	end
	else begin
		call mutan11;
	end
end

procedure mutan14
begin
	gsay_message(524, 137, 51);
	call mutancbt;
end

procedure mutan15
begin
	rndx := random(1, 3);
	if (rndx == 1) then begin
		gsay_message(524, 138, 50);
	end
	else begin
		if (rndx == 2) then begin
			gsay_message(524, 139, 50);
		end
		else begin
			if (rndx == 3) then begin
				gsay_message(524, 140, 50);
			end
		end
	end
end

procedure mutanend
begin
end

procedure mutancbt
begin
	HOSTILE := 1;
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
 
procedure damage_p_proc
begin
	if (global_var(MUTANTS_ENEMY_UNSURE) == 0) then begin
		set_global_var(MUTANTS_ENEMY_UNSURE, 1);
	end 
end

procedure destroy_p_proc
begin

	if source_obj == dude_obj then begin
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
	end
end

