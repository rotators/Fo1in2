#include "..\headers\define.h"

procedure start;
procedure damage_p_proc;//    script_action == 14
procedure use_skill_on_p_proc;//    script_action == 8
procedure use_obj_on_p_proc;//    script_action == 7
procedure map_update_p_proc;//    script_action == 23
procedure use_p_proc;//    script_action == 6
procedure description_p_proc;//    script_action == 3


procedure start
begin
	if (script_action == 3) then begin// 21 is look_at, 3 is description (Binoculars)
		call description_p_proc;
	end
	else begin
		if (script_action == 6) then begin//use_p_proc - Use, Activate, or Manipulate the Object or Item
			call use_p_proc;
		end
		else begin
			if (script_action == 8) then begin//<-- use_skill_on_p_proc
				call use_skill_on_p_proc;
			end
			else begin
				if (script_action == 7) then begin//<-- use_obj_on_p_proc
					call use_obj_on_p_proc;
				end
				else begin
					if (script_action == 14) then begin//<-- damage_p_proc - has this Critter or Object been shot, hit with TNT, punched, etc.
						call damage_p_proc;
					end
					else begin
						if (script_action == 23) then begin//map_update_p_proc -- called every dozen seconds or so, & additionally on certain events (exit dialog, end combat, load map, etc)
							call map_update_p_proc;
						end
					end
				end
			end
		end
	end
end

procedure damage_p_proc
begin
	if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
	set_local_var(1, 1);
	set_map_var(4, 1);
end

procedure use_skill_on_p_proc
begin
	variable LVar0 := 0;
	if (local_var(0) == 0) then begin
		if (action_being_used == SKILL_LOCKPICK) then begin//-- LOCKPICK
			script_overrides;
			if (map_var(5) == 0) then begin
				if (using_skill(dude_obj, 8) != 1) then begin
					set_map_var(4, 1);
				end
				else begin
					LVar0 := roll_vs_skill(dude_obj, SKILL_SNEAK, 0);
					if (is_success(LVar0) != 1) then begin
						set_map_var(4, 1);
					end
					else begin
						LVar0 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 0);
						if (is_success(LVar0)) then begin
							set_local_var(0, 1);
							display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
						end
						else begin
							display_msg(message_str(SCRIPT_DOOR, 103));//{103}{}{You were not able to pick the lock.}
						end
					end
				end
			end
			else begin
				LVar0 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 0);
				if (is_success(LVar0)) then begin
					set_local_var(0, 1);
					display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
				end
				else begin
					display_msg(message_str(SCRIPT_DOOR, 103));//{103}{}{You were not able to pick the lock.}
				end
			end
		end
	end
	else begin
		display_msg(message_str(SCRIPT_DOOR, 109));//{109}{}{The door is already unlocked.}
	end
end

procedure use_obj_on_p_proc
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	LVar0 := obj_being_used_with;
	if (obj_pid(LVar0) == 84) then begin
		script_overrides;
		if (map_var(5) == 0) then begin
			if (using_skill(dude_obj, 8) != 1) then begin
				set_map_var(4, 1);
			end
			else begin
				LVar1 := roll_vs_skill(dude_obj, SKILL_SNEAK, 0);
				if (is_success(LVar1) != 1) then begin
					set_map_var(4, 1);
				end
				else begin
					LVar1 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 20);
					if (is_success(LVar1)) then begin
						set_local_var(0, 1);
						display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
					end
					else begin
						if (is_critical(LVar1)) then begin
							rm_obj_from_inven(dude_obj, LVar0);
							destroy_object(LVar0);
							display_msg(message_str(SCRIPT_DOOR, 101));//{101}{}{You broke your lockpicks!}
						end
					end
				end
			end
		end
		else begin
			LVar1 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 20);
			if (is_success(LVar1)) then begin
				set_local_var(0, 1);
				display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
			end
			else begin
				if (is_critical(LVar1)) then begin
					rm_obj_from_inven(dude_obj, LVar0);
					destroy_object(LVar0);
					display_msg(message_str(SCRIPT_DOOR, 101));//{101}{}{You broke your lockpicks!}
				end
			end
		end
	end
	else begin
		display_msg(message_str(SCRIPT_DOOR, 103));//{103}{}{You were not able to pick the lock.}
	end
end

procedure map_update_p_proc
begin
	if (local_var(0) == 0) then begin
		obj_lock(self_obj);
	end
	else begin
		obj_unlock(self_obj);
	end
end

procedure use_p_proc
begin
	variable LVar0 := 0;
	if (local_var(0) == 0) then begin
		obj_lock(self_obj);
	end
	else begin
		if (map_var(5) == 0) then begin
			if (using_skill(dude_obj, 8) != 1) then begin
				set_map_var(4, 1);
			end
			else begin
				LVar0 := roll_vs_skill(dude_obj, SKILL_SNEAK, 0);
				if (is_success(LVar0)) then begin
					obj_unlock(self_obj);
				end
				else begin
					set_map_var(4, 1);
				end
			end
		end
		else begin
			obj_unlock(self_obj);
		end
	end
	if ((local_var(0) == 0) and (source_obj == dude_obj)) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_DOOR, 104));//{104}{}{The door is locked.}
	end
end

procedure description_p_proc
begin
	if (local_var(0) == 0) then begin
		display_msg(message_str(SCRIPT_DOOR, 104));//{104}{}{The door is locked.}
	end
end

