/*

	Masters Lair - Viscious

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_VISCIOUS
#define TOWN_REP_VAR            (GVAR_TOWN_REP_CATHEDRAL)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure damage_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;

procedure goto00;
procedure goto00a;
procedure goto01;
procedure goto02;
procedure goto03;
procedure goto03a;
procedure goto04;
procedure goto05;
procedure goto06;
procedure goto07;
procedure goto07a;
procedure goto08;
procedure gotoend;
procedure gotocbt;
procedure gotoret;

procedure moveme;

variable tmp_hostile;
variable Only_Once := 1;
variable DISGUISED;
variable ARMED;
variable moving := 1;
variable my_hex;
variable home_tile;
variable smoke_tile;
variable indlog;

procedure start begin
	if (local_var(4) == 0) then begin
		set_local_var(4, 1);
		set_local_var(5, 1);
		set_local_var(6, 0);
		set_local_var(7, 22091);
	end
	if Only_Once then begin
		Only_Once := 0;
		home_tile := 23488;
		smoke_tile := 21299;
		set_self_team(TEAM_NECROPOLIS_MUTANT);
		set_self_ai(AI_SUPER_MUTANT_SGT);

		if (local_var(0) == 1) then begin
			if not(is_loading_game) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
			moving := 0;
		end

	end
end

procedure timed_event_p_proc begin
	if (fixed_param == 1) then begin
		moving := 1;
	end
end

procedure pickup_p_proc begin
	tmp_hostile := 1;
end

procedure critter_p_proc begin
	if (local_var(0) != 1) then begin

		if (tmp_hostile) then begin
			tmp_hostile := 0;
			attack(dude_obj);
		end
		else begin
			if (moving) then begin
				call moveme;
			end
		end

	end
end

procedure look_at_p_proc begin
	script_overrides;
	if (local_var(3)) then begin
		display_msg(message_str(SCRIPT_MLOPS, 302));
	end
	else begin
		display_msg(message_str(SCRIPT_MLOPS, 200));
	end
end

procedure damage_p_proc begin
	if (global_var( GVAR_MUTANTS_ENEMY_UNSURE ) == 0) then begin
		set_global_var( GVAR_MUTANTS_ENEMY_UNSURE, 1 );
	end
end

procedure destroy_p_proc begin
	set_local_var(0, 1);
	rm_timer_event(self_obj);
	inc_inv_evil_crit
	rm_timer_event(self_obj);
end

procedure talk_p_proc begin
	dude_look_at_critter;
	start_gdialog(811, self_obj, 4, -1, -1);
	gsay_start;
	indlog := 1;
	ARMED := 0;
	DISGUISED := 0;

	if (dude_is_armed) then begin
		ARMED := 1;
	end
	coc_disguise_check
	if ((DISGUISED == 0) or (ARMED == 1)) then begin
		call goto01;
	end
	else if (local_var(2) == 1) then begin
		call goto08;
	end
	else begin
		set_local_var(2, 1);
		call goto00;
	end
	indlog := 0;
	gsay_end;
	end_dialogue;
end

procedure moveme begin
	my_hex := tile_num(self_obj);
	if (my_hex == local_var(7)) then begin
		set_local_var(3, 0);
		if (local_var(5)) then begin
			set_local_var(6, local_var(6) + 1);
		end
		else begin
			set_local_var(6, local_var(6) - 1);
		end
		if (local_var(6) > 2) then begin
			set_local_var(3, 1);
			moving := 0;
			set_local_var(6, 1);
			set_local_var(5, 0);
			add_timer_event(self_obj, game_ticks(180), 1);
		end
		else begin
			if (local_var(6) < 0) then begin
				moving := 0;
				set_local_var(6, 1);
				set_local_var(5, 1);
				add_timer_event(self_obj, game_ticks(600), 1);
			end
		end
		if (local_var(6) == 0) then begin
			set_local_var(7, home_tile);
		end
		else begin
			if (local_var(6) == 1) then begin
				set_local_var(7, 22091);
			end
			else if (local_var(6) == 2) then begin
				set_local_var(7, smoke_tile);
			end
		end
	end
	else begin
		animate_move_obj_to_tile(self_obj, local_var(7), 0);
	end
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		ARMED := 0;
		DISGUISED := 0;

		if (dude_is_armed) then begin
			ARMED := 1;
		end
		coc_disguise_check
		if ((DISGUISED == 0) or (ARMED == 1)) then begin
			if (tile_distance_objs(self_obj, dude_obj) < 6) then begin
				if (local_var(1) < 1) then begin
					set_local_var(1, 1);
					add_timer_event(self_obj, game_ticks(15), 2);
					dialogue_system_enter;
				end
			end
		end
	end
end

procedure goto00
begin
	gsay_reply(811, 202);
	BOption( 203, goto01, -3 );
	BOption( 204, goto02, 4 );
	NOption( 205, goto00a, 7 );
	BOption( 206, gotocbt, 4 );
end

procedure goto00a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call goto04;
	end
	else begin
		call goto03;
	end
end

procedure goto01
begin
	if (indlog) then begin
		gsay_message(811, 207, 51);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_MLOPS, 207), 2);
	end
	call gotocbt;
end

procedure goto02
begin
	gsay_message(811, 208, 51);
	call gotocbt;
end

procedure goto03
begin
	gsay_reply(811, 209);
	BOption( 210, gotocbt, 4 );
	NOption( 211, goto03a, 7 );
end

procedure goto03a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
		call goto04;
	end
	else begin
		call goto02;
	end
end

procedure goto04
begin
	gsay_reply(811, 212);
	NOption( 213, gotoend, 7 );
	NOption( 214, goto05, 7 );
end

procedure goto05
begin
	gsay_reply(811, 215);
	NOption( 216, goto06, 7 );
	BOption( 217, goto07, 8 );
end

procedure goto06
begin
	gsay_message(811, 218, 50);
end

procedure goto07
begin
	gsay_reply(811, 219);
	NOption( 220, goto07a, 4 );
	BOption( 221, gotocbt, 4 );
end

procedure goto07a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call goto06;
	end
	else begin
		call goto01;
	end
end

procedure goto08
begin
	if (indlog) then begin
		gsay_message(811, 222, 50);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_MLOPS, 222), 2);
	end
end

procedure gotoend
begin
end

procedure gotocbt
begin
	tmp_hostile := 1;
end

procedure gotoret
begin
end



