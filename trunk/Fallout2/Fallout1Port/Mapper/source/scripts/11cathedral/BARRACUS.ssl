#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure talk_p_proc;//    script_action == 11
procedure social_skills;
procedure weapon_check;
procedure destroy_p_proc;//    script_action == 18

procedure Barracus00;
procedure Barracus01;
procedure Barracus02;
procedure Barracus03;
procedure Barracus04;
procedure Barracus05;
procedure Barracus05a;
procedure Barracus06;
procedure Barracus07;
procedure Barracus08;
procedure Barracus09;
procedure Barracus10;
procedure Barracus11;
procedure Barracus12;
procedure Barracus13;
procedure Barracus14;
procedure Barracus14a;
procedure Barracus15;
procedure Barracus16;
procedure Barracus17;
procedure Barracus18;
procedure Barracus19;
procedure Barracus20;
procedure Barracus21;
procedure Barracus22;
procedure Barracus23;
procedure Barracus24;
procedure Barracus25;
procedure Barracus26;
procedure Barracus26a;
procedure Barracus27;
procedure Barracus28;
procedure Barracus29;
procedure Barracus30;
procedure Barracus31;
procedure Barracus32;
procedure Barracus33;
procedure Barracus34;
procedure Barracus35;
procedure Barracus35a;
procedure Barracus36;
procedure Barracus37;
procedure Barracus38;
procedure Barracus38a;
procedure Barracus39;
procedure Barracus40;
procedure Barracus41;
procedure Barracus42;
procedure Barracus43;
procedure Barracus44;
procedure Barracus45;
procedure Barracus46;
procedure Barracus47;
procedure Barracus48;
procedure Barracus49;
procedure Barracus50;
procedure Barracus51;
procedure Barracus52;
procedure Barracus53;
procedure Barracus54;
procedure Barracus55;
procedure BarracusCombat;
procedure BarracusEnd;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;
procedure items_held;

variable RightHand := 0;
variable LeftHand := 0;
variable PIDright := 0;
variable PIDleft := 0;
variable SubtypeWEP := 0;

variable hostile;
variable armed;
variable Only_Once := 1;
variable exit_line;



procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, PID_BAG) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BACKPACK) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BROWN_BAG) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if Only_Once then begin
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 20);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 69);
		Only_Once := 0;
	end
	if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
		call talk_p_proc;
	end
	else begin
		if ((script_action == 21) or (script_action == 3)) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
			script_overrides;
			if (local_var(4) == 1) then begin
				display_msg(message_str(SCRIPT_BARRACUS, 100));
			end
			else begin
				display_msg(message_str(SCRIPT_BARRACUS, 101));
			end
		end
		else begin
			if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
				call destroy_p_proc;
			end
			else begin
				if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
					hostile := 1;
				end
				else begin
					if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
						if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
							hostile := 0;
							attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
						end
					end
				end
			end
		end
	end
end

procedure items_held
begin
	SubtypeWEP := 0;
	if critter_inven_obj(dude_obj, 1) then begin
		RightHand := critter_inven_obj(dude_obj, 1);
		PIDright := obj_pid(RightHand);
		if obj_item_subtype(RightHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		RightHand := 0;
		PIDright := 0;
	end
	if critter_inven_obj(dude_obj, 2) then begin
		LeftHand := critter_inven_obj(dude_obj, 2);
		PIDleft := obj_pid(LeftHand);
		if obj_item_subtype(LeftHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		LeftHand := 0;
		PIDleft := 0;
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	call weapon_check;
	call get_reaction;
	start_gdialog(397, self_obj, 4, -1, -1);
	gsay_start;
	if (armed) then begin
		call Barracus04;
	end
	else begin
		if (local_var(4) == 1) then begin
			call Barracus03;
		end
		else begin
			if (get_critter_stat(dude_obj, 34) == 0) then begin
				call Barracus06;
			end
			else begin
				if (get_critter_stat(dude_obj, 3) > 6) then begin
					call Barracus07;
				end
				else begin
					call Barracus06;
				end
			end
		end
	end
	gsay_end;
	end_dialogue;
	set_local_var(4, 1);
end

procedure social_skills
begin
	call get_reaction;
	dialogue_system_enter;
end

procedure weapon_check
begin
	call items_held;
	if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
		armed := 1;
	end
	else begin
		armed := 0;
	end
end

procedure Barracus00
begin
	variable LVar0 := 0;
	if (get_critter_stat(dude_obj, 34) == 0) then begin
		gsay_reply(397, message_str(SCRIPT_BARRACUS, 106));
	end
	else begin
		gsay_reply(397, message_str(SCRIPT_BARRACUS, 107));
	end
	giq_option(0, 397, 104, BarracusCombat, 50);
end

procedure Barracus01
begin
	gsay_reply(397, 108);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus02
begin
	gsay_reply(397, 109);
	giq_option(7, 397, 110, Barracus08, 50);
	giq_option(7, 397, 111, Barracus09, 50);
	giq_option(4, 397, 112, Barracus10, 50);
	giq_option(4, 397, 113, Barracus11, 50);
	giq_option(4, 397, 114, Barracus12, 50);
	giq_option(4, 397, 115, BarracusCombat, 50);
	giq_option(-3, 397, 116, Barracus13, 50);
end

procedure Barracus03
begin
	gsay_reply(397, 117);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus04
begin
	variable LVar0 := 0;
	if (get_critter_stat(dude_obj, 34) == 0) then begin
		gsay_reply(397, message_str(SCRIPT_BARRACUS, 120));
	end
	else begin
		gsay_reply(397, message_str(SCRIPT_BARRACUS, 121));
	end
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus05
begin
	gsay_reply(397, 122);
	giq_option(7, 397, 123, Barracus05a, 50);
	giq_option(7, 397, 124, Barracus16, 50);
	giq_option(4, 397, 125, Barracus17, 50);
	giq_option(4, 397, 126, Barracus18, 50);
	giq_option(4, 397, 127, Barracus19, 50);
	giq_option(-3, 397, 116, Barracus20, 50);
end

procedure Barracus05a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call Barracus14;
	end
	else begin
		call Barracus15;
	end
end

procedure Barracus06
begin
	gsay_reply(397, 128);
	giq_option(7, 397, 123, Barracus05a, 50);
	giq_option(7, 397, 129, Barracus20, 50);
	giq_option(4, 397, 130, Barracus21, 50);
	giq_option(4, 397, 131, Barracus22, 50);
	giq_option(4, 397, 132, Barracus23, 50);
	giq_option(4, 397, 133, Barracus24, 50);
	giq_option(-3, 397, 116, Barracus13, 50);
end

procedure Barracus07
begin
	gsay_reply(397, 134);
	giq_option(7, 397, 123, Barracus05a, 50);
	giq_option(4, 397, 135, Barracus25, 50);
	giq_option(4, 397, 136, Barracus26, 50);
	giq_option(4, 397, 131, Barracus22, 50);
	giq_option(4, 397, 137, Barracus27, 50);
	giq_option(-3, 397, 116, Barracus13, 50);
end

procedure Barracus08
begin
	gsay_reply(397, 138);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus09
begin
	gsay_reply(397, 139);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus10
begin
	gsay_reply(397, 140);
	giq_option(4, 397, 141, Barracus28, 50);
	giq_option(4, 397, 142, Barracus29, 50);
	giq_option(4, 397, 143, Barracus30, 50);
	giq_option(4, 397, 144, BarracusCombat, 50);
end

procedure Barracus11
begin
	gsay_reply(397, 145);
	giq_option(7, 397, 146, Barracus10, 50);
	giq_option(4, 397, 147, Barracus31, 50);
	giq_option(4, 397, 148, Barracus30, 50);
	giq_option(4, 397, 149, BarracusCombat, 50);
end

procedure Barracus12
begin
	gsay_reply(397, 150);
	giq_option(7, 397, 146, Barracus10, 50);
	giq_option(4, 397, 151, Barracus31, 50);
	giq_option(4, 397, 148, Barracus30, 50);
	giq_option(4, 397, 149, BarracusCombat, 50);
	giq_option(4, 397, 152, BarracusCombat, 50);
end

procedure Barracus13
begin
	gsay_reply(397, 153);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus14
begin
	gsay_reply(397, 154);
	giq_option(7, 397, 155, Barracus14a, 50);
	giq_option(7, 397, 156, Barracus33, 50);
	giq_option(4, 397, 157, Barracus46, 50);
	giq_option(4, 397, 158, Barracus47, 50);
	giq_option(4, 397, 159, Barracus21, 50);
end

procedure Barracus14a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call Barracus32;
	end
	else begin
		call Barracus15;
	end
end

procedure Barracus15
begin
	gsay_reply(397, 160);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus16
begin
	gsay_reply(397, 161);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus17
begin
	gsay_reply(397, 162);
	giq_option(7, 397, 163, Barracus05a, 50);
	giq_option(7, 397, 164, Barracus34, 50);
	giq_option(4, 397, 165, Barracus30, 50);
	giq_option(4, 397, 166, Barracus35, 50);
	giq_option(4, 397, 167, Barracus10, 50);
end

procedure Barracus18
begin
	gsay_reply(397, 168);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus19
begin
	gsay_reply(397, 169);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus20
begin
	gsay_reply(397, 170);
	giq_option(7, 397, 123, Barracus05a, 50);
	giq_option(4, 397, 171, Barracus36, 50);
	giq_option(4, 397, 131, Barracus22, 50);
	giq_option(4, 397, 172, Barracus37, 50);
end

procedure Barracus21
begin
	gsay_reply(397, 173);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus22
begin
	gsay_reply(397, 174);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus23
begin
	gsay_reply(397, 175);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus24
begin
	gsay_reply(397, 176);
	giq_option(7, 397, 123, Barracus05a, 50);
	giq_option(4, 397, 171, Barracus36, 50);
	giq_option(4, 397, 131, Barracus22, 50);
	giq_option(4, 397, 172, Barracus37, 50);
end

procedure Barracus25
begin
	gsay_reply(397, 177);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus26
begin
	gsay_reply(397, 178);
	giq_option(7, 397, 179, Barracus26a, 50);
	giq_option(4, 397, 180, Barracus25, 50);
	giq_option(4, 397, 181, Barracus26, 50);
	giq_option(4, 397, 182, Barracus39, 50);
	giq_option(4, 397, 183, BarracusCombat, 50);
end

procedure Barracus26a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call Barracus38;
	end
	else begin
		call Barracus25;
	end
end

procedure Barracus27
begin
	gsay_reply(397, 184);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus28
begin
	gsay_reply(397, 185);
	giq_option(7, 397, 186, Barracus40, 50);
	giq_option(4, 397, 187, Barracus41, 50);
	giq_option(4, 397, 188, Barracus42, 50);
	giq_option(4, 397, 189, Barracus29, 50);
	giq_option(4, 397, 190, Barracus43, 50);
	giq_option(4, 397, 191, Barracus19, 50);
end

procedure Barracus29
begin
	gsay_reply(397, 192);
	giq_option(7, 397, 193, Barracus44, 50);
	giq_option(4, 397, 190, Barracus43, 50);
	giq_option(4, 397, 194, Barracus31, 50);
	giq_option(4, 397, 195, Barracus45, 50);
end

procedure Barracus30
begin
	gsay_reply(397, 196);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus31
begin
	gsay_reply(397, 197);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus32
begin
	gsay_reply(397, 198);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus33
begin
	gsay_reply(397, 199);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus34
begin
	gsay_reply(397, 200);
	giq_option(7, 397, 123, Barracus05a, 50);
	giq_option(4, 397, 171, Barracus36, 50);
	giq_option(4, 397, 131, Barracus22, 50);
	giq_option(4, 397, 172, Barracus37, 50);
end

procedure Barracus35
begin
	gsay_reply(397, 201);
	giq_option(7, 397, 202, Barracus35a, 50);
	giq_option(4, 397, 203, Barracus36, 50);
	giq_option(4, 397, 204, Barracus22, 50);
	giq_option(4, 397, 205, Barracus21, 50);
end

procedure Barracus35a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call Barracus48;
	end
	else begin
		call Barracus15;
	end
end

procedure Barracus36
begin
	gsay_reply(397, 206);
	giq_option(7, 397, 207, Barracus49, 50);
	giq_option(7, 397, 208, Barracus15, 50);
	giq_option(7, 397, 209, Barracus50, 50);
	giq_option(4, 397, 210, Barracus51, 50);
	giq_option(4, 397, 211, Barracus52, 50);
	giq_option(4, 397, 212, Barracus53, 50);
end

procedure Barracus37
begin
	gsay_reply(397, 213);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus38
begin
	gsay_reply(397, 214);
	giq_option(7, 397, 215, Barracus38a, 50);
	giq_option(4, 397, 216, Barracus39, 50);
	giq_option(4, 397, 217, Barracus25, 50);
	giq_option(4, 397, 218, Barracus19, 50);
end

procedure Barracus38a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call Barracus54;
	end
	else begin
		call Barracus55;
	end
end

procedure Barracus39
begin
	gsay_reply(397, 219);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus40
begin
	gsay_reply(397, 220);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus41
begin
	gsay_reply(397, 221);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus42
begin
	gsay_reply(397, 222);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus43
begin
	gsay_reply(397, 223);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus44
begin
	gsay_reply(397, 224);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus45
begin
	gsay_reply(397, 225);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus46
begin
	gsay_reply(397, 226);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus47
begin
	gsay_reply(397, 227);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus48
begin
	gsay_reply(397, 228);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus49
begin
	gsay_reply(397, 229);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus50
begin
	gsay_reply(397, 230);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus51
begin
	gsay_reply(397, 231);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus52
begin
	gsay_reply(397, 232);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus53
begin
	gsay_reply(397, 233);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus54
begin
	gsay_reply(397, 234);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure Barracus55
begin
	gsay_reply(397, 235);
	giq_option(0, 397, 104, BarracusEnd, 50);
end

procedure BarracusCombat
begin
	hostile := 1;
end

procedure BarracusEnd
begin
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end

procedure destroy_p_proc
begin

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
	end
end

