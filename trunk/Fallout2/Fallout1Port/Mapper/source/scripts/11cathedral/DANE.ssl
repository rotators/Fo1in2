#include "..\headers\define.h"

procedure start;
procedure talk_p_proc;//    script_action == 11
procedure social_skills;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure critter_p_proc;

procedure dane00;
procedure dane01;
procedure dane02;
procedure dane03;
procedure dane04;
procedure dane05;
procedure dane06;
procedure dane07;
procedure dane08;
procedure dane09;
procedure dane10;
procedure dane11;
procedure dane12;
procedure dane13;
procedure dane14;
procedure dane15;
procedure dane16;
procedure dane17;
procedure dane18;
procedure dane19;
procedure dane20;
procedure dane21;
procedure dane22;
procedure dane23;
procedure dane24;
procedure danemore;
procedure danereturn;

variable hostile;
variable Only_Once := 1;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;
variable exit_line;




procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if Only_Once then begin
		Only_Once := 0;
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 20);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 69);
	end
	if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
		call talk_p_proc;
	end
	else begin
		if (script_action == 21) then begin// look_at
			call look_at_p_proc;
		end
		else begin
			if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
				hostile := 1;
			end
			else begin
				if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
					call destroy_p_proc;
				end
				else begin
					if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
						call critter_p_proc;
					end
				end
			end
		end
	end
end

procedure look_at_p_proc
begin
	if not(local_var(27)) then begin
		script_overrides;
		set_local_var(27, 1);
		display_msg(message_str(SCRIPT_DANE, 100));
	end
end

procedure critter_p_proc
begin
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	call get_reaction;
	start_gdialog(-1, self_obj, 4, -1, -1);
	gsay_start;
	if (local_var(6) == 0) then begin
		call dane00;
	end
	else begin
		if (local_var(7) == 0) then begin
			call dane01;
		end
		else begin
			if (local_var(8) == 0) then begin
				call dane02;
			end
			else begin
				if (local_var(9) == 0) then begin
					call dane03;
				end
				else begin
					if (local_var(10) == 0) then begin
						call dane04;
					end
					else begin
						if (local_var(11) == 0) then begin
							call dane05;
						end
						else begin
							if (local_var(28) == 0) then begin
								call dane06;
							end
							else begin
								if (local_var(13) == 0) then begin
									call dane07;
								end
								else begin
									if (local_var(14) == 0) then begin
										call dane08;
									end
									else begin
										if (local_var(15) == 0) then begin
											call dane09;
										end
										else begin
											if (local_var(16) == 0) then begin
												call dane10;
											end
											else begin
												if (local_var(17) == 0) then begin
													call dane11;
												end
												else begin
													if (local_var(18) == 0) then begin
														call dane12;
													end
													else begin
														if (local_var(19) == 0) then begin
															call dane13;
														end
														else begin
															if (local_var(20) == 0) then begin
																call dane14;
															end
															else begin
																if (local_var(21) == 0) then begin
																	call dane15;
																end
																else begin
																	if (local_var(22) == 0) then begin
																		call dane16;
																	end
																	else begin
																		if (local_var(23) == 0) then begin
																			call dane17;
																		end
																		else begin
																			if (local_var(24) == 0) then begin
																				call dane18;
																			end
																			else begin
																				if (local_var(25) == 0) then begin
																					call dane19;
																				end
																				else begin
																					if (local_var(26) == 0) then begin
																						call dane20;
																					end
																					else begin
																						if (local_var(5) == 1) then begin
																							call dane24;
																						end
																					end
																				end
																			end
																		end
																	end
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	gsay_end;
	end_dialogue;
end

procedure social_skills
begin
	script_overrides;
	call get_reaction;
	call talk_p_proc;
end

procedure dane00
begin
	set_local_var(6, 1);
	gsay_message(499, 101, 50);
	gsay_message(499, 102, 50);
	gsay_message(499, 103, 50);
end

procedure dane01
begin
	set_local_var(7, 1);
	gsay_message(499, 104, 50);
	gsay_message(499, 105, 50);
	gsay_message(499, 106, 50);
end

procedure dane02
begin
	set_local_var(8, 1);
	gsay_message(499, 107, 50);
	gsay_message(499, 108, 50);
	gsay_message(499, 109, 50);
	gsay_message(499, 110, 50);
end

procedure dane03
begin
	set_local_var(9, 1);
	gsay_message(499, 111, 50);
	gsay_message(499, 112, 50);
	gsay_message(499, 113, 50);
end

procedure dane04
begin
	set_local_var(10, 1);
	gsay_message(499, 114, 50);
	gsay_message(499, 115, 50);
	gsay_message(499, 116, 50);
	gsay_message(499, 117, 50);
end

procedure dane05
begin
	set_local_var(11, 1);
	gsay_message(499, 118, 50);
	gsay_message(499, 119, 50);
	gsay_message(499, 120, 50);
end

procedure dane06
begin
	set_local_var(28, 1);
	gsay_message(499, 121, 50);
	gsay_message(499, 122, 50);
	gsay_message(499, 123, 50);
	gsay_message(499, 124, 50);
end

procedure dane07
begin
	set_local_var(13, 1);
	gsay_message(499, 125, 50);
	gsay_message(499, 126, 50);
	gsay_message(499, 127, 50);
end

procedure dane08
begin
	set_local_var(14, 1);
	gsay_message(499, 128, 50);
	gsay_message(499, 129, 50);
	gsay_message(499, 130, 50);
	gsay_message(499, 131, 50);
end

procedure dane09
begin
	set_local_var(15, 1);
	gsay_message(499, 132, 50);
	gsay_message(499, 133, 50);
	gsay_message(499, 134, 50);
	gsay_message(499, 135, 50);
end

procedure dane10
begin
	set_local_var(16, 1);
	gsay_message(499, 136, 50);
	gsay_message(499, 137, 50);
	gsay_message(499, 138, 50);
end

procedure dane11
begin
	set_local_var(17, 1);
	gsay_message(499, 139, 50);
	gsay_message(499, 140, 50);
	gsay_message(499, 141, 50);
	gsay_message(499, 142, 50);
end

procedure dane12
begin
	set_local_var(18, 1);
	gsay_message(499, 143, 50);
	gsay_message(499, 144, 50);
	gsay_message(499, 145, 50);
	gsay_message(499, 146, 50);
end

procedure dane13
begin
	set_local_var(19, 1);
	gsay_message(499, 147, 50);
	gsay_message(499, 148, 50);
	gsay_message(499, 149, 50);
	gsay_message(499, 150, 50);
	gsay_message(499, 151, 50);
end

procedure dane14
begin
	set_local_var(20, 1);
	gsay_message(499, 152, 50);
	gsay_message(499, 153, 50);
	gsay_message(499, 154, 50);
	gsay_message(499, 155, 50);
end

procedure dane15
begin
	set_local_var(21, 1);
	gsay_message(499, 156, 50);
	gsay_message(499, 157, 50);
	gsay_message(499, 158, 50);
end

procedure dane16
begin
	gsay_message(499, 159, 50);
	gsay_message(499, 160, 50);
	gsay_message(499, 161, 50);
	gsay_reply(499, 162);
	giq_option(7, 499, 163, dane17, 50);
	giq_option(7, 499, 164, dane18, 50);
	giq_option(4, 499, 165, dane19, 50);
	giq_option(4, 499, 166, dane20, 50);
	giq_option(4, 499, 167, dane21, 50);
	giq_option(4, 499, 168, dane22, 50);
	giq_option(-3, 499, 169, dane23, 50);
end

procedure dane17
begin
	gsay_message(499, 170, 50);
	gsay_message(499, 171, 50);
	gsay_message(499, 172, 50);
	if (local_var(4) == 0) then begin
		set_local_var(4, 1);
		gsay_reply(499, 173);
		giq_option(7, 499, 174, dane18, 50);
		giq_option(4, 499, 175, dane19, 50);
		giq_option(4, 499, 176, dane20, 50);
		giq_option(4, 499, 177, dane21, 50);
		giq_option(4, 499, 178, dane22, 50);
	end
	else begin
		gsay_message(499, 179, 50);
	end
end

procedure dane18
begin
	gsay_message(499, 180, 50);
	gsay_message(499, 181, 50);
	gsay_message(499, 182, 50);
	gsay_message(499, 183, 50);
	if (local_var(4) == 0) then begin
		set_local_var(4, 1);
		gsay_reply(499, 184);
		giq_option(7, 499, 185, dane18, 50);
		giq_option(4, 499, 186, dane19, 50);
		giq_option(4, 499, 187, dane20, 50);
		giq_option(4, 499, 188, dane21, 50);
		giq_option(4, 499, 189, dane22, 50);
	end
	else begin
		gsay_message(499, 190, 50);
	end
end

procedure dane19
begin
	if (local_var(4) == 0) then begin
		set_local_var(4, 1);
		gsay_reply(499, 191);
		giq_option(7, 499, 192, dane18, 50);
		giq_option(4, 499, 193, dane19, 50);
		giq_option(4, 499, 194, dane20, 50);
		giq_option(4, 499, 195, dane21, 50);
		giq_option(4, 499, 196, dane22, 50);
	end
	else begin
		gsay_message(499, 197, 50);
	end
end

procedure dane20
begin
	gsay_message(499, 198, 50);
	if (local_var(4) == 0) then begin
		set_local_var(4, 1);
		gsay_reply(499, 199);
		giq_option(7, 499, 200, dane19, 50);
		giq_option(7, 499, 201, dane18, 50);
		giq_option(4, 499, 202, dane19, 50);
		giq_option(4, 499, 203, dane21, 50);
		giq_option(4, 499, 204, dane22, 50);
		giq_option(-3, 499, 205, dane23, 50);
	end
	else begin
		gsay_message(499, 206, 50);
	end
end

procedure dane21
begin
	gsay_message(499, 207, 50);
	if (local_var(4) == 0) then begin
		set_local_var(4, 1);
		gsay_reply(499, 208);
		giq_option(7, 499, 209, dane19, 50);
		giq_option(7, 499, 210, dane18, 50);
		giq_option(4, 499, 211, dane19, 50);
		giq_option(4, 499, 212, dane20, 50);
		giq_option(4, 499, 213, dane22, 50);
		giq_option(-3, 499, 214, dane23, 50);
	end
	else begin
		gsay_message(499, 215, 50);
	end
end

procedure dane22
begin
	set_local_var(5, 1);
	gsay_message(499, 216, 50);
	gsay_message(499, 217, 50);
	gsay_message(499, 218, 50);
	gsay_message(499, 219, 50);
end

procedure dane23
begin
	set_local_var(5, 1);
	gsay_message(499, 220, 50);
end

procedure dane24
begin
	gsay_message(499, 221, 50);
end

procedure danemore
begin
	gsay_option(499, 222, danereturn, 50);
end

procedure danereturn
begin
end

procedure destroy_p_proc
begin
//
//BEGIN WEAPON DROP MOD CODE
//--original code and mod by:--
// Josan12 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=18843) and 
// MIB88 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=4464)
//
	if global_var(WEAPONDROP_MOD_STATUS) and not(global_var(FIXT_BUGFIXES_ONLY)) and (critter_inven_obj(self_obj, 1) or critter_inven_obj(self_obj, 2)) then begin// only run if Weapon Drop is enabled, AND Fixes Only is disabled, AND actually holding something
		variable item1 := 0;  variable item2 := 0;  variable armor := 0;  variable item1PID := 0;  variable item2PID := 0;  variable armorPID := 0;  variable drophex := 0;  if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop BEGINS");  end
		if (critter_inven_obj(self_obj, 1) > 0) then begin  item1 := critter_inven_obj(self_obj, 1);  end    if (critter_inven_obj(self_obj, 2) > 0) then begin  item2 := critter_inven_obj(self_obj, 2);  end    if (critter_inven_obj(self_obj, 0) > 0) then begin  armor := critter_inven_obj(self_obj, 0);  end    if item1 then begin  item1PID := obj_pid(item1);  end    if item2 then begin  item2PID := obj_pid(item2);  end    if armor then begin  armorPID := obj_pid(armor);  end    drophex := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(global_var(WEAPONDROP_MOD_MINIMUM), global_var(WEAPONDROP_MOD_MAXIMUM)));
		if (item1PID != 19) and (item1PID != 21) and (item1PID != 79) and (item1PID != 205) and (item1PID != 234) and (item1PID != 235) and (item1PID != 244) and (item2PID != 19) and (item2PID != 21) and (item2PID != 79) and (item2PID != 205) and (item2PID != 234) and (item2PID != 235) and (item2PID != 244) then begin//Don't drop if:  Rock (19), Brass Knuckles (21), Flare (79), Lit Flare (205), Spiked Knuckles (234), Power Fist (235), or Gold Nugget (244)
			if (item1 > 0) then begin if (obj_item_subtype(item1) == 3) then begin
			rm_obj_from_inven(self_obj, item1);  move_to(item1, drophex, elevation(self_obj));  end  end
			if (item2 > 0) then begin if (obj_item_subtype(item2) == 3) then begin
			rm_obj_from_inven(self_obj, item2);  move_to(item2, drophex, elevation(self_obj));  end  end    if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop ENDS");  end
		end
	end
//END WEAPON DROP MOD CODE
//
	if source_obj == dude_obj then begin
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
	end
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end

