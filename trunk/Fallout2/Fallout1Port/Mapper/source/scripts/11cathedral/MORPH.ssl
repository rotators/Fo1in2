/*

	Cathedral - Morpheus, leading robed guy

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\mapnecro.h"

#define NAME                    SCRIPT_MORPH
#define TOWN_REP_VAR            (GVAR_TOWN_REP_CATHEDRAL)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure damage_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;

procedure morphend;
procedure morphcbt;
procedure morph02;
procedure morph02a;
procedure morph02_1;
procedure morph02_2;
procedure morph02_3;
procedure morph03;
procedure morph03_1;
procedure morph03_2;
procedure morph04;
procedure morph04a;
procedure morph05;
procedure morph06;
procedure morph07;
procedure morph07_1;
procedure morph08;
procedure morph09;
procedure morph10;
procedure morph10_1;
procedure morph11;
procedure morph12;
procedure morph13;
procedure morph14;
procedure morph15;
procedure morph16;
procedure morph17;
procedure morph18;
procedure morph18_1;
procedure morph18_2;
procedure morph19;
procedure morph20;
procedure morph21;
procedure morph23;
procedure morph24;
procedure morph26;
procedure morph27;
procedure morph27_1;
procedure morph28;
procedure morph29;
procedure morph30;
procedure morph31;
procedure morph32;
procedure morph33;
procedure morph33_1;
procedure morph34;
procedure morph35;
procedure morph36;
procedure morph37;
procedure morph38;
procedure morph39;
procedure morph39_1;
procedure morph40;
procedure morph41;
procedure morph42;
procedure morph42a;
procedure morph42a_1;
procedure morph42b;
procedure morph42c;
procedure morph45;
procedure morph46;
procedure morph47;
procedure morph48;
procedure morph49;
procedure morph50;
procedure morph51;
procedure morph52;
procedure morph53;
procedure morph54;
procedure morph55;
procedure morph56;
procedure morph57;
procedure morph58;
procedure morph59;
procedure morph60;
procedure morph61;
procedure morph62;
procedure morph63;
procedure morph64;
procedure morph65;
procedure morphx;
procedure morphx2;
procedure morphx4;
procedure morph66;
procedure morph05a;
procedure morph08a;
procedure morph32a;
procedure morph39a;
procedure morph05b;

import variable Master_Ptr;

variable MALE;
variable ONTHEJOB;
variable DESTROYED;
variable LIED;
variable ONCEBEFORE;
variable TRESPASS;
variable Signal_wait;
variable deliver_player;
variable Only_Once := 1;

#define float(x,y)    						float_msg(self_obj, message_str(NAME, x), y)

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		if (CUR_MAP_CHILDRN2) then begin //  CATHEDRAL - LEVEL 2 AND HIGHER
			set_self_team(TEAM_CATHEDRAL);
		end
		else begin
			set_self_team(TEAM_MASTER_LAIR);
		end
		set_self_ai(AI_COC_MORPHEUS);
	end
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(mstr(100));
end

procedure description_p_proc begin
	script_overrides;
	display_msg(mstr(100));
end

procedure timed_event_p_proc begin
	if (fixed_param == 1) then begin
		if (self_can_see_dude) then begin
			dialogue_system_enter;
		end
		else begin
			Signal_wait := 0;
		end
	end
	else if ((fixed_param == 2) and not(combat_is_initialized)) then begin
		if not(is_loading_game) then begin
			set_self_invisible; //  MAKE INVISIBLE
		end
	end
end

procedure pickup_p_proc begin
	set_local_var(5, 2);
end

procedure critter_p_proc begin
	if (global_var( GVAR_MORPHEUS_DELIVERS_PLAYER ) == 200) then begin
		destroy_object(self_obj);
	end

	if (global_var( GVAR_MORPHEUS_DELIVERS_PLAYER ) == 3) then begin
		if not(is_loading_game) then begin    set_self_invisible;    end//  MAKE INVISIBLE
	end

	if (global_var( GVAR_MORPHEUS_DELIVERS_PLAYER ) == 1) then begin
		set_global_var( GVAR_MORPHEUS_DELIVERS_PLAYER, 2 );
		add_timer_event(Master_Ptr, game_ticks(5), 1);
		add_timer_event(self_obj, game_ticks(5), 2);
		dialogue_system_enter;
	end

	if (local_var(5) == 2) then begin
		set_local_var(5, 1);
		attack(dude_obj);
	end

	if (self_tile == 23457) then begin
		if not(is_loading_game) then begin    set_self_invisible;    end//  MAKE INVISIBLE
	end
end

procedure talk_p_proc begin
	dude_look_at_self;
	get_reaction
	MALE := dude_is_male;

	if (local_var(5) != 0) then begin
		float_msg(self_obj, message_str(SCRIPT_GENCHAT, 172), 2);
		call morphcbt;
	end
	else begin
		if (global_var( GVAR_MORPHEUS_DELIVERS_PLAYER ) == 2) then begin
			call morph66;
			self_walk_to_tile( 23457 );
		end
		else begin
			if (Signal_wait) then begin
				Signal_wait := 0;
				call morph04a;
			end
			else begin

				if (CUR_MAP_CHILDRN1) then begin //  CATHEDRAL - OUTSIDE AND GROUND FLOOR
					start_gdialog(53, self_obj, 4, 2, 8);
					gsay_start;
					call morph28;
					gsay_end;
					end_dialogue;
				end
				else begin
					if (global_var( GVAR_MORPHEUS_DELIVERS_PLAYER ) == 3) then begin
						float_msg(self_obj, message_str(SCRIPT_GENCHAT, 171), 2);
					end
					else begin
						start_gdialog(53, self_obj, 4, 2, 8);
						gsay_start;
						call morph02;
						gsay_end;
						end_dialogue;
					end
				end

			end
		end
	end
end

procedure morphend begin
end

procedure morphcbt begin
	set_local_var(5, 2);
end

procedure morph02 begin
	gsay_reply(53, 101);
	NOption( 102, morph02_1, 4 );
	NOption( 103, morph02_3, 5 );
	NOption( message_str(SCRIPT_MORPH, 104) + dude_name + message_str(SCRIPT_MORPH, 105), morph27, 4 );
	BOption( 106, morph06, 4 );
	NOption( 107, morph02a, -3 );
end

procedure morph02a begin
	gsay_message(53, 108, 51);
	call morphcbt;
end

procedure morph02_1 begin
	if dude_wearing_coc_robe then begin
		call morph02_2;
	end
	else begin
		call morph06;
	end
end

procedure morph02_2 begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call morph03;
	end
	else begin
		call morph06;
	end
end

procedure morph02_3 begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call morph07;
	end
	else begin
		call morph26;
	end
end

procedure morph03
begin
	gsay_reply(53, 109);
	NOption( 110, morph03_1, 4 );
	NOption( 111, morph03_2, 5 );
	NOption( 112, morph23, 4 );
	BOption( 113, morph24, 4 );
	NOption( 114, morph06, 4 );
end

procedure morph03_1 begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call morph04;
	end
	else begin
		call morph05;
	end
end

procedure morph03_2 begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
		call morph04;
	end
	else begin
		call morph05;
	end
end

procedure morph04
begin
	gsay_message(53, 115, 50);
	call morphx;
end

procedure morph04a begin
	float(116,FLOAT_MSG_LIGHT_RED);
	call morphcbt;
end

procedure morph05
begin
	gsay_reply(53, 117);
	BOption( 118, morph05a, 4 );
	NOption( 119, morph05b, 4 );
	BOption( 120, morph06, 4 );
end

procedure morph06
begin
	gsay_message(53, 121, 51);
	call morphcbt;
end

procedure morph07
begin
	gsay_reply(53, 122);
	NOption( 123, morph08, 4 );
	NOption( 124, morph16, 4 );
	NOption( 125, morph07_1, 6 );
end

procedure morph07_1 begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call morph20;
	end
	else begin
		call morph21;
	end
end

procedure morph08
begin
	gsay_reply(53, 126);
	NOption( 127, morph08a, 5 );
	NOption( 128, morph12, 4 );
	NOption( 129, morph14, 5 );
end

procedure morph09
begin
	gsay_reply(53, 130);
	NOption( 131, morph10, 5 );
	NOption( 132, morph10, 5 );
	BOption( 133, morph06, 4 );
	BOption( 134, morph11, 4 );
end

procedure morph10
begin
	gsay_reply(53, 135);
	BOption( 136, morph11, 4 );
	NOption( 137, morph12, 4 );
	NOption( 138, morph10_1, 4 );
end

procedure morph10_1 begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		set_local_var(1, 2);
		call morph13;
	end
	else begin
		call morph11;
	end
end

procedure morph11
begin
	gsay_message(53, 139, 51);
	call morphcbt;
end

procedure morph12 begin
	gsay_reply(53, 140);
	NOption( 141, morphx2, 4 );
	BOption( 142, morphcbt, 4 );
end

procedure morph13
begin
	gsay_message(53, 143, 50);
	call morphx2;
end

procedure morph14
begin
	gsay_reply(53, 144);
	NOption( 145, morph12, 4 );
	BOption( 146, morph11, 4 );
	BOption( 147, morph15, 4 );
end

procedure morph15
begin
	gsay_message(53, 148, 51);
	call morphcbt;
end

procedure morph16
begin
	gsay_reply(53, 149);
	NOption( 150, morph17, 4 );
	NOption( 151, morph17, 4 );
end

procedure morph17
begin
	gsay_reply(53, 152);
	NOption( 153, morph18, 4 );
	NOption( 154, morph18, 4 );
end

procedure morph18
begin
	gsay_reply(53, 155);
	NOption( 156, morph18_1, 4 );
	NOption( 157, morph18_2, 4 );
end

procedure morph18_1 begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -5))) then begin
		call morph19;
	end
	else begin
		call morph15;
	end
end

procedure morph18_2 begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -15))) then begin
		call morph12;
	end
	else begin
		call morph15;
	end
end

procedure morph19
begin
	gsay_reply(53, 158);
	BOption( 159, morphcbt, 4 );
	NOption( 160, morphx2, 4 );
end

procedure morph20
begin
	gsay_message(53, 161, 51);
	call morphcbt;
end

procedure morph21
begin
	gsay_reply(53, 162);
	NOption( 163, morph08, 4 );
	NOption( 164, morph16, 4 );
end

procedure morph23
begin
	gsay_reply(53, 165);
	NOption( 166, morph12, 4 );
	NOption( 167, morph16, 4 );
	BOption( 168, morph11, 4 );
	BOption( 169, morph15, 4 );
end

procedure morph24
begin
	gsay_reply(53, 170);
	BOption( 171, morphcbt, 4 );
	BOption( 172, morphcbt, 7 );
	BOption( 173, morphcbt, 4 );
end

procedure morph26
begin
	gsay_reply(53, 174);
	NOption( 175, morph12, 4 );
	NOption( 176, morph16, 5 );
	BOption( 177, morph11, 4 );
	BOption( 178, morph15, 4 );
end

procedure morph27
begin
	gsay_reply(53, 179);
	NOption( 180, morph02_1, 4 );
	NOption( 181, morph27_1, 4 );
end

procedure morph27_1 begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
		call morph07;
	end
	else begin
		call morph06;
	end
end

procedure morph28
begin
	gsay_reply(53, 182);
	NOption( 183, morph29, 5 );
	NOption( 184, morphend, 4 );
	NOption( 185, morph42c, -3 );
end

procedure morph29
begin
	gsay_reply(53, 186);
	NOption( 187, morph30, 4 );
	NOption( 188, morphend, 4 );
end

procedure morph30
begin
	gsay_reply(0, 0);
	NOption( 189, morph31, 4 );
	NOption( 190, morphend, 4 );
	NOption( 191, morph42a, 4 );
end

procedure morph31
begin
	gsay_reply(53, 192);
	NOption( 193, morph32, 4 );
	NOption( 194, morph39, 4 );
end

procedure morph32
begin
	gsay_reply(53, 195);
	BOption( 196, morph32a, 4 );
	NOption( 197, morph38, 4 );
end

procedure morph33 begin
	gsay_reply(53, 198);
	NOption( 199, morph34, 4 );
	NOption( 200, morph33_1, 4 );
end

procedure morph33_1 begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -5))) then begin
		call morph35;
	end
	else begin
		call morph37;
	end
end

procedure morph34
begin
	gsay_message(53, 201, 50);
	call morphx4;
end

procedure morph35
begin
	gsay_reply(53, 202);
	NOption( 203, morph36, 4 );
	NOption( 204, morphend, 4 );
end

procedure morph36
begin
	gsay_message(53, 205, 50);
	call morph30;
end

procedure morph37
begin
	gsay_message(53, 206, 49);
	call morphx4;
end

procedure morph38
begin
	gsay_reply(53, 207);
	NOption( 208, morph36, 4 );
	NOption( 209, morphend, 4 );
end

procedure morph39
begin
	gsay_reply(53, 210);
	BOption( 211, morph39a, 4 );
	NOption( 212, morph39_1, 4 );
end

procedure morph39_1
begin
end

procedure morph40
begin
	gsay_message(53, 213, 50);
	call morph30;
end

procedure morph41
begin
	gsay_reply(53, 214);
	NOption( 215, morph30, 4 );
	NOption( 216, morphend, 4 );
end

procedure morph42
begin
	gsay_reply(53, 217);
	NOption( 218, morph36, 4 );
	NOption( 219, morphend, 4 );
end

procedure morph42a
begin
	gsay_reply(53, 220);
	NOption( 221, morph42a_1, 4 );
end

procedure morph42a_1 begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call morph42b;
	end
	else begin
		call morph42c;
	end
end

procedure morph42b
begin
	gsay_message(53, 222, 50);
	call morphx2;
end

procedure morph42c
begin
	gsay_message(53, 223, 50);
	call morphx4;
end

procedure morph45
begin
	gsay_message(53, 224, 50);
end

procedure morph46
begin
	gsay_message(53, 225, 50);
end

procedure morph47
begin
	gsay_message(53, 226, 50);
end

procedure morph48
begin
	gsay_message(53, 227, 50);
end

procedure morph49
begin
	gsay_message(53, 228, 50);
end

procedure morph50
begin
	gsay_message(53, 229, 50);
end

procedure morph51
begin
	gsay_message(53, 230, 50);
end

procedure morph52
begin
	gsay_message(53, 231, 50);
end

procedure morph53
begin
	gsay_message(53, 232, 50);
end

procedure morph54
begin
	gsay_message(53, 233, 50);
end

procedure morph55
begin
	gsay_message(53, 234, 50);
end

procedure morph56
begin
	gsay_message(53, 235, 50);
end

procedure morph57
begin
	gsay_message(53, 236, 50);
end

procedure morph58
begin
	gsay_message(53, 237, 50);
end

procedure morph59 begin
	gsay_message(53, 238, 50);
end

procedure morph60 begin
	gsay_message(53, 239, 50);
end

procedure morph61 begin
	gsay_message(53, 240, 50);
end

procedure morph62 begin
	gsay_message(53, 241, 50);
end

procedure morph63 begin
	gsay_message(53, 242, 50);
end

procedure morph64 begin
	gsay_message(53, 243, 50);
end

procedure morph65 begin
	gsay_message(53, 244, 50);
end

procedure morphx begin
	Signal_wait := 1;
	add_timer_event(self_obj, game_ticks(15), 1);
end

procedure morphx2 begin
	deliver_player := 1;
	set_global_var( GVAR_MORPHEUS_DELIVERS_PLAYER, 100 );
	set_global_var( GVAR_PREVENT_REVULSION_DAMAGE, 1 );
	load_map(MAP_MSTRLR34, 12);
end

procedure morphx4 begin
end

procedure morph66 begin
	float(245,FLOAT_MSG_RED);
end

procedure morph05a begin
	DownReact
	call morph06;
end

procedure morph08a begin
	DownReact
	call morph09;
end

procedure morph32a begin
	DownReact
	call morph33;
end

procedure morph39a begin
	DownReact
	call morph33;
end

procedure morph05b begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call morph07;
	end
	else begin
		call morph26;
	end
end



procedure damage_p_proc begin
set_local_var(5, 1);
end

procedure destroy_p_proc begin
	display_msg(message_str(SCRIPT_MORPH, 500));
	give_exp_points(EXP_KILLED_MORPHEUS);
	set_global_var( GVAR_MORPHEUS_DELIVERS_PLAYER, 200 );
	rm_timer_event(self_obj);

	inc_inv_evil_crit
	rm_timer_event(self_obj);
end
