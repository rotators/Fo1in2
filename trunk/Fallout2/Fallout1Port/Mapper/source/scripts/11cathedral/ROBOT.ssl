#include "..\headers\define.h"

procedure start;
procedure talk_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;

procedure robot00;
procedure robot01;
procedure robot02;
procedure robotend;
procedure robotcbt;

variable tmp_hostile;
variable Only_Once := 1;
variable DISGUISED;
variable again;
variable rndx;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_MASTER_LAIR);
		set_self_ai(AI_ROBOTS);
	end
end

procedure pickup_p_proc begin
	tmp_hostile := 1;
end

procedure talk_p_proc begin
	set_local_var(1, local_var(1) + 1);
	dude_look_at_critter;
	coc_disguise_check
	if (DISGUISED) then begin
		if (local_var(1) < 2) then begin
			call robot00;
		end
		else begin
			call robot02;
		end
	end
	else begin
		call robot01;
	end
end

procedure critter_p_proc begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			DISGUISED := 0;
			coc_disguise_check
			if ((DISGUISED == 0) and (again == 0)) then begin
				if (tile_distance_objs(self_obj, dude_obj) < 6) then begin
					again := 1;
					dialogue_system_enter;
				end
			end
		end
	end
end

procedure robot00 begin
	float_msg(self_obj, message_str(SCRIPT_ROBOT, 100), 7);
end

procedure robot01 begin
	rndx := random(1, 4);
	if (rndx == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_ROBOT, 101), 2);
	end
	else if (rndx == 2) then begin
		float_msg(self_obj, message_str(SCRIPT_ROBOT, 102), 2);
	end
	else if (rndx == 3) then begin
		float_msg(self_obj, message_str(SCRIPT_ROBOT, 103), 2);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_ROBOT, 104), 2);
	end
	call robotcbt;
end

procedure robot02 begin
	rndx := random(1, 2);
	if rndx == 1 then begin
		float_msg(self_obj, message_str(SCRIPT_ROBOT, 103), 2);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_ROBOT, 105), 2);
	end
	call robotcbt;
end

procedure robotend begin
end

procedure robotcbt begin
	tmp_hostile := 1;
end

