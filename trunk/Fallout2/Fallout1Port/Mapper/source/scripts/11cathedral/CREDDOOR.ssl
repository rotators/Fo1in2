#include "..\headers\define.h"

procedure start;
procedure use_p_proc;//    script_action == 6
procedure use_skill_on_p_proc;//    script_action == 8
procedure description_p_proc;//    script_action == 3
procedure use_obj_on_p_proc;//    script_action == 7
procedure map_update_p_proc;//    script_action == 23
procedure damage_p_proc;//    script_action == 14

import variable Red_Door_Ptr;
import variable Laura_Ptr;


procedure start begin
end

procedure use_p_proc
begin
	if (source_obj == Laura_Ptr) then begin
		set_local_var(0, 1);
	end
	if (local_var(0) == 0) then begin
		obj_lock(self_obj);
	end
	else begin
		obj_unlock(self_obj);
	end
	if ((local_var(0) == 0) and (source_obj == dude_obj)) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_DOOR, 104));//{104}{}{The door is locked.}
	end
end

procedure use_skill_on_p_proc
begin
	variable LVar0 := 0;
	if (local_var(0) == 0) then begin
		if (action_being_used == SKILL_LOCKPICK) then begin//-- LOCKPICK
			script_overrides;
			LVar0 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, -60);
			if (is_success(LVar0)) then begin
				set_local_var(0, 1);
				display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
				display_msg(message_str(SCRIPT_GENCHAT, 103) + "85" + message_str(SCRIPT_GENCHAT, 104));
				give_exp_points(85);
			end
			else begin
				if (is_critical(LVar0)) then begin
					jam_lock(self_obj);
					display_msg(message_str(SCRIPT_DOOR, 110));//{110}{}{The lock is beyond your ability to pick.}
				end
				else begin
					display_msg(message_str(SCRIPT_DOOR, 103));//{103}{}{You were not able to pick the lock.}
				end
			end
		end
	end
	else begin
		display_msg(message_str(SCRIPT_DOOR, 109));//{109}{}{The door is already unlocked.}
	end
end

procedure description_p_proc
begin
	if (local_var(0) == 0) then begin
		display_msg(message_str(SCRIPT_DOOR, 104));//{104}{}{The door is locked.}
	end
end

procedure use_obj_on_p_proc
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	LVar0 := obj_being_used_with;
	LVar1 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, -40);
	if (obj_pid(LVar0) == PID_LOCKPICKS) then begin
		script_overrides;
		if (is_success(LVar1)) then begin
			set_local_var(0, 1);
			display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
			display_msg(message_str(SCRIPT_GENCHAT, 103) + "85" + message_str(SCRIPT_GENCHAT, 104));
			give_exp_points(85);
		end
		else begin
			if (is_critical(LVar1)) then begin
				rm_obj_from_inven(dude_obj, LVar0);
				destroy_object(LVar0);
				jam_lock(self_obj);
				display_msg(message_str(SCRIPT_DOOR, 110));//{110}{}{The lock is beyond your ability to pick.}
				display_msg(message_str(SCRIPT_DOOR, 101));//{101}{}{You broke your lockpicks!}
			end
			else begin
				display_msg(message_str(SCRIPT_DOOR, 103));//{103}{}{You were not able to pick the lock.}
			end
		end
	end
	else begin
		if ((obj_pid(LVar0) == PID_BLACK_COC_BADGE) or (obj_pid(LVar0) == PID_RED_COC_BADGE)) then begin
			script_overrides;
			set_local_var(0, 1);
			display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
		end
	end
end

procedure map_update_p_proc
begin
	Red_Door_Ptr := self_obj;
	if (local_var(0) == 0) then begin
		obj_lock(self_obj);
	end
	else begin
		obj_unlock(self_obj);
	end
end

procedure damage_p_proc begin
	if (weapon_dmg_type(target_obj) == DMG_explosion) then begin
		if not(is_loading_game) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
		set_local_var(1, 1);
	end
	else begin
		display_msg(message_str(SCRIPT_DOOR,193));
	end
end
