/*

	V13 - ?

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_VALTCUPL
#define TOWN_REP_VAR            (GVAR_TOWN_REP_V13)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;

procedure ValtCupl00;
procedure ValtCupl00a;
procedure ValtCupl01;
procedure ValtCupl02;
procedure ValtCupl03;
procedure ValtCupl04;
procedure ValtCupl05;
procedure ValtCupl06;
procedure ValtCupl07;
procedure ValtCuplEnd;

variable rndx;
variable initial :=  0;
variable tmp_hostile;

procedure start begin
	if not(initial) then begin
		set_self_team(TEAM_VAULT13 );
		initial :=  1;
	end
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure destroy_p_proc begin
	inc_good_critter
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_VALTCUPL, 100));
end

procedure pickup_p_proc
begin
	tmp_hostile := 1;
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	start_gdialog(-1, 209, self_obj, -1, -1);
	gsay_start;
	if (local_var(4)) then begin
		if (local_var(1) < 2) then begin
			call ValtCupl07;
		end
		else begin
			call ValtCupl06;
		end
	end
	else begin
		call ValtCupl00;
	end
	gsay_end;
	end_dialogue;
end

procedure ValtCupl00
begin
	set_local_var(4, 1);
	gsay_reply(209, 101);
	giq_option( 4, SCRIPT_VALTCUPL, 102, ValtCupl02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VALTCUPL, 103, ValtCupl03, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_VALTCUPL, 104, ValtCupl00a, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_VALTCUPL, 105, ValtCupl01, NEUTRAL_REACTION );
end

procedure ValtCupl00a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call ValtCupl04;
	end
	else begin
		call ValtCupl01;
	end
end

procedure ValtCupl01
begin
	BigDownReact
	gsay_message(209, 106, 51);
end

procedure ValtCupl02
begin
	gsay_reply(209, 107);
	giq_option( 4, SCRIPT_VALTCUPL, 108, ValtCupl01, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VALTCUPL, 109, ValtCupl03, NEUTRAL_REACTION );
end

procedure ValtCupl03
begin
	BigUpReact
	gsay_message(209, 110, 49);
end

procedure ValtCupl04
begin
	gsay_reply(209, 111);
	giq_option( 5, SCRIPT_VALTCUPL, 112, ValtCupl03, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_VALTCUPL, 113, ValtCupl05, NEUTRAL_REACTION );
end

procedure ValtCupl05
begin
	gsay_message(209, 114, 50);
end

procedure ValtCupl06
begin
	gsay_message(209, 115, 50);
end

procedure ValtCupl07
begin
	gsay_message(209, 116, 50);
end

procedure ValtCuplEnd
begin
end




