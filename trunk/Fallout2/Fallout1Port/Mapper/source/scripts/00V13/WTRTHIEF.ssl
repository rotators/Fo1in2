#include "..\headers\define.h"

procedure start;
procedure combat_p_proc;//    script_action == 13
procedure critter_p_proc;//    script_action == 12
procedure description_p_proc;//    script_action == 3
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure map_enter_p_proc;//    script_action == 15
procedure map_update_p_proc;//    script_action == 23
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure timed_event_p_proc;//    script_action == 22

procedure WtrThief01;
procedure WtrThief02;
procedure WtrThief03;
procedure WtrThief04;
procedure WtrThief05;
procedure WtrThief06;
procedure WtrThief07;
procedure WtrThief08;
procedure WtrThief09;
procedure WtrThief10;
procedure WtrThief11;
procedure WtrThief11a;

procedure WtrThiefCombat;
procedure finish_quest;
procedure WtrThiefBye;
procedure WtrThiefEnd;

import variable Officer_ptr;
import variable VaultBox_ptr;
import variable WtrThief_ptr;

variable hostile;
variable got_water;
variable on_the_way;
variable searched;
variable scared;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;
variable exit_line;



procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if (script_action == 13) then begin//<-- combat_p_proc , basically does combat_is_initialized == 1
		call combat_p_proc;
	end
	else begin
		if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
			call critter_p_proc;
		end
		else begin
			if (script_action == 3) then begin//DETAILED ON-CLICK DESCRIPTION (Binoculars icon) - description_p_proc
				call description_p_proc;
			end
			else begin
				if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
					call destroy_p_proc;
				end
				else begin
					if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
						call look_at_p_proc;
					end
					else begin
						if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
							call map_enter_p_proc;
						end
						else begin
							if (script_action == 23) then begin//map_update_p_proc -- called every dozen seconds or so, & additionally on certain events (exit dialog, end combat, load map, etc)
								call map_update_p_proc;
							end
							else begin
								if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
									call pickup_p_proc;
								end
								else begin
									if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
										call talk_p_proc;
									end
									else begin
										if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
											call timed_event_p_proc;
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure combat_p_proc
begin
	if (fixed_param == 4) then begin
		if (Officer_ptr != 0) then begin
			critter_add_trait(Officer_ptr, 1, 6, 0);
		end
	end
end

procedure critter_p_proc
begin
	variable LVar0 := 0;
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		scared := 1;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
	else begin
		if (game_time_hour <= 600) then begin
			if (global_var(QUEST_VAULT13_5_WTR_THIEF) == 1) then begin
				if (not(got_water) and (local_var(7) == 0)) then begin
					if (not(on_the_way)) then begin
						on_the_way := 1;
						set_local_var(4, 22728);
						move_to(self_obj, 16912, 2);
						add_timer_event(self_obj, game_ticks(30), 1);
						set_local_var(6, game_time / 10 / 60 / 60);
					end
				end
			end
			if (tile_num(self_obj) != local_var(4)) then begin
				animate_move_obj_to_tile(self_obj, local_var(4), 0);
			end
		end
		else begin
			set_local_var(7, 0);
			got_water := 0;
			on_the_way := 0;
			/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 126)) then begin
				destroy_object(obj_carrying_pid_obj(self_obj, PID_WATER_FLASK));
			end
		end
		if (tile_distance_objs(self_obj, VaultBox_ptr) < 4) then begin
			if (not(got_water)) then begin
				if (anim_busy(self_obj) == 0) then begin
					use_obj(VaultBox_ptr);
					got_water := 1;
					LVar0 := create_object_sid(PID_WATER_FLASK, 0, 0, -1);
					add_obj_to_inven(self_obj, LVar0);
					add_timer_event(self_obj, game_ticks(3), 2);
					if (obj_can_see_obj(dude_obj, self_obj)) then begin
						display_msg(message_str(SCRIPT_WTRTHIEF, 103));
					end
				end
			end
		end
		if (local_var(7) and (tile_num(self_obj) == 16912)) then begin
			move_to(self_obj, 7000, 0);
			set_local_var(4, 7000);
		end
		if (((game_time / 10 / 60 / 60) - local_var(6)) >= 7) then begin
			set_local_var(7, 0);
			got_water := 0;
			on_the_way := 0;
			/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 126)) then begin
				destroy_object(obj_carrying_pid_obj(self_obj, PID_WATER_FLASK));
			end
		end
	end
end

procedure description_p_proc
begin
	script_overrides;
	set_local_var(5, 1);
	display_msg(message_str(SCRIPT_WTRTHIEF, 102));
end

procedure destroy_p_proc
begin
	set_global_var(QUEST_VAULT13_5_WTR_THIEF, 2);
	if (Officer_ptr != 0) then begin
		critter_add_trait(Officer_ptr, 1, 6, 1);
	end
	rm_timer_event(self_obj);

	if source_obj == dude_obj then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		display_msg(message_str(SCRIPT_WTRTHIEF, 104));
		give_exp_points(500);
	end
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	if (not(local_var(5))) then begin
		set_local_var(5, is_success(do_check(self_obj, 1, has_trait(0, dude_obj, 0))));
	end
	if ((tile_distance_objs(self_obj, dude_obj) > 2) and not(local_var(5))) then begin
		display_msg(message_str(SCRIPT_WTRTHIEF, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_WTRTHIEF, 101));
	end
end

procedure map_enter_p_proc
begin
	WtrThief_ptr := self_obj;
	critter_add_trait(self_obj, 1, 6, 87);
	critter_add_trait(self_obj, 1, 5, 1);
	if (global_var(QUEST_VAULT13_5_WTR_THIEF) == 0) then begin
		if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
	end
	else begin
		if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 0);    end//  MAKE VISIBLE
	end
	if (local_var(4) != 7000) then begin
		on_the_way := 1;
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, 126)) then begin
		got_water := 1;
	end
end

procedure map_update_p_proc
begin
	if (global_var(QUEST_VAULT13_5_WTR_THIEF) == 0) then begin
		if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
	end
	else begin
		if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 0);    end//  MAKE VISIBLE
	end
	if ((game_time_hour > 700) and (tile_num(self_obj) != 7000)) then begin
		move_to(self_obj, 7000, 0);
		set_local_var(4, 7000);
	end
end

procedure pickup_p_proc
begin
	hostile := 1;
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (scared) then begin
		animate_move_obj_to_tile(self_obj, 16912, 1);
		set_local_var(4, 16912);
	end
	else begin
		start_gdialog(461, self_obj, 4, -1, -1);
		gsay_start;
		set_local_var(5, 1);
		call WtrThief01;
		gsay_end;
		end_dialogue;
		if (global_var(QUEST_VAULT13_5_WTR_THIEF) == 2) then begin
			if global_var(FADE_TIMES_INCREASED) then begin
				gfade_out(1);
				gfade_out(1);
			end
			gfade_out(1);
			move_to(self_obj, 7000, 2);
			if (Officer_ptr != 0) then begin
				move_to(Officer_ptr, 22093, 2);
				move_to(dude_obj, 22293, 2);
				anim(dude_obj, 1000, 5);
				anim(Officer_ptr, 1000, 2);
				float_msg(Officer_ptr, message_str(SCRIPT_WTRTHIEF, 105), 0);
			end
			gfade_in(1);
			display_msg(message_str(SCRIPT_WTRTHIEF, 106));
			give_exp_points(1000);
		end
		if (searched) then begin
			display_msg(message_str(SCRIPT_WTRTHIEF, 130));
			searched := 0;
		end
	end
end

procedure timed_event_p_proc
begin
	set_local_var(7, 1);
	if (fixed_param == 1) then begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			set_local_var(4, 16912);
		end
		else begin
			set_local_var(4, 20706);
		end
	end
	else begin
		if (fixed_param == 2) then begin
			set_local_var(4, 16912);
		end
	end
end

procedure WtrThief01
begin
	variable LVar0 := 0;
	LVar0 := message_str(SCRIPT_WTRTHIEF, 107);
	LVar0 := LVar0 + proto_data(obj_pid(dude_obj), 1);
	LVar0 := LVar0 + message_str(SCRIPT_WTRTHIEF, 108);
	gsay_reply(461, LVar0);
	giq_option(4, 461, 109, WtrThief02, 50);
	giq_option(-3, 461, 110, WtrThiefEnd, 50);
end

procedure WtrThief02
begin
	gsay_reply(461, 111);
	giq_option(4, 461, 112, WtrThiefBye, 50);
	giq_option(4, 461, 113, WtrThief03, 50);
	if (global_var(QUEST_VAULT13_5_WTR_THIEF) == 1) then begin
		giq_option(4, 461, 114, WtrThief05, 50);
	end
end

procedure WtrThief03
begin
	gsay_reply(461, 115);
	giq_option(4, 461, 116, WtrThief04, 50);
	giq_option(4, 461, 117, WtrThief05, 51);
end

procedure WtrThief04
begin
	gsay_reply(461, 118);
	giq_option(4, 461, 119, WtrThiefBye, 50);
end

procedure WtrThief05
begin
	if (got_water) then begin
		call WtrThief08;
	end
	else begin
		call WtrThief06;
	end
end

procedure WtrThief06
begin
	gsay_reply(461, 120);
	giq_option(4, 461, 121, WtrThief07, 50);
end

procedure WtrThief07
begin
	searched := 1;
end

procedure WtrThief08
begin
	gsay_reply(461, 122);
	giq_option(4, 461, 123, WtrThiefEnd, 50);
	giq_option(4, 461, 124, WtrThief09, 51);
end

procedure WtrThief09
begin
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		call WtrThief10;
	end
	else begin
		call WtrThief11;
	end
end

procedure WtrThief10
begin
	gsay_reply(461, 125);
	giq_option(4, 461, 126, finish_quest, 50);
end

procedure WtrThief11
begin
	gsay_reply(461, 127);
	giq_option(4, 461, 121, WtrThief11a, 50);
end

procedure WtrThief11a
begin
	if (is_success(do_check(dude_obj, 3, 0))) then begin
		call finish_quest;
	end
	else begin
		call WtrThiefCombat;
	end
end

procedure WtrThiefCombat
begin
	hostile := 1;
end

procedure finish_quest
begin
	set_global_var(QUEST_VAULT13_5_WTR_THIEF, 2);
end

procedure WtrThiefBye
begin
	gsay_reply(461, 128);
	giq_option(4, 461, 129, WtrThiefEnd, 50);
end

procedure WtrThiefEnd
begin
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end

