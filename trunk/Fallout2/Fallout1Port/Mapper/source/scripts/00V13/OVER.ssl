/*

	Vault 13 Overseer

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\MAPV13CAVE.h"

#define NAME                    SCRIPT_OVER
#define TOWN_REP_VAR            (GVAR_TOWN_REP_V13)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure timed_event_p_proc;
procedure combat_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure use_skill_on_p_proc;
procedure description_p_proc;
procedure destroy_p_proc;

procedure overend;
procedure overcbt;
procedure over00;
procedure over01;
procedure over01a;
procedure over02;
procedure over03;
procedure over04;
procedure over05;
procedure over06;
procedure over07;
procedure over08;
procedure over09;
procedure over10;
procedure over12;
procedure over13;
procedure over14;
procedure over16;
procedure over19;
procedure over20;
procedure over21;
procedure over22;
procedure over23;
procedure over24;
procedure over25;
procedure over26;
procedure over27;
procedure over28;
procedure over29;
procedure over30;
procedure over31;
procedure over32;
procedure over33;
procedure over34;
procedure over34_1;
procedure over37;
procedure over38;
procedure over38a;
procedure over39;
procedure over40;
procedure over41;
procedure over41a;
procedure over42;
procedure over43;
procedure over44;
procedure over45;
procedure over46;
procedure over47;
procedure over48;
procedure over49;
procedure over50;
procedure over51;
procedure over52;
procedure over53;
procedure over54;
procedure over55;
procedure over58;
procedure over59;
procedure over60;
procedure over61;
procedure over61a;
procedure over62;
procedure over63;
procedure over64;
procedure over66;
procedure over68;
procedure over69;
procedure over70;
procedure over71;
procedure over72;
procedure over73;
procedure over74;
procedure over75;
procedure over76;
procedure over77;
procedure over78;
procedure over79;
procedure over80;
procedure over81;
procedure Over81b;
procedure Over81c;
procedure Over81d;
procedure Over81e;
procedure over100;
procedure over200;
procedure over201;
procedure over202;
procedure over203;

/*****************************************************************
   Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_
*****************************************************************/
#define LVAR_WaterChipReturned 					(4)
#define LVAR_GiveMoreItems          			(5)
#define LVAR_Endgame             				(6)
#define LVAR_IanFloat        			       	(7)
#define LVAR_Hostile 								(8)
#define LVAR_OnlyOnce								(9)
#define LVAR_Herebefore                 		(10)

/*******************************************************************
   Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_)
*******************************************************************/
//import variable Ian_ptr;
import variable vault_door_ptr;// from EndGame Mod by Corpse

/*******************************************************************
   Local variables which do not need to be saved between map changes.
*******************************************************************/
variable tmp_hostile;
variable stealing;
variable Visits_without_chip := 1;
variable Visits_with_caravans := 1;
variable Visits_master_alive := 1;
variable Visits_with_chip := 1;
variable Visits_vats_blown := 1;

variable item;

#define EVENT_GET_AMMO 		(4)
#define EVENT_END_SEQ 		(5)
#define EVENT_LIBRARY 		(6)

/*******************************************************************
*******                         PROCEDURES                   *******
*******************************************************************/


/*******************************************************************
   The start procedure is the first procedure called when the map is
   first entered. Any initial information that needs to be set up
   should be placed in here.
*******************************************************************/

procedure start begin
	// V13 has been invaded:
	if (cur_map_index == MAP_VAULT13) and (global_var(GVAR_VAULT_13_WAS_INVADED) == 1) then begin

		if (local_var(LVAR_OnlyOnce) != 1) then begin
			set_local_var(LVAR_OnlyOnce, 1);//		<-- only once
			if not(is_loading_game) then begin//		<-- if not during a Game_Load,
				set_obj_visibility(self_obj, 0);//		     make sure critter is visibile
			end
			move_to(self_obj, 21062, 2);// still doesn't line up properly with pedastal!!!!!
			debug_msg("Vault 13 invasion, killing OVER.SSL with DeathType " + 63 + ".  ");
			kill_critter(self_obj, ANIM_called_shot_pic);// otherwise get "can't match fid!" errors
		end

	end
	else begin

	end
end

procedure timed_event_p_proc begin
variable item;

	if (fixed_param == EVENT_LIBRARY) then begin
		item := dude_item( PID_WATER_CHIP );
		rm_obj_from_inven(dude_obj, item);

		gfade_out(1);

		display_msg(mstr(252));
		give_exp_points(EXP_RETURN_WATERCHIP);
		inc_v13_rep(REP_BONUS_RETURNED_WATERCHP);

		set_local_var(LVAR_WaterChipReturned, 2);
		move_to(dude_obj, 21135, 2);
		animate_rotation(0);

		display_msg(message_str(SCRIPT_WTRGRD, 117));

		gfade_in(1);
	end
end

procedure combat_p_proc begin
	if (fixed_param == EVENT_GET_AMMO) then begin
		if (self_item_count( PID_5MM_AP ) <= 3) then begin
			item := create_object( PID_5MM_AP, 0, 0 );
			add_mult_objs_to_inven(self_obj, item, 6);
		end
	end
end

procedure critter_p_proc begin

	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin

		if ((global_var(VAULT_13_HOSTILE) == 1) and (global_var(OVERSEER_END_SEQ) == 0) and (tile_distance_objs(self_obj, dude_obj) < 12)) then begin
			if (local_var(LVAR_Hostile) == 0) then begin
				dialogue_system_enter;
			end
		end
		else if (global_var(OVERSEER_END_SEQ) == 1) then begin
			game_ui_disable;
			animate_move_obj_to_tile(self_obj, 18690, 0);
			set_global_var(OVERSEER_END_SEQ, 2);
		end
		else if (global_var(OVERSEER_END_SEQ) == 2) then begin
			if ((tile_num(self_obj) != 18690) and (tile_distance_objs(self_obj, dude_obj) > 4)) then begin
				animate_move_obj_to_tile(dude_obj, 19290, 0);
			end
			else if ((tile_num(self_obj) != 18690) and (tile_distance_objs(self_obj, dude_obj) <= 4)) then begin
				game_ui_enable;
				dialogue_system_enter;
			end
		end
		else if ((global_var(OVERSEER_END_SEQ) == 3) and (global_var(OVERSEER_KILLED) == 0)) then begin
			animate_move_obj_to_tile(self_obj, 17290, 0);
			set_global_var(OVERSEER_END_SEQ, 4);
		end
		else if ((global_var(OVERSEER_END_SEQ) == 4) and (global_var(OVERSEER_KILLED) == 0)) then begin
			animate_move_obj_to_tile(self_obj, 17290, 0);
			if (tile_num(self_obj) != 17290) then begin
				add_timer_event(vault_door_ptr, game_ticks(1), 2);
			end
			set_global_var(OVERSEER_END_SEQ, 5);
			animate_move_obj_to_tile(self_obj, 15690, 0);
		end
		else if ((global_var(OVERSEER_END_SEQ) == 5) and (global_var(OVERSEER_KILLED) == 0)) then begin
			if (tile_num(self_obj) != 15690) then begin
				set_global_var(OVERSEER_END_SEQ, 6);
			end
		end
		else if ((global_var(OVERSEER_END_SEQ) == 6) and (global_var(OVERSEER_KILLED) == 0)) then begin
			animate_move_obj_to_tile(self_obj, 13690, 0);
		end
		else if (global_var(VATS_BLOWN) and global_var(MASTER_BLOWN) and (local_var(LVAR_Endgame) == 0) and (tile_distance_objs(self_obj, dude_obj) < 12)) then begin
			if (global_var(OVERSEER_END_SEQ) == 0) then begin
				dialogue_system_enter;
			end
		end

	end
end

procedure damage_p_proc begin
	if (global_var(OVERSEER_END_SEQ) < 1) then begin
		if source_obj == dude_obj then begin
			set_global_var(VAULT_13_HOSTILE, 1);
		end
	end
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_OVER, 100));
end

procedure map_enter_p_proc begin
	set_self_team( TEAM_VAULT13 );
	if (global_var(OVERSEER_KILLED) == 1) then begin
		destroy_object(self_obj);
	end

	// If the player decided to continue playing, delete the Overseer from the endgame cutscene:
	if (is_story_finished and (cur_map_index != MAP_VAULT13)) then begin
		destroy_object(self_obj);
	end
end

procedure pickup_p_proc begin
	stealing := 1;
	dialogue_system_enter;
end

procedure talk_p_proc begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	dude_look_at_critter;

	get_reaction

	start_gdialog(55, self_obj, 4, 1, 10);
	gsay_start;
	if (global_var(VATS_BLOWN) and global_var(MASTER_BLOWN) and (global_var(GAME_CONTINUES) < 1)) then begin
		call over81;
	end
	else begin

		if (global_var(VAULT_13_HOSTILE)) then begin
			call over72;
		end
		else if (stealing) then begin
				call over71;
		end
		else if (global_var(QUEST_VAULT13_4_WATERCHIP) == 0) then begin
			if (dude_item_count( PID_WATER_CHIP )) then begin
				call over28;
			end
			else begin
				if (Visits_without_chip == 1) then begin
					call over07;
				end
				else if (Visits_without_chip == 2) then begin
					call over12;
				end
				else if (Visits_without_chip > 2) then begin
					call over19;
				end
				Visits_without_chip := Visits_without_chip + 1;
			end

		end
		else if (global_var(QUEST_VAULT13_4_WATERCHIP) == 1) then begin
			if (dude_item_count( PID_WATER_CHIP )) then begin
				call over28;
			end
			else begin
				if (Visits_with_caravans == 1) then begin
					call over73;
				end
				else if (Visits_with_caravans > 1) then begin
					call over80;
				end
			end
			Visits_with_caravans := Visits_with_caravans + 1;

		end
		else begin

			if (not(global_var(VATS_BLOWN))) then begin
				if (global_var(MASTER_BLOWN)) then begin
					call over54;
				end
				else begin
					if (Visits_master_alive == 1) then begin
						call over42;
					end
					else begin
						call over50;
					end
				end
				Visits_master_alive := Visits_master_alive + 1;
			end
			else if (global_var(MASTER_BLOWN)) then begin
				call over81;
			end
			else if (Visits_vats_blown == 1) then begin
				call over62;
			end
			else begin
				call over68;
			end
			Visits_vats_blown := Visits_vats_blown + 1;
		end
	end

	gsay_end;
	end_dialogue;

	if (Ian_ptr != 0) then begin
		if (local_var(LVAR_IanFloat) == 0) then begin
			float_msg(Ian_ptr, message_str(SCRIPT_IAN, 171), 0);
			set_local_var(LVAR_IanFloat, 1);
		end
	end
end

procedure use_skill_on_p_proc begin
	if (action_being_used == SKILL_STEAL) then begin
		script_overrides;
		stealing := 1;
		dialogue_system_enter;
	end
end

procedure description_p_proc begin
end

procedure overend begin
	if (local_var(LVAR_WaterChipReturned) == 1) then begin
		add_timer_event(self_obj, game_ticks(0), EVENT_LIBRARY);
	end
end

procedure overcbt begin
	tmp_hostile := 1;
end

procedure over00 begin
	set_local_var(LVAR_Herebefore,1);
	gsay_message(55, 101, 50);
	gsay_message(55, 102, 50);
	call over01;
end

procedure over01
begin
	gsay_message(55, 103, 50);
	call over04;
end

procedure over01a
begin
	gsay_message(55, 104, 50);
end

procedure over02
begin
	gsay_message(55, 105, 50);
	call over04;
end

procedure over03
begin
	gsay_message(55, 106, 50);
	call over04;
end

procedure over04
begin
	gsay_message(55, 107, 50);
	gsay_message(55, 108, 50);
	call over05;
end

procedure over05
begin
	gsay_message(55, 109, 50);
	call over06;
end

procedure over06 begin
	set_global_var(WORLDMAPLIST_VAULT_15, 1);
	mark_on_map(AREA_VAULT_15)
	gsay_message(55, 110, 50);
end

procedure over07
begin
	gsay_reply(55, 111);
	BOption( 112, over10, 7 );
	NOption( 113, over09, 6 );
	NOption( 114, over08, 4 );
	NOption( 115, over08, -3 );
end

procedure over08
begin
	gsay_reply(55, 116);
	NOption( 260, overend, 4 );
end

procedure over09
begin
	gsay_reply(55, 117);
	NOption( 118, over08, 4 );
end

procedure over10
begin
	gsay_reply(55, 119);
	NOption( 120, over08, 4 );
end

procedure over12
begin
	gsay_reply(55, 121);
	NOption( 122, over13, 4 );
	NOption( 123, over14, 5 );
	BOption( 124, over16, 4 );
	BOption( 125, over16, -3 );
end

procedure over13
begin
	gsay_message(55, 126, 50);
end

procedure over14
begin
	gsay_reply(55, 127);
	NOption( 128, overend, 6 );
end

procedure over16
begin
	gsay_message(55, 129, 50);
end

procedure over19
begin
	gsay_reply(55, 130);
	BOption( 131, over21, 5 );
	NOption( 132, over22, 6 );
	NOption( 133, over20, 4 );
	NOption( 134, over20, -3 );
end

procedure over20
begin
	gsay_message(55, 135, 50);
end

procedure over21
begin
	gsay_message(55, 136, 51);
end

procedure over22
begin
	gsay_reply(55, 137);
	NOption( 138, over23, 6 );
	if (not(local_var(LVAR_GiveMoreItems))) then begin
		NOption( 139, over24, 6 );
	end
	NOption( 140, over25, 6 );
end

procedure over23
begin
	gsay_message(55, 141, 50);
end

procedure over24
begin
	variable LVar0 := 0;
	set_local_var(LVAR_GiveMoreItems, 1);
	LVar0 := create_object( PID_STIMPAK, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object( PID_STIMPAK, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object( PID_10MM_JHP, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object( PID_10MM_JHP, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
	gsay_message(55, 142, 50);
end

procedure over25
begin
	gsay_reply(55, 143);
	NOption( 144, over26, 5 );
	NOption( 145, over27, 5 );
end

procedure over26
begin
	gsay_reply(55, 146);
	NOption( 147, overend, 5 );
	NOption( 148, overend, 6 );
end

procedure over27
begin
	gsay_message(55, 149, 50);
end

procedure over28
begin
	gsay_reply(55, 150);
	NOption( 151, over31, 4 );
	NOption( 152, over34, 6 );
	NOption( 153, over37, -3 );
end

procedure over29 begin
	gsay_message(55, 154, 50);
	if (dude_item_count( PID_WATER_CHIP )) then begin
		call over31;
	end
	else begin
		call over30;
	end
end

procedure over30 begin
	gsay_message(55, 155, 50);
	NOption( 164, over31, 4 );
	NOption( 165, over30, 4 );
end

procedure over31 begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	Visits_with_chip := Visits_with_chip + 1;
	set_global_var(QUEST_VAULT13_4_WATERCHIP, 2);
	if (global_var(QUEST_VAULT13_1_REBELS) != 2) then begin
		set_global_var(QUEST_VAULT13_1_REBELS, 3);
	end
	if (global_var(QUEST_VAULT13_5_WTR_THIEF) != 2) then begin
		set_global_var(QUEST_VAULT13_5_WTR_THIEF, 3);
	end
	set_local_var(LVAR_WaterChipReturned, 1);
	LVar0 := dude_item( PID_WATER_CHIP );
	destroy_object(LVar0);
	LVar1 := dude_item( PID_WATER_CHIP );
	destroy_object(LVar1);

	gsay_reply(55, 156);
	NOption( 157, over32, 6 );
	NOption( 158, over33, 4 );
end

procedure over32
begin
	gsay_reply(55, 159);
	NOption( 160, overend, 4 );
end

procedure over33
begin
	gsay_reply(55, 161);
	NOption( 162, overend, 4 );
end

procedure over34
begin
	gsay_reply(55, 163);
	NOption( 164, over31, 4 );
	NOption( 165, over30, 4 );
end

procedure over34_1
begin
end

procedure over37
begin
	gsay_reply(55, 166);
	NOption( 196, over38, 0 );
end

procedure over38
begin
	gsay_reply(55, 167);
	NOption( 196, over38a, 0 );
end

procedure over38a
begin
	gsay_reply(55, 168);
	NOption( 196, over39, 0 );
end

procedure over39
begin
	gsay_reply(55, 169);
	NOption( 196, over40, 0 );
end

procedure over40 begin
	Visits_with_chip := Visits_with_chip + 1;
	set_global_var(QUEST_VAULT13_4_WATERCHIP, 2);
	if (global_var(QUEST_VAULT13_1_REBELS) != 2) then begin
		set_global_var(QUEST_VAULT13_1_REBELS, 3);
	end
	if (global_var(QUEST_VAULT13_5_WTR_THIEF) != 2) then begin
		set_global_var(QUEST_VAULT13_5_WTR_THIEF, 3);
	end
	set_local_var(LVAR_WaterChipReturned , 1);
	item := dude_item( PID_WATER_CHIP );
	destroy_object(item);
	item := dude_item( PID_WATER_CHIP );
	destroy_object(item);
	gsay_reply(55, 170);
	NOption( 171, over41, -3 );
	NOption( 172, over41a, -3 );
end

procedure over41
begin
	gsay_message(55, 173, 50);
end

procedure over41a
begin
	gsay_message(55, 174, 50);
end

procedure over42
begin
	set_global_var(QUEST_VAULT13_3_KILL_VATS, 1);
	set_global_var(QUEST_VAULT13_2_MASTER, 1);
	gsay_reply(55, 175);
	NOption( 176, over43, 4 );
	NOption( 177, over49, -3 );
end

procedure over43
begin
	gsay_reply(55, 178);
	NOption( 179, over44, 4 );
end

procedure over44
begin
	gsay_reply(55, 180);
	NOption( 181, over45, 4 );
	NOption( 182, over46, 7 );
end

procedure over45
begin
	gsay_reply(55, 183);
	NOption( 184, over47, 4 );
end

procedure over46
begin
	gsay_reply(55, 185);
	NOption( 186, over47, 6 );
end

procedure over47
begin
	gsay_reply(55, 187);
	NOption( 188, overend, 4 );
	NOption( 189, over48, 6 );
end

procedure over48
begin
	gsay_message(55, 190, 50);
end

procedure over49
begin
	gsay_message(55, 191, 50);
end

procedure over50
begin
	gsay_reply(55, 192);
	NOption( 193, over51, 4 );
	NOption( 194, over52, 6 );
	NOption( 195, over53, 5 );
	NOption( 196, over51, -3 );
end

procedure over51
begin
	gsay_message(55, 197, 50);
end

procedure over52
begin
	gsay_message(55, 198, 50);
end

procedure over53
begin
	gsay_message(55, 199, 50);
end

procedure over54
begin
	gsay_reply(55, 200);
	NOption( 201, over55, 4 );
	NOption( 202, over55, 6 );
	NOption( 203, over61, -3 );
end

procedure over55
begin
	gsay_reply(55, 204);
	NOption( 205, over60, 4 );
end

procedure over58
begin
	gsay_message(55, 207, 50);
end

procedure over59
begin
	gsay_message(55, 208, 50);
end

procedure over60 begin
	// Fix to give the quest if Master was killed before Water Chip got brought back:
	if (global_var(QUEST_VAULT13_3_KILL_VATS) == 0) then
		set_global_var(QUEST_VAULT13_3_KILL_VATS, 1);

	gsay_message(55, 209, 50);
end

procedure over61
begin
	gsay_reply(55, 210);
	NOption( 211, over61a, -3 );
end

procedure over61a
begin
	gsay_message(55, 212, 50);
end

procedure over62
begin
	gsay_reply(55, 213);
	NOption( 214, over63, 4 );
	NOption( 215, over64, 6 );
	NOption( 216, over63, -3 );
end

procedure over63
begin
	gsay_reply(55, 217);
	NOption( 218, over64, 4 );
	NOption( 219, over64, -3 );
end

procedure over64
begin
	gsay_reply(55, 220);
	NOption( 221, over66, 4 );
	NOption( 222, over66, -3 );
end

procedure over66 begin
	// Fix to give the quest if Vats was destroyed before Water Chip got brought back:
	if (global_var(QUEST_VAULT13_2_MASTER) == 0) then
		set_global_var(QUEST_VAULT13_2_MASTER, 1);

	gsay_message(55, 223, 50);
end

procedure over68
begin
	gsay_reply(55, 224);
	NOption( 225, over69, 4 );
	NOption( 226, over70, 4 );
	NOption( 227, over69, -3 );
end

procedure over69
begin
	gsay_message(55, 228, 50);
end

procedure over70
begin
	gsay_message(55, 229, 50);
end

procedure over71
begin
	stealing := 0;
	gsay_message(55, 230, 51);
end

procedure over72
begin
	gsay_reply(55, 231);
	set_local_var(LVAR_Hostile, 1);
	BOption( 259, overcbt, 4 );
	BOption( 234, overcbt, -3 );
end

procedure over73
begin
	gsay_reply(55, 232);
	NOption( 233, over75, 4 );
	NOption( 234, over74, -3 );
end

procedure over74
begin
	gsay_message(55, 235, 50);
end

procedure over75
begin
	gsay_reply(55, 236);
	NOption( 237, over76, 4 );
	NOption( 238, over77, 6 );
end

procedure over76
begin
	gsay_message(55, 239, 50);
end

procedure over77
begin
	gsay_reply(55, 240);
	NOption( 241, over78, 5 );
	NOption( 242, over79, 6 );
end

procedure over78
begin
	gsay_message(55, 243, 50);
end

procedure over79
begin
	gsay_message(55, 244, 50);
end

procedure over80
begin
	gsay_message(55, 245, 50);
end

procedure over81
begin
	set_local_var(LVAR_Endgame, 1);
	set_local_var(LVAR_Hostile, 1);
	TopReact
	gsay_reply(55, 261);
	GOption( 106, Over81b, 0 );
end

procedure Over81b
begin
	set_local_var(1, 50);
	ReactToLevel
	gsay_reply(55, 262);
	BOption( 106, Over81c, 0 );
end

procedure Over81c
begin
	BottomReact
	gsay_reply(55, 263);
	BOption( 106, Over81d, 0 );
end

procedure Over81d
begin
	gsay_reply(55, 264);
	BOption( 106, Over81e, 0 );
end

procedure Over81e begin
	gsay_message(55, 265, 51);
	set_global_var(OVERSEER_END_SEQ, 3);
	add_timer_event(dude_obj, game_ticks(1), EVENT_END_SEQ);// was 10
end

procedure over100
begin
	gsay_message(55, 247, 50);
end

procedure over200
begin
	gsay_message(55, 248, 50);
end

procedure over201
begin
	gsay_message(55, 249, 50);
end

procedure over202
begin
	gsay_message(55, 250, 50);
end

procedure over203
begin
	gsay_message(55, 251, 50);
end

procedure destroy_p_proc begin
	inc_good_critter
end




