/*

	V13 - water guard

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\mapnecro.h"

#define NAME                    SCRIPT_WTRGRD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_V13)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

procedure WtrGrd01;
procedure WtrGrd02;
procedure WtrGrd03;
procedure WtrGrd04;
procedure WtrGrd05;
procedure WtrGrd06;
procedure WtrGRd07;
procedure WtrGRd08;
procedure WtrGrd09;
procedure WtrGrdEnd;
procedure WtrGrdQuest;

import variable WtrGrd_ptr;
import variable recipient;
import variable getting_ration;

variable asleep;
variable tmp_hostile;
variable on_rounds;
variable going_up;
variable going_down;
variable initial :=  0;

procedure PickDeadBodyType;
variable DeathType := 57;

procedure start begin
	if (v13_invaded) then begin//		<-- Vault13 invaded
		if (CUR_MAP_VAULT13) or (CUR_MAP_V13ENT) then begin //  VAULT 13 - ANY MAPS
			if (local_var(9) != 1) then begin
				set_local_var(9, 1);//		<-- only once
				if not(is_loading_game) then begin//		<-- if not during a Game_Load,
					set_self_visible;//		     make sure critter is visibile
				end
				call PickDeadBodyType;
				debug_msg("Vault 13 invasion, killing WTRGRD.SSL with DeathType " + DeathType + ".  ");
				kill_critter(self_obj, DeathType);
			end
		end
	end
	else begin
		if not(initial) then begin
			initial :=  1;
			WtrGrd_ptr := self_obj;
			if (local_var(5) == 0) then begin
				set_local_var(5, self_tile);
			end
			dest_tile := local_var(5);
			recipient := 0;
			if (not(day)) then begin
				move_to(self_obj, 7000, 2);
				asleep := 1;
			end
		end
	end
end

procedure critter_p_proc begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (self_can_see_dude) then begin
			/* has how many? */    if (dude_item_count( PID_WATER_FLASK ) > 3) then begin
				if (local_var(4) == 0) then begin
					set_local_var(4, 1);
					float_msg(self_obj, message_str(SCRIPT_WTRGRD, 116), 0);
				end
			end
		end
		if (day) then begin
			if (self_tile != dest_tile) then begin
				animate_move_obj_to_tile(self_obj, dest_tile, 0);
			end
		end
		if (not(day)) then begin
			on_rounds := 0;
		end
		if ((game_time_hour > 700) and (game_time_hour < 900) and not(on_rounds)) then begin
			dest_tile := 21511;
			on_rounds := 1;
			add_timer_event(self_obj, game_ticks(300), 1);
		end
		if (not(day)) then begin
			if (not(asleep)) then begin
				if ((game_time_hour > 1905) and (game_time_hour < 1915)) then begin
					animate_move_obj_to_tile(self_obj, 16912, 0);
					if (self_tile == 16912) then begin
						move_to(self_obj, 7000, 2);
						asleep := 1;
					end
				end
				else begin
					move_to(self_obj, 7000, 2);
					asleep := 1;
				end
			end
		end
		else begin
			if ((game_time_hour > 630) and asleep) then begin
				move_to(self_obj, local_var(5), 2);
				asleep := 0;
			end
			else begin
				if ((game_time_hour > 620) and asleep) then begin
					if (self_elevation != 2) then begin
						move_to(self_obj, 16912, 2);
					end
					else begin
						animate_move_obj_to_tile(self_obj, self_obj, 0);
					end
					asleep := 0;
				end
			end
		end
		if (getting_ration) then begin
			use_obj(recipient);
			float_msg(self_obj, message_str(SCRIPT_WTRGRD, random(113, 114)), 3);
			getting_ration := 0;
		end
		if ((self_tile == 16912) and going_down) then begin
			move_to(self_obj, 22104, 1);
			going_down := 0;
		end
		else begin
			if (self_tile == 22104) then begin
				if (going_down) then begin
					move_to(self_obj, 13704, 0);
					going_down := 0;
				end
				else begin
					if (going_up) then begin
						move_to(self_obj, 16912, 2);
						going_up := 0;
					end
				end
			end
			else begin
				if ((self_tile == 13704) and going_up) then begin
					move_to(self_obj, 22104, 1);
					going_up := 0;
				end
			end
		end
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_VAULT_13_HOSTILE, 1 );
	end
	inc_good_critter
	rm_timer_event(self_obj);
	WtrGrd_ptr := 0;
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_WTRGRD, 100));
end

procedure pickup_p_proc
begin
	float_msg(self_obj, message_str(SCRIPT_WTRGRD, 115), 0);
	tmp_hostile := 1;
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	if (global_var( GVAR_VAULT_13_HOSTILE ) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_GENVAULT, 102), 2);
	end
	else begin
		if (global_var( GVAR_QUEST_VAULT13_4_WATERCHIP ) == 2) then begin
			float_msg(self_obj, message_str(SCRIPT_GENVAULT, 109), 0);
		end
		else begin
			if (global_var( GVAR_QUEST_VAULT13_5_WTR_THIEF ) == 2) then begin
				float_msg(self_obj, message_str(SCRIPT_LYLE, 113), 0);
			end
			else begin
				start_gdialog(163, self_obj, 4, -1, -1);
				gsay_start;
				if ((GAME_TIME_IN_DAYS) < 30) then begin
					call WtrGrd05;
				end
				else begin
					call WtrGrd01;
				end
				gsay_end;
				end_dialogue;
			end
		end
	end
end

procedure timed_event_p_proc
begin
	if ((game_time_hour > 700) and (game_time_hour < 900)) then begin
		if (fixed_param == 1) then begin
			dest_tile := 16912;
			going_down := 1;
			add_timer_event(self_obj, game_ticks(60), 2);
		end
		else begin
			if (fixed_param == 2) then begin
				dest_tile := 20910;
				add_timer_event(self_obj, game_ticks(120), 3);
			end
			else begin
				if (fixed_param == 3) then begin
					dest_tile := 22104;
					going_down := 1;
					add_timer_event(self_obj, game_ticks(60), 4);
				end
				else begin
					if (fixed_param == 4) then begin
						dest_tile := 14102;
						add_timer_event(self_obj, game_ticks(120), 5);
					end
					else begin
						if (fixed_param == 5) then begin
							dest_tile := 13704;
							going_up := 1;
							add_timer_event(self_obj, game_ticks(5), 6);
						end
						else begin
							if (fixed_param == 6) then begin
								going_up := 1;
								add_timer_event(self_obj, game_ticks(60), 7);
							end
							else begin
								if (fixed_param == 7) then begin
									dest_tile := local_var(5);
								end
							end
						end
					end
				end
			end
		end
	end
	else begin
		dest_tile := 21511;
		move_to(self_obj, 16912, 2);
	end
end

procedure WtrGrd01
begin
	gsay_reply(163, message_str(SCRIPT_WTRGRD, 101) + dude_name + message_str(SCRIPT_WTRGRD, 102));
	giq_option( 4, SCRIPT_WTRGRD, 103, WtrGrd03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_WTRGRD, 127, WtrGrd09, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_WTRGRD, 104, WtrGrd02, NEUTRAL_REACTION );
end

procedure WtrGrd02
begin
	gsay_reply(163, 105);
	giq_option( -3, SCRIPT_WTRGRD, 106, WtrGrd03, NEUTRAL_REACTION );
end

procedure WtrGrd03
begin
	gsay_reply(163, 107);
	giq_option( 4, SCRIPT_WTRGRD, 108, WtrGrd04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_WTRGRD, 127, WtrGrd09, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_WTRGRD, 109, WtrGrdEnd, NEUTRAL_REACTION );
end

procedure WtrGrd04
begin
	gsay_reply(163, 110);
	giq_option( 4, SCRIPT_WTRGRD, 111, WtrGrdQuest, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_WTRGRD, 112, WtrGrdEnd, NEUTRAL_REACTION );
end

procedure WtrGrd05
begin
	gsay_reply(163, message_str(SCRIPT_WTRGRD, 118) + dude_name + message_str(SCRIPT_WTRGRD, 119));
	giq_option( 4, SCRIPT_WTRGRD, 120, WtrGrd06, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_WTRGRD, 121, WtrGRd07, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_WTRGRD, 127, WtrGrd09, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_WTRGRD, 104, WtrGrd02, NEUTRAL_REACTION );
end

procedure WtrGrd06
begin
	gsay_reply(163, 122);
	giq_option( 4, SCRIPT_WTRGRD, 121, WtrGRd07, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_MODREACT, 105, WtrGrdEnd, NEUTRAL_REACTION );
end

procedure WtrGRd07
begin
	gsay_reply(163, 123);
	giq_option( 4, SCRIPT_WTRGRD, 124, WtrGRd08, NEUTRAL_REACTION );
end

procedure WtrGRd08
begin
	gsay_message(163, 125, 50);
end

procedure WtrGrd09
begin
	gsay_message(163, 126, 50);
end

procedure WtrGrdEnd
begin
end

procedure WtrGrdQuest
begin
	if (not(global_var( GVAR_QUEST_VAULT13_5_WTR_THIEF ))) then begin
		set_global_var( GVAR_QUEST_VAULT13_5_WTR_THIEF, 1 );
	end
end



procedure PickDeadBodyType// FINISHED, for Vault 13
begin
	variable id := 11;
	id := random(0, 6) + random(0, 6) + random(0, 6);
	if id <= 2 then begin
		DeathType := 59;// exploded  [ROCKET LAUNCHER]
	end
	else begin
		if id <= 10 then begin
			DeathType := 57;// burnt, face down  [FLAMER]
		end
		else begin
			if id <= 15 then begin
				DeathType := 60;// melted pile  [PLASMA RIFLE]
			end
			else begin
				DeathType := 63;// face down, blood pool  (generic death, no weapon associated)
			end
		end
	end
end
