/*

	Vault 13 - Cindy

*/

#include "..\headers\define.h"

#define NAME                    SCRIPT_CINDY
#define TOWN_REP_VAR            (GVAR_TOWN_REP_V13)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure description_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;

procedure Cindy01;
procedure Cindy02;
procedure Cindy03;
procedure Cindy04;
procedure Cindy05;
procedure Cindy06;
procedure Cindy07;
procedure CindyEnd;
procedure get_rations;

procedure do_sleep;

variable crying;
variable tmp_hostile;
variable ration_tile := 7000;
variable sleeping_disabled;

import variable recipient;
import variable WtrGrd_ptr;

procedure PickDeadBodyType;
variable DeathType := 57;

#define LVAR_Sleeping 							(5)

#define night_person;
#define sleep_tile 		(24683)
#define home_tile 		(24687)
#define sleep_time 		(random(1900, 1930))
#define wake_time 		(random(600, 630))

procedure start begin
	if (v13_invaded) then begin//		<-- Vault13 invaded
		if (cur_map_index == MAP_VAULT13) or (cur_map_index == MAP_V13ENT) then begin //  VAULT 13 - ANY MAPS
			if (local_var(9) != 1) then begin
				set_local_var(9, 1);//		<-- only once
				if not(is_loading_game) then begin//		<-- if not during a Game_Load,
					set_obj_visibility(self_obj, 0);//		     make sure critter is visibile
				end
				call PickDeadBodyType;
				debug_msg("Vault 13 invasion, killing CINDY.SSL with DeathType " + DeathType + ".  ");
				kill_critter(self_obj, DeathType);
			end
		end
	end
end

procedure critter_p_proc begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (local_var(6) == 1) then begin
			if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
				flee_dude
			end
			else begin
				if (tile_distance(tile_num(dude_obj), home_tile) > 3) then begin
					animate_move_obj_to_tile(self_obj, home_tile, 0);
				end
			end
		end
		else begin
			if (global_var(QUEST_VAULT13_4_WATERCHIP) == 0) then begin
				if (local_var(7) == 0) then begin
					if ((elevation(self_obj) == elevation(WtrGrd_ptr)) and (elevation(self_obj) == elevation(dude_obj))) then begin
						if ((game_time_hour > 700) and (game_time_hour < 900)) then begin
							call get_rations;
						end
					end
				end
			end
			if (not((game_time_hour >= 700) and (game_time_hour < 1800))) then begin
				set_local_var(7, 0);
			end
			if (sleeping_disabled == 0) then begin
				call do_sleep;
			end
		end
	end
end

procedure damage_p_proc begin
	if  (source_obj == dude_obj) then begin
		set_local_var(6, 1);
	end
end

procedure description_p_proc begin
	if (local_var(4)) then begin
		display_msg(message_str(SCRIPT_CINDY, 101));
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);
	inc_good_critter
	if (source_obj == dude_obj) then begin
		set_global_var(VAULT_13_HOSTILE, 1);
	end
	rm_timer_event(self_obj);
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_CINDY, 100));
end

procedure map_enter_p_proc begin
	set_self_team(TEAM_VAULT13 );
end

procedure pickup_p_proc begin
	if ((GAME_TIME_IN_DAYS) >= 30) then begin
		float_msg(self_obj, message_str(SCRIPT_CINDY, 122), 2);
	end
	tmp_hostile := 1;
end

procedure talk_p_proc begin
	dude_look_at_critter;
	if (not(local_var(4))) then begin
		if ((global_var(VAULT_13_HOSTILE) == 1) or (local_var(6) == 1)) then begin
			float_msg(self_obj, message_str(SCRIPT_CINDY, 125), 0);
			set_local_var(4, 1);
		end
		else if (global_var(QUEST_VAULT13_4_WATERCHIP) == 2) then begin
			float_msg(self_obj, message_str(SCRIPT_CINDY, 123), 0);
		end
		else if (global_var(QUEST_VAULT13_5_WTR_THIEF) == 2) then begin
			float_msg(self_obj, message_str(SCRIPT_CINDY, 124), 0);
		end
		else begin
			start_dialog_at_node(Cindy01);
		end
	end
end

procedure Cindy01 begin
	gsay_reply(168, message_str(SCRIPT_CINDY, 102) + dude_name + message_str(SCRIPT_CINDY, 103));
	NOption( 104, Cindy03, 4 );
	NOption( 105, Cindy04, 4 );
	NOption( 106, Cindy02, -3 );
end

procedure Cindy02 begin
	set_local_var(4, 1);
	gsay_reply(168, 107);
	NOption( 108, CindyEnd, -3 );
end

procedure Cindy03 begin
	gsay_message(168, random(109, 111), 50);
end

procedure Cindy04 begin
	if ((GAME_TIME_IN_DAYS) < 30) then begin
		gsay_reply(168, 126);
		GOption( 127, CindyEnd, 4 );
		BOption( 128, CindyEnd, 4 );
	end
	else begin
		gsay_reply(168, 113);
		NOption( 114, Cindy05, 4 );
		NOption( 115, Cindy06, 4 );
	end
end

procedure Cindy05 begin
	gsay_reply(168, 116);
	NOption( 117, CindyEnd, 4 );
end

procedure Cindy06 begin
	gsay_reply(168, 118);
	NOption( 119, Cindy07, 4 );
end

procedure Cindy07 begin
	set_global_var(QUEST_VAULT13_5_WTR_THIEF, 1);
	gsay_reply(168, 120);
	NOption( 121, CindyEnd, 4 );
	NOption( 112, Cindy05, 4 );
end

procedure CindyEnd begin
end

procedure get_rations begin
	if (tile_num(self_obj) != ration_tile) then begin
		sleeping_disabled := 1;
		if (random(0, 1)) then begin
			animate_move_obj_to_tile(self_obj, ration_tile, 0);
		end
		else begin
			animate_move_obj_to_tile(self_obj, ration_tile, 1);
		end
	end
	else begin
		if (not(recipient)) then begin
			recipient := self_obj;
			add_timer_event(self_obj, game_ticks(3), 1);
			set_local_var(7, 1);
			sleeping_disabled := 0;
		end
	end
end

procedure PickDeadBodyType begin
	variable id := 11;
	id := random(0, 6) + random(0, 6) + random(0, 6);
	if id <= 2 then begin
		DeathType := 59;// exploded  [ROCKET LAUNCHER]
	end
	else if id <= 10 then begin
		DeathType := 57;// burnt, face down  [FLAMER]
	end
	else if id <= 15 then begin
		DeathType := 60;// melted pile  [PLASMA RIFLE]
	end
	else begin
		DeathType := 63;// face down, blood pool  (generic death, no weapon associated)
	end
end

procedure do_sleep begin
	sleeping
end
