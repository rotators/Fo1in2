#include "..\headers\define.h"

procedure start;
procedure ladder01;
procedure give_damage;

variable TestAGILITY;
variable damage;
variable Current_HP;


procedure start
begin
	if (script_action == 6) then begin//use_p_proc - Use, Activate, or Manipulate the Object or Item
		if ((anim_busy(dude_obj) != 0) or (anim_busy(dude_obj) == 0)) then begin
			TestAGILITY := do_check(dude_obj, STAT_ag, 2);
			call ladder01;
			load_map("VAULTBUR.map", 0);
			script_overrides;
		end
	end
end

procedure ladder01
begin
	script_overrides;
	if (is_success(TestAGILITY)) then begin
	end
	else begin
		if (is_critical(TestAGILITY)) then begin
			damage := ((random(1, 6) + random(1, 6) + random(1, 6)) - 10);
			call give_damage;
		end
		else begin
			if random(0, 1) then begin
				damage := random(2, 4);
			end
			else begin
				damage := 0;
			end
			call give_damage;
		end
	end
end

procedure give_damage
begin
	Current_HP := get_critter_stat(dude_obj, 35);
	if (damage >= Current_HP) then begin
		damage := (Current_HP - 1);
	end
	if (damage < 1) then begin
		damage := 0;
		display_msg(message_str(SCRIPT_BV2VAULT, 101));
	end
	else begin
		display_msg(message_str(SCRIPT_BV2VAULT, 102) + damage + message_str(SCRIPT_BV2VAULT, 103));
		critter_heal(dude_obj, -damage);
	end
end

