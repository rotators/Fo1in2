#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure map_enter_p_proc;//    script_action == 15
procedure talk_p_proc;//    script_action == 11
procedure timed_event_p_proc;//    script_action == 22
procedure damage_p_proc;//    script_action == 14
procedure pickup_p_proc;//    script_action == 4

procedure gambler1;
procedure gambler2;
procedure gambler3;
procedure gambler4;
procedure gambler5;
procedure flee_dude;
procedure items_held;

variable RightHand := 0;
variable LeftHand := 0;
variable PIDright := 0;
variable PIDleft := 0;
variable SubtypeWEP := 0;

variable hostile;
variable weapon_check;



procedure start
begin
	fixt_critter_healing
	
	if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
		call critter_p_proc;
	end
	else begin
		if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
			call destroy_p_proc;
		end
		else begin
			if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
				call look_at_p_proc;
			end
			else begin
				if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
					call map_enter_p_proc;
				end
				else begin
					if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
						call talk_p_proc;
					end
					else begin
						if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
							call timed_event_p_proc;
						end
					end
				end
			end
		end
	end
end

procedure items_held
begin
	SubtypeWEP := 0;
	if critter_inven_obj(dude_obj, 1) then begin
		RightHand := critter_inven_obj(dude_obj, 1);
		PIDright := obj_pid(RightHand);
		if obj_item_subtype(RightHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		RightHand := 0;
		PIDright := 0;
	end
	if critter_inven_obj(dude_obj, 2) then begin
		LeftHand := critter_inven_obj(dude_obj, 2);
		PIDleft := obj_pid(LeftHand);
		if obj_item_subtype(LeftHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		LeftHand := 0;
		PIDleft := 0;
	end
end

procedure critter_p_proc
begin
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
			call items_held;
			if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
				if (not(weapon_check)) then begin
					dialogue_system_enter;
					add_timer_event(self_obj, game_ticks(600), 1);
				end
			end
		end
	end
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
	if (global_var(ENEMY_JUNKTOWN) == 1) then begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
		end
	end
	if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		if ((global_var(CAPTURE_GIZMO) == 2) or (global_var(GIZMO_DEAD) == 1)) then begin
			destroy_object(self_obj);
		end
	end
	if (cur_map_index == MAP_JUNKCSNO) and (global_var(DUDE_ENEMY_JUNK_CITIZEN) == 1) then begin //  GVAR_ENEMY_JUNK_CITIZEN,  MAP == JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			call flee_dude;
		end
	end
end

procedure destroy_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (cur_map_index == MAP_JUNKENT) or (cur_map_index == MAP_JUNKCSNO) or (cur_map_index == MAP_JUNKKILL) then begin //  JUNKTOWN - ANY MAPS
			set_global_var(DUDE_ENEMY_JUNK_CITIZEN, 1);// GVAR_ENEMY_JUNK_CITIZEN
			set_global_var(ENEMY_JUNKTOWN, 1);
		end
	end
	rm_timer_event(self_obj);

	if source_obj == dude_obj then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_GENGAMBL, 100));
end

procedure map_enter_p_proc
begin
	if (local_var(0) == 0) then begin
		set_local_var(0, tile_num(self_obj));
	end
	if (not(metarule(22, 0)) and not(obj_is_carrying_obj_pid(self_obj, PID_BOTTLE_CAPS))) then begin
		item_caps_adjust(self_obj, random(0, 200));
	end
	if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 16);// was 24 in Vanilla
		if ((global_var(CAPTURE_GIZMO) == 2) or (global_var(GIZMO_DEAD) == 1)) then begin
			destroy_object(self_obj);
		end
	end
end

procedure talk_p_proc
begin
	call items_held;
	script_overrides;
	if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
		call gambler1;
	end
	else begin
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			call gambler3;
		end
		else begin
			if (global_var(KILL_KILLIAN) == 2) then begin
				call gambler4;
			end
			else begin
				if (global_var(PLAYER_REPUTATION_GENERAL) < -10) then begin
					call gambler2;
				end
				else begin
					call gambler5;
				end
			end
		end
	end
end

procedure timed_event_p_proc
begin
	weapon_check := 0;
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_JUNKTOWN, 1);
	end
end

procedure gambler1
begin
	variable LVar0 := 0;
	weapon_check := 1;
	LVar0 := random(1, 3);
	if (LVar0 == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_GENGAMBL, 101), 0);
	end
	else begin
		if (LVar0 == 2) then begin
			float_msg(self_obj, message_str(SCRIPT_GENGAMBL, 102), 0);
		end
		else begin
			if (LVar0 == 3) then begin
				if (get_critter_stat(dude_obj, STAT_gender) == 0) then begin
					float_msg(self_obj, message_str(SCRIPT_GENGAMBL, 103), 0);
				end
				else begin
					float_msg(self_obj, message_str(SCRIPT_GENGAMBL, 104), 0);
				end
			end
		end
	end
end

procedure gambler2
begin
	float_msg(self_obj, message_str(SCRIPT_GENGAMBL, random(105, 107)), 0);
end

procedure gambler3
begin
	float_msg(self_obj, message_str(SCRIPT_GENGAMBL, random(108, 110)), 0);
end

procedure gambler4
begin
	float_msg(self_obj, message_str(SCRIPT_GENGAMBL, random(111, 113)), 0);
end

procedure gambler5
begin
	variable LVar0 := 0;
	LVar0 := random(1, 6);
	if (LVar0 == 1) then begin
		if ((game_time_hour >= 700) and (game_time_hour < 1800)) then begin
			float_msg(self_obj, message_str(SCRIPT_GENGAMBL, 114), 0);
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_GENGAMBL, 115), 0);
		end
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_GENGAMBL, 114 + LVar0), 0);
	end
end

procedure flee_dude
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;
	while(LVar1 < 5) do begin
		if (tile_distance(tile_num(dude_obj), tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
			LVar0 := tile_num_in_direction(tile_num(self_obj), LVar1, 3);
			LVar2 := tile_distance(tile_num(dude_obj), LVar0);
		end
		LVar1 := LVar1 + 1;
	end
	animate_move_obj_to_tile(self_obj, LVar0, 1);
end

procedure pickup_p_proc
begin
	hostile := 1;
end
