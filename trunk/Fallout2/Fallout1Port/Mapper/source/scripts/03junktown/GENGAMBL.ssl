/*

	Generic gambler

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_GENGAMBL
//#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure damage_p_proc;
procedure pickup_p_proc;

procedure gambler1;
procedure gambler2;
procedure gambler3;
procedure gambler4;
procedure gambler5;
procedure items_held;

variable RightHand := 0;
variable LeftHand := 0;
variable PIDright := 0;
variable PIDleft := 0;
variable SubtypeWEP := 0;

variable tmp_hostile;
variable weapon_check;

procedure start begin
end

procedure critter_p_proc
begin
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
			if dude_is_armed then begin
				if (not(weapon_check)) then begin
					dialogue_system_enter;
					add_timer_event(self_obj, game_ticks(600), 1);
				end
			end
		end
	end
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if (global_var(ENEMY_JUNKTOWN) == 1) then begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			attack(dude_obj);
		end
	end
	if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		if ((global_var(CAPTURE_GIZMO) == 2) or (global_var(GIZMO_DEAD) == 1)) then begin
			destroy_object(self_obj);
		end
	end
	if (cur_map_index == MAP_JUNKCSNO) and (global_var(DUDE_ENEMY_JUNK_CITIZEN) == 1) then begin //  GVAR_ENEMY_JUNK_CITIZEN,  MAP == JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			flee_dude
		end
	end
end

procedure destroy_p_proc begin
	if (source_obj == dude_obj) then begin
		if (cur_map_index == MAP_JUNKENT) or (cur_map_index == MAP_JUNKCSNO) or (cur_map_index == MAP_JUNKKILL) then begin //  JUNKTOWN - ANY MAPS
			set_global_var(DUDE_ENEMY_JUNK_CITIZEN, 1);// GVAR_ENEMY_JUNK_CITIZEN
			set_global_var(ENEMY_JUNKTOWN, 1);
		end
	end
	rm_timer_event(self_obj);
	inc_good_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_GENGAMBL, 100));
end

procedure map_enter_p_proc
begin
	if (local_var(0) == 0) then begin
		set_local_var(0, tile_num(self_obj));
	end
	if (not(is_loading_game) and not(obj_is_carrying_obj_pid(self_obj, PID_BOTTLE_CAPS))) then begin
		item_caps_adjust(self_obj, random(0, 200));
	end
	if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		set_self_team(TEAM_JUNKTOWNER );// was 24 in Vanilla
		if ((global_var(CAPTURE_GIZMO) == 2) or (global_var(GIZMO_DEAD) == 1)) then begin
			destroy_object(self_obj);
		end
	end
end

procedure talk_p_proc begin
	script_overrides;
	if dude_is_armed then begin
		call gambler1;
	end
	else begin
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			call gambler3;
		end
		else begin
			if (global_var(KILL_KILLIAN) == 2) then begin
				call gambler4;
			end
			else begin
				if (global_var(PLAYER_REPUTATION_GENERAL) < -10) then begin
					call gambler2;
				end
				else begin
					call gambler5;
				end
			end
		end
	end
end

procedure timed_event_p_proc
begin
	weapon_check := 0;
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var(ENEMY_JUNKTOWN, 1);
	end
end

procedure gambler1
begin
	variable LVar0 := 0;
	weapon_check := 1;
	LVar0 := random(1, 3);
	if (LVar0 == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_GENGAMBL, 101), 0);
	end
	else begin
		if (LVar0 == 2) then begin
			float_msg(self_obj, message_str(SCRIPT_GENGAMBL, 102), 0);
		end
		else begin
			if (LVar0 == 3) then begin
				if (dude_is_male) then begin
					float_msg(self_obj, message_str(SCRIPT_GENGAMBL, 103), 0);
				end
				else begin
					float_msg(self_obj, message_str(SCRIPT_GENGAMBL, 104), 0);
				end
			end
		end
	end
end

procedure gambler2
begin
	float_msg(self_obj, message_str(SCRIPT_GENGAMBL, random(105, 107)), 0);
end

procedure gambler3
begin
	float_msg(self_obj, message_str(SCRIPT_GENGAMBL, random(108, 110)), 0);
end

procedure gambler4
begin
	float_msg(self_obj, message_str(SCRIPT_GENGAMBL, random(111, 113)), 0);
end

procedure gambler5
begin
	variable LVar0 := 0;
	LVar0 := random(1, 6);
	if (LVar0 == 1) then begin
		if ((game_time_hour >= 700) and (game_time_hour < 1800)) then begin
			float_msg(self_obj, message_str(SCRIPT_GENGAMBL, 114), 0);
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_GENGAMBL, 115), 0);
		end
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_GENGAMBL, 114 + LVar0), 0);
	end
end

procedure pickup_p_proc
begin
	tmp_hostile := 1;
end


