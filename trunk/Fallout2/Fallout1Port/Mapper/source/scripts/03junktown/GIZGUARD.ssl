#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure map_enter_p_proc;//    script_action == 15
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure timed_event_p_proc;//    script_action == 22

procedure GizGuard00;
procedure GizGuard01;
procedure GizGuard02;
procedure GizGuard03;
procedure GizGuard04;
procedure GizGuard05;
procedure GizGuard06;
procedure GizGuard07;
procedure GizGuard08;
procedure GizGuardEnd;
procedure items_held;

variable RightHand := 0;
variable LeftHand := 0;
variable PIDright := 0;
variable PIDleft := 0;
variable SubtypeWEP := 0;

variable hostile;
variable sneak_checked;

import variable removal_ptr;
import variable weapon_checked;



procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, 7) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, 46) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 90) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, 93) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, 17) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, 17); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 2) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, 2); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 1) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, 1); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 74) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, 74); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, 113) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, 113); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
		call critter_p_proc;
	end
	else begin
		if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
			call destroy_p_proc;
		end
		else begin
			if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
				call map_enter_p_proc;
			end
			else begin
				if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
					call pickup_p_proc;
				end
				else begin
					if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
						call talk_p_proc;
					end
					else begin
						if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
							call timed_event_p_proc;
						end
					end
				end
			end
		end
	end
end

procedure items_held
begin
	SubtypeWEP := 0;
	if critter_inven_obj(dude_obj, 1) then begin
		RightHand := critter_inven_obj(dude_obj, 1);
		PIDright := obj_pid(RightHand);
		if obj_item_subtype(RightHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		RightHand := 0;
		PIDright := 0;
	end
	if critter_inven_obj(dude_obj, 2) then begin
		LeftHand := critter_inven_obj(dude_obj, 2);
		PIDleft := obj_pid(LeftHand);
		if obj_item_subtype(LeftHand) == 3 then begin
			SubtypeWEP := 1;
		end
	end
	else begin
		LeftHand := 0;
		PIDleft := 0;
	end
end

procedure critter_p_proc
begin
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			hostile := 0;
			attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
		end
	end
	else begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
				call items_held;
				if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
					call GizGuard00;//dialogue_system_enter;
				end
				else begin
					if (using_skill(dude_obj, 8) and not(sneak_checked)) then begin
						call GizGuard01;//dialogue_system_enter;
					end
				end
			end
		end
	end
	if (global_var(ENEMY_GIZMOS_GANG) == 1) then begin// - ENEMY_GIZMOS_GANG
		hostile := 1;
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);
//
//BEGIN WEAPON DROP MOD CODE
//--original code and mod by:--
// Josan12 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=18843) and 
// MIB88 (http://www.nma-fallout.com/forum/profile.php?mode=viewprofile&u=4464)
//
	if global_var(WEAPONDROP_MOD_STATUS) and not(global_var(FIXT_BUGFIXES_ONLY)) and (critter_inven_obj(self_obj, 1) or critter_inven_obj(self_obj, 2)) then begin// only run if Weapon Drop is enabled, AND Fixes Only is disabled, AND actually holding something
		variable item1 := 0;  variable item2 := 0;  variable armor := 0;  variable item1PID := 0;  variable item2PID := 0;  variable armorPID := 0;  variable drophex := 0;  if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop BEGINS");  end
		if (critter_inven_obj(self_obj, 1) > 0) then begin  item1 := critter_inven_obj(self_obj, 1);  end    if (critter_inven_obj(self_obj, 2) > 0) then begin  item2 := critter_inven_obj(self_obj, 2);  end    if (critter_inven_obj(self_obj, 0) > 0) then begin  armor := critter_inven_obj(self_obj, 0);  end    if item1 then begin  item1PID := obj_pid(item1);  end    if item2 then begin  item2PID := obj_pid(item2);  end    if armor then begin  armorPID := obj_pid(armor);  end    drophex := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(global_var(WEAPONDROP_MOD_MINIMUM), global_var(WEAPONDROP_MOD_MAXIMUM)));
		if (item1PID != 19) and (item1PID != 21) and (item1PID != 79) and (item1PID != 205) and (item1PID != 234) and (item1PID != 235) and (item1PID != 244) and (item2PID != 19) and (item2PID != 21) and (item2PID != 79) and (item2PID != 205) and (item2PID != 234) and (item2PID != 235) and (item2PID != 244) then begin//Don't drop if:  Rock (19), Brass Knuckles (21), Flare (79), Lit Flare (205), Spiked Knuckles (234), Power Fist (235), or Gold Nugget (244)
			if (item1 > 0) then begin if (obj_item_subtype(item1) == 3) then begin
			rm_obj_from_inven(self_obj, item1);  move_to(item1, drophex, elevation(self_obj));  end  end
			if (item2 > 0) then begin if (obj_item_subtype(item2) == 3) then begin
			rm_obj_from_inven(self_obj, item2);  move_to(item2, drophex, elevation(self_obj));  end  end    if global_var(DEBUG_MODE_MESSAGES_ON) then begin  debug_msg("Weapon Drop ENDS");  end
		end
	end
//END WEAPON DROP MOD CODE
//
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_GIZMOS_GANG, 1);// ENEMY_GIZMOS_GANG
	end
	if source_obj == dude_obj then begin
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
	end
	rm_timer_event(self_obj);
end

procedure map_enter_p_proc
begin
	if (not(metarule(22, 0)) and not(obj_is_carrying_obj_pid(self_obj, 41))) then begin
		item_caps_adjust(self_obj, random(0, 10));
	end
	critter_add_trait(self_obj, 1, 6, 13);
	if ((global_var(GIZMO_DEAD) == 1) or (global_var(CAPTURE_GIZMO) == 2)) then begin
		if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
		move_to(self_obj, 7000, 0);
		removal_ptr := self_obj;
	end
end

procedure pickup_p_proc
begin
	hostile := 1;
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	call items_held;
	if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
		call GizGuard00;
	end
	else begin
		if (using_skill(dude_obj, 8)) then begin
			call GizGuard01;
		end
		else begin
			if (not(local_var(0))) then begin
				start_gdialog(639, self_obj, 4, -1, -1);
				gsay_start;
				call GizGuard02;
				gsay_end;
				end_dialogue;
			end
			else begin
				call GizGuard07;
			end
		end
	end
end

procedure timed_event_p_proc
begin
	if (fixed_param == 1) then begin
		call items_held;
		if (PIDright != 79) and (PIDright != 205) and (PIDleft != 79) and (PIDleft != 205) and (SubtypeWEP == 1) then begin
			float_msg(self_obj, message_str(639, random(100, 103)), 2);
			hostile := 1;
		end
		else begin
			weapon_checked := 0;
		end
	end
	else begin
		if (fixed_param == 2) then begin
			if (using_skill(dude_obj, 8)) and obj_can_see_obj(self_obj, dude_obj) then begin
				hostile := 1;
			end
			else begin
				sneak_checked := 0;
			end
		end
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_GIZMOS_GANG, 1);// ENEMY_GIZMOS_GANG
	end
end

procedure GizGuard00
begin
	float_msg(self_obj, message_str(639, random(132, 133)), 2);//{132}{}{No weapons in here!} OR {133}{}{Hey! You! Put your piece away!}
	weapon_checked := 1;
	add_timer_event(self_obj, game_ticks(10), 1);//ticks was 5
end

procedure GizGuard01
begin
	float_msg(self_obj, message_str(639, random(104, 106)), 2);//{104}{}{Quit sneaking around!}, {105}{}{No sneaking around in here!}, {106}{}{Hey, you! Quit trying to hide, or get out!}
	sneak_checked := 1;
	add_timer_event(self_obj, game_ticks(10), 2);//ticks was 5
end

procedure GizGuard02
begin
	set_local_var(0, 1);
	gsay_reply(639, 107);//{107}{}{What?}
	giq_option(4, 639, 108, GizGuard03, 50);//{108}{}{Hey, can I ask you a few questions?}
	giq_option(4, 639, 109, GizGuard04, 50);//{109}{}{Can you spare a few caps?}
	giq_option(4, 639, 110, GizGuardEnd, 50);//{110}{}{Nevermind, sorry.}
	giq_option(-3, 639, 111, GizGuard08, 51);//{111}{}{Uuuh?}
end

procedure GizGuard03
begin
	if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
		gsay_reply(639, 112);//{112}{}{I'm on duty. Make it quick.}
		giq_option(4, 639, 114, GizGuard05, 50);//{114}{}{Can you tell me about your boss?}
		giq_option(4, 639, 115, GizGuard06, 50);//{115}{}{What else is there around this town?}
	end
	else begin
		gsay_message(639, 113, 51);//{113}{}{No. Go away.}
	end
end

procedure GizGuard04
begin
	gsay_message(639, random(116, 119), 50);//{116}{}{What are you, stupid? Go away.}, {117}{}{No. Go beg somewhere else.}, {118}{}{Buzz off.}, {119}{}{We don't have a use for paupers here.}
end

procedure GizGuard05
begin
	gsay_message(639, 120, 50);//{120}{}{Gizmo's a fair man. Pay's good, work's easy. Don't make trouble and everyone will be happy.}
end

procedure GizGuard06
begin
	gsay_message(639, random(121, 124), 50);
//
//{121}{}{Go catch a few drinks at the Skum Pitt. Good grog. Opens at four. Now leave me alone.}, {122}{}{Why don't you go shopping at Killian's? His store is southeast of here. Now beat it.}
//{123}{}{Talk to the dealers.}, {124}{}{Hey, if you wanna have a little fun, stop by the Crash House and ask for Sinthia. She's worth it.}
end

procedure GizGuard07
begin
	float_msg(self_obj, message_str(639, random(125, 130)), 0);
/*
{125}{}{No cheating.}
{126}{}{Debtors will be shot.}
{127}{}{Boy, my neck hurts.}
{128}{}{This job bites the Bone.}
{129}{}{I love this place.}
{130}{}{Think I'll visit Sinthia tonight.}
*/
end

procedure GizGuard08
begin
	gsay_message(639, 131, 50);//{131}{}{Get outta here, you moron.}
end

procedure GizGuardEnd
begin
end

