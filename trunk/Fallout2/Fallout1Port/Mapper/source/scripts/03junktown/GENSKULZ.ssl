#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure map_enter_p_proc;//    script_action == 15
procedure map_exit_p_proc;//    script_action == 16
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure timed_event_p_proc;//    script_action == 22

procedure set_sleep_tile;

import variable Neal_ptr;
import variable Skul_target;
import variable Trish_ptr;

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;

variable dest_tile := 7000;
variable hostile;
variable sleeping_disabled;
variable waypoint;

#define LVAR_Sleeping 							(4)

procedure start begin
	
end

procedure critter_p_proc
begin
	if (global_var(DUDE_ENEMY_SKULZ) == 1) then begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			attack(dude_obj);
		end
	end
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
			if ((map_var(2) == 2) and (waypoint == 0)) then begin
				waypoint := 1;
				dest_tile := 26297;
				sleeping_disabled := 1;
			end
			else begin
				if ((global_var(DESTROY_VATS_10) == 1) and (waypoint == 0)) then begin
					waypoint := 1;
					sleeping_disabled := 1;
					add_timer_event(self_obj, game_ticks(8), 3);
				end
			end
			if (waypoint != 0) then begin
				if (tile_distance(tile_num(self_obj), dest_tile) > 3) then begin
					animate_move_obj_to_tile(self_obj, dest_tile, 0);
				end
				else begin
					if (waypoint == 1) then begin
						if (map_var(2) == 0) then begin
							dest_tile := 33519;
						end
						else begin
							dest_tile := 20076;
							waypoint := 2;
						end
					end
				end
			end
			if (sleeping_disabled == 0) then begin
				sleeping
			end
		end
		else begin
			if (cur_map_index == MAP_JUNKKILL) then begin //  JUNKTOWN - KILLIAN, CRASH HOUSE
				if ((global_var(BUST_SKULZ) != 2) and (sleeping_disabled == 0)) then begin
					sleeping
				end
			end
		end
	end
end

procedure destroy_p_proc
begin
	if (home_tile == 20082) then begin
		Skul_target := 0;
	end
	if (cur_map_index == MAP_JUNKCSNO) and (map_var(2) == 1) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		set_map_var(0, (map_var(0) - 1));
	end
	rm_timer_event(self_obj);

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(DUDE_ENEMY_SKULZ, 1);// Enemy of Skulz
	end
	inc_evil_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_GENSKULZ, 100));
end

procedure map_enter_p_proc
begin
	if (not(local_var(5))) then begin
		set_local_var(5, tile_num(self_obj));
	end
	home_tile := local_var(5);
	if (cur_map_index == MAP_JUNKENT) then begin //  JUNKTOWN - ENTRANCE, MORBID, LARS
		if (global_var(BUST_SKULZ) != 2) then begin
			if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
		end
		else begin
			if (global_var(GVAR_JUNKTOWN_WAS_INVADED) != 1) then begin
				if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 0);    end//  MAKE VISIBLE
			end
			else begin
				kill_critter(self_obj, ANIM_stand);
			end
		end
	end
	if (cur_map_index != MAP_JUNKCSNO) then begin
		if (cur_map_index == MAP_JUNKENT) then begin //  JUNKTOWN - ENTRANCE, MORBID, LARS
			if (global_var(BUST_SKULZ) == 2) then begin
				add_timer_event(self_obj, game_ticks(random(30, 60)), 1);
			end
		end
		else begin
			if (cur_map_index == MAP_JUNKKILL) then begin //  JUNKTOWN - KILLIAN, CRASH HOUSE
				add_timer_event(self_obj, game_ticks(random(30, 60)), 1);
			end
		end
	end
	else begin
		if ((global_var(DESTROY_VATS_10) == 1) and (map_var(2) == 0)) then begin
			destroy_object(self_obj);
		end
	end
	critter_add_trait(self_obj, 1, 6, 14);
	critter_add_trait(self_obj, 1, 5, 59);
	if (global_var(BUST_SKULZ) == 2) then begin
		if (cur_map_index == MAP_JUNKENT) then begin //  JUNKTOWN - ENTRANCE, MORBID, LARS
			if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 0);    end//  MAKE VISIBLE
		end
		else begin
			destroy_object(self_obj);
		end
	end
	call set_sleep_tile;
	if (home_tile == 20082) and (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		Skul_target := self_obj;
	end
end

procedure map_exit_p_proc
begin
	if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		if ((global_var(DESTROY_VATS_10) == 1) and (map_var(2) == 0)) then begin
			destroy_object(self_obj);
		end
	end
end

procedure pickup_p_proc
begin
	float_msg(self_obj, message_str(SCRIPT_GENSKULZ, 101), 2);
	hostile := 1;
end

procedure talk_p_proc
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	dude_look_at_critter;
	if (cur_map_index == MAP_JUNKENT) then begin //  JUNKTOWN - ENTRANCE, MORBID, LARS
		set_local_var(6, 104);
	end
	else begin
		if (cur_map_index == MAP_JUNKCSNO) and (map_var(2) == 2) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
			set_local_var(6, 112);
		end
		else begin
			LVar1 := random(101, 105);
			LVar1 := random(101, 105);
			LVar1 := random(101, 105);
			set_local_var(6, LVar1);
		end
	end
	LVar0 := message_str(SCRIPT_GENSKULZ, local_var(6));
	if (local_var(4) == 1) then begin
		LVar0 := message_str(SCRIPT_GENSKULZ, 106);
	end
	float_msg(self_obj, LVar0, 0);
end

procedure timed_event_p_proc
begin
	if (fixed_param == 1) then begin
		if ((local_var(4) == 0) and (combat_is_initialized == 0)) then begin
			if (random(0, 1)) then begin
				float_msg(self_obj, message_str(SCRIPT_GENSKULZ, random(107, 112)), 0);
			end
			else begin
				animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(5), random(0, 3), random(0, 5)), 0);
			end
		end
		add_timer_event(self_obj, game_ticks(random(30, 60)), 1);
	end
	else begin
		if ((fixed_param == 2) and (Trish_ptr != 0) and (Neal_ptr != 0)) then begin
			float_msg(self_obj, message_str(SCRIPT_SHARK, 102), 2);
			rm_timer_event(Trish_ptr);
			rm_timer_event(Neal_ptr);
			reg_anim_func(2, self_obj);
			reg_anim_func(1, 1);
			reg_anim_obj_move_to_obj(self_obj, Trish_ptr, -1);
			reg_anim_animate(self_obj, 16, -1);
			reg_anim_animate(Trish_ptr, 20, 4);
			reg_anim_animate(Trish_ptr, 48, -1);
			reg_anim_animate(Trish_ptr, 37, -1);
			reg_anim_obj_run_to_tile(Trish_ptr, 19889, -1);
			reg_anim_func(3, 0);
			add_timer_event(Neal_ptr, game_ticks(3), 1);
		end
		else begin
			if (fixed_param == 3) then begin
				dest_tile := 26297;
				sleeping_disabled := 1;
			end
		end
	end
end

procedure set_sleep_tile
begin
	if (cur_map_index == MAP_JUNKKILL) then begin //  JUNKTOWN - KILLIAN, CRASH HOUSE
		if (home_tile == 13502) then begin
			sleep_tile := 13093;
		end
		else begin
			if (home_tile == 13516) then begin
				sleep_tile := 13719;
			end
			else begin
				if (home_tile == 13717) then begin
					sleep_tile := 13721;
				end
			end
		end
		sleep_time := random(2200, 2215);
		wake_time := random(800, 815);
	end
	else begin
		if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
			sleep_tile := 7000;
			sleep_time := 300;
			wake_time := 1600;
			night_person := 1;
		end
		else begin
			if (cur_map_index == MAP_JUNKENT) then begin //  JUNKTOWN - ENTRANCE, MORBID, LARS
				sleep_tile := home_tile;
				sleep_time := 2200;
				wake_time := 1000;
			end
		end
	end
end

