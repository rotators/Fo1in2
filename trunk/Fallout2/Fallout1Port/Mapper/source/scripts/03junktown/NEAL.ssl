/*

	Junktown - Neal, the bartender

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_NEAL
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure description_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure use_obj_on_p_proc;

procedure Neal01;
procedure Neal02;
procedure Neal03;
procedure Neal04;
procedure Neal05;
procedure Neal06;
procedure Neal07;
procedure Neal08;
procedure Neal09;
procedure Neal10;
procedure Neal11;
procedure NealEnd;

procedure NealCola;
procedure NealBeer;
procedure NealBooze;

import variable messing_with_SkumDoor;
import variable Neal_closing_door;
import variable Neal_ptr;
import variable Skul_target;
import variable SkumDoor_ptr;
import variable Trish_ptr;

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;

variable annoyed;
variable tmp_hostile;
variable initial :=  0;
variable item;
variable moving_disabled;
variable sfx_name;
variable sleeping_disabled;
variable flag149;
variable change_team;

#define LVAR_Sleeping 							(9)

procedure start
begin


	if not(initial) then begin
		initial :=  1;
		Neal_ptr := self_obj;
		night_person := 1;
		wake_time := 1300;
		sleep_time := 410;
		home_tile := 19477;
		sleep_tile := 17876;
		change_team := 0;
		if ((global_var( GVAR_DESTROY_VATS_15 ) == 1) and (map_var(0) == 4)) then begin
			/* TEAM_NUM */  set_team( Neal_ptr, TEAM_PLAYER );
			change_team := 1;
		end
		else begin
			set_self_team(TEAM_JUNKTOWNER );
		end
		set_self_ai( AI_JUNKTOWN_GUARD );
	end
end

procedure critter_p_proc
begin
	if ((map_var(0) == 0) and (change_team == 1)) then begin
		set_team( Neal_ptr, TEAM_JUNKTOWNER );
		change_team := 0;
	end
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if (sleeping_disabled == 0) then begin
		sleeping
	end
	if ((game_time_hour > wake_time) or (game_time_hour < sleep_time) and (moving_disabled == 0)) then begin
		if (self_tile != home_tile) then begin
			animate_move_obj_to_tile(self_obj, home_tile, 0);
		end
		else begin
			if (self_cur_rot != 2) then begin
				anim(self_obj, 1000, 2);
			end
		end
	end
	if ((map_var(4) == 1) and (local_var(10) == 0) and (local_var(9) == 0) and (tile_distance_objs(self_obj, dude_obj) < 12)) then begin
		float_msg(self_obj, message_str(SCRIPT_NEAL, 133), 2);
		tmp_hostile := 1;
		set_local_var(10, 1);
	end
	/* has how many? */    if (self_item_count( PID_URN )) then begin
		destroy_object(self_item( PID_URN ));
	end
	if (messing_with_SkumDoor == 1) then begin
		reg_anim_func(2, self_obj);
		messing_with_SkumDoor := 2;
		moving_disabled := 1;
		sleeping_disabled := 1;
		if (SkumDoor_ptr == 0) then begin
			annoyed := 1;
		end
		if (annoyed) then begin
			float_msg(self_obj, message_str(SCRIPT_NEAL, 149), 2);
			Neal_closing_door := 0;
			if (SkumDoor_ptr != 0) then begin
				use_obj(SkumDoor_ptr);
			end
			else begin
				messing_with_SkumDoor := 3;
			end
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_NEAL, 148), 2);
			Neal_closing_door := 1;
			if (SkumDoor_ptr != 0) then begin
				use_obj(SkumDoor_ptr);
			end
			else begin
				messing_with_SkumDoor := 3;
			end
		end
	end
	if (messing_with_SkumDoor == 3) then begin
		messing_with_SkumDoor := 0;
		sleeping_disabled := 0;
		moving_disabled := 0;
		if (annoyed) then begin
			annoyed := 0;
			tmp_hostile := 1;
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_NEAL, 147), 2);
			annoyed := 1;
		end
	end
	if (SkumDoor_ptr != 0) then begin
		if ((game_time_hour == 409) and obj_is_open(SkumDoor_ptr)) then begin
			moving_disabled := 1;
			sleeping_disabled := 1;
			Neal_closing_door := 1;
			use_obj(SkumDoor_ptr);
		end
		if ((game_time_hour == 1400) and not(obj_is_open(SkumDoor_ptr))) then begin
			moving_disabled := 1;
			sleeping_disabled := 1;
			Neal_closing_door := 0;
			use_obj(SkumDoor_ptr);
		end
	end
	if (global_var( GVAR_DUDE_ENEMY_JUNK_CITIZEN ) == 1) then begin//  GVAR_ENEMY_JUNK_CITIZEN == 1
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			attack(dude_obj);
		end
	end
	if ((map_var(2) == 1) and (flag149 == 0)) then begin
		float_msg(self_obj, message_str(SCRIPT_NEAL, 149), 7);
		flag149 := 1;
	end
end

procedure description_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_NEAL, 102));
	script_overrides;
end

procedure damage_p_proc
begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_DUDE_ENEMY_JUNK_CITIZEN, 1 );// GVAR_ENEMY_JUNK_CITIZEN
		set_global_var( GVAR_ENEMY_JUNKTOWN, 1 );
	end
end

procedure destroy_p_proc
begin
	Neal_ptr := 0;
	set_global_var( GVAR_IS_NEAL_DEAD, 1 );// Neal status
	rm_timer_event(self_obj);

	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_DUDE_ENEMY_JUNK_CITIZEN, 1 );// GVAR_ENEMY_JUNK_CITIZEN
		set_global_var( GVAR_ENEMY_JUNKTOWN, 1 );
	end
	inc_good_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	if (local_var(4) == 1) then begin
		display_msg(message_str(SCRIPT_NEAL, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_NEAL, 101));
	end
	script_overrides;
end

procedure pickup_p_proc
begin
	float_msg(self_obj, message_str(SCRIPT_NEAL, 103), 2);
	tmp_hostile := 1;
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	if (self_tile == home_tile) then begin
		if ((game_time_hour >= 1300) and (game_time_hour < 1600)) then begin
			float_msg(self_obj, message_str(SCRIPT_NEAL, 104), 0);
		end
		else begin
			/* has how many? */    if (self_item_count( PID_URN )) then begin
				float_msg(self_obj, message_str(SCRIPT_NEAL, 143), 4);
				set_local_var(11, 1);
				set_global_var( GVAR_DESTROY_VATS_14, 2 );
			end
			else begin
				if ((game_time_hour >= 410) and (game_time_hour <= 1300)) then begin
					float_msg(self_obj, message_str(SCRIPT_NEAL, 105), 0);
				end
				else begin
					start_gdialog(508, self_obj, 4, -1, -1);
					gsay_start;
					call Neal01;
					gsay_end;
					end_dialogue;
					if (local_var(4) == 0) then begin
						if (Skul_target != 0) then begin
							if (tile_distance_objs(self_obj, Skul_target) < 12) then begin
								rm_timer_event(Skul_target);
								add_timer_event(Skul_target, game_ticks(3), 2);
								set_local_var(4, 1);
							end
						end
					end
				end
			end
		end
		if (item) then begin
			add_obj_to_inven(dude_obj, item);
			item := 0;
			float_msg(self_obj, message_str(SCRIPT_NEAL, 132), 3);
		end
	end
end

procedure timed_event_p_proc
begin
	if (fixed_param == 1) then begin
		float_msg(Trish_ptr, message_str(SCRIPT_TRISH, 150), 4);
		if ((global_var( GVAR_TRISH_STATUS ) bwand 2) == 0) then begin
			set_global_var( GVAR_TRISH_STATUS, global_var( GVAR_TRISH_STATUS ) + 2 );
		end
		moving_disabled := 1;
		reg_anim_func(2, self_obj);
		reg_anim_func(1, 1);
		reg_anim_obj_move_to_tile(self_obj, home_tile, -1);
		reg_anim_func(3, 0);
		set_global_var( GVAR_DESTROY_VATS_10, 1 );
		add_timer_event(self_obj, 5, 2);
	end
	else begin
		if (fixed_param == 2) then begin
			if (self_tile != home_tile) then begin
				animate_move_obj_to_tile(self_obj, home_tile, 0);
				add_timer_event(self_obj, 5, 2);
			end
			else begin
				if (self_cur_rot != 3) then begin
					anim(self_obj, 1000, 3);
					add_timer_event(self_obj, 5, 2);
				end
				else begin
					/* has how many? */    if (self_item_count( PID_14MM_PISTOL ) == 0) then begin
						item := create_object( PID_14MM_PISTOL, 0, 0 );
						add_obj_to_inven(self_obj, item);
						item := 0;
					end
					wield_obj_critter(self_obj, self_item( PID_14MM_PISTOL ));
					add_timer_event(self_obj, 5, 3);
				end
			end
		end
		else begin
			if (fixed_param == 3) then begin
				reg_anim_func(2, self_obj);
				reg_anim_func(1, 1);
				reg_anim_animate(self_obj, 43, -1);
				reg_anim_animate(self_obj, 45, -1);
				sfx_name := sfx_build_weapon_name(1, self_item( PID_14MM_PISTOL ), 0, Skul_target);
				reg_anim_play_sfx(self_obj, sfx_name, 0);
				reg_anim_animate(self_obj, 44, -1);
				reg_anim_func(3, 0);
				add_timer_event(self_obj, 5, 4);
			end
			else begin
				if (fixed_param == 4) then begin
					critter_dmg( Skul_target, random(50, 75), DMG_normal_dam );
					float_msg(self_obj, message_str(SCRIPT_NEAL, 146), 2);
					moving_disabled := 0;
				end
				else begin
					if (fixed_param == 5) then begin
						float_msg(self_obj, message_str(SCRIPT_NEAL, 147), 2);
					end
					else begin
						if (fixed_param == 6) then begin
							annoyed := 0;
							sleeping_disabled := 0;
						end
						else begin
							if (fixed_param == 6) then begin
								tmp_hostile := 1;
							end
							else begin
								if (fixed_param == 8) then begin
									moving_disabled := 0;
									sleeping_disabled := 0;
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure use_obj_on_p_proc
begin
	if (obj_pid(obj_being_used_with) == PID_URN) then begin
		rm_obj_from_inven(source_obj, obj_being_used_with);
		add_obj_to_inven(self_obj, obj_being_used_with);
		dialogue_system_enter;
	end
end

procedure Neal01
begin
	gsay_reply(508, 106);
	giq_option( 4, SCRIPT_NEAL, 107, Neal02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_NEAL, 108, Neal03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_NEAL, message_str(SCRIPT_NEAL, 109) + dude_name + message_str(SCRIPT_NEAL, 110), Neal04, NEUTRAL_REACTION );
	if (global_var( GVAR_DESTROY_VATS_14 ) == 0) then begin
		giq_option( 4, SCRIPT_NEAL, 125, Neal09, NEUTRAL_REACTION );
	end
	else begin
		if (global_var( GVAR_DESTROY_VATS_14 ) == 1) then begin
			giq_option( 4, SCRIPT_NEAL, 142, Neal09, NEUTRAL_REACTION );
		end
	end
	giq_option( -3, SCRIPT_NEAL, 111, NealEnd, NEUTRAL_REACTION );
	Goodbyes;
	/* has how many? */    if (dude_item_count( PID_URN )) then begin
		giq_option( 4, SCRIPT_NEAL, 144, Neal11, GOOD_REACTION );
	end
	giq_option( 4, SCRIPT_NEAL, exit_line, NealEnd, NEUTRAL_REACTION );
end

procedure Neal02
begin
	gsay_reply(508, 112);
	giq_option( 0, SCRIPT_NEAL, 113, NealCola, NEUTRAL_REACTION );
	giq_option( 0, SCRIPT_NEAL, 114, NealBeer, NEUTRAL_REACTION );
	giq_option( 0, SCRIPT_NEAL, 115, NealBooze, NEUTRAL_REACTION );
	Goodbyes;
	giq_option( 0, SCRIPT_NEAL, exit_line, NealEnd, NEUTRAL_REACTION );
end

procedure Neal03
begin
	gsay_reply(508, 116);
	if (not(local_var(5))) then begin
		giq_option( 4, SCRIPT_NEAL, 117, Neal06, NEUTRAL_REACTION );
	end
	if ((global_var( GVAR_TYCHO_HIRELING_STATUS ) == 0) and not(local_var(6)) and (tile_distance_objs(self_obj, Tycho_ptr) < 12)) then begin
		giq_option( 4, SCRIPT_NEAL, 118, Neal07, NEUTRAL_REACTION );
	end
	if (not(local_var(8))) then begin
		if ((global_var( GVAR_BUST_SKULZ ) != 2) and (global_var( GVAR_DESTROY_VATS_10 ) == 1)) then begin
			giq_option( 4, SCRIPT_NEAL, 119, Neal08, NEUTRAL_REACTION );
		end
	end
	Goodbyes;
	giq_option( 0, SCRIPT_NEAL, exit_line, NealEnd, NEUTRAL_REACTION );
end

procedure Neal04
begin
	gsay_reply(508, 120);
	giq_option( 4, SCRIPT_NEAL, 121, Neal02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_NEAL, 122, Neal03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_NEAL, 123, NealEnd, NEUTRAL_REACTION );
end

procedure Neal05
begin
	gsay_message(508, 124, 50);
end

procedure Neal06
begin
	set_local_var(5, 1);
	gsay_reply(508, 126);
	giq_option( 4, SCRIPT_NEAL, 127, Neal02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_NEAL, 128, Neal10, NEUTRAL_REACTION );
end

procedure Neal07
begin
	set_local_var(6, 1);
	gsay_reply(508, 129);
	giq_option( 4, SCRIPT_NEAL, 130, Neal03, NEUTRAL_REACTION );
	Goodbyes;
	giq_option( 0, SCRIPT_NEAL, exit_line, NealEnd, NEUTRAL_REACTION );
end

procedure Neal08
begin
	set_local_var(8, 1);
	gsay_reply(508, 131);
	giq_option( 4, SCRIPT_NEAL, 130, Neal03, NEUTRAL_REACTION );
	Goodbyes;
	giq_option( 0, SCRIPT_NEAL, exit_line, NealEnd, NEUTRAL_REACTION );
end

procedure Neal09
begin
	if (global_var( GVAR_DESTROY_VATS_14 ) == 1) then begin
		gsay_reply(508, 145);
	end
	else begin
		gsay_reply(508, 134);
	end
	giq_option( 4, SCRIPT_NEAL, 138, Neal10, NEUTRAL_REACTION );
end

procedure Neal10
begin
	gsay_reply(508, 135);
	giq_option( 4, SCRIPT_NEAL, 139, Neal02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_NEAL, 136, Neal03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_NEAL, 137, NealEnd, NEUTRAL_REACTION );
end

procedure Neal11
begin
	gsay_message(508, 143, 49);
	set_local_var(11, 1);
	set_global_var( GVAR_DESTROY_VATS_14, 2 );
	item := dude_item( PID_URN );
	set_global_var( GVAR_PLAYER_REPUTATION, check_general_rep + 2 );
	rm_obj_from_inven(dude_obj, item);
	add_obj_to_inven(self_obj, item);
end

procedure NealEnd
begin
end

procedure NealCola
begin
	if (local_var(11) == 0) then begin
		if (dude_caps >= 3) then begin
			dude_caps_adjust( -3 );
			item := create_object( PID_NUKA_COLA, 0, 0 );
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_NEAL, 140), 0);
		end
	end
	else begin
		item := create_object( PID_NUKA_COLA, 0, 0 );
	end
end

procedure NealBeer
begin
	if (local_var(11) == 0) then begin
		if (dude_caps >= 5) then begin
			dude_caps_adjust( -5 );
			item := create_object( PID_BEER, 0, 0 );
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_NEAL, 140), 0);
		end
	end
	else begin
		item := create_object( PID_BEER, 0, 0 );
	end
end

procedure NealBooze
begin
	if (local_var(11) == 0) then begin
		if (dude_caps >= 20) then begin
			dude_caps_adjust( -20 );
			item := create_object( PID_BOOZE, 0, 0 );
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_NEAL, 140), 0);
		end
	end
	else begin
		item := create_object( PID_BOOZE, 0, 0 );
	end
end
