/*

	Junktown - Victor

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_VICTOR
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure destroy_p_proc;

procedure Victor01;
procedure Victor02;
procedure Victor03;
procedure Victor04;
procedure Victor05;
procedure Victor06;
procedure Victor07;
procedure VictorEnd;
procedure VictorCombat;
procedure VictorDies;

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;
variable tmp_hostile;

#define LVAR_Sleeping 							(5)

procedure start begin
end

procedure critter_p_proc begin
	if (global_var( GVAR_DUDE_ENEMY_SKULZ ) == 1) then begin
		if (self_can_see_dude) then begin
			attack(dude_obj);
		end
	end
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if (global_var( GVAR_BUST_SKULZ ) != 2) then begin
		sleeping
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	if (local_var(4)) then begin
		display_msg(message_str(SCRIPT_VICTOR, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_VICTOR, 101));
	end
end

procedure map_enter_p_proc
begin
	home_tile := 13907;
	sleep_tile := 13097;
	sleep_time := 2203;
	wake_time := 707;
	set_self_team(TEAM_JUNKTOWN_SKULZ );
	if (global_var( GVAR_BUST_SKULZ ) == 2) then begin
		destroy_object(self_obj);
	end
end

procedure pickup_p_proc
begin
	tmp_hostile := 1;
end

procedure talk_p_proc
begin
	dude_look_at_self;
	if (local_var(5)) then begin
		float_msg(self_obj, message_str(SCRIPT_VICTOR, 116), 0);
	end
	else begin
		start_gdialog(386, self_obj, 4, -1, -1);
		gsay_start;
		if (local_var(4)) then begin
			call Victor06;
		end
		else begin
			call Victor01;
		end
		gsay_end;
		end_dialogue;
	end
end

procedure timed_event_p_proc
begin
	if (dude_can_hear_self) then begin
		float_msg(self_obj, message_str(SCRIPT_VICTOR, 102), 5);
	end
	critter_dmg( self_obj, 250, DMG_normal_dam );
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);

	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_DUDE_ENEMY_SKULZ, 1 );
	end
	inc_evil_critter
	rm_timer_event(self_obj);
end

procedure Victor01
begin
	set_local_var(4, 1);
	gsay_reply(386, 103);
	giq_option( 4, SCRIPT_VICTOR, 104, Victor02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VICTOR, 105, Victor03, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_VICTOR, 106, Victor07, NEUTRAL_REACTION );
end

procedure Victor02
begin
	gsay_message(386, 107, 50);
	call VictorCombat;
end

procedure Victor03
begin
	gsay_reply(386, 108);
	giq_option( 4, SCRIPT_VICTOR, 109, Victor04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VICTOR, 110, Victor02, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_VICTOR, 111, Victor05, NEUTRAL_REACTION );
end

procedure Victor04
begin
	gsay_message(386, 112, 50);
	call VictorCombat;
end

procedure Victor05
begin
	gsay_message(386, 113, 50);
end

procedure Victor06
begin
	gsay_reply(386, 114);
	giq_option( 4, SCRIPT_VICTOR, 117, Victor04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_VICTOR, 118, VictorEnd, NEUTRAL_REACTION );
end

procedure Victor07
begin
	gsay_message(386, 115, 50);
	call VictorDies;
end

procedure VictorEnd
begin
end

procedure VictorCombat
begin
	tmp_hostile := 1;
end

procedure VictorDies
begin
	add_timer_event(self_obj, game_ticks(5), 1);
end
