#include "..\headers\define.h"

#define NAME                    SCRIPT_DOGMEAT

#include "..\headers\command.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure map_enter_p_proc;//    script_action == 15
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure timed_event_p_proc;//    script_action == 22
procedure use_obj_on_p_proc;//    script_action == 7
procedure use_skill_on_p_proc;//    script_action == 8
procedure push_p_proc;

procedure dog_joins_dude;
procedure dog_remove_party;
procedure dog_join_party;
procedure dog_end;
procedure dog00;
procedure StepAside;

import variable Katja_ptr;
import variable Dog_ptr;

variable tmp_hostile;
variable waiting_to_follow;
variable critter_tile1;
variable critter_tile2;
variable critter_tile3;
//variable dest_tile;
variable NewHex;
variable IdenOnce;

// Added by Lexx
#define float_dogmeat(x)    float_msg(self_obj, message_str(SCRIPT_ALLDOGS, x), FLOAT_MSG_NORMAL)
#define Dogmeat_In_Party    (global_var(DOGMEAT_HIRELING_STATUS) == 1)
variable k;

procedure push_p_proc begin
   if (Dogmeat_In_Party) then begin
      k:=random(122,123);
      float_dogmeat(k);
   end
   else begin
      script_overrides;
   end
end

procedure start
begin
	if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
		call critter_p_proc;
	end
	else begin
		if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
			call destroy_p_proc;
		end
		else begin
			if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
				call look_at_p_proc;
			end
			else begin
				if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
					call map_enter_p_proc;
				end
				else begin
					if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
						call pickup_p_proc;
					end
					else begin
						if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
							call talk_p_proc;
						end
						else begin
							if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
								call timed_event_p_proc;
							end
							else begin
								if (script_action == 7) then begin//<-- use_obj_on_p_proc
									call use_obj_on_p_proc;
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure critter_p_proc
begin
	if not(global_var(DOGMEAT_HIRELING_STATUS)) then begin
		if (local_var(4) == 0) then begin
			if (obj_can_see_obj(self_obj, dude_obj)) then begin
				if critter_inven_obj(dude_obj, 0) then begin
					variable JacketCheck;
					JacketCheck := critter_inven_obj(dude_obj, 0);
					if (obj_pid(JacketCheck) == PID_LEATHER_JACKET) then begin
						set_local_var(4, 1);
						display_msg(message_str(SCRIPT_ALLDOGS, 115));
						call dog_joins_dude;
					end
				end
			end
		end
	end
	if (global_var(DOGMEAT_HIRELING_STATUS) == 1) then begin
		if (tile_distance_objs(self_obj, dude_obj) >= 3) then begin
			if (anim_busy(self_obj) == 0) then begin
				dest_tile := tile_num_in_direction(tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 1), random(0, 5), random(0, 2));
				animate_move_obj_to_tile(self_obj, dest_tile, 1 bwor 16);
			end
		end
		else begin
			variable LVar0 := 0;
			LVar0 := random(1, 500);
			if (LVar0 == 100) then begin
				if (anim_busy(self_obj) == 0) then begin
					animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), random(0, 5), 2), 0);
				end
			end
			if (LVar0 == 400) then begin
				if (anim_busy(self_obj) == 0) then begin
					animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), random(0, 5), 1), 0);
				end
			end
		end
	end
	else begin
		if (local_var(4) == 0) then begin
			if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
				if (map_var(8)) then begin
					if (map_var(5)) then begin
						add_timer_event(self_obj, game_ticks(6), 1);
					end
					set_map_var(8, 0);
				end
			end
		end
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);
	set_global_var(DOGMEAT_HIRELING_STATUS, 0);
	party_remove(self_obj);
	party_remove(Dog_ptr);
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
			set_global_var(DOGMEAT_SOMETHING_0, 2);
			set_global_var(DOGMEAT_SOMETHING_1, 2);
			display_msg(message_str(SCRIPT_ALLDOGS, 116));
			give_exp_points(35);
			set_map_var(5, 0);
			set_map_var(9, 0);
		end
	end
	rm_timer_event(self_obj);
	Dog_ptr := 0;
end

procedure look_at_p_proc
begin
	script_overrides;
	if global_var(DOGMEAT_HIRELING_STATUS) != 0 then begin
		if IdenOnce != 1 then begin
			display_msg(message_str(SCRIPT_ALLDOGS, 100));
			IdenOnce := 1;
		end
		else begin
			display_msg(message_str(SCRIPT_ALLDOGS, 110));
		end
	end
	else begin
		display_msg(message_str(SCRIPT_ALLDOGS, 101));
	end
end

procedure map_enter_p_proc
begin
	Dog_ptr := self_obj;
	if not(global_var(HAS_DOGMEAT_REFRESHED)) and (map_first_run) then begin
		variable DogTile := 0;
		variable NewDogmeat := 0;
		DogTile := tile_num(self_obj);
		NewDogmeat := create_object_sid(PID_DOGMEAT, 0, 0, SCRIPT_JUNKDOG);
		Dog_ptr := NewDogmeat;
		move_to(self_obj, 32088, 0);
		critter_attempt_placement(Dog_ptr, DogTile, 0);
		set_global_var(HAS_DOGMEAT_REFRESHED, 1);
		anim(Dog_ptr, 1000, rotation_to_tile(DogTile, 31092));
		destroy_object(self_obj);
	end
	if (global_var(DOGMEAT_HIRELING_STATUS) == 1) then begin
/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 0);
	end
	else begin
/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 6);
	end
	if ((cur_map_index == MAP_JUNKCSNO) and (global_var(DOGMEAT_HIRELING_STATUS) == 0) and (local_var(4) == 0)) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		set_map_var(5, 1);
	end
end

procedure pickup_p_proc
begin
	script_overrides;
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (local_var(4) == 1) then begin// + "and (get_critter_stat(dude_obj, 4) > 3))" previously. --Sduibek
		start_gdialog(968, self_obj, 4, -1, -1);
		gsay_start;
		call dog00;
		gsay_end;
		end_dialogue;
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_ALLDOGS, 102), 0);
	end
	if (Katja_ptr != 0) then begin
		float_msg(Katja_ptr, message_str(SCRIPT_KATJA, 175), 5);
	end
end

procedure timed_event_p_proc
begin
	float_msg(self_obj, message_str(SCRIPT_ALLDOGS, 103), 0);
	if (obj_on_screen(self_obj)) then begin
		play_sfx("MADDOGGR");
	end
	if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		set_map_var(9, 1);
		set_map_var(7, 1);
	end
end

procedure use_obj_on_p_proc
begin
	if ((obj_pid(obj_being_used_with) == PID_MEAT_ON_A_STICK) or (obj_pid(obj_being_used_with) == PID_IGUANA_ON_A_STICK)) then begin
		if (not(global_var(DOGMEAT_HIRELING_STATUS)) and (local_var(4) == 0)) then begin
			set_local_var(4, 1);
			display_msg(message_str(SCRIPT_ALLDOGS, 104));
			call dog_joins_dude;
		end
		else begin
			critter_heal(self_obj, 5);
		end
	end
end

procedure dog_joins_dude
begin
	display_msg(message_str(SCRIPT_ALLDOGS, 114));
	give_exp_points(100);
	set_global_var(DOGMEAT_HIRELING_STATUS, 1);
	set_local_var(4, 1);
	set_global_var(DOGMEAT_SOMETHING_1, 2);
	set_global_var(DOGMEAT_SOMETHING_0, 2);
	party_add(self_obj);
	critter_add_trait(self_obj, 1, 6, 0);
	if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		set_map_var(5, 0);
	end
end

procedure dog_remove_party
begin
	set_global_var(DOGMEAT_HIRELING_STATUS, 0);
	party_remove(self_obj);
end

procedure dog_join_party
begin
	set_global_var(DOGMEAT_HIRELING_STATUS, 1);
	party_add(self_obj);
	float_msg(self_obj, message_str(SCRIPT_ALLDOGS, 117), 3);
end

procedure dog_end
begin
	float_msg(self_obj, message_str(SCRIPT_ALLDOGS, 102), 3);
end

procedure dog00
begin
	gsay_reply(968, 117);
	if (global_var(DOGMEAT_HIRELING_STATUS) == 0) then begin
		giq_option(4, 968, 118, dog_join_party, 49);
		giq_option(-3, 968, 300, dog_join_party, 49);
	end
	else begin
		giq_option(4, 968, 119, dog_remove_party, 50);
		giq_option(-3, 968, 301, dog_remove_party, 50);
	end
	//giq_option(4, 968, message_str(SCRIPT_ALLDOGS, 302), StepAside, 50);
	//giq_option(4, 968, message_str(SCRIPT_GENCHAT, 197) + message_str(SCRIPT_ALLDOGS, 303), StepAside, 51);
	giq_option(4, 968, 120, dog_end, 49);
	//giq_option(-3, 766, 194, StepAside, 50);
	giq_option(-3, 968, 304, dog_end, 49);
end

procedure StepAside
begin
	variable LVar0 := 0;
	NewHex := 0;
	LVar0 := random(0, 5);
	LVar0 := random(0, 5);
	LVar0 := random(0, 5);
	if (LVar0 == 0) then begin
		NewHex := tile_num(self_obj) - 400;
	end
	if (LVar0 == 1) then begin
		NewHex := tile_num(self_obj) - 202;
	end
	if (LVar0 == 2) then begin
		NewHex := tile_num(self_obj) - 198;
	end
	if (LVar0 == 3) then begin
		NewHex := tile_num(self_obj) + 400;
	end
	if (LVar0 == 4) then begin
		NewHex := tile_num(self_obj) + 202;
	end
	if (LVar0 == 5) then begin
		NewHex := tile_num(self_obj) + 198;
	end
	script_overrides;
	move_to(self_obj, NewHex, elevation(self_obj));
	script_overrides;
end

procedure use_skill_on_p_proc
begin
	if (action_being_used == SKILL_STEAL) then begin//-- STEAL
		script_overrides;
		display_msg(message_str(SCRIPT_GENCHAT, 211));
		script_overrides;
	end
end
