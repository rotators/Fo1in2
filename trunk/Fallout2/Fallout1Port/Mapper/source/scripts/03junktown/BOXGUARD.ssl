/*

	Junktown - boxing ring guard

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_BOXGUARD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure map_enter_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

variable home_tile := 7000;
variable tmp_hostile;
variable sfx_name;

import variable challenger_ptr;
import variable Saul_loses;
import variable Saul_wins;
import variable shot_challenger;

procedure start begin
end

procedure critter_p_proc begin
	if (global_var(DUDE_ENEMY_JUNK_BOXER) == 1) then begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			attack(dude_obj);
		end
	end
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (Saul_loses) then begin
			if ((obj_pid(challenger_ptr) == PID_RADSCORPION) or (obj_pid(challenger_ptr) == PID_GREATER_MOLE_RAT)) then begin
				if (shot_challenger == 0) then begin
					Saul_loses := 0;
					anim(self_obj, 1000, 5);
					float_msg(self_obj, message_str(SCRIPT_BOXGUARD, random(100, 103)), 0);
					reg_anim_func(2, self_obj);
					reg_anim_func(1, 1);
					reg_anim_animate(self_obj, 43, -1);
					reg_anim_animate(self_obj, 45, -1);
					sfx_name := sfx_build_weapon_name(1, self_item( PID_10MM_PISTOL ), 2, challenger_ptr);
					reg_anim_play_sfx(dude_obj, sfx_name, -1);
					reg_anim_animate(challenger_ptr, 14, 4);
					reg_anim_animate(self_obj, 43, -1);
					reg_anim_animate(self_obj, 45, -1);
					sfx_name := sfx_build_weapon_name(1, self_item( PID_10MM_PISTOL ), 2, challenger_ptr);
					reg_anim_play_sfx(dude_obj, sfx_name, -1);
					reg_anim_animate(challenger_ptr, 34, 4);
					reg_anim_animate(self_obj, 44, -1);
					reg_anim_func(3, 0);
					rm_timer_event(self_obj);
					add_timer_event(self_obj, game_ticks(5), 1);
				end
			end
			else begin
				shot_challenger := 1;
			end
		end
		else begin
			if (Saul_wins) then begin
				shot_challenger := 1;
			end
		end
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);

	if (source_obj == dude_obj) then begin
		set_global_var(DUDE_ENEMY_JUNK_BOXER, 1);
	end
	inc_neutral_critter
	rm_timer_event(self_obj);
end

procedure map_enter_p_proc begin
	if junktown_invaded then begin
		kill_critter(self_obj, ANIM_fall_front_sf);
	end
	if (local_var(0) == 0) then begin
		set_local_var(0, tile_num(self_obj));
	end
	home_tile := local_var(0);
	set_self_team(15 );
	if (item_caps_total(self_obj) == 0) then begin
		item_caps_adjust(self_obj, random(10, 25));
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	float_msg(self_obj, message_str(SCRIPT_BOXGUARD, random(106, 107)), 0);
end

procedure timed_event_p_proc
begin
	Saul_loses := 1;
	shot_challenger := 1;
end


