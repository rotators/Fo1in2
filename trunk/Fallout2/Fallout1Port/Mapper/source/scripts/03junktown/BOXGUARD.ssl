#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure destroy_p_proc;//    script_action == 18
procedure map_enter_p_proc;//    script_action == 15
procedure talk_p_proc;//    script_action == 11
procedure timed_event_p_proc;//    script_action == 22

variable home_tile := 7000;
variable hostile;
variable sfx_name;

import variable challenger_ptr;
import variable Saul_loses;
import variable Saul_wins;
import variable shot_challenger;




procedure start
begin
	fixt_critter_healing
	
	if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
		call critter_p_proc;
	end
	else begin
		if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
			call destroy_p_proc;
		end
		else begin
			if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
				call talk_p_proc;
			end
			else begin
				if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
					call timed_event_p_proc;
				end
			end
		end
	end
end

procedure critter_p_proc
begin
	if (global_var(DUDE_ENEMY_JUNK_BOXER) == 1) then begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
		end
	end
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
	else begin
		if (Saul_loses) then begin
			if ((obj_pid(challenger_ptr) == PID_RADSCORPION) or (obj_pid(challenger_ptr) == PID_GREATER_MOLE_RAT)) then begin
				if (shot_challenger == 0) then begin
					Saul_loses := 0;
					anim(self_obj, 1000, 5);
					float_msg(self_obj, message_str(SCRIPT_BOXGUARD, random(100, 103)), 0);
					reg_anim_func(2, self_obj);
					reg_anim_func(1, 1);
					reg_anim_animate(self_obj, 43, -1);
					reg_anim_animate(self_obj, 45, -1);
					sfx_name := sfx_build_weapon_name(1, obj_carrying_pid_obj(self_obj, PID_10MM_PISTOL), 2, challenger_ptr);
					reg_anim_play_sfx(dude_obj, sfx_name, -1);
					reg_anim_animate(challenger_ptr, 14, 4);
					reg_anim_animate(self_obj, 43, -1);
					reg_anim_animate(self_obj, 45, -1);
					sfx_name := sfx_build_weapon_name(1, obj_carrying_pid_obj(self_obj, PID_10MM_PISTOL), 2, challenger_ptr);
					reg_anim_play_sfx(dude_obj, sfx_name, -1);
					reg_anim_animate(challenger_ptr, 34, 4);
					reg_anim_animate(self_obj, 44, -1);
					reg_anim_func(3, 0);
					rm_timer_event(self_obj);
					add_timer_event(self_obj, game_ticks(5), 1);
				end
			end
			else begin
				shot_challenger := 1;
			end
		end
		else begin
			if (Saul_wins) then begin
				shot_challenger := 1;
			end
		end
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(DUDE_ENEMY_JUNK_BOXER, 1);
	end
	if source_obj == dude_obj then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
	end
	rm_timer_event(self_obj);
end

procedure map_enter_p_proc
begin
	if (global_var(JUNKTOWN_WAS_INVADED) == 1) then begin
		kill_critter(self_obj, ANIM_fall_front_sf);
	end
	if (local_var(0) == 0) then begin
		set_local_var(0, tile_num(self_obj));
	end
	home_tile := local_var(0);
	critter_add_trait(self_obj, 1, 6, 15);
	if (item_caps_total(self_obj) == 0) then begin
		item_caps_adjust(self_obj, random(10, 25));
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	float_msg(self_obj, message_str(SCRIPT_BOXGUARD, random(106, 107)), 0);
end

procedure timed_event_p_proc
begin
	Saul_loses := 1;
	shot_challenger := 1;
end
