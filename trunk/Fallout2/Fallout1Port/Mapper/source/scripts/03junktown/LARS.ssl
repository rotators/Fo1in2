/*

	Junktown - Lars

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_LENORE
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure description_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

procedure Lars00;
procedure Lars01;
procedure Lars02;
procedure Lars03;
procedure Lars04;
procedure Lars05;
procedure Lars06;
procedure Lars07;
procedure Lars08;
procedure Lars09;
procedure Lars10;
procedure Lars11;
procedure Lars12;
procedure Lars13;
procedure Lars14;
procedure Lars15;
procedure Lars16;
procedure Lars17;
procedure Lars18;
procedure Lars19;
procedure Lars20;
procedure Lars21;
procedure Lars22;
procedure Lars23;
procedure Lars24;
procedure Lars25;
procedure Lars26;
procedure Lars27;
procedure LarsEnd;

procedure LarsKillNeal;

variable tmp_hostile;
variable initial :=  0;
variable round_counter;
variable Lars_bust_Skulz;
variable Lars_kill_Neal;
variable nail_Gizmo;
variable wait_for_Lars;

#define LVAR_Here_Before   (4)

procedure start begin
end

procedure combat_p_proc begin
	if (cur_map_index != MAP_JUNKCSNO) then begin
		if (fixed_param == COMBAT_SUBTYPE_TURN) then begin
			round_counter := round_counter + 1;
		end
		if (round_counter > 3) then begin
			if (global_var( GVAR_ENEMY_JUNKTOWN ) == 0) then begin
				set_global_var( GVAR_ENEMY_JUNKTOWN, 1 );
				set_global_var( GVAR_PLAYER_REPUTATION, check_general_rep - 5 );
			end
		end
	end
end

procedure critter_p_proc begin
	if ((global_var( GVAR_GIZMO_DEAD ) == 1) and (global_var( GVAR_LARS_DEAD ) == 0) and (CUR_MAP_JUNKCSNO) and (combat_is_initialized == 0)) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		destroy_object(self_obj);
	end
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (map_var(0) == 1) then begin
			dude_caps_adjust( 500 );
			float_msg(self_obj, message_str(SCRIPT_LARS, 162), 3);
			set_map_var(0, 2);
		end
	end
	if (global_var( GVAR_ENEMY_JUNKTOWN ) == 1) then begin
		if (self_can_see_dude) then begin
			attack(dude_obj);
		end
	end
end

procedure description_p_proc begin
	if (is_success(do_check(dude_obj, STAT_pe, dude_awareness))) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_LARS, 103));
	end
	else begin
		script_overrides;
		display_msg(message_str(SCRIPT_LARS, 102));
	end
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_JUNKTOWN, 1 );
	end
end

procedure destroy_p_proc begin
	set_global_var( GVAR_LARS_DEAD, 1 );
	if (CUR_MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		script_overrides;
		display_msg(message_str(SCRIPT_LARS, 168));
	end
	rm_timer_event(self_obj);

	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_JUNKTOWN, 1 );
	end
	inc_good_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc begin
	script_overrides;
	if (local_var(LVAR_Here_Before)) then begin
		display_msg(message_str(SCRIPT_LARS, 101));
	end
	else begin
		display_msg(message_str(SCRIPT_LARS, 100));
	end
end

procedure map_enter_p_proc begin
	if (global_var( GVAR_LARS_DEAD ) == 1) then begin
		destroy_object(self_obj);
	end
	else begin
		if (CUR_MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
			if (global_var( GVAR_GIZMO_DEAD ) == 1) then begin
				destroy_object(self_obj);
			end
			else begin
				set_self_team(TEAM_PLAYER );
			end
		end
		else begin
			set_self_team(TEAM_JUNKTOWN_GUARD );
			if (global_var( GVAR_LARS_N_KILLIAN_ON_CASINO ) == 1) then begin
				if not(is_loading_game) then begin    set_self_invisible;    end//  MAKE INVISIBLE
			end
			else begin
				if not(is_loading_game) then begin    set_self_visible;    end//  MAKE VISIBLE
			end
		end
	end
end

procedure pickup_p_proc begin
	float_msg(self_obj, message_str(SCRIPT_LARS, 104), 0);
	tmp_hostile := 1;
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	start_gdialog(518, self_obj, 4, -1, -1);
	gsay_start;
	if has_rep_childkiller then begin
		call Lars01;
	end
	else begin
		if (global_var( GVAR_ENEMY_JUNKTOWN ) == 1) then begin
			call Lars27;
		end
		else if ((global_var( GVAR_GIZMO_DEAD ) == 1) and (global_var( GVAR_CAPTURE_GIZMO ) != 2)) then begin
			call Lars26;
		end
		else if (global_var( GVAR_CAPTURE_GIZMO ) == 1) then begin
			set_local_var(LVAR_Here_Before, 1);
			call Lars21;
		end
		else if (local_var(LVAR_Here_Before) == 0) then begin
			call Lars00;
		end
		else if (global_var( GVAR_BUST_SKULZ ) == 2) then begin
			call Lars19;
		end
		else begin
			call Lars12;
		end
	end
	gsay_end;
	end_dialogue;
	if (nail_Gizmo) then begin
		nail_Gizmo := 0;
		set_global_var( GVAR_LARS_N_KILLIAN_ON_CASINO, 1 );
		load_map(MAP_JUNKCSNO, 4);
	end
	else if ((global_var( GVAR_BUST_SKULZ ) == 2) and (local_var(5) == 0)) then begin
		set_local_var(5, 1);
		gfade_out(1);
		give_exp_points(500);
		set_global_var( GVAR_PLAYER_REPUTATION, check_general_rep + 3 );
		display_msg(message_str(SCRIPT_LARS, 174));
		game_time_advance(game_ticks(7200));
		gfade_in(1);
	end
	else if (wait_for_Lars) then begin
		gfade_out(1);
		game_time_advance(game_ticks(3000));
		set_global_var( GVAR_CAPTURE_GIZMO, 2 );
		gfade_in(1);
		wait_for_Lars := 0;
	end
	else if (Lars_kill_Neal) then begin
		Lars_kill_Neal := 0;
		set_global_var( GVAR_LARS_N_KILLIAN_ON_CASINO, 1 );
		load_map(MAP_JUNKCSNO, 7);
	end
	else if (Lars_bust_Skulz) then begin
		Lars_bust_Skulz := 0;
		gfade_out(1);
		set_global_var( GVAR_BUST_SKULZ, 2 );
		set_global_var( GVAR_DESTROY_VATS_11, 0 );
		display_msg(message_str(SCRIPT_LARS, 167));
		gfade_in(1);
	end
end

procedure Lars00 begin
	gsay_reply(518, 105);
	giq_option( 4, SCRIPT_LARS, 106, Lars02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_LARS, 107, Lars05, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_LARS, 108, Lars10, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_LARS, 109, Lars20, NEUTRAL_REACTION );
	if (global_var( GVAR_BUST_SKULZ ) == 1) then begin
		giq_option( 6, SCRIPT_LARS, 110, Lars13, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_CAPTURE_GIZMO ) == 1) then begin
		giq_option( 4, SCRIPT_LARS, 161, Lars22, GOOD_REACTION );
	end
	if (global_var( GVAR_DESTROY_VATS_11 ) > (GAME_TIME_IN_DAYS)) then begin
		giq_option( 4, SCRIPT_LARS, 166, Lars24, GOOD_REACTION );
	end
end

procedure Lars01 begin
	gsay_message(518, 111, 51);
	tmp_hostile := 1;
end

procedure Lars02 begin
	gsay_reply(518, 112);
	giq_option( 4, SCRIPT_LARS, 113, Lars03, NEUTRAL_REACTION );
	Goodbyes;
	giq_option( 4, SCRIPT_LARS, exit_line, LarsEnd, NEUTRAL_REACTION );
end

procedure Lars03 begin
	gsay_reply(518, 114);
	giq_option( 4, SCRIPT_LARS, 115, Lars04, NEUTRAL_REACTION );
	Goodbyes;
	giq_option( 4, SCRIPT_LARS, exit_line, LarsEnd, NEUTRAL_REACTION );
end

procedure Lars04 begin
	DownReact
	gsay_message(518, 116, 51);
end

procedure Lars05 begin
	gsay_reply(518, 117);
	giq_option( 4, SCRIPT_LARS, 118, Lars04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_LARS, 119, Lars06, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_LARS, 120, Lars07, NEUTRAL_REACTION );
end

procedure Lars06 begin
	gsay_message(518, 121, 50);
end

procedure Lars07 begin
	gsay_reply(518, 122);
	giq_option( 4, SCRIPT_LARS, 123, Lars08, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_LARS, 124, Lars09, NEUTRAL_REACTION );
end

procedure Lars08 begin
	set_global_var( GVAR_BUST_SKULZ, 1 );
	gsay_message(518, 125, 50);
end

procedure Lars09 begin
	gsay_message(518, 126, 50);
end

procedure Lars10 begin
	variable LVar0 := 0;
	set_local_var(LVAR_Here_Before, 1);
	LVar0 := message_str(SCRIPT_LARS, 128) + dude_name + message_str(SCRIPT_LARS, 129);
	gsay_reply(518, 127);
	giq_option( 4, SCRIPT_LARS, LVar0, Lars11, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_LARS, 130, Lars04, NEUTRAL_REACTION );
	if (global_var( GVAR_CAPTURE_GIZMO ) == 1) then begin
		giq_option( 4, SCRIPT_LARS, 160, Lars22, GOOD_REACTION );
	end
end

procedure Lars11 begin
	variable LVar0 := 0;
	LVar0 := message_str(SCRIPT_LARS, 131) + dude_name + message_str(SCRIPT_LARS, 132);
	gsay_reply(518, LVar0);
	giq_option( 4, SCRIPT_LARS, 133, Lars05, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_LARS, 134, Lars02, NEUTRAL_REACTION );
	Goodbyes;
	giq_option( 4, SCRIPT_LARS, exit_line, LarsEnd, NEUTRAL_REACTION );
end

procedure Lars12 begin
	if (local_var(1) > 1) then begin
		gsay_reply(518, 135);
	end
	else begin
		if (global_var( GVAR_CAPTURE_GIZMO ) == 2) then begin
			gsay_reply(518, 171);
		end
		else begin
			gsay_reply(518, 136);
		end
	end
	if (not(global_var( GVAR_BUST_SKULZ ))) then begin
		giq_option( 4, SCRIPT_LARS, 137, Lars18, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_LARS, 138, LarsEnd, NEUTRAL_REACTION );
	if (global_var( GVAR_SHERRY_TELLS_ON_SKULZ ) and (global_var( GVAR_BUST_SKULZ ) == 1)) then begin
		giq_option( 4, SCRIPT_LARS, 139, Lars14, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_DESTROY_VATS_11 ) > (GAME_TIME_IN_DAYS)) then begin
		giq_option( 4, SCRIPT_LARS, 166, Lars24, GOOD_REACTION );
	end
end

procedure Lars13 begin
	set_local_var(LVAR_Here_Before, 1);
	gsay_reply(518, 140);
	giq_option( 4, SCRIPT_LARS, 141, Lars17, NEUTRAL_REACTION );
	if (global_var( GVAR_SHERRY_TELLS_ON_SKULZ )) then begin
		giq_option( 4, SCRIPT_LARS, 142, Lars16, NEUTRAL_REACTION );
	end
end

procedure Lars14 begin
	gsay_reply(518, 143);
	giq_option( 4, SCRIPT_LARS, 144, Lars15, NEUTRAL_REACTION );
	if (global_var( GVAR_SHERRY_TELLS_ON_SKULZ )) then begin
		giq_option( 4, SCRIPT_LARS, 145, Lars16, NEUTRAL_REACTION );
	end
end

procedure Lars15 begin
	gsay_reply(518, 146);
	giq_option( 4, SCRIPT_LARS, 147, LarsEnd, NEUTRAL_REACTION );
	if (global_var( GVAR_SHERRY_TELLS_ON_SKULZ )) then begin
		giq_option( 4, SCRIPT_LARS, 148, Lars16, NEUTRAL_REACTION );
	end
end

procedure Lars16 begin
	set_global_var( GVAR_BUST_SKULZ, 2 );
	gsay_message(518, 149, 49);
end

procedure Lars17 begin
	DownReact
	gsay_message(518, 150, 51);
end

procedure Lars18 begin
	set_global_var( GVAR_BUST_SKULZ, 1 );
	gsay_reply(518, 151);
	Goodbyes;
	giq_option( 4, SCRIPT_LARS, exit_line, LarsEnd, NEUTRAL_REACTION );
end

procedure Lars19
begin
	gsay_message(518, 152, 50);
end

procedure Lars20
begin
	gsay_message(518, 153, 50);
end

procedure Lars21
begin
	gsay_reply(518, 155);
	giq_option( 4, SCRIPT_LARS, 156, Lars22, GOOD_REACTION );
	giq_option( 4, SCRIPT_LARS, 157, Lars23, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_LARS, 172, Lars22, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_LARS, 173, Lars23, NEUTRAL_REACTION );
end

procedure Lars22
begin
	gsay_message(518, 158, 49);
	nail_Gizmo := 1;
end

procedure Lars23
begin
	gsay_message(518, 159, 50);
	wait_for_Lars := 1;
end

procedure Lars24
begin
	set_global_var( GVAR_DESTROY_VATS_15, 1 );
	gsay_reply(518, 163);
	giq_option( 4, SCRIPT_LARS, 164, Lars25, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_LARS, 165, LarsKillNeal, GOOD_REACTION );
	set_local_var(LVAR_Here_Before, 1);
end

procedure Lars25
begin
	Lars_bust_Skulz := 1;
	set_local_var(5, 1);
end

procedure Lars26
begin
	gsay_message(518, 169, 51);
end

procedure Lars27
begin
	gsay_message(518, 170, 51);
	rm_timer_event(self_obj);
	add_timer_event(self_obj, game_ticks(15), 1);
end

procedure LarsEnd
begin
end

procedure LarsKillNeal
begin
	Lars_kill_Neal := 1;
end



procedure timed_event_p_proc
begin
	tmp_hostile := 1;
end
