#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat_p_proc;//    script_action == 13
procedure critter_p_proc;//    script_action == 12
procedure description_p_proc;//    script_action == 3
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure map_enter_p_proc;//    script_action == 15
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure timed_event_p_proc;//    script_action == 22

procedure Lars00;
procedure Lars01;
procedure Lars02;
procedure Lars03;
procedure Lars04;
procedure Lars05;
procedure Lars06;
procedure Lars07;
procedure Lars08;
procedure Lars09;
procedure Lars10;
procedure Lars11;
procedure Lars12;
procedure Lars13;
procedure Lars14;
procedure Lars15;
procedure Lars16;
procedure Lars17;
procedure Lars18;
procedure Lars19;
procedure Lars20;
procedure Lars21;
procedure Lars22;
procedure Lars23;
procedure Lars24;
procedure Lars25;
procedure Lars26;
procedure Lars27;
procedure LarsEnd;

procedure LarsKillNeal;

variable tmp_hostile;
variable initial :=  0;
variable round_counter;
variable Lars_bust_Skulz;
variable Lars_kill_Neal;
variable nail_Gizmo;
variable wait_for_Lars;

procedure start
begin
	

	if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
		call critter_p_proc;
	end
	else begin
		if (script_action == 3) then begin//DETAILED ON-CLICK DESCRIPTION (Binoculars icon) - description_p_proc
			call description_p_proc;
		end
		else begin
			if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
				call destroy_p_proc;
			end
			else begin
				if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
					call look_at_p_proc;
				end
				else begin
					if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
						call map_enter_p_proc;
					end
					else begin
						if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
							call pickup_p_proc;
						end
						else begin
							if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
								call talk_p_proc;
							end
						end
					end
				end
			end
		end
	end
end

procedure combat_p_proc
begin
	if (cur_map_index != MAP_JUNKCSNO) then begin
		if (fixed_param == 4) then begin
			round_counter := round_counter + 1;
		end
		if (round_counter > 3) then begin
			if (global_var(ENEMY_JUNKTOWN) == 0) then begin
				set_global_var(ENEMY_JUNKTOWN, 1);
				set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) - 5);
			end
		end
	end
end

procedure critter_p_proc
begin
	if ((global_var(GIZMO_DEAD) == 1) and (global_var(LARS_DEAD) == 0) and (cur_map_index == MAP_JUNKCSNO) and (combat_is_initialized == 0)) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		destroy_object(self_obj);
	end
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (map_var(0) == 1) then begin
			item_caps_adjust(dude_obj, 500);
			float_msg(self_obj, message_str(SCRIPT_LARS, 162), 3);
			set_map_var(0, 2);
		end
	end
	if (global_var(ENEMY_JUNKTOWN) == 1) then begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			attack(dude_obj);
		end
	end
end

procedure description_p_proc
begin
	if (is_success(do_check(dude_obj, STAT_pe, has_trait(0, dude_obj, 0)))) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_LARS, 103));
	end
	else begin
		script_overrides;
		display_msg(message_str(SCRIPT_LARS, 102));
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_JUNKTOWN, 1);
	end
end

procedure destroy_p_proc
begin
	set_global_var(LARS_DEAD, 1);
	if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		script_overrides;
		display_msg(message_str(SCRIPT_LARS, 168));
	end
	rm_timer_event(self_obj);

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_JUNKTOWN, 1);
	end
	inc_good_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	if (local_var(4)) then begin
		display_msg(message_str(SCRIPT_LARS, 101));
	end
	else begin
		display_msg(message_str(SCRIPT_LARS, 100));
	end
end

procedure map_enter_p_proc
begin
	if (global_var(LARS_DEAD) == 1) then begin
		destroy_object(self_obj);
	end
	else begin
		if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
			if (global_var(GIZMO_DEAD) == 1) then begin
				destroy_object(self_obj);
			end
			else begin
				critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 0);
			end
		end
		else begin
			critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 12);
			if (global_var(LARS_N_KILLIAN_ON_CASINO) == 1) then begin
				if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
			end
			else begin
				if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 0);    end//  MAKE VISIBLE
			end
		end
	end
end

procedure pickup_p_proc
begin
	float_msg(self_obj, message_str(SCRIPT_LARS, 104), 0);
	tmp_hostile := 1;
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	get_reaction
	start_gdialog(518, self_obj, 4, -1, -1);
	gsay_start;
	if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
		call Lars01;
	end
	else begin
		if (global_var(ENEMY_JUNKTOWN) == 1) then begin
			call Lars27;
		end
		else begin
			if ((global_var(GIZMO_DEAD) == 1) and (global_var(CAPTURE_GIZMO) != 2)) then begin
				call Lars26;
			end
			else begin
				if (global_var(CAPTURE_GIZMO) == 1) then begin
					set_local_var(4, 1);
					call Lars21;
				end
				else begin
					if (local_var(4) == 0) then begin
						call Lars00;
					end
					else begin
						if (global_var(BUST_SKULZ) == 2) then begin
							call Lars19;
						end
						else begin
							call Lars12;
						end
					end
				end
			end
		end
	end
	gsay_end;
	end_dialogue;
	if (nail_Gizmo) then begin
		nail_Gizmo := 0;
		set_global_var(LARS_N_KILLIAN_ON_CASINO, 1);
		load_map(MAP_JUNKCSNO, 4);
	end
	else begin
		if ((global_var(BUST_SKULZ) == 2) and (local_var(5) == 0)) then begin
			set_local_var(5, 1);
			if global_var(FADE_TIMES_INCREASED) then begin
				gfade_out(1);
				gfade_out(1);
			end
			gfade_out(1);
			give_exp_points(500);
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 3);
			display_msg(message_str(SCRIPT_LARS, 174));
			game_time_advance(game_ticks(7200));
			gfade_in(1);
		end
		else begin
			if (wait_for_Lars) then begin
				if global_var(FADE_TIMES_INCREASED) then begin
					gfade_out(1);
					gfade_out(1);
				end
				gfade_out(1);
				game_time_advance(game_ticks(3000));
				set_global_var(CAPTURE_GIZMO, 2);
				gfade_in(1);
				wait_for_Lars := 0;
			end
			else begin
				if (Lars_kill_Neal) then begin
					Lars_kill_Neal := 0;
					set_global_var(LARS_N_KILLIAN_ON_CASINO, 1);
					load_map(MAP_JUNKCSNO, 7);
				end
				else begin
					if (Lars_bust_Skulz) then begin
						Lars_bust_Skulz := 0;
						if global_var(FADE_TIMES_INCREASED) then begin
							gfade_out(1);
							gfade_out(1);
						end
						gfade_out(1);
						set_global_var(BUST_SKULZ, 2);
						set_global_var(DESTROY_VATS_11, 0);
						display_msg(message_str(SCRIPT_LARS, 167));
						gfade_in(1);
					end
				end
			end
		end
	end
end

procedure Lars00
begin
	gsay_reply(518, 105);
	giq_option(4, 518, 106, Lars02, 50);
	giq_option(4, 518, 107, Lars05, 50);
	giq_option(4, 518, 108, Lars10, 50);
	giq_option(-3, 518, 109, Lars20, 50);
	if (global_var(BUST_SKULZ) == 1) then begin
		giq_option(6, 518, 110, Lars13, 50);
	end
	if (global_var(CAPTURE_GIZMO) == 1) then begin
		giq_option(4, 518, 161, Lars22, 49);
	end
	if (global_var(DESTROY_VATS_11) > (game_time / (10 * 60 * 60 * 24))) then begin
		giq_option(4, 518, 166, Lars24, 49);
	end
end

procedure Lars01
begin
	gsay_message(518, 111, 51);
	tmp_hostile := 1;
end

procedure Lars02
begin
	gsay_reply(518, 112);
	giq_option(4, 518, 113, Lars03, 50);
	Goodbyes;
	giq_option(4, 518, exit_line, LarsEnd, 50);
end

procedure Lars03
begin
	gsay_reply(518, 114);
	giq_option(4, 518, 115, Lars04, 50);
	Goodbyes;
	giq_option(4, 518, exit_line, LarsEnd, 50);
end

procedure Lars04
begin
	DownReact
	gsay_message(518, 116, 51);
end

procedure Lars05
begin
	gsay_reply(518, 117);
	giq_option(4, 518, 118, Lars04, 50);
	giq_option(4, 518, 119, Lars06, 50);
	giq_option(6, 518, 120, Lars07, 50);
end

procedure Lars06
begin
	gsay_message(518, 121, 50);
end

procedure Lars07
begin
	gsay_reply(518, 122);
	giq_option(4, 518, 123, Lars08, 50);
	giq_option(4, 518, 124, Lars09, 50);
end

procedure Lars08
begin
	set_global_var(BUST_SKULZ, 1);
	gsay_message(518, 125, 50);
end

procedure Lars09
begin
	gsay_message(518, 126, 50);
end

procedure Lars10
begin
	variable LVar0 := 0;
	set_local_var(4, 1);
	LVar0 := message_str(SCRIPT_LARS, 128) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_LARS, 129);
	gsay_reply(518, 127);
	giq_option(4, 518, LVar0, Lars11, 50);
	giq_option(4, 518, 130, Lars04, 50);
	if (global_var(CAPTURE_GIZMO) == 1) then begin
		giq_option(4, 518, 160, Lars22, 49);
	end
end

procedure Lars11
begin
	variable LVar0 := 0;
	LVar0 := message_str(SCRIPT_LARS, 131) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_LARS, 132);
	gsay_reply(518, LVar0);
	giq_option(4, 518, 133, Lars05, 50);
	giq_option(4, 518, 134, Lars02, 50);
	Goodbyes;
	giq_option(4, 518, exit_line, LarsEnd, 50);
end

procedure Lars12
begin
	if (local_var(1) > 1) then begin
		gsay_reply(518, 135);
	end
	else begin
		if (global_var(CAPTURE_GIZMO) == 2) then begin
			gsay_reply(518, 171);
		end
		else begin
			gsay_reply(518, 136);
		end
	end
	if (not(global_var(BUST_SKULZ))) then begin
		giq_option(4, 518, 137, Lars18, 50);
	end
	giq_option(4, 518, 138, LarsEnd, 50);
	if (global_var(SHERRY_TELLS_ON_SKULZ) and (global_var(BUST_SKULZ) == 1)) then begin
		giq_option(4, 518, 139, Lars14, 50);
	end
	if (global_var(DESTROY_VATS_11) > (game_time / (10 * 60 * 60 * 24))) then begin
		giq_option(4, 518, 166, Lars24, 49);
	end
end

procedure Lars13
begin
	set_local_var(4, 1);
	gsay_reply(518, 140);
	giq_option(4, 518, 141, Lars17, 50);
	if (global_var(SHERRY_TELLS_ON_SKULZ)) then begin
		giq_option(4, 518, 142, Lars16, 50);
	end
end

procedure Lars14
begin
	gsay_reply(518, 143);
	giq_option(4, 518, 144, Lars15, 50);
	if (global_var(SHERRY_TELLS_ON_SKULZ)) then begin
		giq_option(4, 518, 145, Lars16, 50);
	end
end

procedure Lars15
begin
	gsay_reply(518, 146);
	giq_option(4, 518, 147, LarsEnd, 50);
	if (global_var(SHERRY_TELLS_ON_SKULZ)) then begin
		giq_option(4, 518, 148, Lars16, 50);
	end
end

procedure Lars16
begin
	set_global_var(BUST_SKULZ, 2);
	gsay_message(518, 149, 49);
end

procedure Lars17
begin
	DownReact
	gsay_message(518, 150, 51);
end

procedure Lars18
begin
	set_global_var(BUST_SKULZ, 1);
	gsay_reply(518, 151);
	Goodbyes;
	giq_option(4, 518, exit_line, LarsEnd, 50);
end

procedure Lars19
begin
	gsay_message(518, 152, 50);
end

procedure Lars20
begin
	gsay_message(518, 153, 50);
end

procedure Lars21
begin
	gsay_reply(518, 155);
	giq_option(4, 518, 156, Lars22, 49);
	giq_option(4, 518, 157, Lars23, 50);
	giq_option(-3, 518, 172, Lars22, 50);
	giq_option(-3, 518, 173, Lars23, 50);
end

procedure Lars22
begin
	gsay_message(518, 158, 49);
	nail_Gizmo := 1;
end

procedure Lars23
begin
	gsay_message(518, 159, 50);
	wait_for_Lars := 1;
end

procedure Lars24
begin
	set_global_var(DESTROY_VATS_15, 1);
	gsay_reply(518, 163);
	giq_option(4, 518, 164, Lars25, 50);
	giq_option(4, 518, 165, LarsKillNeal, 49);
	set_local_var(4, 1);
end

procedure Lars25
begin
	Lars_bust_Skulz := 1;
	set_local_var(5, 1);
end

procedure Lars26
begin
	gsay_message(518, 169, 51);
end

procedure Lars27
begin
	gsay_message(518, 170, 51);
	rm_timer_event(self_obj);
	add_timer_event(self_obj, game_ticks(15), 1);
end

procedure LarsEnd
begin
end

procedure LarsKillNeal
begin
	Lars_kill_Neal := 1;
end



procedure timed_event_p_proc
begin
	tmp_hostile := 1;
end
