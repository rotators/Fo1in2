#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure description_p_proc;//    script_action == 3
procedure destroy_p_proc;//    script_action == 18
procedure map_enter_p_proc;//    script_action == 15
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure timed_event_p_proc;//    script_action == 22
procedure damage_p_proc;//    script_action == 14

procedure JTGenGrd00;
procedure JTGenGrd00a;
procedure JTGenGrd00b;
procedure JTGenGrd01;
procedure JTGenGrd01a;
procedure JTGenGrd02;
procedure JTGenGrd02a;
procedure JTGenGrd03;
procedure JTGenGrd04;
procedure JTGenGrd05;
procedure JTGenGrd06;
procedure JTGenGrd06a;
procedure JTGenGrd07;
procedure JTGenGrd08;
procedure JTGenGrd08a;
procedure JTGenGrd09;
procedure JTGenGrd16;
procedure JTGenGrd18;
procedure JTGenGrd19;
procedure JTGenGrd20;
procedure JTGenGrdEnd;

import variable weapon_checked;
import variable sneak_checked;
import variable times_caught_sneaking;
import variable removal_ptr;

variable tmp_dest_tile := 7000;
variable tmp_hostile;
variable initial :=  0;
variable sneaking;
variable warned_about_picking;
variable waypoint;

procedure start begin

end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if ((cur_map_index == MAP_JUNKKILL) or (cur_map_index == MAP_JUNKENT)) then begin //  JUNKTOWN - KILLIAN, CRASH HOUSE  [OR]   ENTRANCE, MORBID, LARS
			if (tile_num(self_obj) != local_var(5)) then begin
				animate_move_obj_to_tile(self_obj, local_var(5), 0);
			end
			if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance_objs(self_obj, dude_obj) < 12)) then begin
				if (global_var(ENEMY_JUNKTOWN) == 1) then begin
					float_msg(self_obj, message_str(SCRIPT_JTGENGRD, 138), 2);
					tmp_hostile := 1;
				end
				else begin
					if (dude_is_armed) and (local_var(4) == 0) and (map_var(2) == 0) and (global_var(HIRED_BY_KILLIAN) == 0) and (global_var(CAPTURE_GIZMO) == 0) and (cur_map_index == MAP_JUNKKILL) then begin //  JUNKTOWN - KILLIAN, CRASH HOUSE
						if (not(weapon_checked)) then begin
							weapon_checked := 1;
							add_timer_event(self_obj, game_ticks(10), 1);
							dialogue_system_enter;
						end
					end
					else begin
						if (using_skill( dude_obj, SKILL_SNEAK ) and not(sneak_checked)) then begin
							sneaking := 1;
							sneak_checked := 1;
							add_timer_event(self_obj, game_ticks(5), 2);
							dialogue_system_enter;
						end
						else begin
							if (cur_map_index == MAP_JUNKKILL) then begin //  JUNKTOWN - KILLIAN, CRASH HOUSE
								if ((map_var(8) == 1) and (tile_distance_objs(self_obj, dude_obj) < 8)) then begin
									set_map_var(8, 0);
									float_msg(self_obj, message_str(SCRIPT_JTGENGRD, 136), 2);
									if (warned_about_picking) then begin
										tmp_hostile := 1;
									end
									else begin
										warned_about_picking := 1;
									end
								end
							end
						end
					end
				end
			end
		end
		else begin
			if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
				if (map_var(2) == 2) then begin
					if (waypoint != 0) then begin
						if (tile_distance(tile_num(self_obj), tmp_dest_tile) > 3) then begin
							animate_move_obj_to_tile(self_obj, tmp_dest_tile, 0);
						end
						else begin
							if (waypoint == 1) then begin
								tmp_dest_tile := 23465;
								waypoint := 2;
							end
							else begin
								if (waypoint == 2) then begin
									tmp_dest_tile := 26855;
									waypoint := 3;
								end
								else begin
									if (waypoint == 3) then begin
										destroy_object(self_obj);
									end
								end
							end
						end
					end
					else begin
						destroy_object(self_obj);
					end
				end
			end
		end
	end
	if (global_var(ENEMY_JUNKTOWN) == 1) then begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			attack(dude_obj);
		end
	end
end

procedure description_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_JTGENGRD, 100));
	script_overrides;
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
		if (map_var(2) == 1) then begin
			set_map_var(1, (map_var(1) - 1));
		end
	end
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_JUNKTOWN, 1);
	end
	inc_good_critter
	rm_timer_event(self_obj);
end

procedure map_enter_p_proc
begin
	if (cur_map_index == MAP_JUNKKILL) then begin //  JUNKTOWN - KILLIAN, CRASH HOUSE
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 12);
	end
	else begin
		if (cur_map_index == MAP_JUNKCSNO) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
			critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 0);
			tmp_dest_tile := 23666;
			waypoint := 1;
			if (map_var(2) != 1) then begin
				destroy_object(self_obj);
			end
		end
	end
	if (local_var(5) == 0) then begin
		set_local_var(5, tile_num(self_obj));
	end
end

procedure pickup_p_proc
begin
	float_msg(self_obj, message_str(SCRIPT_JTGENGRD, random(136, 138)), 2);
	tmp_hostile := 1;
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	if (sneaking and (times_caught_sneaking >= 3)) then begin
		call JTGenGrd18;
	end
	else begin
		if (not(local_var(4)) and (dude_is_armed) or (sneaking and (times_caught_sneaking < 3))) then begin
			start_gdialog(37, self_obj, 4, -1, -1);
			gsay_start;
			if (dude_is_armed) then begin
				call JTGenGrd00;
			end
			else begin
				if (sneaking) then begin
					call JTGenGrd06;
				end
			end
			gsay_end;
			end_dialogue;
		end
		else begin
			if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
				call JTGenGrd19;
			end
			else begin
				if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1)) or (local_var(1) == 1)) then begin
					call JTGenGrd09;
				end
				else begin
					if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1)) or (local_var(1) == 3)) then begin
						call JTGenGrd16;
					end
					else begin
						call JTGenGrd20;
					end
				end
			end
		end
	end
end

procedure timed_event_p_proc
begin
	if (fixed_param == 1) then begin
		if (weapon_checked) then begin
			if (dude_is_armed) then begin
				float_msg(self_obj, message_str(SCRIPT_JTGENGRD, 134), 0);
				add_timer_event(self_obj, game_ticks(5), 3);
			end
			else begin
				weapon_checked := 0;
			end
		end
	end
	else begin
		if (fixed_param == 2) then begin
			sneak_checked := 0;
		end
		else begin
			if (fixed_param == 3) then begin
				tmp_hostile := 1;
			end
			else begin
				if (fixed_param == 4) then begin
					float_msg(self_obj, message_str(SCRIPT_JTGENGRD, 139), 0);
				end
			end
		end
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_JUNKTOWN, 1);
	end
end

procedure JTGenGrd00
begin
	DownReact
	gsay_reply(37, 110);
	giq_option(4, 37, 111, JTGenGrd01, 50);
	giq_option(4, 37, 112, JTGenGrd00a, 51);
	giq_option(4, 634, 105, JTGenGrdEnd, 50);
	giq_option(6, 37, 113, JTGenGrd00b, 49);
	giq_option(-3, 37, 114, JTGenGrd05, 50);
end

procedure JTGenGrd00a
begin
	DownReact
	call JTGenGrd02;
end

procedure JTGenGrd00b
begin
	UpReact
	call JTGenGrd04;
end

procedure JTGenGrd01
begin
	gsay_reply(37, 115);
	giq_option(4, 37, 116, JTGenGrd02, 50);
	giq_option(4, 37, 117, JTGenGrd01a, 50);
end

procedure JTGenGrd01a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
		call JTGenGrd03;
	end
	else begin
		call JTGenGrd02;
	end
end

procedure JTGenGrd02
begin
	gsay_reply(37, 118);
	giq_option(4, 37, 119, JTGenGrdEnd, 50);
	giq_option(4, 37, 120, JTGenGrd02a, 51);
end

procedure JTGenGrd02a
begin
	tmp_hostile := 1;
end

procedure JTGenGrd03
begin
	set_local_var(4, 1);
	gsay_message(37, 121, 50);
end

procedure JTGenGrd04
begin
	gsay_message(37, 122, 50);
end

procedure JTGenGrd05
begin
	gsay_message(37, 123, 50);
end

procedure JTGenGrd06
begin
	times_caught_sneaking := times_caught_sneaking + 1;
	add_timer_event(self_obj, game_ticks(5), 2);
	gsay_reply(37, 124);
	giq_option(4, 37, 125, JTGenGrd07, 50);
	giq_option(5, 37, 126, JTGenGrd06a, 50);
	giq_option(-3, 37, 127, JTGenGrd07, 50);
end

procedure JTGenGrd06a
begin
	variable LVar0 := 0;
	LVar0 := -5 * times_caught_sneaking;
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, LVar0))) then begin
		call JTGenGrd08;
	end
	else begin
		call JTGenGrd07;
	end
end

procedure JTGenGrd07
begin
	gsay_message(37, 128, 50);
end

procedure JTGenGrd08
begin
	gsay_reply(37, 130);
	giq_option(5, 37, 131, JTGenGrdEnd, 50);
	if (dude_is_male) then begin
		giq_option(5, 37, 132, JTGenGrd08a, 50);
	end
	else begin
		giq_option(5, 37, 133, JTGenGrd08a, 50);
	end
end

procedure JTGenGrd08a
begin
	if (random(0, 1)) then begin
		DownReact
	end
	else begin
		UpReact
	end
end

procedure JTGenGrd09
begin
	float_msg(self_obj, message_str(SCRIPT_JTGENGRD, random(101, 103)), 51);
end

procedure JTGenGrd16
begin
	float_msg(self_obj, message_str(SCRIPT_JTGENGRD, random(104, 106)), 49);
end

procedure JTGenGrd18
begin
	float_msg(self_obj, message_str(SCRIPT_JTGENGRD, 135), 2);
	add_timer_event(self_obj, game_ticks(5), 3);
end

procedure JTGenGrd19
begin
	display_msg(message_str(SCRIPT_JTGENGRD, 129));
	tmp_hostile := 1;
end

procedure JTGenGrd20
begin
	float_msg(self_obj, message_str(SCRIPT_JTGENGRD, random(107, 109)), 0);
end

procedure JTGenGrdEnd
begin
end

