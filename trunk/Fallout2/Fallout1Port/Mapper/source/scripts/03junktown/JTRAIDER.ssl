#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure map_enter_p_proc;//    script_action == 15
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure timed_event_p_proc;//    script_action == 22
procedure combat_p_proc;//    script_action == 13

procedure Raider0;
procedure Raider1;
procedure Raider2;
procedure Raider3;
procedure Raider4;
procedure Raider5;
procedure Raider6;
procedure Raider7;
procedure Raider8;
procedure Raider9;
procedure Raider10;
procedure Raider10a;
procedure Raider11;
procedure Raider12;
procedure Raider13;
procedure Raider14;
procedure Raider14a;
procedure Raider15;
procedure Raider16;
procedure Raider17;
procedure Raider17a;
procedure Raider17b;
procedure Raider18;
procedure Raider19;
procedure Raider20;
procedure Raider21;
procedure Raider22;
procedure Raider22a;
procedure Raider23;
procedure Raider24;
procedure Raider24a;
procedure Raider25;
procedure Raider26;
procedure Raider27;
procedure Raider27a;
procedure Raider28;
procedure Raider29;
procedure Raider29a;
procedure Raider30;
procedure Raider30a;
procedure Raider31;
procedure Raider32;
procedure Raider33;
procedure Raider34;
procedure Raiderend;

procedure RaiderCombat;
procedure RaiderSnap;
procedure safe;

import variable JTRaider_ptr;
import variable Sinthia_ptr;
import variable award;

variable tmp_hostile;//from old version of script
variable known;//from old version of script
variable pissed;//from old version of script
variable sfx_name;
variable Sinthia_is_safe;
variable shoot_Sinthia;
variable will_negotiate;//from old version of script
variable initial :=  0;
variable line184flag;//from old version of script

procedure start
begin
	

	if (initial == 0) then begin
		initial :=  1;
		JTRaider_ptr := self_obj;
		critter_add_trait( self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, TEAM_JUNKTOWN_RAIDER );
		critter_add_trait( self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GENERIC_RAIDER );
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 15);
	end
end

procedure critter_p_proc
begin
	if ((tile_distance_objs(self_obj, dude_obj) < 8) and (local_var(8) == 0) and (has_skill(dude_obj, SKILL_SNEAK) >= 50)) then begin
		set_local_var(8, 1);
		display_msg(message_str(SCRIPT_JTRAIDER, 184));
	end
	else begin
		if (map_var(1) == 0) then begin
			if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
				set_local_var(5, 1);
				set_local_var(6, 1);
				attack(dude_obj);
			end
			else begin
				if ((local_var(6) == 1) and (tile_distance_objs(dude_obj, self_obj) < 4)) then begin
					if (not(using_skill( dude_obj, SKILL_SNEAK ))) then begin
						set_local_var(5, 2);
					end
				end
				else begin
					if (obj_can_see_obj(self_obj, dude_obj) and (local_var(4) == 0) and (using_skill( dude_obj, SKILL_SNEAK ) == 0)) then begin
						dialogue_system_enter;
					end
				end
			end
		end
		else begin
			if (map_var(1) == 1) then begin
				if (local_var(9) == 0) then begin
					rm_timer_event(Sinthia_ptr);
					add_timer_event(Sinthia_ptr, game_ticks(2), 2);
					reg_anim_func(2, self_obj);
					reg_anim_func(1, 1);
					reg_anim_animate(self_obj, 21, -1);
					reg_anim_animate(self_obj, 49, -1);
					reg_anim_func(3, 0);
					set_local_var(9, 1);
				end
			end
		end
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (using_skill( dude_obj, SKILL_SNEAK ) and (map_var(1) == 0) and (local_var(9) == 0)) then begin
			if (is_success(roll_vs_skill(dude_obj, SKILL_SNEAK, 0))) then begin
				script_overrides;
				display_msg(message_str(SCRIPT_JTRAIDER, 183));
				critter_injure(self_obj, 2);//    DAM_KNOCKED_DOWN       2		<-- DOES NOT WORK!!!
				critter_injure(self_obj, 1);//    DAM_KNOCKED_OUT      1    <-- DOES NOT WORK!!!
				set_map_var(1, 1);
				add_timer_event(self_obj, game_ticks(10), 3);
				terminate_combat;
			end
			else begin
				set_local_var(5, 2);
			end
		end
		else begin
			set_local_var(5, 2);
		end
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	if ((source_obj == dude_obj) or (party_member_obj(obj_pid(source_obj)) != 0)) then begin
		set_map_var(1, 2);
	end
	set_global_var(SAVE_SINTHIA, 2);
	set_map_var(3, 3);
	if (map_var(0) != 2) then begin
		award := 400;
	end
	inc_evil_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_JTRAIDER, 100));
end

procedure map_enter_p_proc
begin
	JTRaider_ptr := self_obj;
	if (not(metarule(22, 0))) then begin
		if (global_var(SAVE_SINTHIA) == 2) then begin
			JTRaider_ptr := 0;
			destroy_object(self_obj);
		end
		else begin
			if (map_var(1) == 1) then begin
				set_map_var(1, 0);
				set_local_var(5, 2);
				set_local_var(6, 1);
				set_local_var(7, 0);
				if (critter_state(self_obj) == 2) then begin
					reg_anim_func(2, self_obj);
					reg_anim_func(1, 1);
					reg_anim_animate(self_obj, 37, -1);
					reg_anim_func(3, 0);
				end
			end
		end
	end
end

procedure pickup_p_proc
begin
	set_local_var(5, 2);
	set_local_var(6, 1);
	set_local_var(7, 0);
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	get_reaction
	if (local_var(5) != 0) then begin
		call Raider34;
	end
	else begin
		if ((global_var(SAVE_SINTHIA) == 1) and (map_var(1) == 0)) then begin
			start_gdialog(337, self_obj, 4, -1, -1);
			gsay_start;
			if (local_var(4) == 0) then begin
				call Raider0;
			end
			else begin
				if (map_var(3) == 1) then begin
					if (local_var(1) < 2) then begin
						call Raider17;
					end
					else begin
						call Raider9;
					end
					set_map_var(3, 2);
				end
				else begin
					if (local_var(7) == 1) then begin
						call Raider21;
					end
					else begin
						call Raider31;
					end
				end
			end
			gsay_end;
			end_dialogue;
		end
		else begin
			display_msg(message_str(SCRIPT_JTRAIDER, 178));
		end
	end
	if (shoot_Sinthia) then begin
		game_ui_disable;
		reg_anim_func(2, self_obj);
		reg_anim_func(1, 1);
		reg_anim_animate(self_obj, 43, -1);
		reg_anim_animate(self_obj, 45, -1);
		sfx_name := sfx_build_weapon_name(1, obj_carrying_pid_obj(self_obj, PID_10MM_PISTOL), 0, Sinthia_ptr);
		reg_anim_play_sfx(self_obj, sfx_name, 0);
		reg_anim_animate(self_obj, 44, -1);
		reg_anim_func(3, 0);
		shoot_Sinthia := 0;
		add_timer_event(self_obj, 5, 2);
	end
	if (Sinthia_is_safe == 1) then begin
		set_map_var(3, 3);
		set_global_var(SAVE_SINTHIA, 2);
		gfade_out(1);
		gfade_in(1);
		destroy_object(self_obj);
	end
end

procedure timed_event_p_proc
begin
	if (fixed_param == 1) then begin
		game_ui_enable;
		set_local_var(5, 2);
	end
	else begin
		if (fixed_param == 2) then begin
			critter_dmg( Sinthia_ptr, 75, DMG_normal_dam );
			add_timer_event(self_obj, game_ticks(5), 1);
		end
		else begin
			if (fixed_param == 3) then begin
				set_map_var(1, 0);
				set_local_var(5, 2);
				set_local_var(6, 1);
				set_local_var(7, 0);
				if (critter_state(self_obj) == 2) then begin
					reg_anim_func(2, self_obj);
					reg_anim_func(1, 1);
					reg_anim_animate(self_obj, 37, -1);
					reg_anim_func(3, 0);
				end
			end
		end
	end
end

procedure combat_p_proc
begin
	if ((map_var(1) == 1) and (map_var(3) > 0) and (map_var(3) < 3) and (tile_distance_objs(self_obj, dude_obj) < 4)) then begin
		script_overrides;
		terminate_combat;
	end
end

procedure Raider0
begin
	set_local_var(4, 1);
	gsay_reply(337, 101);
	giq_option(-3, 337, 102, Raider1, 50);
	giq_option(4, 337, 103, Raider2, 50);
	giq_option(4, 337, 104, Raider8, 50);
	giq_option(7, 337, 105, Raider4, 50);
end

procedure Raider1
begin
	gsay_message(337, 106, 50);
	call RaiderSnap;
end

procedure Raider2
begin
	gsay_reply(337, 107);
	giq_option(4, 337, 108, Raider3, 50);
end

procedure Raider3
begin
	DownReact
	gsay_message(337, 109, 51);
	set_local_var(6, 1);
end

procedure Raider4
begin
	gsay_reply(337, 110);
	giq_option(7, 337, 111, Raider5, 50);
	giq_option(7, 337, 112, Raider7, 50);
end

procedure Raider5
begin
	gsay_reply(337, 113);
	giq_option(7, 337, 114, Raider6, 49);
end

procedure Raider6
begin
	UpReact
	set_local_var(6, 1);
	gsay_message(337, 115, 49);
end

procedure Raider7
begin
	gsay_message(337, 116, 51);
	set_local_var(6, 1);
end

procedure Raider8
begin
	if (dude_is_male) then begin
		gsay_message(337, 119, 51);
	end
	else begin
		gsay_message(337, 120, 51);
	end
	call RaiderSnap;
end

procedure Raider9
begin
	gsay_reply(337, 121);
	giq_option(4, 337, 122, Raider10, 50);
	giq_option(7, 337, 123, Raider14, 50);
end

procedure Raider10
begin
	gsay_reply(337, 124);
	giq_option(4, 337, 125, Raider11, 50);
	giq_option(4, 337, 126, Raider10a, 50);
end

procedure Raider10a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		set_local_var(7, 1);
		call Raider12;
	end
	else begin
		call Raider13;
	end
end

procedure Raider11
begin
	gsay_reply(337, 127);
	giq_option(4, 337, 128, RaiderCombat, 51);
end

procedure Raider12
begin
	gsay_message(337, 129, 50);
end

procedure Raider13
begin
	gsay_message(337, 130, 50);
end

procedure Raider14
begin
	gsay_reply(337, 131);
	giq_option(7, 337, 132, Raider14a, 50);
end

procedure Raider14a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 20))) then begin
		set_local_var(7, 1);
		call Raider16;
	end
	else begin
		call Raider15;
	end
end

procedure Raider15
begin
	gsay_message(337, 133, 50);
end

procedure Raider16
begin
	if (dude_is_male) then begin
		gsay_message(337, 136, 50);
	end
	else begin
		gsay_message(337, 137, 50);
	end
end

procedure Raider17
begin
	gsay_reply(337, 138);
	giq_option(4, 337, 139, Raider17a, 50);
	giq_option(6, 337, 140, Raider18, 50);
	giq_option(8, 337, 141, Raider17b, 50);
end

procedure Raider17a
begin
	set_local_var(7, 0);
end

procedure Raider17b
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		set_local_var(7, 1);
		call Raider20;
	end
	else begin
		call Raider19;
	end
end

procedure Raider18
begin
	gsay_message(337, 142, 51);
	call RaiderSnap;
end

procedure Raider19
begin
	gsay_message(337, 143, 51);
	set_local_var(7, 0);
end

procedure Raider20
begin
	UpReact
	gsay_message(337, 144, 49);
end

procedure Raider21
begin
	gsay_reply(337, 145);
	giq_option(4, 337, 146, Raider22, 50);
end

procedure Raider22
begin
	gsay_reply(337, 147);
	giq_option(4, 337, 148, Raider23, 50);
	giq_option(4, 337, 149, Raider24, 50);
	giq_option(5, 337, 150, Raider22a, 50);
	giq_option(6, 337, 151, Raider27, 50);
end

procedure Raider22a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call Raider26;
	end
	else begin
		call Raider23;
	end
end

procedure Raider23
begin
	gsay_message(337, 152, 51);
	call RaiderSnap;
end

procedure Raider24
begin
	gsay_reply(337, 153);
	giq_option(4, 337, 154, Raider24a, 50);
	giq_option(4, 337, 155, Raider25, 50);
end

procedure Raider24a
begin
	if (item_caps_total(dude_obj) >= 100) then begin
		item_caps_adjust(dude_obj, -100);
		call safe;
	end
	else begin
		call Raider23;
	end
end

procedure Raider25
begin
	gsay_message(337, 156, 51);
	call RaiderSnap;
end

procedure Raider26
begin
	gsay_message(337, 157, 49);
	call safe;
end

procedure Raider27
begin
	gsay_reply(337, 158);
	giq_option(5, 337, 159, Raider28, 50);
	giq_option(5, 337, 160, Raider27a, 50);
end

procedure Raider27a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call Raider29;
	end
	else begin
		call Raider28;
	end
end

procedure Raider28
begin
	gsay_message(337, 161, 51);
	call RaiderSnap;
end

procedure Raider29
begin
	gsay_reply(337, 162);
	giq_option(5, 337, 163, Raider29a, 50);
	giq_option(5, 337, 164, Raider30, 50);
end

procedure Raider29a
begin
	if (item_caps_total(dude_obj) >= 100) then begin
		item_caps_adjust(dude_obj, -100);
		call safe;
	end
	else begin
		call Raider23;
	end
end

procedure Raider30
begin
	gsay_reply(337, 165);
	giq_option(5, 337, 166, Raider23, 50);
	giq_option(5, 337, 167, Raider30a, 50);
end

procedure Raider30a
begin
	if (item_caps_total(dude_obj) >= 200) then begin
		item_caps_adjust(dude_obj, -200);
		call safe;
	end
	else begin
		call Raider23;
	end
end

procedure Raider31
begin
	gsay_reply(337, 168);
	giq_option(4, 337, 169, Raider32, 50);
	if (dude_is_male) then begin
		giq_option(6, 337, 172, Raider33, 51);
	end
	else begin
		giq_option(6, 337, 173, Raider33, 51);
	end
end

procedure Raider32
begin
	gsay_message(337, 174, 51);
	call RaiderSnap;
end

procedure Raider33
begin
	gsay_message(337, 175, 51);
	call RaiderCombat;
end

procedure Raider34
begin
	float_msg(self_obj, message_str(SCRIPT_JTRAIDER, 176), 2);
	call RaiderSnap;
end

procedure Raiderend
begin
end

procedure RaiderCombat
begin
	set_local_var(5, 2);
end

procedure RaiderSnap
begin
	shoot_Sinthia := 1;
end

procedure safe
begin
	award := 1000;
	set_local_var(6, 0);
	Sinthia_is_safe := 1;
	if not(is_loading_game) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
end





