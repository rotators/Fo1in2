/*

	Junktown - Kalnor, the Junktown entrance guard

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\mapnecro.h"

#define NAME                    SCRIPT_KALNOR
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure timed_event_p_proc;
procedure talk_p_proc;

procedure guard00a;
procedure guard01a;
procedure guard00;
procedure guard00i;
procedure guard00ii;
procedure guard01;
procedure guard01i;
procedure guard02;
procedure guard02i;
procedure guard03;
procedure guard04;
procedure guard05;
procedure guard06;
procedure guard06i;
procedure guard07;
procedure guard08;
procedure guard08i;
procedure guard09;
procedure guard10;
procedure guard11;
procedure guard12;
procedure guard12i;
procedure guard13;
procedure guard13_BigDownReact;
procedure guard14;
procedure guard15;
procedure guard16;
procedure guard17;
procedure guard00N;
procedure guard00Na;
procedure guard01N;
procedure guard02N;
procedure guard03N;
procedure guard04N;
procedure guardend;

import variable weapon_checked;
import variable sneak_checked;
import variable times_caught_sneaking;

variable sneaking;
variable RoundCounter;
variable tmp_hostile;
variable warned;
variable line166flag;

procedure start begin
end

procedure critter_p_proc begin
	if (global_var( GVAR_ENEMY_JUNKTOWN ) == 1) then begin
		if (self_can_see_dude) then begin
			attack(dude_obj);
		end
	end

	if (tmp_hostile and not(local_var(4))) then begin
		tmp_hostile := 0;
		set_local_var(4, 1);
		attack(dude_obj);
	end
	else begin

		if (self_can_see_dude) then begin
			if (global_var( GVAR_ENEMY_JUNKTOWN ) == 1) then begin
				if (line166flag == 0) then begin
					dialogue_system_enter;
				end
			end
			else begin
				if ((dude_is_armed) and not(local_var(4)) and (global_var( GVAR_HIRED_BY_KILLIAN ) == 0) and (global_var( GVAR_CAPTURE_GIZMO ) == 0)) then begin
					if (not(weapon_checked)) then begin
						weapon_checked := 1;
						rm_timer_event(self_obj);
						add_timer_event(self_obj, game_ticks(5), 1);
						dialogue_system_enter;
					end
				end
				else begin
					if (dude_is_sneaking and not(sneak_checked)) then begin
						sneaking := 1;
						sneak_checked := 1;
						rm_timer_event(self_obj);
						add_timer_event(self_obj, game_ticks(5), 2);
						dialogue_system_enter;
					end
				end
			end
		end

		if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
			if (((dude_tile / 200) < 125) and ((dude_tile % 200) < 131) and not(local_var(5)) and not(warned)) then begin
				set_local_var(5, 1);
				set_local_var(7, 1);
			end
			if (tile_distance(dude_tile, 27106) > tile_distance(dude_tile, 25905)) then begin
				if (local_var(5) == 0) then begin
					if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
						if (not(warned)) then begin
							if (not(dude_is_sneaking)) then begin
								warned := 1;
								dialogue_system_enter;
								rm_timer_event(self_obj);
								add_timer_event(self_obj, game_ticks(3), 4);
							end
						end
					end
				end
			end
		end
	end
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_JUNKTOWN, 1 );
		set_local_var(6, 1);
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);

	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_JUNKTOWN, 1 );
	end
	inc_good_critter
	rm_timer_event(self_obj);
end

procedure map_enter_p_proc begin
	if junktown_invaded then begin
		kill_critter(self_obj, ANIM_exploded_to_nothing_sf);
	end
	set_self_team( TEAM_JUNKTOWN_GUARD );
end

procedure pickup_p_proc begin
	tmp_hostile := 1;
end

procedure timed_event_p_proc begin
	if (fixed_param == 1) then begin
		if (dude_is_armed) then begin
			tmp_hostile := 1;
		end
		else begin
			weapon_checked := 0;
		end
	end
	else if (fixed_param == 2) then begin
		sneak_checked := 0;
	end
	else if (fixed_param == 3) then begin
		tmp_hostile := 1;
	end
	else if (fixed_param == 4) then begin
		if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
			if (tile_distance(dude_tile, 27106) > tile_distance(dude_tile, 25905)) then begin
				if (local_var(5) == 0) then begin
					if (not(dude_is_sneaking)) then begin
						tmp_hostile := 1;
						set_global_var( GVAR_ENEMY_JUNKTOWN, 1 );
					end
				end
			end
			else begin
				warned := 0;
			end
		end
	end
end

procedure talk_p_proc begin
	dude_look_at_critter;
	get_reaction

	if ((global_var( GVAR_ENEMY_JUNKTOWN ) == 1) and (line166flag == 0)) then begin
		float_msg(self_obj, message_str(SCRIPT_KALNOR, 166), 2);
		rm_timer_event(self_obj);
		add_timer_event(self_obj, game_ticks(5), 3);
	end
	else if ((game_time_hour >= 1900) or (game_time_hour < 600) and (local_var(7) == 1)) then begin
		if (local_var(5) == 1) then begin
			float_msg(self_obj, message_str(SCRIPT_KALNOR, 167), 0);
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_KALNOR, 156), 0);
		end
	end
	else if ((dude_is_armed) and not(local_var(4))) then begin
		start_dialog_at_node(guard00);
	end
	else if (sneaking) then begin
		start_dialog_at_node(guard06);
	end
	else if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		start_dialog_at_node(guard00N);
	end
	else if (local_var(8) < 1) or (local_var(9) < 1) then begin
		start_dialog_at_node(guard10);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_KALNOR, random(107, 109)), 0);
	end
end

procedure guard00a begin
	float_msg(self_obj, message_str(SCRIPT_KALNOR, random(101, 103)), 2);
end

procedure guard01a begin
	float_msg(self_obj, message_str(SCRIPT_KALNOR, random(104, 106)), 3);
end

procedure guard00 begin
	gsay_reply(135, 110);
	giq_option( 4, SCRIPT_KALNOR, 111, guard01, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_KALNOR, 112, guard00i, BAD_REACTION );
	giq_option( 4, SCRIPT_MODREACT, 105, guardend, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_KALNOR, 113, guard00ii, GOOD_REACTION );
	giq_option( -3, SCRIPT_KALNOR, 114, guard05, NEUTRAL_REACTION );
end

procedure guard00i begin
	BigDownReact
	call guard02;
end

procedure guard00ii begin
	BigUpReact
	call guard04;
end

procedure guard01 begin
	gsay_reply(135, 115);
	giq_option( 4, SCRIPT_KALNOR, 116, guard02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_KALNOR, 117, guard01i, NEUTRAL_REACTION );
end

procedure guard01i begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -30))) then begin
		call guard03;
	end
	else begin
		call guard02;
	end
end

procedure guard02 begin
	gsay_reply(135, 118);
	giq_option( 4, SCRIPT_KALNOR, 119, guardend, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_KALNOR, 120, guard02i, BAD_REACTION );
end

procedure guard02i begin
	tmp_hostile := 1;
end

procedure guard03 begin
	set_local_var(4, 1);
	gsay_message(135, 121, 50);
end

procedure guard04 begin
	gsay_message(135, 122, 50);
end

procedure guard05 begin
	gsay_message(135, 123, 50);
end

procedure guard06 begin
	sneaking := 0;
	gsay_reply(135, 124);
	giq_option( 4, SCRIPT_KALNOR, 125, guard07, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_KALNOR, 126, guard06i, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_KALNOR, 127, guard07, NEUTRAL_REACTION );
end

procedure guard06i begin
	variable LVar0 := 0;
	times_caught_sneaking := times_caught_sneaking + 1;
	LVar0 := -5 * times_caught_sneaking;
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, LVar0))) then begin
		call guard08;
	end
	else begin
		call guard07;
	end
end

procedure guard07 begin
	if (times_caught_sneaking > 3) then begin
		gsay_message(135, 129, 51);
		add_timer_event(self_obj, game_ticks(10), 3);
	end
	else begin
		gsay_message(135, 128, 51);
	end
end

procedure guard08 begin
	gsay_reply(135, 130);
	giq_option( 5, SCRIPT_KALNOR, 131, guardend, NEUTRAL_REACTION );
	if (dude_is_male) then begin
		giq_option( 5, SCRIPT_KALNOR, 132, guard08i, NEUTRAL_REACTION );
	end
	else begin
		giq_option( 5, SCRIPT_KALNOR, 133, guard08i, NEUTRAL_REACTION );
	end
end

procedure guard08i begin
	if (random(0, 1)) then begin
		UpReact
	end
	else begin
		DownReact
	end
end

procedure guard09 begin
	gsay_message(135, 134, 50);
end

procedure guard10 begin
	gsay_reply(135, 135);
	giq_option( 5, SCRIPT_KALNOR, 137, guard12, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_KALNOR, 138, guard15, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_KALNOR, 139, guard11, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_KALNOR, 136, guardend, NEUTRAL_REACTION );
end

procedure guard11 begin
	gsay_message(135, 140, 50);
end

procedure guard12 begin
	set_local_var(8, 1);
	gsay_reply(135, 141);
	giq_option( 5, SCRIPT_KALNOR, 142, guard12i, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_KALNOR, 143, guard14, NEUTRAL_REACTION );
end

procedure guard12i begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 15))) then begin
		call guard13;
	end
	else begin
		call guard14;
	end
end

procedure guard13 begin
	gsay_reply(135, 144);
	giq_option( 5, SCRIPT_KALNOR, 145, guardend, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_KALNOR, 146, guard13_BigDownReact, BAD_REACTION );
end

procedure guard13_BigDownReact begin
	BigDownReact
end

procedure guard14 begin
	gsay_message(135, 147, 50);
end

procedure guard15 begin
	set_local_var(9, 1);
	gsay_reply(135, 148);
	giq_option( 5, SCRIPT_KALNOR, 149, guardend, NEUTRAL_REACTION );
	if (dude_is_female) then begin
		giq_option( 5, SCRIPT_KALNOR, 150, guard16, NEUTRAL_REACTION );
	end
end

procedure guard16 begin
	gsay_message(135, 152, 50);
end

procedure guard17 begin
	gsay_message(135, random(153, 155), 50);
end

procedure guard00N begin
	set_local_var(7, 1);
	gsay_reply(135, 156);
	giq_option( 4, SCRIPT_KALNOR, 157, guard02N, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_KALNOR, 158, guardend, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_KALNOR, 159, guard00Na, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_KALNOR, 160, guard01N, NEUTRAL_REACTION );
end

procedure guard00Na begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call guard03N;
	end
	else begin
		call guard02N;
	end
end

procedure guard01N begin
	gsay_message(135, 161, 50);
end

procedure guard02N begin
	gsay_message(135, 162, 50);
end

procedure guard03N begin
	set_local_var(5, 1);
	gsay_message(135, 163, 50);
end

procedure guard04N begin
	set_local_var(5, 1);
	gsay_message(135, message_str(SCRIPT_KALNOR, 164) + dude_name + message_str(SCRIPT_KALNOR, 165), 50);
end

procedure guardend begin
end
