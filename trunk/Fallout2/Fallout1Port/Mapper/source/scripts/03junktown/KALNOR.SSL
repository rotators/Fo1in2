#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;

procedure critter_p_proc;//    script_action == 12
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure map_enter_p_proc;//    script_action == 15
procedure pickup_p_proc;//    script_action == 4
procedure timed_event_p_proc;//    script_action == 22
procedure talk_p_proc;//    script_action == 11

procedure guard00a;
procedure guard01a;
procedure guard00;
procedure guard00i;
procedure guard00ii;
procedure guard01;
procedure guard01i;
procedure guard02;
procedure guard02i;
procedure guard03;
procedure guard04;
procedure guard05;
procedure guard06;
procedure guard06i;
procedure guard07;
procedure guard08;
procedure guard08i;
procedure guard09;
procedure guard10;
procedure guard11;
procedure guard12;
procedure guard12i;
procedure guard13;
procedure guard13_BigDownReact;
procedure guard14;
procedure guard15;
procedure guard16;
procedure guard17;
procedure guard00N;
procedure guard00Na;
procedure guard01N;
procedure guard02N;
procedure guard03N;
procedure guard04N;
procedure guardend;

import variable weapon_checked;
import variable sneak_checked;
import variable times_caught_sneaking;

variable sneaking;
variable RoundCounter;
variable tmp_hostile;
variable warned;
variable line166flag;

procedure start begin
	fixt_critter_healing
end

procedure critter_p_proc
begin
	if (global_var(ENEMY_JUNKTOWN) == 1) then begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			attack(dude_obj);
		end
	end
	if (tmp_hostile and not(local_var(4))) then begin
		tmp_hostile := 0;
		set_local_var(4, 1);
		attack(dude_obj);
	end
	else begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			if (global_var(ENEMY_JUNKTOWN) == 1) then begin
				if (line166flag == 0) then begin
					dialogue_system_enter;
				end
			end
			else begin
				if ((dude_is_armed) and not(local_var(4)) and (global_var(HIRED_BY_KILLIAN) == 0) and (global_var(CAPTURE_GIZMO) == 0)) then begin
					if (not(weapon_checked)) then begin
						weapon_checked := 1;
						rm_timer_event(self_obj);
						add_timer_event(self_obj, game_ticks(5), 1);
						dialogue_system_enter;
					end
				end
				else begin
					if (using_skill(dude_obj, 8) and not(sneak_checked)) then begin
						sneaking := 1;
						sneak_checked := 1;
						rm_timer_event(self_obj);
						add_timer_event(self_obj, game_ticks(5), 2);
						dialogue_system_enter;
					end
				end
			end
		end
		if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
			if (((tile_num(dude_obj) / 200) < 125) and ((tile_num(dude_obj) % 200) < 131) and not(local_var(5)) and not(warned)) then begin
				set_local_var(5, 1);
				set_local_var(7, 1);
			end
			if (tile_distance(tile_num(dude_obj), 27106) > tile_distance(tile_num(dude_obj), 25905)) then begin
				if (local_var(5) == 0) then begin
					if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
						if (not(warned)) then begin
							if (not(using_skill(dude_obj, 8))) then begin
								warned := 1;
								dialogue_system_enter;
								rm_timer_event(self_obj);
								add_timer_event(self_obj, game_ticks(3), 4);
							end
						end
					end
				end
			end
		end
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_JUNKTOWN, 1);
		set_local_var(6, 1);
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_JUNKTOWN, 1);
	end
	inc_good_critter
	rm_timer_event(self_obj);
end

procedure map_enter_p_proc
begin
	if (global_var(JUNKTOWN_WAS_INVADED) == 1) then begin
		kill_critter(self_obj, ANIM_exploded_to_nothing_sf);
	end
	critter_add_trait(self_obj, 1, 6, 12);
end

procedure pickup_p_proc
begin
	tmp_hostile := 1;
end

procedure timed_event_p_proc
begin
	if (fixed_param == 1) then begin
		if (dude_is_armed) then begin
			tmp_hostile := 1;
		end
		else begin
			weapon_checked := 0;
		end
	end
	else begin
		if (fixed_param == 2) then begin
			sneak_checked := 0;
		end
		else begin
			if (fixed_param == 3) then begin
				tmp_hostile := 1;
			end
			else begin
				if (fixed_param == 4) then begin
					if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
						if (tile_distance(tile_num(dude_obj), 27106) > tile_distance(tile_num(dude_obj), 25905)) then begin
							if (local_var(5) == 0) then begin
								if (not(using_skill(dude_obj, 8))) then begin
									tmp_hostile := 1;
									set_global_var(ENEMY_JUNKTOWN, 1);
								end
							end
						end
						else begin
							warned := 0;
						end
					end
				end
			end
		end
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	get_reaction
	if ((global_var(ENEMY_JUNKTOWN) == 1) and (line166flag == 0)) then begin
		float_msg(self_obj, message_str(SCRIPT_ASSBLOW, 166), 2);
		rm_timer_event(self_obj);
		add_timer_event(self_obj, game_ticks(5), 3);
	end
	else begin
		if ((game_time_hour >= 1900) or (game_time_hour < 600) and (local_var(7) == 1)) then begin
			if (local_var(5) == 1) then begin
				float_msg(self_obj, message_str(SCRIPT_ASSBLOW, 167), 0);
			end
			else begin
				float_msg(self_obj, message_str(SCRIPT_ASSBLOW, 156), 0);
			end
		end
		else begin
			if ((dude_is_armed) and not(local_var(4))) then begin
				start_gdialog(135, self_obj, 4, -1, -1);
				gsay_start;
					call guard00;
				gsay_end;
				end_dialogue;
			end
			else begin
				if (sneaking) then begin
					start_gdialog(135, self_obj, 4, -1, -1);
					gsay_start;
						call guard06;
					gsay_end;
					end_dialogue;
				end
				else begin
					if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
						start_gdialog(135, self_obj, 4, -1, -1);
						gsay_start;
							call guard00N;
						gsay_end;
						end_dialogue;
					end
					else begin
						if (local_var(8) < 1) or (local_var(9) < 1) then begin
							start_gdialog(135, self_obj, 4, -1, -1);
							gsay_start;
								call guard10;
							gsay_end;
							end_dialogue;
						end
						else begin
							float_msg(self_obj, message_str(SCRIPT_ASSBLOW, random(107, 109)), 0);
						end
					end
				end
			end
		end
	end
end

procedure guard00a
begin
	float_msg(self_obj, message_str(SCRIPT_ASSBLOW, random(101, 103)), 2);
end

procedure guard01a
begin
	float_msg(self_obj, message_str(SCRIPT_ASSBLOW, random(104, 106)), 3);
end

procedure guard00
begin
	gsay_reply(135, 110);
	giq_option(4, 135, 111, guard01, 50);
	giq_option(4, 135, 112, guard00i, 51);
	giq_option(4, 634, 105, guardend, 50);
	giq_option(6, 135, 113, guard00ii, 49);
	giq_option(-3, 135, 114, guard05, 50);
end

procedure guard00i
begin
	BigDownReact
	call guard02;
end

procedure guard00ii
begin
	BigUpReact
	call guard04;
end

procedure guard01
begin
	gsay_reply(135, 115);
	giq_option(4, 135, 116, guard02, 50);
	giq_option(4, 135, 117, guard01i, 50);
end

procedure guard01i
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -30))) then begin
		call guard03;
	end
	else begin
		call guard02;
	end
end

procedure guard02
begin
	gsay_reply(135, 118);
	giq_option(4, 135, 119, guardend, 50);
	giq_option(4, 135, 120, guard02i, 51);
end

procedure guard02i
begin
	tmp_hostile := 1;
end

procedure guard03
begin
	set_local_var(4, 1);
	gsay_message(135, 121, 50);
end

procedure guard04
begin
	gsay_message(135, 122, 50);
end

procedure guard05
begin
	gsay_message(135, 123, 50);
end

procedure guard06
begin
	sneaking := 0;
	gsay_reply(135, 124);
	giq_option(4, 135, 125, guard07, 50);
	giq_option(5, 135, 126, guard06i, 50);
	giq_option(-3, 135, 127, guard07, 50);
end

procedure guard06i
begin
	variable LVar0 := 0;
	times_caught_sneaking := times_caught_sneaking + 1;
	LVar0 := -5 * times_caught_sneaking;
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, LVar0))) then begin
		call guard08;
	end
	else begin
		call guard07;
	end
end

procedure guard07
begin
	if (times_caught_sneaking > 3) then begin
		gsay_message(135, 129, 51);
		add_timer_event(self_obj, game_ticks(10), 3);
	end
	else begin
		gsay_message(135, 128, 51);
	end
end

procedure guard08
begin
	gsay_reply(135, 130);
	giq_option(5, 135, 131, guardend, 50);
	if (get_critter_stat(dude_obj, STAT_gender) == 0) then begin
		giq_option(5, 135, 132, guard08i, 50);
	end
	else begin
		giq_option(5, 135, 133, guard08i, 50);
	end
end

procedure guard08i
begin
	if (random(0, 1)) then begin
		UpReact
	end
	else begin
		DownReact
	end
end

procedure guard09
begin
	gsay_message(135, 134, 50);
end

procedure guard10
begin
	gsay_reply(135, 135);
	giq_option(5, 135, 137, guard12, 50);
	giq_option(6, 135, 138, guard15, 50);
	giq_option(-3, 135, 139, guard11, 50);
	giq_option(4, 135, 136, guardend, 50);
end

procedure guard11
begin
	gsay_message(135, 140, 50);
end

procedure guard12
begin
	set_local_var(8, 1);
	gsay_reply(135, 141);
	giq_option(5, 135, 142, guard12i, 50);
	giq_option(5, 135, 143, guard14, 50);
end

procedure guard12i
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 15))) then begin
		call guard13;
	end
	else begin
		call guard14;
	end
end

procedure guard13
begin
	gsay_reply(135, 144);
	giq_option(5, 135, 145, guardend, 50);
	giq_option(5, 135, 146, guard13_BigDownReact, 51);
end

procedure guard13_BigDownReact begin
	BigDownReact
end

procedure guard14
begin
	gsay_message(135, 147, 50);
end

procedure guard15
begin
	set_local_var(9, 1);
	gsay_reply(135, 148);
	giq_option(5, 135, 149, guardend, 50);
	if (get_critter_stat(dude_obj, STAT_gender) == 1) then begin
		giq_option(5, 135, 150, guard16, 50);
	end
end

procedure guard16
begin
	gsay_message(135, 152, 50);
end

procedure guard17
begin
	gsay_message(135, random(153, 155), 50);
end

procedure guard00N
begin
	set_local_var(7, 1);
	gsay_reply(135, 156);
	giq_option(4, 135, 157, guard02N, 50);
	giq_option(4, 135, 158, guardend, 50);
	giq_option(5, 135, 159, guard00Na, 50);
	giq_option(-3, 135, 160, guard01N, 50);
end

procedure guard00Na
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call guard03N;
	end
	else begin
		call guard02N;
	end
end

procedure guard01N
begin
	gsay_message(135, 161, 50);
end

procedure guard02N
begin
	gsay_message(135, 162, 50);
end

procedure guard03N
begin
	set_local_var(5, 1);
	gsay_message(135, 163, 50);
end

procedure guard04N
begin
	set_local_var(5, 1);
	gsay_message(135, message_str(SCRIPT_ASSBLOW, 164) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_ASSBLOW, 165), 50);
end

procedure guardend
begin
end
