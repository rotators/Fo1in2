/*

	Junktown - Trish

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\maps\junkcsno.h"

#define NAME                    SCRIPT_TRISH
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;

procedure Trish0;
procedure Trish1;
procedure Trish2;
procedure Trish3;
procedure Trish4;
procedure Trish5;
procedure Trish6;
procedure Trish6a;
procedure Trish7;
procedure Trish8;
procedure Trish9;
procedure Trish10;
procedure Trish11;
procedure Trish12;
procedure Trish13;
procedure Trish14;
procedure Trish15;
procedure Trish16;
procedure Trish17;
procedure Trish18;
procedure Trish19;
procedure Trish20;
procedure Trish21;
procedure Trish22;
procedure Trish23;
procedure Trish24;
procedure Trish25;
procedure Trish26;
procedure Trish27;
procedure Trish28;
procedure Trish29;
procedure TrishEnd;
procedure TrishCola;
procedure TrishBeer;
procedure TrishBooze;
procedure TrishSleeping;

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;
variable initial :=  0;

import variable Trish_ptr;

variable item;

#define LVAR_Sleeping 							(4)

procedure start begin
end

procedure timed_event_p_proc begin
	dialogue_system_enter;
end

procedure critter_p_proc begin
	if (global_var( GVAR_TRISH_STATUS ) bwand 64) then begin
		destroy_object(self_obj);
	end
	else begin
		call TrishSleeping;
	end

	if (CUR_MAP_JUNKCSNO) then begin
		if (self_can_see_dude) then begin
			if ((map_var(MVAR_Skulz_left) == 1) and (map_var(MVAR_guards_left) == 1) and (tile_distance_objs(self_obj, dude_obj) < 12)) then begin
				dialogue_system_enter;
			end
		end
		if (self_tile != home_tile) then begin
			if ((global_var( GVAR_DESTROY_VATS_10 ) == 0) or (global_var( GVAR_BUST_SKULZ ) == 2)) then begin
				self_walk_to_tile( home_tile );
			end
		end
	end
	else begin
		if (self_tile != home_tile) then begin
			self_walk_to_tile( home_tile );
		end
	end

	if (global_var( GVAR_DUDE_ENEMY_JUNK_CITIZEN ) == 1) then begin
		if (self_can_see_dude) then begin
			attack(dude_obj);
		end
	end
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_JUNKTOWN, 1 );
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_DUDE_ENEMY_JUNK_CITIZEN, 1 );
		set_global_var( GVAR_ENEMY_JUNKTOWN, 1 );
	end
	inc_good_critter
	set_global_var( GVAR_TRISH_STATUS, global_var( GVAR_TRISH_STATUS ) + 64 );
	rm_timer_event(self_obj);
end

procedure look_at_p_proc begin
	script_overrides;
	if ((global_var( GVAR_TRISH_STATUS ) bwand 1) or (global_var( GVAR_TRISH_STATUS ) bwand 4)) then begin
		display_msg(mstr(100));
	end
	else begin
		display_msg(mstr(167));
	end
end

procedure map_enter_p_proc begin
	Trish_ptr := self_obj;
	set_self_team(TEAM_JUNKTOWNER );
	if (CUR_MAP_JUNKCSNO) then begin
		home_tile := 20083;
		sleep_time := 330;
		wake_time := 1300;
      if (self_tile != home_tile) then begin
         critter_attempt_placement(self_obj,home_tile, self_elevation);
         self_rotate(2);
      end
	end
	else begin
		home_tile := 16297;
		sleep_time := 1300;
		wake_time := 330;
	end
end

procedure map_update_p_proc begin
	if (global_var( GVAR_TRISH_STATUS ) bwand 64) then begin
		destroy_object(self_obj);
	end
end

procedure talk_p_proc begin
	dude_look_at_self;
	get_reaction
	if (local_var(LVAR_Sleeping)) then begin
		float_msg(self_obj, mstr(151), 0);
	end
	else begin
		if (CUR_MAP_JUNKKILL) then begin
			if ((global_var( GVAR_SAUL_STATUS ) == 3) and not(local_var(7))) then begin
				call Trish17;
			end
			else if ((global_var( GVAR_SAUL_STATUS ) == 2) and not(local_var(5)) and not(global_var( GVAR_TRISH_STATUS ) bwand 8)) then begin
				call Trish3;
			end
			else if ((global_var( GVAR_TRISH_STATUS ) bwand 32) and not(local_var(6))) then begin
				call Trish16;
			end
			else if (not((global_var( GVAR_TRISH_STATUS ) bwand 1) or (global_var( GVAR_TRISH_STATUS ) bwand 4))) then begin
				call Trish0;
			end
			else if ((global_var( GVAR_TRISH_STATUS ) bwand 4) and not(global_var( GVAR_TRISH_STATUS ) bwand 1)) then begin
				call Trish11;
			end
			else begin
				call Trish15;
			end
		end
		else begin
			if ((game_time_hour >= 1300) and (game_time_hour < 1600)) then begin
				float_msg(self_obj, mstr(152), 0);
			end
			else begin
				call Trish25;
			end
		end
	end
	if (not(global_var( GVAR_TRISH_STATUS ) bwand 32) and (global_var( GVAR_TRISH_STATUS ) bwand 8) and (global_var( GVAR_TRISH_STATUS ) bwand 16)) then begin
		set_global_var( GVAR_TRISH_STATUS, global_var( GVAR_TRISH_STATUS ) + 32 );
		display_msg(mstr(173));
		set_global_var( GVAR_PLAYER_REPUTATION, check_general_rep + 2 );
		give_exp_points(EXP_SAUL_TRISH_RELATIONSHIP);
	end
end

procedure Trish0 begin
	start_gdialog(342, self_obj, 4, -1, -1);
	gsay_start;
	if (not(global_var( GVAR_TRISH_STATUS ) bwand 1)) then begin
		set_global_var( GVAR_TRISH_STATUS, global_var( GVAR_TRISH_STATUS ) + 1 );
	end
	gsay_reply( SCRIPT_TRISH, 101 );
	giq_option( -3, SCRIPT_TRISH, 102, Trish1, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_TRISH, 103, Trish2, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_TRISH, 104, TrishEnd, NEUTRAL_REACTION );
	gsay_end;
	end_dialogue;
end

procedure Trish1 begin
	gsay_message( SCRIPT_TRISH, 105, 50 );
end

procedure Trish2 begin
	gsay_message( SCRIPT_TRISH, 106, 50 );
end

procedure Trish3 begin
	start_gdialog(342, self_obj, 4, -1, -1);
	gsay_start;
	if (not(global_var( GVAR_TRISH_STATUS ) bwand 1)) then begin
		set_global_var( GVAR_TRISH_STATUS, global_var( GVAR_TRISH_STATUS ) + 1 );
	end
	set_local_var(5, 1);
	gsay_reply( SCRIPT_TRISH, 107 );
	giq_option( -3, SCRIPT_TRISH, 108, Trish1, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_TRISH, 109, Trish2, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_TRISH, 110, Trish4, NEUTRAL_REACTION );
	gsay_end;
	end_dialogue;
end

procedure Trish4 begin
	if (local_var(5) == 0) then begin
		set_local_var(5, 1);
	end
	gsay_reply( SCRIPT_TRISH, 111 );
	giq_option( 5, SCRIPT_TRISH, 112, Trish5, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_TRISH, 113, Trish6, NEUTRAL_REACTION );
end

procedure Trish5 begin
	gsay_reply( SCRIPT_TRISH, 114 );
	giq_option( 5, SCRIPT_TRISH, 115, Trish9, NEUTRAL_REACTION );
	giq_option( 7, SCRIPT_TRISH, 116, Trish10, NEUTRAL_REACTION );
end

procedure Trish6 begin
	gsay_reply( SCRIPT_TRISH, 117 );
	giq_option( 5, SCRIPT_TRISH, 118, Trish6a, BAD_REACTION );
	giq_option( 5, SCRIPT_TRISH, 119, Trish7, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_TRISH, 169, Trish8, NEUTRAL_REACTION );
end

procedure Trish6a begin
	DownReact
	call Trish7;
end

procedure Trish7 begin
	gsay_message( SCRIPT_TRISH, 120, 50 );
end

procedure Trish8 begin
	variable LVar0 := 0;
	LVar0 := mstr(121);
	if is_gizmo_alive then begin
		LVar0 := LVar0 + " " + mstr(168);
	end
	gsay_message( SCRIPT_TRISH, LVar0, 49 );
	if (not(global_var( GVAR_TRISH_STATUS ) bwand 8)) then begin
		set_global_var( GVAR_TRISH_STATUS, global_var( GVAR_TRISH_STATUS ) + 8 );
	end
end

procedure Trish9 begin
	gsay_reply( SCRIPT_TRISH, 122 );
	giq_option( 5, SCRIPT_TRISH, 123, Trish8, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_TRISH, 124, Trish7, NEUTRAL_REACTION );
end

procedure Trish10 begin
	gsay_reply( SCRIPT_TRISH, 125 );
	giq_option( 5, SCRIPT_TRISH, 126, Trish8, NEUTRAL_REACTION );
end

procedure Trish11 begin
	if (not(global_var( GVAR_TRISH_STATUS ) bwand 1)) then begin
		set_global_var( GVAR_TRISH_STATUS, global_var( GVAR_TRISH_STATUS ) + 1 );
	end
	start_gdialog(342, self_obj, 4, -1, -1);
	gsay_start;
	gsay_reply( SCRIPT_TRISH, 127 );
	giq_option( -3, SCRIPT_TRISH, 128, Trish7, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_TRISH, 129, Trish12, BAD_REACTION );
	giq_option( 5, SCRIPT_TRISH, 130, Trish13, NEUTRAL_REACTION );
	gsay_end;
	end_dialogue;
end

procedure Trish12 begin
	DownReact
	gsay_message( SCRIPT_TRISH, 131, 50 );
end

procedure Trish13 begin
	gsay_reply( SCRIPT_TRISH, 132 );
	giq_option( 5, SCRIPT_TRISH, 133, TrishEnd, NEUTRAL_REACTION );
end

procedure Trish14 begin
	float_msg(self_obj, message_str(SCRIPT_TRISH, random(134, 136)), 0);
end

procedure Trish15 begin
	float_msg(self_obj, mstr(137), 0);
end

procedure Trish16 begin
	if (not(global_var( GVAR_TRISH_STATUS ) bwand 1)) then begin
		set_global_var( GVAR_TRISH_STATUS, global_var( GVAR_TRISH_STATUS ) + 1 );
	end
	set_local_var(6, 1);
	float_msg(self_obj, mstr(138), 0);
end

procedure Trish17 begin
	if (not(global_var( GVAR_TRISH_STATUS ) bwand 1)) then begin
		set_global_var( GVAR_TRISH_STATUS, global_var( GVAR_TRISH_STATUS ) + 1 );
	end
	set_local_var(7, 1);
	float_msg(self_obj, mstr(139), 0);
end

procedure Trish18 begin
	set_local_var(8, 1);
	gsay_reply( SCRIPT_TRISH, 140 );
	giq_option( -3, SCRIPT_TRISH, 141, TrishEnd, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_TRISH, 142, TrishEnd, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_TRISH, 143, Trish19, NEUTRAL_REACTION );
end

procedure Trish19 begin
	gsay_reply( SCRIPT_TRISH, 144 );
	giq_option( 6, SCRIPT_TRISH, 145, Trish20, NEUTRAL_REACTION );
	if (not(global_var( GVAR_GIZMO_STATUS ) == 3)) then begin
		giq_option( 6, SCRIPT_TRISH, 146, Trish21, NEUTRAL_REACTION );
	end
	if ((local_var(13) == 0) and (global_var( GVAR_TRISH_STATUS ) bwand 2) and not(global_var( GVAR_TRISH_STATUS ) bwand 32) and (global_var( GVAR_SAUL_STATUS ) != 3)) then begin
		giq_option( 6, SCRIPT_TRISH, 147, Trish22, NEUTRAL_REACTION );
	end
	giq_option( 6, SCRIPT_TRISH, 148, TrishEnd, NEUTRAL_REACTION );
end

procedure Trish20 begin
	set_local_var(10, 1);
	gsay_reply( SCRIPT_TRISH, 149 );
	call Trish24;
end

procedure Trish21 begin
	variable LVar0 := 0;
	set_local_var(11, 1);
	LVar0 := mstr(154);
	if (not(global_var( GVAR_KILLIAN_DEAD ))) then begin
		LVar0 := LVar0 + mstr(155);
	end
	gsay_reply( SCRIPT_TRISH, LVar0 );
	call Trish24;
end

procedure Trish22 begin
	set_local_var(13, 1);
	gsay_reply( SCRIPT_TRISH, 158 );
	call Trish24;
end

procedure Trish23 begin
	if (global_var( GVAR_GIZMO_STATUS ) == 3) then begin
		gsay_reply( SCRIPT_TRISH, 162 );
	end
	else begin
		gsay_reply( SCRIPT_TRISH, 163 );
	end
	call Trish24;
end

procedure Trish24 begin
	if (not(local_var(10))) then begin
		giq_option( 6, SCRIPT_TRISH, 145, Trish20, NEUTRAL_REACTION );
	end
	if (not(local_var(11))) then begin
		if is_gizmo_alive then begin
			giq_option( 6, SCRIPT_TRISH, 146, Trish21, NEUTRAL_REACTION );
		end
	end
	if ((local_var(13) == 0) and (global_var( GVAR_TRISH_STATUS ) bwand 2) and not(global_var( GVAR_TRISH_STATUS ) bwand 32) and (global_var( GVAR_SAUL_STATUS ) != 3)) then begin
		giq_option( 6, SCRIPT_TRISH, 147, Trish22, NEUTRAL_REACTION );
	end
	giq_option( 6, SCRIPT_TRISH, 148, TrishEnd, NEUTRAL_REACTION );
end

procedure Trish25 begin
	start_gdialog(342, self_obj, 4, -1, -1);
	gsay_start;
	if (not(global_var( GVAR_TRISH_STATUS ) bwand 4)) then begin
		set_global_var( GVAR_TRISH_STATUS, global_var( GVAR_TRISH_STATUS ) + 4 );
	end
	gsay_reply( SCRIPT_TRISH, 156 );
	giq_option( 4, SCRIPT_TRISH, 157, Trish26, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_TRISH, 159, Trish27, NEUTRAL_REACTION );
	if ((global_var( GVAR_SAUL_STATUS ) == 2) and not(local_var(5)) and not(global_var( GVAR_TRISH_STATUS ) bwand 8)) then begin
		giq_option( 5, SCRIPT_TRISH, 110, Trish4, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_TRISH, 153, TrishEnd, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_TRISH, 170, Trish28, NEUTRAL_REACTION );
	gsay_end;
	end_dialogue;
end

procedure Trish26 begin
	gsay_reply( SCRIPT_TRISH, 161 );
	giq_option( 4, SCRIPT_TRISH, 164, TrishCola, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_TRISH, 165, TrishBeer, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_TRISH, 166, TrishBooze, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_TRISH, 153, TrishEnd, NEUTRAL_REACTION );
end

procedure Trish27 begin
	if (local_var(1) < 2) then begin
		gsay_message( SCRIPT_TRISH, 160, 51 );
	end
	else begin
		call Trish19;
	end
end

procedure Trish28 begin
	gsay_message( SCRIPT_TRISH, 171, 50 );
end

procedure Trish29 begin
	float_msg(self_obj, mstr(140), 0);
	display_msg(mstr(172));
	give_exp_points(300);
	BigUpReact
	set_map_var(MVAR_guards_left, 0);
	set_map_var(MVAR_Skulz_left, 0);
end

procedure TrishEnd begin
end

procedure TrishCola begin
	if (dude_caps >= 3) then begin
		dude_caps_adjust( -3 );
		item := create_object( PID_NUKA_COLA, 0, 0 );
		add_obj_to_inven(dude_obj, item);
		gsay_message( SCRIPT_TRISH, 174, 50 );
	end
end

procedure TrishBeer begin
	if (dude_caps >= 5) then begin
		dude_caps_adjust( -5 );
		item := create_object( PID_BEER, 0, 0 );
		add_obj_to_inven(dude_obj, item);
		gsay_message( SCRIPT_TRISH, 174, 50 );
	end
end

procedure TrishBooze begin
	if (dude_caps >= 20) then begin
		dude_caps_adjust( -20 );
		item := create_object( PID_BOOZE, 0, 0 );
		add_obj_to_inven(dude_obj, item);
		gsay_message( SCRIPT_TRISH, 174, 50 );
	end
end

procedure TrishSleeping begin
	if (sleep_time > wake_time) then begin
		if ((game_time_hour >= wake_time) and (game_time_hour < sleep_time)) then begin
			if not(is_loading_game) then begin    set_self_visible;    end//  MAKE VISIBLE
			set_local_var(LVAR_Sleeping, 0);
		end
		else begin
			if not(is_loading_game) then begin    set_self_invisible;    end//  MAKE INVISIBLE
			set_local_var(LVAR_Sleeping, 1);
		end
	end
	else begin
		if ((game_time_hour >= sleep_time) and (game_time_hour < wake_time)) then begin
			if not(is_loading_game) then begin    set_self_invisible;    end//  MAKE INVISIBLE
			set_local_var(LVAR_Sleeping, 1);
		end
		else begin
			if not(is_loading_game) then begin    set_self_visible;    end//  MAKE VISIBLE
			set_local_var(LVAR_Sleeping, 0);
		end
	end
end
