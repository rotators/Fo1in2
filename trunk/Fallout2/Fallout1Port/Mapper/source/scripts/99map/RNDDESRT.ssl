#include "..\headers\define.h"

procedure start;
export variable Dog_ptr;
export variable Ian_ptr;
export variable Katja_ptr;
export variable Tandi_ptr;
export variable Tycho_ptr;
export variable random_seed_1;
export variable random_seed_2;
export variable random_seed_3;
procedure add_party;
procedure Bone_table;
procedure Bone1;
procedure Bone2;
procedure Bone3;
procedure Bone4;
procedure Bone5;
procedure Bone6;
procedure choose_start;
procedure Death_table;
procedure Death1;
procedure Death2;
procedure Death3;
procedure Death4;
procedure Death5;
procedure Death6;
//procedure DESERT_NecropGlow_table;// Combines Necrop and Glow encounters
//procedure DESERT_NecropGlow_1;
//procedure DESERT_NecropGlow_2;
//procedure DESERT_NecropGlow_3;
//procedure DESERT_NecropGlow_4;
//procedure DESERT_NecropGlow_5;
//procedure DESERT_NecropGlow_6;
procedure Glow_table;
procedure Glow1;
procedure Glow2;
procedure Glow3;
procedure Glow4;
procedure Glow5;
procedure Glow6;
procedure Hub_table;
procedure Hub1;
procedure Hub2;
procedure Hub3;
procedure Hub4;
procedure Hub5;
procedure Hub6;
procedure hunters;
procedure Junk_table;
procedure Junk1;
procedure Junk2;
procedure Junk3;
procedure Junk4;
procedure Junk5;
procedure Junk6;
procedure Lighting;
procedure Necrop_table;
procedure Necrop1;
procedure Necrop2;
procedure Necrop3;
procedure Necrop4;
procedure Necrop5;
procedure Necrop6;
procedure North_table;
procedure North1;
procedure North2;
procedure North3;
procedure North4;
procedure North5;
procedure North6;
procedure Place_critter;
procedure Raider_table;
procedure Raider1;
procedure Raider2;
procedure Raider3;
procedure Raider4;
procedure Raider5;
procedure Raider6;
procedure remove_party;
procedure Scenes;// RNDDESRT ONLY
procedure Shady_table;
procedure Shady1;
procedure Shady2;
procedure Shady3;
procedure Shady4;
procedure Shady5;
procedure Shady6;
procedure South_table;
procedure South1;
procedure South2;
procedure South3;
procedure South4;
procedure South5;
procedure South6;
procedure Steel_table;
procedure Steel1;
procedure Steel2;
procedure Steel3;
procedure Steel4;
procedure Steel5;
procedure Steel6;
procedure stranger;
procedure update_party;
procedure Vats_table;
procedure Vats1;
procedure Vats2;
procedure Vats3;
procedure Vats4;
procedure Vats5;
procedure Vats6;
procedure Vault_MOUNTAIN_table;// Same as Mountain (replace rockfalls with dehydration)
procedure Vault_MOUNTAIN_1;
procedure Vault_MOUNTAIN_2;
procedure Vault_MOUNTAIN_3;
procedure Vault_MOUNTAIN_4;
procedure Vault_MOUNTAIN_5;
procedure Vault_MOUNTAIN_6;
variable Critter;
variable Critter_direction;
variable Critter_script := -1;
variable Critter_tile;
variable Critter_type;
variable dude_pos;
variable dude_rot;
variable Dude_tile;
variable Encounter_Num;
variable group_angle;
variable Inner_ring;
variable Item;
variable Outer_ring;
variable party_elevation;
variable Range;// RNDDESRT ONLY
variable Ranger_rerolls;
//variable Scenery_Creation;
//variable Scenery_Creation_Count;
//variable Scenery_Creation_Hex;
variable Tot_Critter_A;
variable Tot_Critter_B;
variable victim;

export variable signal_mutants;

procedure start
begin
	if (script_action == 15) then begin
		call Lighting;
		dude_rot := random(0, 5);
		set_global_var(MERCS_RANDOM_ENC_unsure, 0);
		if (map_first_run) and (metarule(22, 0) == 0) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg(" ");  debug_msg(" ");  debug_msg(" ");    display_msg(" --- RANDOM ENCOUNTER, DESERT --- ");
				debug_msg(" ");  display_msg("GLOBALVAR (32) is " + global_var(LOAD_MAP_INDEX) + " ");
			end
			if (global_var(LOAD_MAP_INDEX) != 1) then begin
				Ranger_rerolls := has_trait(0, dude_obj, 47);
				set_global_var(AGGRO_FLAG_RND_ENC_unsure, 0);
				while(Encounter_Num == 0) do begin
					Encounter_Num := (random(0, 8) + random(0, 8) + random(0, 8));// vanilla was 3d6, mine is 3d9
					if global_var(FIXT_BUGFIXES_ONLY) or (global_var(RANDOM_ENC_IGNORE_LUCK) == 0) then begin//if NOT set to ignore Luck in factoring EncNum
						if (get_critter_stat(dude_obj, 6) < 4) or (get_critter_stat(dude_obj, 6) > 7) then begin
							if (get_critter_stat(dude_obj, 6) == 10) then begin
								if (difficulty_level == 2) then begin
									Encounter_Num := (Encounter_Num + 1);
								end
								else begin
									if (difficulty_level == 1) then begin
										Encounter_Num := (Encounter_Num + 2);
									end
									else begin
										if (difficulty_level == 0) then begin
											Encounter_Num := (Encounter_Num + 3);
										end
									end
								end
							end
							else begin
								if (get_critter_stat(dude_obj, 6) == 9) then begin
									if (difficulty_level == 2) or (difficulty_level == 1) then begin
										Encounter_Num := (Encounter_Num + 1);
									end
									else begin
										if (difficulty_level == 0) then begin
											Encounter_Num := (Encounter_Num + 2);
										end
									end
								end
								else begin
									if (get_critter_stat(dude_obj, 6) == 8) then begin
										if (difficulty_level == 1) or (difficulty_level == 0) then begin
											Encounter_Num := (Encounter_Num + 1);
										end
									end
									else begin
										if (get_critter_stat(dude_obj, 6) == 3) then begin
											if (difficulty_level == 2) or (difficulty_level == 1) then begin
												Encounter_Num := (Encounter_Num - 1);
											end
										end
										else begin
											if (get_critter_stat(dude_obj, 6) == 2) then begin
												if (difficulty_level == 1) or (difficulty_level == 0) then begin
													Encounter_Num := (Encounter_Num - 1);
												end
												else begin
													if (difficulty_level == 2) then begin
														Encounter_Num := (Encounter_Num - 2);
													end
												end
											end
											else begin
												if (get_critter_stat(dude_obj, 6) == 1) then begin
													if (difficulty_level == 2) then begin
														Encounter_Num := (Encounter_Num - 3);
													end
													else begin
														if (difficulty_level == 1) then begin
															Encounter_Num := (Encounter_Num - 2);
														end
														else begin
															if (difficulty_level == 0) then begin
																Encounter_Num := (Encounter_Num - 1);
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
					else begin
						if global_var(RANDOM_ENC_DIFF_BASED) then begin// modify EncNum purely on difficulty levels
							if (difficulty_level == 2) then begin
								Encounter_Num := (Encounter_Num - 1);
							end
							else begin
								if (difficulty_level == 0) then begin
									Encounter_Num := (Encounter_Num + 1);
								end
							end
							if (combat_difficulty == 2) then begin
								Encounter_Num := (Encounter_Num - 1);
							end
							else begin
								if (combat_difficulty == 0) then begin
									Encounter_Num := (Encounter_Num + 1);
								end
							end
						end
						else begin
							if global_var(RANDOM_ENC_LEVEL_BASED) then begin// modify EncNum by player level
								if (get_pc_stat(1) < 7) then begin
									if (get_pc_stat(1) < 3) then begin
										Encounter_Num := (Encounter_Num + 3);
									end
									else begin
										if (get_pc_stat(1) < 5) then begin
											Encounter_Num := (Encounter_Num + 2);
										end
										else begin
											if (get_pc_stat(1) < 7) then begin
												Encounter_Num := (Encounter_Num + 1);
											end
										end
									end
								end
								else begin
									if get_pc_stat(1) > 8 then begin
										if (get_pc_stat(1) < 11) then begin
											Encounter_Num := (Encounter_Num - 1);
										end
										else begin
											if (get_pc_stat(1) < 13) then begin
												Encounter_Num := (Encounter_Num - 2);
											end
											else begin
												Encounter_Num := (Encounter_Num - 3);
											end
										end
									end
								end
							end
						end
					end
					if (global_var(HUNTER_STATUS) != 3) and (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) and random(0, 1) then begin// Chris not dead, Child-Killer yes
						Encounter_Num := 7;
					end
					else begin
						if (Encounter_Num <= 5) then begin
							Encounter_Num := 1;
						end
						else begin
							if (Encounter_Num <= 8) then begin
								Encounter_Num := 2;
							end
							else begin
								if (Encounter_Num <= 11) then begin
									Encounter_Num := 3;
								end
								else begin
								if (Encounter_Num == 12) then begin
										if (random(0, 1) == 0) then begin
											Encounter_Num := 3;
										end
										else begin
											Encounter_Num := 4;
										end
									end
									else begin
										if (Encounter_Num <= 15) then begin
											Encounter_Num := 4;
										end
										else begin
											if (Encounter_Num <= 18) then begin
												Encounter_Num := 5;
											end
											else begin
												Encounter_Num := 6;
											end
										end
									end
								end
							end
						end
					end
				end
//
//
//
//
//TESTING, REMOVE FOR RELEASE	Encounter_Num := 1;//Sduibek testing	TESTING TESTING TESTING REMOVE FOR RELEASE
//
//
//
				if (global_var(WORLD_TERRAIN) == 0) then begin
					call North_table;
					display_msg("north table");
				end
				else begin
					if (global_var(WORLD_TERRAIN) == 1) then begin
						call South_table;// why did this previously have a question mark, preventing compiling?
					end
					else begin
						if (global_var(WORLD_TERRAIN) == 2) or (global_var(WORLD_TERRAIN) == 6) then begin
							call Raider_table;
						end
						else begin
							if (global_var(WORLD_TERRAIN) == 3) then begin
								call Necrop_table;//DESERT_NecropGlow_table;// Combines Necrop and Glow encounters
							end
							else begin
								if (global_var(WORLD_TERRAIN) == 4) then begin
									call Vault_MOUNTAIN_table;// Same as Mountain (replace rockfalls with dehydration)
								end
								else begin
									if (global_var(WORLD_TERRAIN) == 5) then begin
										call Shady_table;
										display_msg("shady table");
									end
									else begin
										if (global_var(WORLD_TERRAIN) == 7) then begin
											call Junk_table;
											display_msg("junk table");
										end
										else begin
											if (global_var(WORLD_TERRAIN) == 8) then begin
												call Hub_table;
											end
											else begin
												if (global_var(WORLD_TERRAIN) == 9) then begin
													call Necrop_table;
												end
												else begin
													if (global_var(WORLD_TERRAIN) == 10) then begin
														call Steel_table;
													end
													else begin
														if (global_var(WORLD_TERRAIN) == 11) then begin
															call Vats_table;
														end
														else begin
															if (global_var(WORLD_TERRAIN) == 12) then begin
																call Glow_table;
															end
															else begin
																if (global_var(WORLD_TERRAIN) == 13) then begin
																	call Bone_table;
																end
																else begin
																	if (global_var(WORLD_TERRAIN) == 14) then begin
																		call Death_table;
																	end
																	else begin
																		display_msg("ERROR! Desert encounter global_var(WORLD_TERRAIN) is out of range! Please contact Sduibek and provide a savegame from this map." + global_var(WORLD_TERRAIN));
																		debug_msg("ERROR! Desert encounter global_var(WORLD_TERRAIN) is out of range! Please contact Sduibek and provide a savegame from this map.");
																	end
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end// <-- COMMENT THIS OUT TO MAKE ENCOUTNERS SPAWN EVEN IF ENTERING MAP MANUALLY
			else begin
				dude_pos := random(0, 3);
				Dude_tile := tile_num(dude_obj);
				call Scenes;
				if (dude_pos == 0) then begin
					override_map_start(109, 72, 0, dude_rot);
				end
				else begin
					if (dude_pos == 1) then begin
						override_map_start(131, 102, 0, dude_rot);
					end
					else begin
						if (dude_pos == 2) then begin
							override_map_start(90, 112, 0, dude_rot);
						end
						else begin
							override_map_start(80, 86, 0, dude_rot);
						end
					end
				end
			end
		end
		call add_party;
	end
	else begin
		if (script_action == 23) then begin
			call Lighting;
			call update_party;
		end
		else begin
			if (script_action == 16) then begin
				call remove_party;
			end
		end
	end
end

procedure stranger
begin
	variable ItemToAdd := 1;
	if (not(global_var(FIXT_BUGFIXES_ONLY))) then begin
		if (global_var(MYST_STRANGER_LUCK_BASED)) then begin
			if (has_trait(0, dude_obj, 46) and (global_var(MYST_STRANGER_DEAD) == 0) and (random(1, 10) < (get_critter_stat(dude_obj, 6) - 1))) then begin
				Critter_type := PID_MYSTERIOUS_STRANGER;
				Critter_script := SCRIPT_MYSTSTRN;
				Critter_direction := random(0, 5);
				Outer_ring := 7;
				Inner_ring := 4;
				call Place_critter;
				Critter_direction := dude_rot + (random(0, 2) - 1);
				while(Critter_direction < 0) do begin
					Critter_direction := Critter_direction + 6;
				end
				if (Critter_direction > 5) then begin
					Critter_direction := Critter_direction % 6;
				end
				anim(Critter, 1000, Critter_direction);
				ItemToAdd := global_var(MYST_STRANGER_ITEM);
				if (ItemToAdd == 1) then begin
					if global_var(MYST_STRANGER_HAS_ARMOR) then begin
						Item := create_object_sid(PID_LEATHER_ARMOR, 0, 0, -1);
						add_obj_to_inven(Critter, Item);
						wield_obj_critter(self_obj, Item);
					end
					set_global_var(MYST_STRANGER_ITEM, 10);
				end
				else begin
					if (ItemToAdd == 2) then begin
						if global_var(MYST_STRANGER_HAS_ARMOR) then begin
							Item := create_object_sid(PID_METAL_ARMOR, 0, 0, -1);
							add_obj_to_inven(Critter, Item);
							wield_obj_critter(self_obj, Item);
						end
						set_global_var(MYST_STRANGER_ITEM, 9);
					end
					else begin
						if global_var(MYST_STRANGER_HAS_ARMOR) then begin
							Item := create_object_sid(PID_COMBAT_ARMOR, 0, 0, -1);
							add_obj_to_inven(Critter, Item);
							wield_obj_critter(self_obj, Item);
						end
						set_global_var(MYST_STRANGER_ITEM, 15);
					end
				end
			end
		end
		else begin
			if (has_trait(0, dude_obj, 46) and (global_var(MYST_STRANGER_DEAD) == 0) and (random((0 + global_var(MYST_STRANGER_CHANCE)), (3 + global_var(MYST_STRANGER_CHANCE))) > 1)) then begin
				Critter_type := PID_MYSTERIOUS_STRANGER;
				Critter_script := SCRIPT_MYSTSTRN;
				Critter_direction := random(0, 5);
				Outer_ring := 7;
				Inner_ring := 4;
				call Place_critter;
				Critter_direction := dude_rot + (random(0, 2) - 1);
				while(Critter_direction < 0) do begin
					Critter_direction := Critter_direction + 6;
				end
				if (Critter_direction > 5) then begin
					Critter_direction := Critter_direction % 6;
				end
				anim(Critter, 1000, Critter_direction);
				ItemToAdd := global_var(MYST_STRANGER_ITEM);
				if (ItemToAdd == 1) then begin
					if global_var(MYST_STRANGER_HAS_ARMOR) then begin
						Item := create_object_sid(PID_LEATHER_ARMOR, 0, 0, -1);
						add_obj_to_inven(Critter, Item);
						wield_obj_critter(self_obj, Item);
					end
					set_global_var(MYST_STRANGER_ITEM, 10);
				end
				else begin
					if (ItemToAdd == 2) then begin
						if global_var(MYST_STRANGER_HAS_ARMOR) then begin
							Item := create_object_sid(PID_METAL_ARMOR, 0, 0, -1);
							add_obj_to_inven(Critter, Item);
							wield_obj_critter(self_obj, Item);
						end
						set_global_var(MYST_STRANGER_ITEM, 9);
					end
					else begin
						if global_var(MYST_STRANGER_HAS_ARMOR) then begin
							Item := create_object_sid(PID_COMBAT_ARMOR, 0, 0, -1);
							add_obj_to_inven(Critter, Item);
							wield_obj_critter(self_obj, Item);
						end
						set_global_var(MYST_STRANGER_ITEM, 15);
					end
				end
			end
		end
	end
	else begin
		if (has_trait(0, dude_obj, 46) and (global_var(MYST_STRANGER_DEAD) == 0) and random(0, 1)) then begin
			Critter_type := PID_MYSTERIOUS_STRANGER;
			Critter_script := SCRIPT_MYSTSTRN;
			Critter_direction := random(0, 5);
			Outer_ring := 7;
			Inner_ring := 4;
			call Place_critter;
			Critter_direction := dude_rot + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
			anim(Critter, 1000, Critter_direction);
			ItemToAdd := global_var(MYST_STRANGER_ITEM);
			if (ItemToAdd == 1) then begin
				set_global_var(MYST_STRANGER_ITEM, 10);
			end
			else begin
				if (ItemToAdd == 2) then begin
					set_global_var(MYST_STRANGER_ITEM, 9);
				end
				else begin
					set_global_var(MYST_STRANGER_ITEM, 15);
				end
			end
		end
	end
end

procedure Place_critter
begin
	variable Facing := 0;
	variable Distance := 0;
	variable Ring := 0;
	Critter := create_object_sid(Critter_type, 0, 0, Critter_script);
	Ring := random(Inner_ring, Outer_ring);
	Facing := random(0, 5);
	Critter_tile := tile_num_in_direction(Dude_tile, Critter_direction, Ring);
	Distance := tile_num_in_direction(Critter_tile, Facing, (Ring / 2));
	if ((tile_distance(Dude_tile, Distance) <= Outer_ring) and (tile_distance(Dude_tile, Distance) >= Inner_ring)) then begin
		Critter_tile := tile_num_in_direction(Critter_tile, Facing, (Ring / 2));
	end
	critter_attempt_placement(Critter, Critter_tile, elevation(dude_obj));
end

procedure choose_start
begin
	dude_pos := random(0, 3);
	if (global_var(WORLD_TERRAIN) == 1) then begin
		if (Encounter_Num == 1) then begin
			override_map_start(93, 91, 0, 1);
		end
		else begin
			if (dude_pos == 0) then begin
				override_map_start(109, 72, 0, dude_rot);
			end
			else begin
				if (dude_pos == 1) then begin
					override_map_start(131, 102, 0, dude_rot);
				end
				else begin
					if (dude_pos == 2) then begin
						override_map_start(90, 112, 0, dude_rot);
					end
					else begin
						override_map_start(80, 86, 0, dude_rot);
					end
				end
			end
		end
	end
	else begin
		if (global_var(WORLD_TERRAIN) == 10) then begin
			if ((Encounter_Num == 1) or (Encounter_Num == 5) or (Encounter_Num == 6)) then begin
				override_map_start(100, 100, 0, dude_rot);
			end
			else begin
				if (dude_pos == 0) then begin
					override_map_start(109, 72, 0, dude_rot);
				end
				else begin
					if (dude_pos == 1) then begin
						override_map_start(131, 102, 0, dude_rot);
					end
					else begin
						if (dude_pos == 2) then begin
							override_map_start(90, 112, 0, dude_rot);
						end
						else begin
							override_map_start(80, 86, 0, dude_rot);
						end
					end
				end
			end
		end
		else begin
			if (dude_pos == 0) then begin
				override_map_start(109, 72, 0, dude_rot);
			end
			else begin
				if (dude_pos == 1) then begin
					override_map_start(131, 102, 0, dude_rot);
				end
				else begin
					if (dude_pos == 2) then begin
						override_map_start(90, 112, 0, dude_rot);
					end
					else begin
						override_map_start(80, 86, 0, dude_rot);
					end
				end
			end
		end
	end
	Dude_tile := tile_num(dude_obj);
	call Scenes;
end

procedure Lighting
begin
	variable Hour := 0;
	Hour := game_time_hour;
	if ((Hour >= 600) and (Hour < 700)) then begin
		set_light_level(Hour - 600 + 40);
	end
	else begin
		if ((Hour >= 700) and (Hour < 1800)) then begin
			set_light_level(100);
		end
		else begin
			if ((Hour >= 1800) and (Hour < 1900)) then begin
				set_light_level(100 - (Hour - 1800));
			end
			else begin
				set_light_level(40);
			end
		end
	end
end

procedure North_table
begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 2) or (Encounter_Num == 3) or (Encounter_Num == 4) or (Encounter_Num == 7)) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var(RANDOM_ENC_SOMETHING) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");
		Encounter_Num := global_var(RANDOM_ENC_SOMETHING);
		set_global_var(RANDOM_ENC_SOMETHING, 0);
	end
	if (Encounter_Num) then begin
		if global_var(DEBUG_MODE_MESSAGES_ON) then begin
			debug_msg(" ");  display_msg("Desert NORTH loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call North1;
		end
		else begin
			if (Encounter_Num == 2) then begin
				call North2;
			end
			else begin
				if (Encounter_Num == 3) then begin
					call North3;
				end
				else begin
					if (Encounter_Num == 4) then begin
						call North4;
					end
					else begin
						if (Encounter_Num == 5) then begin
							call North5;
						end
						else begin
							if (Encounter_Num == 6) then begin
								call North6;
							end
							else begin
								call hunters;
							end
						end
					end
				end
			end
		end
	end
end

procedure South_table
begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 2) or (Encounter_Num == 4) or (Encounter_Num == 5) or (Encounter_Num == 6) or (Encounter_Num == 7)) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var(RANDOM_ENC_SOMETHING) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");
		Encounter_Num := global_var(RANDOM_ENC_SOMETHING);
		set_global_var(RANDOM_ENC_SOMETHING, 0);
	end
	if (Encounter_Num) then begin
		if global_var(DEBUG_MODE_MESSAGES_ON) then begin
			debug_msg(" ");  display_msg("Desert SOUTH loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call South1;
		end
		else begin
			if (Encounter_Num == 2) then begin
				call South2;
			end
			else begin
				if (Encounter_Num == 3) then begin
					call South3;
				end
				else begin
					if (Encounter_Num == 4) then begin
						call South4;
					end
					else begin
						if (Encounter_Num == 5) then begin
							call South5;
						end
						else begin
							if (Encounter_Num == 6) then begin
								call South6;
							end
							else begin
								call hunters;
							end
						end
					end
				end
			end
		end
	end
end

procedure Shady_table
begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 3) or (Encounter_Num == 7)) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var(RANDOM_ENC_SOMETHING) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");
		Encounter_Num := global_var(RANDOM_ENC_SOMETHING);
		set_global_var(RANDOM_ENC_SOMETHING, 0);
	end
	if (Encounter_Num) then begin
		if global_var(DEBUG_MODE_MESSAGES_ON) then begin
			debug_msg(" ");  display_msg("Desert SHADY loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Shady1;
		end
		else begin
			if (Encounter_Num == 2) then begin
				call Shady2;
			end
			else begin
				if (Encounter_Num == 3) then begin
					call Shady3;
				end
				else begin
					if (Encounter_Num == 4) then begin
						if (global_var(IS_DUC_ALIVE) < 2) then begin
							call Shady4;
						end
						else begin
							call Shady3;
						end
					end
					else begin
						if (Encounter_Num == 5) then begin
							if (global_var(LANCE_DEAD_ALREADY_SEEN) != 2) then begin
								call Shady5;
							end
							else begin
								call Shady2;
							end
						end
						else begin
							if (Encounter_Num == 6) then begin
								call Shady6;
							end
							else begin
								call hunters;
							end
						end
					end
				end
			end
		end
	end
end

procedure Raider_table
begin
	if ((global_var(THE_HUB_WAS_INVADED) == 1) and (Encounter_Num == 3)) then begin
		Encounter_Num := 4;
	end
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 3) or (Encounter_Num == 4) or (Encounter_Num == 7)) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var(RANDOM_ENC_SOMETHING) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");
		Encounter_Num := global_var(RANDOM_ENC_SOMETHING);
		set_global_var(RANDOM_ENC_SOMETHING, 0);
	end
	if (Encounter_Num) then begin
		if global_var(DEBUG_MODE_MESSAGES_ON) then begin
			debug_msg(" ");  display_msg("Desert RAIDER loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Raider1;
		end
		else begin
			if (Encounter_Num == 2) then begin
				call Raider2;
			end
			else begin
				if (Encounter_Num == 3) then begin
					call Raider3;
				end
				else begin
					if (Encounter_Num == 4) then begin
						call Raider4;
					end
					else begin
						if (Encounter_Num == 5) then begin
							call Raider5;
						end
						else begin
							if (Encounter_Num == 6) then begin
								call Raider6;
							end
							else begin
								call hunters;
							end
						end
					end
				end
			end
		end
	end
end

procedure Junk_table
begin
	if ((global_var(THE_HUB_WAS_INVADED) == 1) and (Encounter_Num == 5)) then begin
		Encounter_Num := random(1, 4);
	end
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 2) or (Encounter_Num == 3) or (Encounter_Num == 4) or (Encounter_Num == 7)) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var(RANDOM_ENC_SOMETHING) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");
		Encounter_Num := global_var(RANDOM_ENC_SOMETHING);
		set_global_var(RANDOM_ENC_SOMETHING, 0);
	end
	if (Encounter_Num) then begin
		if global_var(DEBUG_MODE_MESSAGES_ON) then begin
			debug_msg(" ");  display_msg("Desert JUNK loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Junk1;
		end
		else begin
			if (Encounter_Num == 2) then begin
				call Junk2;
			end
			else begin
				if (Encounter_Num == 3) then begin
					call Junk3;
				end
				else begin
					if (Encounter_Num == 4) then begin
						if (global_var(JUNKTOWN_WAS_INVADED) == 0) then begin// if Junktown not invaded
							call Junk4;
						end
						else begin// if Junktown invaded
							call Vats4;//Nightkin, Mean Super Mutant, Floater
						end
					end
					else begin
						if (Encounter_Num == 5) then begin
							call Junk5;
						end
						else begin
							if (Encounter_Num == 6) then begin
								call Junk6;
							end
							else begin
								call hunters;
							end
						end
					end
				end
			end
		end
	end
end

procedure Hub_table
begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 2) or (Encounter_Num == 3) or (Encounter_Num == 4) or (Encounter_Num == 7)) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var(RANDOM_ENC_SOMETHING) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");
		Encounter_Num := global_var(RANDOM_ENC_SOMETHING);
		set_global_var(RANDOM_ENC_SOMETHING, 0);
	end
	if (Encounter_Num) then begin
		if global_var(DEBUG_MODE_MESSAGES_ON) then begin
			debug_msg(" ");  display_msg("Desert HUB loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Hub1;
		end
		else begin
			if (Encounter_Num == 2) then begin
				call Hub2;
			end
			else begin
				if (Encounter_Num == 3) then begin
					call Hub3;
				end
				else begin
					if (Encounter_Num == 4) then begin
						if (global_var(THE_HUB_WAS_INVADED) == 0) then begin// if The Hub not invaded
							call Hub4;
						end
						else begin// if The Hub invaded
							call Vats4;//Nightkin, Mean Super Mutant, Floater
						end
					end
					else begin
						if (Encounter_Num == 5) then begin
							call Hub5;
						end
						else begin
							if (Encounter_Num == 6) then begin
								call Hub6;
							end
							else begin
								call hunters;
							end
						end
					end
				end
			end
		end
	end
end

procedure Necrop_table
begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 2) or (Encounter_Num == 3) or (Encounter_Num == 5) or (Encounter_Num == 7)) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var(RANDOM_ENC_SOMETHING) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");
		Encounter_Num := global_var(RANDOM_ENC_SOMETHING);
		set_global_var(RANDOM_ENC_SOMETHING, 0);
	end
	if (Encounter_Num) then begin
		if global_var(DEBUG_MODE_MESSAGES_ON) then begin
			debug_msg(" ");  display_msg("Desert NECROP loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Necrop1;
		end
		else begin
			if (Encounter_Num == 2) then begin
				call Necrop2;
			end
			else begin
				if (Encounter_Num == 3) then begin
					call Necrop3;
				end
				else begin
					if (Encounter_Num == 4) then begin
						call Necrop4;
					end
					else begin
						if (Encounter_Num == 5) then begin
							call Necrop5;
						end
						else begin
							if (Encounter_Num == 6) then begin
								call Necrop6;
							end
							else begin
								call hunters;
							end
						end
					end
				end
			end
		end
	end
end

procedure Steel_table
begin
	if ((global_var(BROTHERHOOD_WAS_INVADED) == 1) and (Encounter_Num == 6)) then begin
		Encounter_Num := random(1, 5);
	end
	if ((global_var(THE_HUB_WAS_INVADED) == 1) and (Encounter_Num == 5)) then begin
		Encounter_Num := random(1, 4);
	end
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 2) or (Encounter_Num == 4) or (Encounter_Num == 7)) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var(RANDOM_ENC_SOMETHING) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");
		Encounter_Num := global_var(RANDOM_ENC_SOMETHING);
		set_global_var(RANDOM_ENC_SOMETHING, 0);
	end
	if (Encounter_Num) then begin
		if global_var(DEBUG_MODE_MESSAGES_ON) then begin
			debug_msg(" ");  display_msg("Desert STEEL loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			if (global_var(BROTHERHOOD_WAS_INVADED) == 0) then begin
				call Steel1;
			end
			else begin
				call Vats4;//what encounter is this
			end
		end
		else begin
			if (Encounter_Num == 2) then begin
				call Steel2;
			end
			else begin
				if (Encounter_Num == 3) then begin
					call Steel3;
				end
				else begin
					if (Encounter_Num == 4) then begin
						if (global_var(BROTHERHOOD_WAS_INVADED) == 0) then begin
							call Steel4;
						end
						else begin
							call Vats4;
						end
					end
					else begin
						if (Encounter_Num == 5) then begin
							call Steel5;
						end
						else begin
							if (Encounter_Num == 6) then begin
								call Steel6;
							end
							else begin
								call hunters;
							end
						end
					end
				end
			end
		end
	end
end

procedure Vats_table
begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 2) or (Encounter_Num == 3) or (Encounter_Num == 4) or (Encounter_Num == 7)) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var(RANDOM_ENC_SOMETHING) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");
		Encounter_Num := global_var(RANDOM_ENC_SOMETHING);
		set_global_var(RANDOM_ENC_SOMETHING, 0);
	end
	if (Encounter_Num) then begin
		if global_var(DEBUG_MODE_MESSAGES_ON) then begin
			debug_msg(" ");  display_msg("Desert VATS loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Vats1;
		end
		else begin
			if (Encounter_Num == 2) then begin
				call Vats2;
			end
			else begin
				if (Encounter_Num == 3) then begin
					call Vats3;
				end
				else begin
					if (Encounter_Num == 4) then begin
						call Vats4;
					end
					else begin
						if (Encounter_Num == 5) then begin
							call Vats5;
						end
						else begin
							if (Encounter_Num == 6) then begin
								call Vats6;
							end
							else begin
								call hunters;
							end
						end
					end
				end
			end
		end
	end
end

procedure Glow_table
begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 3) or (Encounter_Num == 4) or (Encounter_Num == 5) or (Encounter_Num == 7)) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var(RANDOM_ENC_SOMETHING) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");
		Encounter_Num := global_var(RANDOM_ENC_SOMETHING);
		set_global_var(RANDOM_ENC_SOMETHING, 0);
	end
	if (Encounter_Num) then begin
		if global_var(DEBUG_MODE_MESSAGES_ON) then begin
			debug_msg(" ");  display_msg("Desert GLOW loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Glow1;
		end
		else begin
			if (Encounter_Num == 2) then begin
				call Glow2;
			end
			else begin
				if (Encounter_Num == 3) then begin
					call Glow3;
				end
				else begin
					if (Encounter_Num == 4) then begin
						call Glow4;
					end
					else begin
						if (Encounter_Num == 5) then begin
							call Glow5;
						end
						else begin
							if (Encounter_Num == 6) then begin
								call Glow6;
							end
							else begin
								call hunters;
							end
						end
					end
				end
			end
		end
	end
end

procedure Bone_table
begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 3) or (Encounter_Num == 5) or (Encounter_Num == 7)) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var(RANDOM_ENC_SOMETHING) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");
		Encounter_Num := global_var(RANDOM_ENC_SOMETHING);
		set_global_var(RANDOM_ENC_SOMETHING, 0);
	end
	if (Encounter_Num) then begin
		if global_var(DEBUG_MODE_MESSAGES_ON) then begin
			debug_msg(" ");  display_msg("Desert BONE loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Bone1;
		end
		else begin
			if (Encounter_Num == 2) then begin
				call Bone2;
			end
			else begin
				if (Encounter_Num == 3) then begin
					call Bone3;
				end
				else begin
					if (Encounter_Num == 4) then begin
						call Bone4;
					end
					else begin
						if (Encounter_Num == 5) then begin
							call Bone5;
						end
						else begin
							if (Encounter_Num == 6) then begin
								call Bone6;
							end
							else begin
								call hunters;
							end
						end
					end
				end
			end
		end
	end
end

procedure Death_table
begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 2) or (Encounter_Num == 4) or (Encounter_Num == 6) or (Encounter_Num == 7)) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var(RANDOM_ENC_SOMETHING) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");
		Encounter_Num := global_var(RANDOM_ENC_SOMETHING);
		set_global_var(RANDOM_ENC_SOMETHING, 0);
	end
	if (Encounter_Num) then begin
		if global_var(DEBUG_MODE_MESSAGES_ON) then begin
			debug_msg(" ");  display_msg("Desert DEATH loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Death1;
		end
		else begin
			if (Encounter_Num == 2) then begin
				call Death2;
			end
			else begin
				if (Encounter_Num == 3) then begin
					call Death3;
				end
				else begin
					if (Encounter_Num == 4) then begin
						call Death4;
					end
					else begin
						if (Encounter_Num == 5) then begin
							call Death5;
						end
						else begin
							if (Encounter_Num == 6) then begin
								call Death6;
							end
							else begin
								call hunters;
							end
						end
					end
				end
			end
		end
	end
end


procedure Shady1
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 146));
	Tot_Critter_A := 2;
	Tot_Critter_B := random(2, 3);
	set_global_var(RND_ENC_RAIDERS_KILLED, 0);
	set_global_var(RND_ENC_PEASANTS_HOSTILE, 0);
	set_global_var(RND_ENC_PEASANTS_INIT, 0);
	set_global_var(WATER_THIEF_2, Tot_Critter_B);
	set_global_var(MYST_STRANGER_ITEM, 6);
	group_angle := random(0, 5);
	Outer_ring := 11;
	Inner_ring := 8;
	Critter_type := PID_PEASANT_YELLOW_FEMALE;
	Critter_script := SCRIPT_PEASVICT;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		item_caps_adjust(Critter, random(1, 12) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	victim := Critter;
	Critter_type := PID_TRAVELER_BALD_LEATHER;
	Critter_script := SCRIPT_GENRAIDA;
	if (group_angle == 0) then begin
		group_angle := 3;
	end
	else begin
		if (group_angle == 1) then begin
			group_angle := 4;
		end
		else begin
			if (group_angle == 2) then begin
				group_angle := 5;
			end
			else begin
				if (group_angle == 3) then begin
					group_angle := 0;
				end
				else begin
					if (group_angle == 4) then begin
						group_angle := 1;
					end
					else begin
						if (group_angle == 5) then begin
							group_angle := 2;
						end
					end
				end
			end
		end
	end
	while(Tot_Critter_B) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		Item := create_object_sid(PID_SPEAR, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		item_caps_adjust(Critter, random(1, 13) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	attack_setup(Critter, victim);
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure Shady2
begin
	call Shady3;
	/*
	variable HasFlask := 0
	variable Hours := 0;
	variable DamageHP := 0;
	variable CurrentHP := 0;
	variable PercentMax95 := 0;
	HasFlask := obj_carrying_pid_obj(dude_obj, PID_WATER_FLASK);
	if (HasFlask > 0) then begin
		rm_obj_from_inven(dude_obj, HasFlask);
		destroy_object(HasFlask);
		display_msg(message_str(SCRIPT_RNDDESRT, 125));
	end
	else begin
		//Skill_roll := roll_vs_skill(dude_obj, 17, (0 + (20 * has_trait(0, dude_obj, 16))));
		if (is_success(Skill_roll)) then begin
			if (is_critical(Skill_roll)) then begin
				display_msg(message_str(SCRIPT_RNDDESRT, 147));//{147}{}{You manage to avoid dehydration by searching for water. The search takes 1 hour.}
				Hours := 1;
			end
			else begin
				Hours := random(1, 6);
				if (Hours == 1) then begin
					display_msg(message_str(SCRIPT_RNDDESRT, 109));//{109}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional hour.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 110) + Hours + message_str(SCRIPT_RNDDESRT, 111));//{110}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional X hours}
				end
				Hours := (Hours + 1);
			end
		end
		else begin
			PercentMax95 := random(1, 100);
			if (is_critical(Skill_roll)) or (PercentMax95 > 95) then begin
				Hours := random(6, 12);
				DamageHP := (random(5, 8) + random(5, 8) + random(5, 8));// is now 15 to 24, was previously 2 to 4
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 116));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you }{116}{}{ points of health damage.}
				end
			end
			else begin
				Hours := random(4, 8);
				DamageHP := (random(2, 4) + random(2, 4) + random(2, 4));// is now 6 to 12, was previously 1 to 2
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 124));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained }{124}{}{ points of health damage.}
				end
			end
		end
		game_time_advance((10 * 60 * 60 * Hours));
	end*/
end

procedure Shady3
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 169));
	Tot_Critter_A := random(2, 4);//was 1, 3
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 4);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure Shady4
begin
//	display_msg(message_str(112, 170));
//	display_msg(message_str(112, 305));
// else call Shady3
	if (global_var(IS_DUC_ALIVE) == 0) then begin
		display_msg(message_str(SCRIPT_RNDDESRT, 170));
	end
	else begin
		if (global_var(IS_DUC_ALIVE) == 1) then begin
			display_msg(message_str(SCRIPT_RNDDESRT, 305));
		end
	end
	if (global_var(IS_DUC_ALIVE) == 0) then begin
		Tot_Critter_B := random(4, 6);
		Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 7;
		Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
		group_angle := dude_rot;
		set_global_var(WATER_THIEF_2, 0);
		Critter_type := PID_PEASANT_YELLOW;
		Critter_script := SCRIPT_DUC;
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Item := create_object_sid(PID_MUTATED_FRUIT, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, 2 * (has_trait(0, dude_obj, 40) + 1));
		Item := create_object_sid(PID_10MM_AP, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, 1 * (has_trait(0, dude_obj, 40) + 1));
		Item := create_object_sid(PID_223_FMJ, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, 2 * (has_trait(0, dude_obj, 40) + 1));
		Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, random(0, 4));
		Item := create_object_sid(PID_FIRST_AID_KIT, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, random(0, 1));
		Item := create_object_sid(PID_IGUANA_ON_A_STICK, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, random(0, 3));
		item_caps_adjust(Critter, random(25, 100) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		victim := Critter;
	end
	else begin
		if (global_var(IS_DUC_ALIVE) == 1) then begin
			Tot_Critter_B := random(2, 3);
			Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 7;
			Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
			group_angle := dude_rot;
			set_global_var(WATER_THIEF_2, 1);
			set_global_var(IS_DUC_ALIVE, (global_var(IS_DUC_ALIVE) + 1));
		end
	end
	Critter_type := PID_TOWNSMAN_LEATHER;
	Critter_script := SCRIPT_GENGRDC;
	while(Tot_Critter_B) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (global_var(IS_DUC_ALIVE) == 0) then begin
			if (random(0, 1)) then begin
				Critter_direction := group_angle + (random(0, 4) - 2);
				while(Critter_direction < 0) do begin
					Critter_direction := Critter_direction + 6;
				end
				if (Critter_direction > 5) then begin
					Critter_direction := Critter_direction % 6;
				end
				anim(Critter, 1000, Critter_direction);
			end
			else begin
				anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(victim)));
			end
		end
		else begin
			anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		end
		Item := create_object_sid(PID_HUNTING_RIFLE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Item := create_object_sid(PID_223_FMJ, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, has_trait(0, dude_obj, 40) + 1);
		item_caps_adjust(Critter, random(1, 6) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		Tot_Critter_B := Tot_Critter_B - 1;
	end
end

procedure Shady5
begin
//	display_msg(message_str(112, 171));
//	display_msg(message_str(112, 175));
//else call Shady3
	if ((global_var(LANCE_STATUS) bwand 4) != 0) then begin
		display_msg(message_str(SCRIPT_RNDDESRT, 171));
		set_global_var(LANCE_DEAD_ALREADY_SEEN, 2);
	end
	else begin
		display_msg(message_str(SCRIPT_RNDDESRT, 175));
	end
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 4;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
	Critter_direction := dude_rot;
	Critter_type := PID_TOWNSMAN_LEATHER;//  2- Townsman ; was 50% chance instead 30          Peasant                16777246
	Critter_script := SCRIPT_LANCE;//was 50% chance instead 749
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, 1 + has_trait(0, dude_obj, 40));
	Item := create_object_sid(PID_SPEAR, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Item := create_object_sid(PID_IGUANA_ON_A_STICK, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	item_caps_adjust(Critter, random(8, 44) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	if (global_var(LANCE_STATUS) != 0) then begin
		kill_critter(Critter, 61);
	end
	Tot_Critter_A := random(4, 6);
	if ((game_time_hour >= 700) and (game_time_hour < 1800)) then begin
		Outer_ring := 6;
		Inner_ring := 4;
	end
	else begin
		Outer_ring := 4;
		Inner_ring := 3;
	end
	Critter_type := PID_MANTIS;
	Critter_script := SCRIPT_MANTIS;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 5);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure Shady6
begin
	variable LVar0 := 2;
	variable money;
	display_msg(message_str(SCRIPT_RNDDESRT, 172));
//
	Critter_direction := random(0, 5);
	money := create_object_sid(PID_BOTTLE_CAPS, 0, 0, -1);
	Critter_tile := tile_num_in_direction(Dude_tile, Critter_direction, 4);
	Item := create_object_sid(PID_MUTATED_FRUIT, 0, 0, -1);
	critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
	if (get_critter_stat(dude_obj, 6) == 8) then begin
		money := 0;
		Item := create_object_sid(PID_MUTATED_FRUIT, 0, 0, -1);
		critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
		Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
		critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
		if (has_trait(0, dude_obj, 40)) then begin
			Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
			critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
		end
		Item := create_object_sid(PID_BAG, 0, 0, -1);
		critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
		add_mult_objs_to_inven(Item, money, 6 * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	end
	else begin
		if (get_critter_stat(dude_obj, 6) > 8) then begin
			Item := create_object_sid(PID_MUTATED_FRUIT, 0, 0, -1);
			critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
			if (has_trait(0, dude_obj, 40)) then begin
				LVar0 := 4;
			end
			while(LVar0) do begin
				Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
				critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
				LVar0 := LVar0 - 1;
			end
			Item := create_object_sid(PID_BAG, 0, 0, -1);
			add_mult_objs_to_inven(Item, money, 122 * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
			critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
			Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
			critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
		end
		else begin
			Item := create_object_sid(PID_MUTATED_FRUIT, 0, 0, -1);
			critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
			Item := create_object_sid(PID_BAG, 0, 0, -1);
			add_mult_objs_to_inven(Item, money, 4 * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
			critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
		end
	end
end

procedure Raider1
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 133));
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 2;
	Tot_Critter_A := random(4, 6);
	group_angle := random(0, 5);
	Critter_script := SCRIPT_GENRAIDA;
	while(Tot_Critter_A) do begin
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				Critter_type := PID_TRAVELER_BALD_LEATHER;
			end
			else begin
				Critter_type := PID_GEN_TRAVELER;
			end
		end
		else begin
			Critter_type := PID_TRAVELER_3;
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				if (Critter_type == 16777449) then begin
					Item := create_object_sid(PID_HUNTING_RIFLE, 0, 0, -1);
				end
				else begin
					Item := create_object_sid(PID_10MM_SMG, 0, 0, -1);
				end
			end
			else begin
				Item := create_object_sid(PID_DESERT_EAGLE, 0, 0, -1);
			end
		end
		else begin
			Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_BEER, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure Raider2
begin
	if random(0, 1) then begin
		display_msg(message_str(SCRIPT_RNDDESRT, 197));
	end
	else begin
		display_msg(message_str(SCRIPT_RNDDESRT, 143));
	end
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 3;
	Tot_Critter_A := random(3, 4);
	group_angle := random(0, 5);
	Critter_script := SCRIPT_GENRAIDA;
	while(Tot_Critter_A) do begin
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				Critter_type := PID_TRAVELER_BALD_LEATHER;
			end
			else begin
				Critter_type := PID_GEN_TRAVELER;
			end
		end
		else begin
			Critter_type := PID_TRAVELER_3;
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				if (Critter_type == 16777449) then begin
					Item := create_object_sid(PID_HUNTING_RIFLE, 0, 0, -1);
				end
				else begin
					Item := create_object_sid(PID_10MM_SMG, 0, 0, -1);
				end
			end
			else begin
				Item := create_object_sid(PID_DESERT_EAGLE, 0, 0, -1);
			end
		end
		else begin
			Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_BEER, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure Raider3
begin
	variable LVar0 := 0;
	display_msg(message_str(SCRIPT_RNDDESRT, 173));
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 4;
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Tot_Critter_A := random(5, 7);
	Tot_Critter_B := random(2, 3);
	group_angle := random(0, 5);
	random_seed_1 := Tot_Critter_A;
	random_seed_2 := 0;
	random_seed_3 := 0;
	LVar0 := tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(7, 12));
	Item := create_object_sid(PID_EW_RED_CARAVAN, LVar0, 0, -1);
	Item := create_object_sid(PID_BLOCKING_HEX, tile_num_in_direction(LVar0, 1, 0), 0, -1);
	Item := create_object_sid(PID_BLOCKING_HEX, tile_num_in_direction(LVar0, 1, 1), 0, -1);
	Item := create_object_sid(PID_BLOCKING_HEX, tile_num_in_direction(LVar0, 1, 2), 0, -1);
	Item := create_object_sid(PID_BLOCKING_HEX, tile_num_in_direction(LVar0, 1, 3), 0, -1);
	Item := create_object_sid(PID_BLOCKING_HEX, tile_num_in_direction(LVar0, 1, 4), 0, -1);
	Item := create_object_sid(PID_BLOCKING_HEX, tile_num_in_direction(LVar0, 1, 5), 0, -1);
	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		Critter := create_object_sid(PID_BURNING_BARREL, 0, 0, -1);
		Critter_tile := tile_num_in_direction(Dude_tile, group_angle, 5);
		critter_attempt_placement(Critter, Critter_tile, elevation(dude_obj));
	end
	Critter_type := PID_BRAHMIN;
	Critter_script := -1;
	Critter_direction := random(0, 5);
	call Place_critter;
	anim(Critter, 1000, random(0, 5));
	kill_critter(Critter, 61);
	Critter_type := PID_BRAHMIN;
	Critter_script := -1;
	Critter_direction := random(0, 5);
	call Place_critter;
	anim(Critter, 1000, random(0, 5));
	kill_critter(Critter, 61);
	Critter_script := SCRIPT_GENRAIDB;
	while(Tot_Critter_A) do begin
		if (random(0, 1)) then begin
			Critter_type := PID_TRAVELER_BALD_LEATHER;
		end
		else begin
			Critter_type := PID_GEN_TRAVELER;
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				if (Critter_type == 16777449) then begin
					Item := create_object_sid(PID_223_FMJ, 0, 0, -1);
				end
				else begin
					Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
				end
				add_mult_objs_to_inven(Critter, Item, has_trait(0, dude_obj, 40) + 1);
				if (Critter_type == 16777449) then begin
					Item := create_object_sid(PID_HUNTING_RIFLE, 0, 0, -1);
				end
				else begin
					Item := create_object_sid(PID_10MM_SMG, 0, 0, -1);
				end
			end
			else begin
				Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
				add_mult_objs_to_inven(Critter, Item, has_trait(0, dude_obj, 40) + 1);
				Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
			end
		end
		else begin
			Item := create_object_sid(PID_SPEAR, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	victim := Critter;
	if (random(0, 1)) then begin
		Critter_type := PID_TRAVELER_BALD_LEATHER;
	end
	else begin
		Critter_type := PID_GEN_TRAVELER;
	end
	Critter_script := -1;
	Critter_direction := group_angle + (random(0, 2) - 1);
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;
	if (group_angle == 0) then begin
		Critter_direction := 3;
	end
	else begin
		if (group_angle == 1) then begin
			Critter_direction := 4;
		end
		else begin
			if (group_angle == 2) then begin
				Critter_direction := 5;
			end
			else begin
				if (group_angle == 3) then begin
					Critter_direction := 0;
				end
				else begin
					if (group_angle == 4) then begin
						Critter_direction := 1;
					end
					else begin
						if (group_angle == 5) then begin
							Critter_direction := 2;
						end
					end
				end
			end
		end
	end
	if (random(0, 2) == 0) then begin
		Critter_direction := Critter_direction + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
	end
	anim(Critter, 1000, Critter_direction);
	Item := create_object_sid(PID_LEATHER_ARMOR, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Item := create_object_sid(PID_KNIFE, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	kill_critter(Critter, 61);
	Critter_type := PID_TOWNSMAN_METAL;
	Critter_script := SCRIPT_GENGRDA;
	if (group_angle == 0) then begin
		group_angle := 3;
	end
	else begin
		if (group_angle == 1) then begin
			group_angle := 4;
		end
		else begin
			if (group_angle == 2) then begin
				group_angle := 5;
			end
			else begin
				if (group_angle == 3) then begin
					group_angle := 0;
				end
				else begin
					if (group_angle == 4) then begin
						group_angle := 1;
					end
					else begin
						if (group_angle == 5) then begin
							group_angle := 2;
						end
					end
				end
			end
		end
	end
	while(Tot_Critter_B) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		Item := create_object_sid(PID_HUNTING_RIFLE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Item := create_object_sid(PID_223_FMJ, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		if (has_trait(0, dude_obj, 40)) then begin
			Item := create_object_sid(PID_223_FMJ, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
		end
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	attack_setup(victim, Critter);
	Critter_type := PID_TOWNSMAN_METAL;
	Critter_script := -1;
	Critter_direction := group_angle + (random(0, 2) - 1);
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;
	if (group_angle == 0) then begin
		Critter_direction := 3;
	end
	else begin
		if (group_angle == 1) then begin
			Critter_direction := 4;
		end
		else begin
			if (group_angle == 2) then begin
				Critter_direction := 5;
			end
			else begin
				if (group_angle == 3) then begin
					Critter_direction := 0;
				end
				else begin
					if (group_angle == 4) then begin
						Critter_direction := 1;
					end
					else begin
						if (group_angle == 5) then begin
							Critter_direction := 2;
						end
					end
				end
			end
		end
	end
	if (random(0, 2) == 0) then begin
		Critter_direction := Critter_direction + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
	end
	anim(Critter, 1000, Critter_direction);
	Item := create_object_sid(PID_METAL_ARMOR, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Item := create_object_sid(PID_HUNTING_RIFLE, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Item := create_object_sid(PID_223_FMJ, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	kill_critter(Critter, 61);
	Critter_type := PID_MERCHANT;
	Critter_script := SCRIPT_GENMERCB;
	Critter_direction := random(0, 5);
	call Place_critter;
	critter_heal(Critter, -5);
	item_caps_adjust(Critter, random(100, 300) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	if (random(1, 10) > 6) then begin
		Item := create_object_sid(PID_FIRST_AID_KIT, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
	end
	if (random(1, 10) > 6) then begin
		Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
	end
	if (random(1, 10) > 6) then begin
		Item := create_object_sid(PID_FUZZY_PAINTING, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
	end
	if (random(1, 10) > 6) then begin
		Item := create_object_sid(PID_LOCKPICKS, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure Raider4
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 310));
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 3;
	Tot_Critter_A := random(2, 3);
	group_angle := random(0, 5);
	Critter_script := SCRIPT_GENRAIDA;
	while(Tot_Critter_A) do begin
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				Critter_type := PID_TRAVELER_BALD_LEATHER;
			end
			else begin
				Critter_type := PID_GEN_TRAVELER;
			end
		end
		else begin
			Critter_type := PID_TRAVELER_3;
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				if (Critter_type == 16777449) then begin
					Item := create_object_sid(PID_HUNTING_RIFLE, 0, 0, -1);
				end
				else begin
					Item := create_object_sid(PID_10MM_SMG, 0, 0, -1);
				end
			end
			else begin
				Item := create_object_sid(PID_DESERT_EAGLE, 0, 0, -1);
			end
		end
		else begin
			Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_BEER, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure Raider5
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 198));
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Critter_direction := dude_rot;
	Critter_type := PID_MAN_JEANS;
	Critter_script := SCRIPT_LONERAID;
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	Item := create_object_sid(PID_KNIFE, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	if (random(0, 1)) then begin
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_10MM_SMG, 0, 0, -1);
		end
		else begin
			Item := create_object_sid(PID_DESERT_EAGLE, 0, 0, -1);
		end
	end
	else begin
		Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
	end
	add_obj_to_inven(Critter, Item);
	if (random(0, 1)) then begin
		item_caps_adjust(Critter, random(5, 10) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	end
//
	if random(0, 1) then begin
		display_msg(message_str(SCRIPT_RNDDESRT, 196));
		Tot_Critter_A := random(3, 4);
		Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
		Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
		Critter_type := PID_RADSCORPION;
		Critter_script := SCRIPT_RADSCORP;
		while(Tot_Critter_A) do begin
			Critter_direction := random(4, 5);
			call Place_critter;
			anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
			Tot_Critter_A := Tot_Critter_A - 1;
		end
		set_global_var(MYST_STRANGER_ITEM, 1);
		call stranger;
	end
end

procedure Raider6
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 199));
	Tot_Critter_A := random(3, 5);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 4;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Critter_script := -1;
	while(Tot_Critter_A) do begin
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				Critter_type := PID_TRAVELER_BALD_LEATHER;
			end
			else begin
				Critter_type := PID_GEN_TRAVELER;
			end
		end
		else begin
			Critter_type := PID_TRAVELER_3;
		end
		Critter_direction := random(0, 5);
		call Place_critter;
		anim(Critter, 1000, random(0, 5));
		kill_critter(Critter, 61);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_DOG;
	Critter_direction := random(0, 5);
	call Place_critter;
	anim(Critter, 1000, random(0, 5));
	kill_critter(Critter, 61);
	display_msg(message_str(SCRIPT_RNDDESRT, 196));
	Tot_Critter_A := random(3, 4);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := random(4, 5);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure Junk1
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 200));
	Tot_Critter_A := random(3, 4);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 4);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure Junk2
begin
	call Junk3;
	/*
	variable HasFlask := 0
	variable Hours := 0;
	variable DamageHP := 0;
	variable CurrentHP := 0;
	variable PercentMax95 := 0;
	HasFlask := obj_carrying_pid_obj(dude_obj, PID_WATER_FLASK);
	if (HasFlask > 0) then begin
		rm_obj_from_inven(dude_obj, HasFlask);
		destroy_object(HasFlask);
		display_msg(message_str(SCRIPT_RNDDESRT, 125));
	end
	else begin
		//Skill_roll := roll_vs_skill(dude_obj, 17, (0 + (20 * has_trait(0, dude_obj, 16))));
		if (is_success(Skill_roll)) then begin
			if (is_critical(Skill_roll)) then begin
				display_msg(message_str(SCRIPT_RNDDESRT, 147));//{147}{}{You manage to avoid dehydration by searching for water. The search takes 1 hour.}
				Hours := 1;
			end
			else begin
				Hours := random(1, 6);
				if (Hours == 1) then begin
					display_msg(message_str(SCRIPT_RNDDESRT, 109));//{109}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional hour.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 110) + Hours + message_str(SCRIPT_RNDDESRT, 111));//{110}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional X hours}
				end
				Hours := (Hours + 1);
			end
		end
		else begin
			PercentMax95 := random(1, 100);
			if (is_critical(Skill_roll)) or (PercentMax95 > 95) then begin
				Hours := random(6, 12);
				DamageHP := (random(5, 8) + random(5, 8) + random(5, 8));// is now 15 to 24, was previously 2 to 4
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 116));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you }{116}{}{ points of health damage.}
				end
			end
			else begin
				Hours := random(4, 8);
				DamageHP := (random(2, 4) + random(2, 4) + random(2, 4));// is now 6 to 12, was previously 1 to 2
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 124));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained }{124}{}{ points of health damage.}
				end
			end
		end
		game_time_advance((10 * 60 * 60 * Hours));
	end*/
end

procedure Junk3
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 223));
	Tot_Critter_A := random(4, 6);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	group_angle := random(0, 5);
	Critter_type := PID_COYOTE;
	Critter_script := SCRIPT_COYOTE;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, random(0, 5));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure Junk4
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 224));
	Tot_Critter_A := random(2, 4);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Critter_type := PID_TRAVELER_GEN_LEATHER;
	Critter_script := SCRIPT_JNKSCOUT;
	group_angle := random(0, 5);
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (random(1, 3) == 1) then begin
			anim(Critter, 1000, random(0, 5));
		end
		else begin
			anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		end
		Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_HUNTING_RIFLE, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
			Item := create_object_sid(PID_223_FMJ, 0, 0, -1);
			add_mult_objs_to_inven(Critter, Item, has_trait(0, dude_obj, 40) + 1);
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Item := create_object_sid(PID_RADIO, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
end

procedure Junk5
begin
	variable LVar0 := 0;
	display_msg(message_str(SCRIPT_RNDDESRT, 225));
	Tot_Critter_A := 2;// was random(1, 3)
	Tot_Critter_B := random(2, 3);// was 2, 12
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	group_angle := random(0, 5);
	LVar0 := tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(7, 12));
	Scenery_Creation := create_object_sid(PID_EW_RED_CARAVAN, LVar0, 0, -1);
	Scenery_Creation_Hex := LVar0;
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	LVar0 := tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(7, 12));
	Scenery_Creation := create_object_sid(PID_EW_GREY_CARAVAN, LVar0, 0, -1);
	Scenery_Creation_Hex := LVar0;
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Critter_type := PID_PEASANT_ROBE;
	Critter_script := SCRIPT_GENMERCA;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, random(0, 5));
		item_caps_adjust(Critter, random(50, 150) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		Item := create_object_sid(PID_10MM_AP, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, random(1, 4));
		Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, random(1, 4));
		Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, random(1, 4));
		Item := create_object_sid(PID_MUTATED_FRUIT, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, random(4, 8));
		Item := create_object_sid(PID_ROPE, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, random(0, 2));
		Item := create_object_sid(PID_BROWN_BAG, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, random(0, 2));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_MALE_GUARD_METAL_BLACK;
	Critter_script := SCRIPT_GENGRDA;
	while(Tot_Critter_B) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, random(0, 5));
		Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_DESERT_EAGLE, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
			Item := create_object_sid(PID_44_MAGNUM_JHP, 0, 0, -1);
			add_mult_objs_to_inven(Critter, Item, has_trait(0, dude_obj, 40) + 1);
		end
		else begin
			Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
			Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
			add_mult_objs_to_inven(Critter, Item, has_trait(0, dude_obj, 40) + 1);
		end
		Tot_Critter_B := Tot_Critter_B - 1;
	end
end

procedure Junk6
begin
	variable LVar0 := 2;
	variable LVar1 := 0;
	display_msg(message_str(SCRIPT_RNDDESRT, 172));
	LVar1 := create_object_sid(PID_BOTTLE_CAPS, 0, 0, -1);
	Critter_direction := random(0, 5);
	Critter_tile := tile_num_in_direction(Dude_tile, Critter_direction, 4);
	if (get_critter_stat(dude_obj, 6) < 3) then begin
		Item := create_object_sid(PID_MUTATED_FRUIT, 0, 0, -1);
		critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
	end
	else begin
		if (get_critter_stat(dude_obj, 6) == 8) then begin
			Item := create_object_sid(PID_MUTATED_FRUIT, 0, 0, -1);
			critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
			Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
			critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
			if (has_trait(0, dude_obj, 40)) then begin
				Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
				critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
			end
			Item := create_object_sid(PID_BAG, 0, 0, -1);
			critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
			add_mult_objs_to_inven(Item, LVar1, 6 * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		end
		else begin
			if (get_critter_stat(dude_obj, 6) > 8) then begin
				Item := create_object_sid(PID_MUTATED_FRUIT, 0, 0, -1);
				critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
				if (has_trait(0, dude_obj, 40)) then begin
					LVar0 := 4;
				end
				while(LVar0) do begin
					Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
					critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
					LVar0 := LVar0 - 1;
				end
				Item := create_object_sid(PID_BAG, 0, 0, -1);
				add_mult_objs_to_inven(Item, LVar1, 122 * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
				critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
				Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
				critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
			end
			else begin
				Item := create_object_sid(PID_MUTATED_FRUIT, 0, 0, -1);
				critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
				Item := create_object_sid(PID_BAG, 0, 0, -1);
				add_mult_objs_to_inven(Item, LVar1, 4 * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
				critter_attempt_placement(Item, Critter_tile, elevation(dude_obj));
			end
		end
	end
end

procedure Hub1
begin
	call Hub2;
	/*
	variable HasFlask := 0
	variable Hours := 0;
	variable DamageHP := 0;
	variable CurrentHP := 0;
	variable PercentMax95 := 0;
	HasFlask := obj_carrying_pid_obj(dude_obj, PID_WATER_FLASK);
	if (HasFlask > 0) then begin
		rm_obj_from_inven(dude_obj, HasFlask);
		destroy_object(HasFlask);
		display_msg(message_str(SCRIPT_RNDDESRT, 125));
	end
	else begin
		//Skill_roll := roll_vs_skill(dude_obj, 17, (0 + (20 * has_trait(0, dude_obj, 16))));
		if (is_success(Skill_roll)) then begin
			if (is_critical(Skill_roll)) then begin
				display_msg(message_str(SCRIPT_RNDDESRT, 147));//{147}{}{You manage to avoid dehydration by searching for water. The search takes 1 hour.}
				Hours := 1;
			end
			else begin
				Hours := random(1, 6);
				if (Hours == 1) then begin
					display_msg(message_str(SCRIPT_RNDDESRT, 109));//{109}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional hour.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 110) + Hours + message_str(SCRIPT_RNDDESRT, 111));//{110}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional X hours}
				end
				Hours := (Hours + 1);
			end
		end
		else begin
			PercentMax95 := random(1, 100);
			if (is_critical(Skill_roll)) or (PercentMax95 > 95) then begin
				Hours := random(6, 12);
				DamageHP := (random(5, 8) + random(5, 8) + random(5, 8));// is now 15 to 24, was previously 2 to 4
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 116));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you }{116}{}{ points of health damage.}
				end
			end
			else begin
				Hours := random(4, 8);
				DamageHP := (random(2, 4) + random(2, 4) + random(2, 4));// is now 6 to 12, was previously 1 to 2
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 124));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained }{124}{}{ points of health damage.}
				end
			end
		end
		game_time_advance((10 * 60 * 60 * Hours));
	end*/
end

procedure Hub2
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 133));
	Tot_Critter_A := random(3, 6);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Critter_script := SCRIPT_GENRAIDA;
	while(Tot_Critter_A) do begin
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				Critter_type := PID_MAN_JEANS;
			end
			else begin
				Critter_type := PID_LEATHER_JACKET_WOMAN;
			end
		end
		else begin
			Critter_type := PID_MALE_GUARD_METAL_BLACK;
		end
		Critter_direction := random(3, 5);
		call Place_critter;
		anim(Critter, 1000, random(0, 2));
		Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		if ((Critter_type != 16777243) and random(0, 1)) then begin
			Item := create_object_sid(PID_10MM_SMG, 0, 0, -1);
		end
		else begin
			Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		item_caps_adjust(Critter, random(10, 30) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		if (random(0, 3) == 3) then begin
			Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
		end
		if (random(0, 3) == 3) then begin
			Item := create_object_sid(PID_BUFFOUT, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
		end
		if (random(0, 3) == 3) then begin
			Item := create_object_sid(PID_IGUANA_ON_A_STICK, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
		end
		if (random(0, 3) == 3) then begin
			Item := create_object_sid(PID_MEAT_ON_A_STICK, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 2);
	call stranger;
end

procedure Hub3
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 134));
	Tot_Critter_A := random(2, 3);
	Tot_Critter_B := random(1, 2);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 4);
		call Place_critter;
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_NASTY_RADSCORPION;// - Nasty Radscorpion - ID 166
	while(Tot_Critter_B) do begin
		Critter_direction := random(0, 4);
		call Place_critter;
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 2);
	call stranger;
end

procedure Hub4
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 135));
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
	Tot_Critter_A := random(4, 6);
	Critter_script := SCRIPT_GENCOP;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		if (random(0, 1)) then begin
			Critter_type := PID_MALE_GUARD_METAL_BLACK;//27          Male Guard
		end
		else begin
			Critter_type := PID_WOMAN_YELLOW;//37          Woman
		end
		call Place_critter;
		anim(Critter, 1000, random(3, 5));
		item_caps_adjust(Critter, random(20, 50) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		if Critter_type == 16777253 then begin
			/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_STIMPAK) <= 0) then begin
				Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
				add_obj_to_inven(self_obj, Item);
				Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
				add_obj_to_inven(self_obj, Item);
			end
			/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_SPIKED_KNUCKLES) <= 0) then begin
				Item := create_object_sid(PID_SPIKED_KNUCKLES, 0, 0, -1);
				add_obj_to_inven(self_obj, Item);
			end
			/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_COMBAT_KNIFE) <= 0) then begin
				Item := create_object_sid(PID_COMBAT_KNIFE, 0, 0, -1);
				add_obj_to_inven(self_obj, Item);
			end
		end
		else begin
			/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_STIMPAK) <= 0) then begin
				Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
				add_obj_to_inven(self_obj, Item);
			end
			/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_BRASS_KNUCKLES) <= 0) then begin
				Item := create_object_sid(PID_BRASS_KNUCKLES, 0, 0, -1);
				add_obj_to_inven(self_obj, Item);
			end
			/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_10MM_PISTOL) <= 0) and (obj_is_carrying_obj_pid(self_obj, PID_DESERT_EAGLE) <= 0) then begin
				if (random(0, 1)) then begin
					/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_10MM_PISTOL) <= 0) then begin
						Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
						add_obj_to_inven(self_obj, Item);
						if (random(0, 1)) then begin
							/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_10MM_JHP) <= 0) then begin
								Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
								add_obj_to_inven(self_obj, Item);
							end
						end
						else begin
							/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_10MM_AP) <= 0) then begin
								Item := create_object_sid(PID_10MM_AP, 0, 0, -1);
								add_obj_to_inven(self_obj, Item);
							end
						end
					end
				end
				else begin
					/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_10MM_PISTOL) <= 0) and (obj_is_carrying_obj_pid(self_obj, PID_DESERT_EAGLE) <= 0) then begin
						/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_DESERT_EAGLE) <= 0) then begin
							Item := create_object_sid(PID_DESERT_EAGLE, 0, 0, -1);
							add_obj_to_inven(self_obj, Item);
							if (random(0, 1)) then begin
								/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_44_MAGNUM_JHP) <= 0) then begin
									Item := create_object_sid(PID_44_MAGNUM_JHP, 0, 0, -1);
									add_obj_to_inven(self_obj, Item);
								end
							end
							else begin
								/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_44_FMJ_MAGNUM) <= 0) then begin
									Item := create_object_sid(PID_44_FMJ_MAGNUM, 0, 0, -1);
									add_obj_to_inven(self_obj, Item);
								end
							end
						end
					end
				end
			end
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
end

procedure Hub5
begin
	variable LVar0 := 0;
	if (global_var(THE_HUB_WAS_INVADED) != 1) then begin
		display_msg(message_str(SCRIPT_RNDDESRT, 136));
	end
	else begin//BELOW: file is Invaded.MSG
		display_msg(message_str(SCRIPT_RNDDESRT, 174));
		LVar0 := do_check(dude_obj, 1, 0);
		if (is_success(LVar0)) then begin
			display_msg(message_str(SCRIPT_INVADED, 102));
			display_msg(message_str(SCRIPT_INVADED, 107));
		end
		else begin
			display_msg(message_str(SCRIPT_INVADED, 101));
			LVar0 := do_check(dude_obj, 1, 0);
			if (is_success(LVar0)) then begin
				display_msg(message_str(SCRIPT_INVADED, 106));
			end
			else begin
				display_msg(message_str(SCRIPT_INVADED, 105));
			end
		end
	end
	LVar0 := tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(7, 9));
	Scenery_Creation := create_object_sid(PID_EW_RED_CARAVAN, LVar0, 0, -1);
	Scenery_Creation_Hex := LVar0;
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
	Tot_Critter_A := random(4, 5);//was 5, 8
	Critter_script := SCRIPT_GENGRDA;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		if (random(0, 1)) then begin
			Critter_type := PID_MALE_GUARD_METAL_BLACK;
		end
		else begin
			Critter_type := PID_WOMAN_YELLOW;
		end
		call Place_critter;
		anim(Critter, 1000, random(3, 5));
		item_caps_adjust(Critter, random(20, 50) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_10MM_SMG, 0, 0, -1);
		end
		else begin
			Item := create_object_sid(PID_DESERT_EAGLE, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		Tot_Critter_A := Tot_Critter_A - 1;
		if (global_var(THE_HUB_WAS_INVADED) == 1) then begin
			kill_critter(Critter, 61);
		end
	end
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 4;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Critter_type := PID_MERCHANT;
	Critter_script := SCRIPT_GENMERCA;
	call Place_critter;
	item_caps_adjust(Critter, random(100, 300) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	Item := create_object_sid(PID_MUTATED_FRUIT, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, random(0, 4));
	Item := create_object_sid(PID_IGUANA_ON_A_STICK, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, random(0, 4));
	Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, random(0, 2));
	Item := create_object_sid(PID_FIRST_AID_KIT, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, random(0, 1));
	Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, random(0, 3));
	Item := create_object_sid(PID_10MM_AP, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, random(0, 3));
	Item := create_object_sid(PID_5MM_JHP, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, random(0, 2));
	Item := create_object_sid(PID_5MM_AP, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, random(0, 2));
	if (global_var(THE_HUB_WAS_INVADED) == 1) then begin
		kill_critter(Critter, 61);
		Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
		Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 4;
		Tot_Critter_A := random(2, 3);
		Critter_type := PID_MEAN_SUPER_MUTANT;//187          Mean Super Mutant
		Critter_script := -1;
		while(Tot_Critter_A) do begin
			Critter_direction := random(0, 2);
			call Place_critter;
			anim(Critter, 1000, random(3, 5));
			Tot_Critter_A := Tot_Critter_A - 1;
			kill_critter(Critter, 61);
		end
	end
end

procedure Hub6
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 137));
	Tot_Critter_A := random(2, 4);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
	Critter_type := PID_BRAHMIN;
	Critter_script := SCRIPT_BRAHMIN;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 5);
		call Place_critter;
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_PEASANT_5;
	Critter_script := -1;
	call Place_critter;
end

procedure Necrop1
begin
	call Necrop2;
	/*
	variable Drinks := 1;
	variable Drink := 0;
	if difficulty_level != 0 then begin
		if difficulty_level == 2 then begin
			Drinks := (Drinks + 1);
		end
		if get_critter_stat(dude_obj, 2) < 4 then begin
			if not(is_success(do_check(dude_obj, 2, 0))) then begin
				Drinks := (Drinks + 1);
			end
		end
		if (global_var(WORLD_TERRAIN) == 10) or (global_var(WORLD_TERRAIN) == 11) then begin
			Drinks := (Drinks + 1);
		end
	end
	if obj_carrying_pid_obj(dude_obj, PID_NUKA_COLA) or obj_carrying_pid_obj(dude_obj, PID_BEER) or obj_carrying_pid_obj(dude_obj, PID_BOOZE) or obj_carrying_pid_obj(dude_obj, PID_WATER_FLASK) then begin
		Drink := obj_carrying_pid_obj(dude_obj, PID_WATER_FLASK);// WATER FLASK
		if Drink then begin
			variable flasks := 0
			while(Drinks and Drink) do begin
				rm_obj_from_inven(dude_obj, Drink);
				destroy_object(Drink);
				flasks := (flasks + 1);
				Drinks := (Drinks - 1);
				Drink := obj_carrying_pid_obj(dude_obj, PID_WATER_FLASK);
			end
			Item := create_object_sid(PID_CAR_FUEL_CELL_CONTROLLER, 0, 0, -1);//empty flask
			add_mult_objs_to_inven(dude_obj, Item, flasks);
		end
		if not(Drinks) then begin// FLASKS WAS ENOUGH
			if flasks == 1 then begin
				display_msg(message_str(SCRIPT_RNDDESRT, 125) + flasks + message_str(SCRIPT_RNDDESRT, 119));
			end
			else begin
				display_msg(message_str(SCRIPT_RNDDESRT, 125) + flasks + message_str(SCRIPT_RNDDESRT, 124));
			end
		end
		else begin// STILL THIRSTY AFTER FLASKS
			variable Msg := 0;
			Msg := message_str(SCRIPT_RNDDESRT, 112);
			if Drinks then begin
				Drink := obj_carrying_pid_obj(dude_obj, PID_NUKA_COLA);// NUKA-COLA
				if Drink then begin
					variable colas := 0
					while(Drinks and Drink) do begin
						rm_obj_from_inven(dude_obj, Drink);
						destroy_object(Drink);
						colas := (colas + 1);
						Drinks := (Drinks - 1);
						Drink := obj_carrying_pid_obj(dude_obj, PID_NUKA_COLA);
					end
					item_caps_adjust(dude_obj, colas);
				end
			end
			if Drinks then begin
				Drink := obj_carrying_pid_obj(dude_obj, PID_BEER);// BEER
				if Drink then begin
					variable beers := 0
					while(Drinks and Drink) do begin
						rm_obj_from_inven(dude_obj, Drink);
						destroy_object(Drink);
						beers := (beers + 1);
						Drinks := (Drinks - 1);
						Drink := obj_carrying_pid_obj(dude_obj, PID_BEER);
					end
					item_caps_adjust(dude_obj, beers);
				end
			end
			if Drinks then begin
				Drink := obj_carrying_pid_obj(dude_obj, PID_BOOZE);// BOOZE
				if Drink then begin
					variable booze := 0
					while(Drinks and Drink) do begin
						rm_obj_from_inven(dude_obj, Drink);
						destroy_object(Drink);
						booze := (booze + 1);
						Drinks := (Drinks - 1);
						Drink := obj_carrying_pid_obj(dude_obj, PID_BOOZE);
					end
					item_caps_adjust(dude_obj, booze);
				end
			end
			if flasks then begin
				if flasks == 1 then begin
					Msg := Msg + flasks + message_str(SCRIPT_RNDDESRT, 116);
				end
				else begin
					Msg := Msg + flasks + message_str(SCRIPT_RNDDESRT, 117);
				end
				if not(colas) and not(beers) and not(booze) then begin
					Msg := Msg + ".";
				end
				else begin
					if (not(colas) and not(beers)) or (not(colas) and not(booze)) or (not(beers) and not(booze)) then begin
						Msg := Msg + " and ";
					end
					else begin
						Msg := Msg + ", ";
					end
				end
			end
			if colas then begin
				if colas == 1 then begin
					Msg := Msg + colas + message_str(SCRIPT_RNDDESRT, 141);
				end
				else begin
					Msg := Msg + colas + message_str(SCRIPT_RNDDESRT, 140);
				end
				if not(beers) and not(booze) then begin
					Msg := Msg + ".";
				end
				else begin
					if not(beers) or not(booze) then begin
						Msg := Msg + " and ";
					end
					else begin
						Msg := Msg + ", ";
					end
				end
			end
			if beers then begin
				if beers == 1 then begin
					Msg := Msg + beers + message_str(SCRIPT_RNDDESRT, 142);
				end
				else begin
					Msg := Msg + beers + message_str(SCRIPT_RNDDESRT, 149);
				end
				if not(booze) then begin
					Msg := Msg + ".";
				end
				else begin
					Msg := Msg + " and ";
				end
			end
			if booze then begin
				if booze == 1 then begin
					Msg := Msg + booze + message_str(SCRIPT_RNDDESRT, 150);
				end
				else begin
					Msg := Msg + booze + message_str(SCRIPT_RNDDESRT, 151);
				end
				Msg := Msg + ".";
			end
		end// END DRINK CONSUMPTION
		if not(Drinks) then begin// GOT ENOUGH TO DRINK
			display_msg(Msg);
			if booze or (beers > 1) then begin// DRANK ALCOHOL, STATS REDUCED
				if booze > 1 then begin
					if get_critter_stat(dude_obj, 0) > 2 then begin
						set_global_var(DEHYDRATION_STRNG_DROP, 2);
						set_critter_stat(dude_obj, 0, -2);
					end
					else begin
						if get_critter_stat(dude_obj, 2) > 2 then begin
							set_global_var(DEHYDRATION_ENDUR_DROP, 2);
							set_critter_stat(dude_obj, 2, -2);
						end
						else begin
							if get_critter_stat(dude_obj, 0) > 1 then begin
								set_global_var(DEHYDRATION_STRNG_DROP, 1);
								set_critter_stat(dude_obj, 0, -1);
							end
							if get_critter_stat(dude_obj, 2) > 1 then begin
								set_global_var(DEHYDRATION_ENDUR_DROP, 1);
								set_critter_stat(dude_obj, 2, -1);
							end
						end
					end
				end
				else begin
					if get_critter_stat(dude_obj, 0) > 1 then begin
						set_global_var(DEHYDRATION_STRNG_DROP, 1);
						set_critter_stat(dude_obj, 0, -1);
					end
					else begin
						if get_critter_stat(dude_obj, 2) > 1 then begin
							set_global_var(DEHYDRATION_ENDUR_DROP, 1);
							set_critter_stat(dude_obj, 2, -1);
						end
					end
				end
				if global_var(DEHYDRATION_STRNG_DROP) and global_var(DEHYDRATION_ENDUR_DROP) then begin
					display_msg(message_str(SCRIPT_RNDDESRT, 152) + message_str(SCRIPT_RNDDESRT, 155) + message_str(SCRIPT_RNDDESRT, 158));
				end
				else begin
					if global_var(DEHYDRATION_STRNG_DROP) then begin
						if global_var(DEHYDRATION_STRNG_DROP) > 1 then begin
							display_msg(message_str(SCRIPT_RNDDESRT, 152) + message_str(SCRIPT_RNDDESRT, 153) + message_str(SCRIPT_RNDDESRT, 157));
						end
						else begin
							display_msg(message_str(SCRIPT_RNDDESRT, 152) + message_str(SCRIPT_RNDDESRT, 153) + message_str(SCRIPT_RNDDESRT, 156));
						end
					end
					else begin
						if global_var(DEHYDRATION_ENDUR_DROP) then begin
							if global_var(DEHYDRATION_ENDUR_DROP) > 1 then begin
								display_msg(message_str(SCRIPT_RNDDESRT, 152) + message_str(SCRIPT_RNDDESRT, 154) + message_str(SCRIPT_RNDDESRT, 157));
							end
							else begin
								display_msg(message_str(SCRIPT_RNDDESRT, 152) + message_str(SCRIPT_RNDDESRT, 154) + message_str(SCRIPT_RNDDESRT, 156));
							end
						end
					end
				end
			end// END STAT REDUCTION FROM ALCOHOL
		end// END "GOT ENOUGH TO DRINK"
		else begin// STILL THIRSTY
			variable Hours := 0;
			variable CurrentHP := 0;
			variable DamageHP := 0;
			variable Skill_roll := 0;
			Msg := 0;
			if colas or beers or booze then begin
				Msg := message_str(SCRIPT_RNDDESRT, 161);
			end
			else begin
				Msg := message_str(SCRIPT_RNDDESRT, 114);
			end
			Skill_roll := roll_vs_skill(dude_obj, 17, ((20 * has_trait(0, dude_obj, 16)) - (get_critter_stat(dude_obj, 1) * 5)));
			if is_success(Skill_roll) then begin// FOUND WATER
				Msg := Msg + message_str(SCRIPT_RNDDESRT, 163);
				if is_critical(Skill_roll) then begin// CRITICAL SUCCESS
					variable hp := 0;
					hp := get_critter_stat(dude_obj, 7);
					Msg := Msg + message_str(SCRIPT_RNDDESRT, 164);
					Hours := 1;
					if obj_carrying_pid_obj(dude_obj, PID_CAR_FUEL_CELL_CONTROLLER) then begin
						variable empflask := 0;
						empflask := obj_carrying_pid_obj(dude_obj, PID_CAR_FUEL_CELL_CONTROLLER);
						Msg := Msg + message_str(SCRIPT_RNDDESRT, 138);
						if empflask > 1 then begin
							Msg := Msg + message_str(SCRIPT_RNDDESRT, 159);
						end
						else begin
							Msg := Msg + message_str(SCRIPT_RNDDESRT, 118);
						end
						Msg := Msg + message_str(SCRIPT_RNDDESRT, 160);
						while(empflask) do begin
							rm_obj_from_inven(dude_obj, empflask);
							destroy_object(empflask);
							Item := create_object_sid(PID_WATER_FLASK, 0, 0, -1);
							add_mult_objs_to_inven(dude_obj, Item, 1);
							empflask := obj_carrying_pid_obj(dude_obj, PID_CAR_FUEL_CELL_CONTROLLER);
						end
					end
					display_msg(Msg);
					critter_heal(dude_obj, hp);
					game_time_advance((10 * 60 * 60 * Hours));
					give_exp_points(50);
					display_msg(message_str(SCRIPT_RNDDESRT, 165) + 50 + message_str(SCRIPT_RNDDESRT, 166));
				end// END CRIT
				else begin// NORMAL SUCCESS
					Hours := random(1, 6);
					if (Hours == 1) then begin
						display_msg(message_str(SCRIPT_RNDDESRT, 109));//{109}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional hour.}
					end
					else begin
						display_msg(message_str(SCRIPT_RNDDESRT, 110) + Hours + message_str(SCRIPT_RNDDESRT, 111));//{110}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional X hours}
					end
					Hours := (Hours + 1);
				end
			end
		end
	end
	else begin
		Skill_roll := roll_vs_skill(dude_obj, 17, ((20 * has_trait(0, dude_obj, 16)) - (get_critter_stat(dude_obj, 1) * 5)));
		if is_success(Skill_roll) then begin
			if (is_critical(Skill_roll)) then begin
				display_msg(message_str(SCRIPT_RNDDESRT, 147));//{147}{}{You manage to avoid dehydration by searching for water. The search takes 1 hour.}
				Hours := 1;
			end
			else begin
				Hours := random(1, 6);
				if (Hours == 1) then begin
					display_msg(message_str(SCRIPT_RNDDESRT, 109));//{109}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional hour.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 110) + Hours + message_str(SCRIPT_RNDDESRT, 111));//{110}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional X hours}
				end
				Hours := (Hours + 1);
			end
		end
		else begin
			if is_critical(Skill_roll) then begin
				Hours := random(6, 12);
				DamageHP := (random(5, 8) + random(5, 8) + random(5, 8));// is now 15 to 24, was previously 2 to 4
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 116));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you }{116}{}{ points of health damage.}
				end
			end
			else begin
				Hours := random(4, 8);
				DamageHP := (random(2, 4) + random(2, 4) + random(2, 4));// is now 6 to 12, was previously 1 to 2
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 124));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained }{124}{}{ points of health damage.}
				end
			end
		end
		game_time_advance((10 * 60 * 60 * Hours));
	end*/
end

procedure Necrop2
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 126));
	Tot_Critter_A := random(2, 4);
	Tot_Critter_B := random(2, 4);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
	group_angle := random(0, 5);
	Critter_script := SCRIPT_RADSCORP;
	Dude_tile := Dude_tile + (200 * (random(0, 4) - 2));
	while(Tot_Critter_A) do begin
		if (random(0, 3) == 3) then begin
			Critter_type := PID_NASTY_RADSCORPION;// - Nasty Radscorpion - ID 166
		end
		else begin
			Critter_type := PID_RADSCORPION;// 11 Radscorpion
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	victim := Critter;
	Critter_script := SCRIPT_WANRATS;
	if (group_angle == 0) then begin
		group_angle := 3;
	end
	else begin
		if (group_angle == 1) then begin
			group_angle := 4;
		end
		else begin
			if (group_angle == 2) then begin
				group_angle := 5;
			end
			else begin
				if (group_angle == 3) then begin
					group_angle := 0;
				end
				else begin
					if (group_angle == 4) then begin
						group_angle := 1;
					end
					else begin
						if (group_angle == 5) then begin
							group_angle := 2;
						end
					end
				end
			end
		end
	end
	while(Tot_Critter_B) do begin
		if (random(0, 2) == 2) then begin
			Critter_type := PID_GREATER_MOLE_RAT;// GREATER MOLE RAT
		end
		else begin
			Critter_type := PID_LESSER_MOLE_RAT;// LESSER MOLE RAT
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	attack_setup(Critter, victim);
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure Necrop3
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 127));
	Tot_Critter_A := random(4, 8);//was 2, 4
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 4;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 2;
	group_angle := random(0, 5);
	Critter_type := PID_ZOMBIE_GUARD;	//Zombie Guard
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure Necrop4
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;
	display_msg(message_str(SCRIPT_RNDDESRT, 128));
	Item := create_object_sid(PID_BOXES_2, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(5, 8)), 0, -1);
	Item := create_object_sid(PID_BOXES_3, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(5, 8)), 0, -1);
	Item := create_object_sid(PID_TRASH_CAN, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(5, 8)), 0, -1);
	LVar1 := tile_num_in_direction(tile_num(dude_obj), random(0, 5), random(4, 12));// 4, 12 was 0, 5
	LVar2 := random(0, 8);
	if (LVar2 == 0) then begin
		LVar0 := create_object_sid(PID_10MM_JHP, LVar1, 0, -1);
	end
	else begin
		if (LVar2 == 1) then begin
			LVar0 := create_object_sid(PID_10MM_AP, LVar1, 0, -1);
		end
		else begin
			if (LVar2 == 2) then begin
				LVar0 := create_object_sid(PID_223_FMJ, LVar1, 0, -1);
			end
			else begin
				if (LVar2 == 3) then begin
					LVar0 := create_object_sid(PID_44_MAGNUM_JHP, LVar1, 0, -1);
				end
				else begin
					if (LVar2 == 4) then begin
						LVar0 := create_object_sid(PID_WATER_FLASK, LVar1, 0, -1);
					end
					else begin
						if (LVar2 == 5) then begin
							LVar0 := create_object_sid(PID_ROPE, LVar1, 0, -1);
						end
						else begin
							if (LVar2 == 6) then begin
								LVar0 := create_object_sid(PID_PUMP_PARTS, LVar1, 0, -1);
							end
							else begin
								if (LVar2 == 7) then begin
									LVar0 := create_object_sid(PID_FLARE, LVar1, 0, -1);
								end
								else begin
									if (LVar2 == 8) then begin
										LVar0 := create_object_sid(PID_SPEAR, LVar1, 0, -1);
									end
								end
							end
						end
					end
				end
			end
		end
	end
	if (random(0, 3) == 1) then begin
		LVar1 := tile_num_in_direction(tile_num(dude_obj), random(0, 5), random(4, 12));// 4, 12 was 0, 5
		LVar2 := random(0, 8);
		if (LVar2 == 0) then begin
			LVar0 := create_object_sid(PID_10MM_JHP, LVar1, 0, -1);
		end
		else begin
			if (LVar2 == 1) then begin
				LVar0 := create_object_sid(PID_10MM_AP, LVar1, 0, -1);
			end
			else begin
				if (LVar2 == 2) then begin
					LVar0 := create_object_sid(PID_223_FMJ, LVar1, 0, -1);
				end
				else begin
					if (LVar2 == 3) then begin
						LVar0 := create_object_sid(PID_44_MAGNUM_JHP, LVar1, 0, -1);
					end
					else begin
						if (LVar2 == 4) then begin
							LVar0 := create_object_sid(PID_WATER_FLASK, LVar1, 0, -1);
						end
						else begin
							if (LVar2 == 5) then begin
								LVar0 := create_object_sid(PID_ROPE, LVar1, 0, -1);
							end
							else begin
								if (LVar2 == 6) then begin
									LVar0 := create_object_sid(PID_PUMP_PARTS, LVar1, 0, -1);
								end
								else begin
									if (LVar2 == 7) then begin
										LVar0 := create_object_sid(PID_FLARE, LVar1, 0, -1);
									end
									else begin
										if (LVar2 == 8) then begin
											LVar0 := create_object_sid(PID_SPEAR, LVar1, 0, -1);
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	if (get_critter_stat(dude_obj, 6) >= 7) then begin
		LVar1 := tile_num_in_direction(tile_num(dude_obj), random(0, 5), random(4, 12));
		LVar2 := random(0, 8);
		if (LVar2 == 0) then begin
			LVar0 := create_object_sid(PID_10MM_JHP, LVar1, 0, -1);
		end
		else begin
			if (LVar2 == 1) then begin
				LVar0 := create_object_sid(PID_10MM_AP, LVar1, 0, -1);
			end
			else begin
				if (LVar2 == 2) then begin
					LVar0 := create_object_sid(PID_223_FMJ, LVar1, 0, -1);
				end
				else begin
					if (LVar2 == 3) then begin
						LVar0 := create_object_sid(PID_44_MAGNUM_JHP, LVar1, 0, -1);
					end
					else begin
						if (LVar2 == 4) then begin
							LVar0 := create_object_sid(PID_WATER_FLASK, LVar1, 0, -1);
						end
						else begin
							if (LVar2 == 5) then begin
								LVar0 := create_object_sid(PID_ROPE, LVar1, 0, -1);
							end
							else begin
								if (LVar2 == 6) then begin
									LVar0 := create_object_sid(PID_PUMP_PARTS, LVar1, 0, -1);
								end
								else begin
									if (LVar2 == 7) then begin
										LVar0 := create_object_sid(PID_FLARE, LVar1, 0, -1);
									end
									else begin
										if (LVar2 == 8) then begin
											LVar0 := create_object_sid(PID_SPEAR, LVar1, 0, -1);
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	LVar1 := tile_num_in_direction(tile_num(dude_obj), random(0, 5), random(3, 5));
	LVar0 := create_object_sid(PID_JUNK, LVar1, 0, -1);
	LVar1 := tile_num_in_direction(tile_num(dude_obj), random(0, 5), random(3, 5));
	LVar0 := create_object_sid(PID_METAL_BARREL_1, LVar1, 0, -1);
	LVar1 := tile_num_in_direction(tile_num(dude_obj), random(0, 5), random(3, 5));
	LVar0 := create_object_sid(PID_ROCKS_3, LVar1, 0, -1);
//
//following is new, original had no monsters -Sduibek
//
	Tot_Critter_A := 1;// was random(2, 3)
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 10;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 8;
	group_angle := random(0, 5);
	Critter_type := PID_ZOMBIE_GUARD;//  14          Zombie Guard
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
end

procedure Necrop5
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 127));
	Tot_Critter_A := random(3, 9);//was 1, 3
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 4;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 2;
	group_angle := random(0, 5);
	Critter_type := PID_ZOMBIE_GUARD;	//Zombie Guard
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure Necrop6
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	display_msg(message_str(SCRIPT_RNDDESRT, 130));
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 4;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 2;
	if (random(0, 1)) then begin
		Critter_type := PID_MAN_JEANS;	//"Man"
	end
	else begin
		Critter_type := PID_WOMAN_YELLOW;	//"Woman"
	end
	Critter_script := -1;
	Critter_direction := random(0, 5);
	call Place_critter;
	anim(Critter, 1000, random(0, 5));
	if (random(0, 3) == 3) then begin
		LVar1 := create_object_sid(PID_STIMPAK, 0, 0, -1);
		add_obj_to_inven(Critter, LVar1);
	end
	if (random(0, 3) == 3) then begin
		item_caps_adjust(Critter, random(50, 100) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	end
	if (random(0, 3) == 3) then begin
		LVar1 := create_object_sid(PID_BACKPACK, 0, 0, -1);
		add_obj_to_inven(Critter, LVar1);
	end
	if (random(0, 3) == 3) then begin
		LVar1 := create_object_sid(PID_HUNTING_RIFLE, 0, 0, -1);
		add_obj_to_inven(Critter, LVar1);
	end
	if (random(0, 3) == 3) then begin
		LVar1 := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
		add_obj_to_inven(Critter, LVar1);
	end
	if (random(0, 3) == 3) then begin
		LVar1 := create_object_sid(PID_LEATHER_ARMOR, 0, 0, -1);
		add_obj_to_inven(Critter, LVar1);
	end
	if (random(0, 3) == 3) then begin
		LVar1 := create_object_sid(PID_ROPE, 0, 0, -1);
		add_obj_to_inven(Critter, LVar1);
	end
	if (random(0, 3) == 3) then begin
		LVar1 := create_object_sid(PID_DYNAMITE, 0, 0, -1);
		add_obj_to_inven(Critter, LVar1);
	end
	LVar1 := create_object_sid(PID_NUKA_COLA, 0, 0, -1);
	add_obj_to_inven(Critter, LVar1);
	item_caps_adjust(Critter, random(3, 9) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	kill_critter(Critter, 61);
end

procedure Steel1
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 226));
	Tot_Critter_A := 2;
	Tot_Critter_B := 6;
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 8;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 4;
	group_angle := random(0, 5);
	random_seed_1 := 0;
	Critter_script := SCRIPT_GENPALB;
	if (random(0, 1)) then begin
		Critter_type := PID_GEN_PALAIN_1;
	end
	else begin
		Critter_type := PID_GEN_PALAIN_2;
	end
	Critter_direction := group_angle + (random(0, 2) - 1);
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;
	if (group_angle == 0) then begin
		Critter_direction := 3;
	end
	else begin
		if (group_angle == 1) then begin
			Critter_direction := 4;
		end
		else begin
			if (group_angle == 2) then begin
				Critter_direction := 5;
			end
			else begin
				if (group_angle == 3) then begin
					Critter_direction := 0;
				end
				else begin
					if (group_angle == 4) then begin
						Critter_direction := 1;
					end
					else begin
						if (group_angle == 5) then begin
							Critter_direction := 2;
						end
					end
				end
			end
		end
	end
	if (random(0, 2) == 0) then begin
		Critter_direction := Critter_direction + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
	end
	anim(Critter, 1000, Critter_direction);
	Item := create_object_sid(PID_GATLING_LASER, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	victim := Critter;
	Critter_script := SCRIPT_GENPALA;
	while(Tot_Critter_A) do begin
		if (random(0, 1)) then begin
			Critter_type := PID_JUNIOR_PALADIN;
		end
		else begin
			Critter_type := PID_GEN_JUNIOR_PALADIN;
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		Item := create_object_sid(PID_MINIGUN, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		if (random(1, 3) == 1) then begin
			Item := create_object_sid(PID_ROCKET_LAUNCHER, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
			Item := create_object_sid(PID_ROCKET_AP, 0, 0, -1);
			add_mult_objs_to_inven(Critter, Item, random(1, 3));
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_MEAN_SUPER_MUTANT;// MEAN SUPER MUTANT
	Critter_script := SCRIPT_MUTAMBSH;
	if (group_angle == 0) then begin
		group_angle := 3;
	end
	else begin
		if (group_angle == 1) then begin
			group_angle := 4;
		end
		else begin
			if (group_angle == 2) then begin
				group_angle := 5;
			end
			else begin
				if (group_angle == 3) then begin
					group_angle := 0;
				end
				else begin
					if (group_angle == 4) then begin
						group_angle := 1;
					end
					else begin
						if (group_angle == 5) then begin
							group_angle := 2;
						end
					end
				end
			end
		end
	end
	while(Tot_Critter_B) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		if (random(1, 3) == 1) then begin
			Item := create_object_sid(PID_FLAMER, 0, 0, -1);
		end
		else begin
			Item := create_object_sid(PID_MINIGUN, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		if (random(1, 2) == 1) then begin
			Item := create_object_sid(PID_ROCKET_LAUNCHER, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
			Item := create_object_sid(PID_ROCKET_AP, 0, 0, -1);
			add_mult_objs_to_inven(Critter, Item, random(1, 3));
		end
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	attack_setup(victim, Critter);
	set_global_var(MYST_STRANGER_ITEM, 3);
	call stranger;
end

procedure Steel2
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 227));
	Tot_Critter_A := random(6, 10);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 7;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 3;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := random(3, 5);
		call Place_critter;
		if (random(1, 3) == 1) then begin
			anim(Critter, 1000, random(0, 5));
		end
		else begin
			anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 3);
	call stranger;
end

procedure Steel3
begin
	call Steel4;
	/*
	variable HasFlask := 0
	variable Hours := 0;
	variable DamageHP := 0;
	variable CurrentHP := 0;
	variable PercentMax95 := 0;
	HasFlask := obj_carrying_pid_obj(dude_obj, PID_WATER_FLASK);
	if (HasFlask > 0) then begin
		rm_obj_from_inven(dude_obj, HasFlask);
		destroy_object(HasFlask);
		display_msg(message_str(SCRIPT_RNDDESRT, 125));
	end
	else begin
		//Skill_roll := roll_vs_skill(dude_obj, 17, (0 + (20 * has_trait(0, dude_obj, 16))));
		if (is_success(Skill_roll)) then begin
			if (is_critical(Skill_roll)) then begin
				display_msg(message_str(SCRIPT_RNDDESRT, 147));//{147}{}{You manage to avoid dehydration by searching for water. The search takes 1 hour.}
				Hours := 1;
			end
			else begin
				Hours := random(1, 6);
				if (Hours == 1) then begin
					display_msg(message_str(SCRIPT_RNDDESRT, 109));//{109}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional hour.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 110) + Hours + message_str(SCRIPT_RNDDESRT, 111));//{110}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional X hours}
				end
				Hours := (Hours + 1);
			end
		end
		else begin
			PercentMax95 := random(1, 100);
			if (is_critical(Skill_roll)) or (PercentMax95 > 95) then begin
				Hours := random(6, 12);
				DamageHP := (random(5, 8) + random(5, 8) + random(5, 8));// is now 15 to 24, was previously 2 to 4
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 116));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you }{116}{}{ points of health damage.}
				end
			end
			else begin
				Hours := random(4, 8);
				DamageHP := (random(2, 4) + random(2, 4) + random(2, 4));// is now 6 to 12, was previously 1 to 2
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 124));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained }{124}{}{ points of health damage.}
				end
			end
		end
		game_time_advance((10 * 60 * 60 * Hours));
	end*/
end

procedure Steel4
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 250));
	Tot_Critter_A := random(5, 7);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 4;
	group_angle := dude_rot;
	random_seed_1 := 0;
	if (random(0, 1)) then begin
		Critter_type := PID_GEN_PALAIN_1;
	end
	else begin
		Critter_type := PID_GEN_PALAIN_2;
	end
	Critter_script := SCRIPT_GENPALB;
	Critter_direction := group_angle + (random(0, 2) - 1);
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;
	if (group_angle == 0) then begin
		Critter_direction := 3;
	end
	else begin
		if (group_angle == 1) then begin
			Critter_direction := 4;
		end
		else begin
			if (group_angle == 2) then begin
				Critter_direction := 5;
			end
			else begin
				if (group_angle == 3) then begin
					Critter_direction := 0;
				end
				else begin
					if (group_angle == 4) then begin
						Critter_direction := 1;
					end
					else begin
						if (group_angle == 5) then begin
							Critter_direction := 2;
						end
					end
				end
			end
		end
	end
	if (random(0, 2) == 0) then begin
		Critter_direction := Critter_direction + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
	end
	anim(Critter, 1000, Critter_direction);
	Item := create_object_sid(PID_GATLING_LASER, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Critter_script := SCRIPT_GENPALA;
	while(Tot_Critter_A) do begin
		if (random(0, 1)) then begin
			Critter_type := PID_JUNIOR_PALADIN;
		end
		else begin
			Critter_type := PID_GEN_JUNIOR_PALADIN;
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		if (random(1, 3) == 1) then begin
			Item := create_object_sid(PID_FLAMETHROWER_FUEL, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
		end
		Item := create_object_sid(PID_MINIGUN, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
end

procedure Steel5
begin
	variable LVar0 := 0;
	display_msg(message_str(SCRIPT_RNDDESRT, 251));
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
	LVar0 := tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(7, 12));
	Scenery_Creation := create_object_sid(PID_EW_RED_CARAVAN, LVar0, 0, -1);
	Scenery_Creation_Hex := LVar0;
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	LVar0 := tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(7, 12));
	Scenery_Creation := create_object_sid(PID_EW_GREY_CARAVAN, LVar0, 0, -1);
	Scenery_Creation_Hex := LVar0;
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 1) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	Scenery_Creation_Count := 0;
	while(Scenery_Creation_Count < 2) do begin
		Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
		Scenery_Creation := create_object_sid(PID_BLOCKING_HEX, Scenery_Creation_Hex, 0, -1);
		Scenery_Creation_Count := Scenery_Creation_Count + 1;
	end
	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		Critter := create_object_sid(PID_BURNING_BARREL, 0, 0, -1);
		Critter_tile := tile_num_in_direction(Dude_tile, random(0, 5), 5);
		critter_attempt_placement(Critter, Critter_tile, elevation(dude_obj));
		Critter := create_object_sid(PID_BURNING_BARREL, 0, 0, -1);
		Critter_tile := tile_num_in_direction(Dude_tile, random(0, 5), 5);
		critter_attempt_placement(Critter, Critter_tile, elevation(dude_obj));
	end
	Tot_Critter_A := random(1, 2);
	while(Tot_Critter_A) do begin
		Critter_type := PID_BRAHMIN;
		Critter_script := SCRIPT_BRAHMIN;
		Critter_direction := random(0, 5);
		call Place_critter;
		anim(Critter, 1000, random(0, 5));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Tot_Critter_A := random(2, 4);
	Critter_type := PID_PEASANT_ROBE;
	Critter_script := SCRIPT_GENMERCA;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 5);
		call Place_critter;
		anim(Critter, 1000, random(0, 5));
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_MUTATED_FRUIT, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
		end
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
			add_mult_objs_to_inven(Critter, Item, 2 * (has_trait(0, dude_obj, 40) + 1));
		end
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_10MM_AP, 0, 0, -1);
			add_mult_objs_to_inven(Critter, Item, 1 * (has_trait(0, dude_obj, 40) + 1));
		end
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_223_FMJ, 0, 0, -1);
			add_mult_objs_to_inven(Critter, Item, 2 * (has_trait(0, dude_obj, 40) + 1));
		end
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
			add_mult_objs_to_inven(Critter, Item, random(0, 4));
		end
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_FIRST_AID_KIT, 0, 0, -1);
			add_mult_objs_to_inven(Critter, Item, random(0, 1));
		end
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_IGUANA_ON_A_STICK, 0, 0, -1);
			add_mult_objs_to_inven(Critter, Item, random(0, 3));
		end
		item_caps_adjust(Critter, random(12, 32) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Tot_Critter_B := random(6, 8);
	Critter_script := SCRIPT_GENGRDA;
	while(Tot_Critter_B) do begin
		Critter_direction := random(0, 5);
		if (random(0, 1)) then begin
			Critter_type := PID_MALE_GUARD_METAL_BLACK;
		end
		else begin
			Critter_type := PID_TOWNSWOMAN_METAL;
		end
		call Place_critter;
		anim(Critter, 1000, random(0, 5));
		item_caps_adjust(Critter, random(1, 15) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		if (Critter_type == 16777238) then begin
			if (random(0, 1)) then begin
				Item := create_object_sid(PID_SHOTGUN_SHELLS, 0, 0, -1);
				add_obj_to_inven(Critter, Item);
				if (has_trait(0, dude_obj, 40)) then begin
					Item := create_object_sid(PID_SHOTGUN_SHELLS, 0, 0, -1);
					add_obj_to_inven(Critter, Item);
				end
				Item := create_object_sid(PID_SHOTGUN, 0, 0, -1);
			end
			else begin
				Item := create_object_sid(PID_223_FMJ, 0, 0, -1);
				add_obj_to_inven(Critter, Item);
				if (has_trait(0, dude_obj, 40)) then begin
					Item := create_object_sid(PID_223_FMJ, 0, 0, -1);
					add_obj_to_inven(Critter, Item);
				end
				Item := create_object_sid(PID_HUNTING_RIFLE, 0, 0, -1);
			end
		end
		else begin
			Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
			if (has_trait(0, dude_obj, 40)) then begin
				Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
				add_obj_to_inven(Critter, Item);
			end
			Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 1)) then begin
			if (random(0, 2) == 0) then begin
				Item := create_object_sid(PID_BOOZE, 0, 0, -1);
			end
			else begin
				Item := create_object_sid(PID_BEER, 0, 0, -1);
			end
			add_obj_to_inven(Critter, Item);
		end
		Tot_Critter_B := Tot_Critter_B - 1;
	end
end

procedure Steel6
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 252));
	Tot_Critter_A := random(3, 4);
	Tot_Critter_B := random(12, 15);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 7;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 4;
	group_angle := random(0, 5);
	random_seed_1 := 0;
	Critter_script := SCRIPT_GENPALB;
	if (random(0, 1)) then begin
		Critter_type := PID_GEN_PALAIN_1;
	end
	else begin
		Critter_type := PID_GEN_PALAIN_2;
	end
	Critter_direction := group_angle + (random(0, 2) - 1);
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;
	if (group_angle == 0) then begin
		Critter_direction := 3;
	end
	else begin
		if (group_angle == 1) then begin
			Critter_direction := 4;
		end
		else begin
			if (group_angle == 2) then begin
				Critter_direction := 5;
			end
			else begin
				if (group_angle == 3) then begin
					Critter_direction := 0;
				end
				else begin
					if (group_angle == 4) then begin
						Critter_direction := 1;
					end
					else begin
						if (group_angle == 5) then begin
							Critter_direction := 2;
						end
					end
				end
			end
		end
	end
	if (random(0, 2) == 0) then begin
		Critter_direction := Critter_direction + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
	end
	anim(Critter, 1000, Critter_direction);
	Item := create_object_sid(PID_GATLING_LASER, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Critter_script := SCRIPT_GENPALA;
	while(Tot_Critter_A) do begin
		if (random(0, 1)) then begin
			Critter_type := PID_JUNIOR_PALADIN;
		end
		else begin
			Critter_type := PID_GEN_JUNIOR_PALADIN;
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		if (random(0, 3) == 1) then begin
			Item := create_object_sid(PID_ROCKET_LAUNCHER, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
			Item := create_object_sid(PID_ROCKET_AP, 0, 0, -1);
			add_mult_objs_to_inven(Critter, Item, random(1, 3));
		end
		else begin
			Item := create_object_sid(PID_MINIGUN, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	victim := Critter;
	Critter_type := PID_MAN_JEANS;
	Critter_script := SCRIPT_GENRAIDA;
	if (group_angle == 0) then begin
		group_angle := 3;
	end
	else begin
		if (group_angle == 1) then begin
			group_angle := 4;
		end
		else begin
			if (group_angle == 2) then begin
				group_angle := 5;
			end
			else begin
				if (group_angle == 3) then begin
					group_angle := 0;
				end
				else begin
					if (group_angle == 4) then begin
						group_angle := 1;
					end
					else begin
						if (group_angle == 5) then begin
							group_angle := 2;
						end
					end
				end
			end
		end
	end
	while(Tot_Critter_B) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		Item := create_object_sid(PID_SPEAR, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		if (random(0, 2)) then begin
			Item := create_object_sid(PID_10MM_AP, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
			if (has_trait(0, dude_obj, 40)) then begin
				Item := create_object_sid(PID_10MM_AP, 0, 0, -1);
				add_obj_to_inven(Critter, Item);
			end
			Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
		end
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
		end
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	attack_setup(Critter, victim);
	set_global_var(MYST_STRANGER_ITEM, 3);
	call stranger;
end

procedure Vats1
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 253));
	radiation_inc(dude_obj, random(15, 30));
	Tot_Critter_A := random(3, 4);
	Tot_Critter_B := 1;
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 3;
	Critter_type := PID_MEAN_SUPER_MUTANT;// MEAN SUPER MUTANT
	Critter_script := SCRIPT_MUTAMBSH;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		if (random(0, 1) == 1) then begin
			if (random(0, 3) == 0) then begin
				Item := create_object_sid(PID_FLAMER, 0, 0, -1);
			end
			else begin
				Item := create_object_sid(PID_MINIGUN, 0, 0, -1);
			end
		end
		else begin
			Item := create_object_sid(PID_SPIKED_KNUCKLES, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_NIGHTKIN;
	Critter_script := SCRIPT_SUPAMBSH;
	while(Tot_Critter_B) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Item := create_object_sid(PID_MINIGUN, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Item := create_object_sid(PID_5MM_JHP, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 3);
	call stranger;
end

procedure Vats2
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 254));
	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
		radiation_inc(dude_obj, random(15, 30));
	end
	if (random(0, 1) == 1) then begin
		if ((get_critter_stat(dude_obj, 6) <= 3) or (random(0, 10) == 10)) then begin
			Critter_type := PID_GREATER_CENTAUR;// GREATER CENTAUR
			Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
		end
		else begin
			Critter_type := PID_CENTAUR_LESSER;// LESSER CENTAUR
			Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
		end
	end
	else begin
		if ((get_critter_stat(dude_obj, 6) <= 3) or (random(0, 10) == 10)) then begin
			Critter_type := PID_BLOODY_FLOATER;// BLOODY FLOATER
			Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
		end
		else begin
			Critter_type := PID_FLOATER;// FLOATER
			Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
		end
	end
	Tot_Critter_A := random(3, 5);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 2;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 3);
	call stranger;
end

procedure Vats3
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 306));
	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
		radiation_inc(dude_obj, random(15, 30));
	end
	Tot_Critter_A := random(1, 2);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 4;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 2;
	Critter_type := PID_FLOATER;// FLOATER
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_CENTAUR_LESSER;// LESSER CENTAUR
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	Tot_Critter_A := 1;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
	Tot_Critter_A := random(2, 3);
	Critter_type := PID_MEAN_SUPER_MUTANT;// MEAN SUPER MUTANT
	Critter_script := SCRIPT_MUTAMBSH;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_NIGHTKIN;
	Critter_script := SCRIPT_SUPAMBSH;
	Critter_direction := random(0, 2);
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	Item := create_object_sid(PID_LASER_RIFLE, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Item := create_object_sid(PID_SMALL_ENERGY_CELL, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, has_trait(0, dude_obj, 40) + 2);
	/* has how many? */    if (not(obj_is_carrying_obj_pid(dude_obj, PID_RADIO))) then begin
		Item := create_object_sid(PID_RADIO, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
	end
	set_global_var(MYST_STRANGER_ITEM, 3);
	call stranger;
end

procedure Vats4
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 256));
	Tot_Critter_A := random(3, 4);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 7;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Critter_type := PID_MEAN_SUPER_MUTANT;// MEAN SUPER MUTANT
	Critter_script := SCRIPT_MUTAMBSH;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		anim(Critter, 1000, random(3, 4));
		if (random(0, 1) == 1) then begin
			if (random(0, 1) == 1) then begin
				Item := create_object_sid(PID_FLAMER, 0, 0, -1);
			end
			else begin
				Item := create_object_sid(PID_MINIGUN, 0, 0, -1);
			end
		end
		else begin
			Item := create_object_sid(PID_SPIKED_KNUCKLES, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_NIGHTKIN;
	Critter_script := SCRIPT_SUPAMBSH;
	Tot_Critter_B := 1;
	while(Tot_Critter_B) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		anim(Critter, 1000, random(3, 4));
		Item := create_object_sid(PID_MINIGUN, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Item := create_object_sid(PID_5MM_JHP, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 3;
	Critter_type := PID_FLOATER;// FLOATER
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	Critter_direction := random(0, 2);
	call Place_critter;
	anim(Critter, 1000, random(3, 4));
	set_global_var(MYST_STRANGER_ITEM, 3);
	call stranger;
end

procedure Vats5
begin
	call Vats4;
	/*
	variable HasFlask := 0
	variable Hours := 0;
	variable DamageHP := 0;
	variable CurrentHP := 0;
	variable PercentMax95 := 0;
	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
		radiation_inc(dude_obj, random(15, 30));
	end
	HasFlask := obj_carrying_pid_obj(dude_obj, PID_WATER_FLASK);
	if (HasFlask > 0) then begin
		rm_obj_from_inven(dude_obj, HasFlask);
		destroy_object(HasFlask);
		display_msg(message_str(SCRIPT_RNDDESRT, 125));
	end
	else begin
		//Skill_roll := roll_vs_skill(dude_obj, 17, (0 + (20 * has_trait(0, dude_obj, 16))));
		if (is_success(Skill_roll)) then begin
			if (is_critical(Skill_roll)) then begin
				display_msg(message_str(SCRIPT_RNDDESRT, 147));//{147}{}{You manage to avoid dehydration by searching for water. The search takes 1 hour.}
				Hours := 1;
			end
			else begin
				Hours := random(1, 6);
				if (Hours == 1) then begin
					display_msg(message_str(SCRIPT_RNDDESRT, 109));//{109}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional hour.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 110) + Hours + message_str(SCRIPT_RNDDESRT, 111));//{110}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional X hours}
				end
				Hours := (Hours + 1);
			end
		end
		else begin
			PercentMax95 := random(1, 100);
			if (is_critical(Skill_roll)) or (PercentMax95 > 95) then begin
				Hours := random(6, 12);
				DamageHP := (random(5, 8) + random(5, 8) + random(5, 8));// is now 15 to 24, was previously 2 to 4
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 116));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you }{116}{}{ points of health damage.}
				end
			end
			else begin
				Hours := random(4, 8);
				DamageHP := (random(2, 4) + random(2, 4) + random(2, 4));// is now 6 to 12, was previously 1 to 2
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 124));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained }{124}{}{ points of health damage.}
				end
			end
		end
		game_time_advance((10 * 60 * 60 * Hours));
	end*/
end

procedure Vats6
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 279));
	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
		radiation_inc(dude_obj, random(15, 30));
	end
	Item := create_object_sid(PID_POT, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(8, 10)), 0, -1);
	Item := create_object_sid(PID_BOXES_2, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(5, 9)), 0, -1);
	Item := create_object_sid(PID_BOXES_3, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(5, 9)), 0, -1);
	Item := create_object_sid(PID_TRASH_CAN, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(5, 9)), 0, -1);
	Item := create_object_sid(PID_CHAIR, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(5, 9)), 0, -1);
	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		Item := create_object_sid(PID_BURNING_BARREL, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(8, 10)), 0, -1);
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_BURNING_BARREL, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(8, 10)), 0, -1);
		end
	end
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
	group_angle := random(0, 5);
	Critter_type := PID_MEAN_SUPER_MUTANT;// MEAN SUPER MUTANT
	Critter_script := SCRIPT_MUTAMBSH;
	Tot_Critter_A := random(2, 3);
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_NIGHTKIN;
	Critter_script := SCRIPT_SUPAMBSH;
	Critter_direction := random(0, 2);
	Critter_direction := group_angle + (random(0, 2) - 1);
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	Item := create_object_sid(PID_MINIGUN, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Item := create_object_sid(PID_5MM_JHP, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 3;
	Critter_type := PID_FLOATER;// FLOATER
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	Tot_Critter_A := 2;
	if (group_angle == 0) then begin
		group_angle := 3;
	end
	else begin
		if (group_angle == 1) then begin
			group_angle := 4;
		end
		else begin
			if (group_angle == 2) then begin
				group_angle := 5;
			end
			else begin
				if (group_angle == 3) then begin
					group_angle := 0;
				end
				else begin
					if (group_angle == 4) then begin
						group_angle := 1;
					end
					else begin
						if (group_angle == 5) then begin
							group_angle := 2;
						end
					end
				end
			end
		end
	end
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 3);
	call stranger;
end

procedure Glow1
begin
	variable LVar0 := 3;
	display_msg(message_str(SCRIPT_RNDDESRT, 280));
	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
		radiation_inc(dude_obj, random(30, 60));
	end
	Tot_Critter_A := random(2, 3);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 4;
	Critter_type := PID_MEAN_SUPER_MUTANT;// MEAN SUPER MUTANT
	Critter_script := SCRIPT_MUTAMBSH;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 5);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	if (random(0, 1)) then begin
		Critter_type := PID_NIGHTKIN;
		Critter_script := SCRIPT_SUPAMBSH;
		Critter_direction := random(0, 5);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Item := create_object_sid(PID_LASER_RIFLE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		if (has_trait(0, dude_obj, 40)) then begin
			LVar0 := 5;
		end
		while(LVar0) do begin
			Item := create_object_sid(PID_SMALL_ENERGY_CELL, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
			LVar0 := LVar0 - 1;
		end
	end
	set_global_var(MYST_STRANGER_ITEM, 3);
	call stranger;
end

procedure Glow2
begin
	variable LVar0 := 0;
	display_msg(message_str(SCRIPT_RNDDESRT, 281));
	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
		radiation_inc(dude_obj, random(30, 60));
	end
	LVar0 := game_time_hour;
	Tot_Critter_A := random(3, 5);
	if ((LVar0 > 600) and (LVar0 < 1900)) then begin
		Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 5;
		Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 2;
	end
	else begin
		Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 2;
		Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 2;
	end
	Critter_type := PID_FLOATER;// FLOATER
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 5);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	if (random(0, 1)) then begin
		Critter_direction := random(0, 4);
		Critter_type := PID_CENTAUR_LESSER;// LESSER CENTAUR
		Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	end
	set_global_var(MYST_STRANGER_ITEM, 3);
	call stranger;
end

procedure Glow3
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 282));
	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
		radiation_inc(dude_obj, random(30, 60));
	end
	Tot_Critter_A := random(4, 8);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 8;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 5;
	Critter_type := PID_RADSCORPION;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 4);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Item := create_object_sid(PID_SCORPION_TAIL, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 3);
	call stranger;
end

procedure Glow4
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 283));
	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
		radiation_inc(dude_obj, random(30, 60));
	end
	else begin
		radiation_inc(dude_obj, random(15, 30));
	end
	Outer_ring := 2;//  was   Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 4;
	Inner_ring := 1;// was 	 Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 2;
	Critter_type := PID_FLOATER;// FLOATER
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	Tot_Critter_A := 1;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
end

procedure Glow5
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 284));
	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
		radiation_inc(dude_obj, random(30, 60));
	end
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 3;
	group_angle := random(0, 5);
	Tot_Critter_A := 2;
	Critter_type := PID_FLOATER;// FLOATER
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	if (random(0, 1)) then begin
		Critter_type := PID_CENTAUR_LESSER;// LESSER CENTAUR
		Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
	end
end

procedure Glow6
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 285));
	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
		radiation_inc(dude_obj, random(30, 60));
	end
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 2;
	Critter_type := PID_CENTAUR_LESSER;// LESSER CENTAUR
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	Critter_direction := random(2, 5);
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	if (random(0, 1)) then begin
		Critter_type := PID_FLOATER;// FLOATER
		Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
		Critter_direction := random(1, 4);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	end
	set_global_var(MYST_STRANGER_ITEM, 3);
	call stranger;
end

procedure Death1
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 286));
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 8;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 8;
	Critter_direction := random(0, 5);
	Critter_type := PID_DEATHCLAW;// 51  Deathclaw
	Critter_script := SCRIPT_DETHCLAW;// DethClaw.int
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	display_msg(message_str(SCRIPT_RNDDESRT, 287));
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	Tot_Critter_A := random(3, 5);
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 5);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 2);
	call stranger;
end

procedure Death2
begin
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 8;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 8;
	Critter_direction := random(0, 5);
	Critter_type := PID_DEATHCLAW;//DEATHCLAW
	Critter_script := SCRIPT_DETHCLAW;
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Tot_Critter_A := random(2, 4);
	group_angle := random(0, 5);
	Critter_type := PID_RADSCORPION;//RADSCORPIONS
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 4) - 2);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 2);
	call stranger;
	display_msg(message_str(SCRIPT_RNDDESRT, 299));
end


procedure Death3
begin
	call Death2;
	/*
	variable HasFlask := 0
	variable Hours := 0;
	variable DamageHP := 0;
	variable CurrentHP := 0;
	variable PercentMax95 := 0;
	HasFlask := obj_carrying_pid_obj(dude_obj, PID_WATER_FLASK);
	if (HasFlask > 0) then begin
		rm_obj_from_inven(dude_obj, HasFlask);
		destroy_object(HasFlask);
		display_msg(message_str(SCRIPT_RNDDESRT, 125));
	end
	else begin
		//Skill_roll := roll_vs_skill(dude_obj, 17, (0 + (20 * has_trait(0, dude_obj, 16))));
		if (is_success(Skill_roll)) then begin
			if (is_critical(Skill_roll)) then begin
				display_msg(message_str(SCRIPT_RNDDESRT, 147));//{147}{}{You manage to avoid dehydration by searching for water. The search takes 1 hour.}
				Hours := 1;
			end
			else begin
				Hours := random(1, 6);
				if (Hours == 1) then begin
					display_msg(message_str(SCRIPT_RNDDESRT, 109));//{109}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional hour.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 110) + Hours + message_str(SCRIPT_RNDDESRT, 111));//{110}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional X hours}
				end
				Hours := (Hours + 1);
			end
		end
		else begin
			PercentMax95 := random(1, 100);
			if (is_critical(Skill_roll)) or (PercentMax95 > 95) then begin
				Hours := random(6, 12);
				DamageHP := (random(5, 8) + random(5, 8) + random(5, 8));// is now 15 to 24, was previously 2 to 4
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 116));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you }{116}{}{ points of health damage.}
				end
			end
			else begin
				Hours := random(4, 8);
				DamageHP := (random(2, 4) + random(2, 4) + random(2, 4));// is now 6 to 12, was previously 1 to 2
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 124));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained }{124}{}{ points of health damage.}
				end
			end
		end
		game_time_advance((10 * 60 * 60 * Hours));
	end*/
end

procedure Death4
begin
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 3;
	Critter_direction := random(0, 5);
	Critter_type := PID_DEATHCLAW;// <- 51  Deathclaw   was: 43  Lesser Centaur  16777259
	Critter_script := SCRIPT_DETHCLAW;// DethClaw.int
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	set_global_var(MYST_STRANGER_ITEM, 2);
	call stranger;
	display_msg(message_str(SCRIPT_RNDDESRT, 286));
end

procedure Death5
begin// 	TRENT
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 10;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 10;
	if (not((global_var(TRENT_STATUS) bwand 8) != 0)) then begin//check for Trent still alive? ToDo fixme TeamX's code -Sduibek
		Critter_direction := dude_rot + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		Critter_type := PID_MAN_JEANS;
		Critter_script := SCRIPT_TRENT;
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Item := create_object_sid(PID_DESERT_EAGLE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		item_caps_adjust(Critter, random(20, 60) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Item := create_object_sid(PID_44_MAGNUM_JHP, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Item := create_object_sid(PID_44_FMJ_MAGNUM, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Item := create_object_sid(PID_10MM_SMG, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Item := create_object_sid(PID_LEATHER_ARMOR, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Item := create_object_sid(PID_BACKPACK, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		Item := create_object_sid(PID_BOOZE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		display_msg(message_str(SCRIPT_RNDDESRT, 300));
	end
	else begin
		Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 7;
		Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 4;
		Critter_direction := random(0, 5);
		if (random(0, 3) == 3) then begin
		Critter_type := PID_GREATER_MOLE_RAT;// GREATER MOLE RAT
		end
		else begin
			Critter_type := PID_LESSER_MOLE_RAT;//Lesser Mole Rat
		end
		Critter_script := SCRIPT_WANRATS;
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 8;
		Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 8;
		Critter_direction := random(0, 5);
		Critter_type := PID_DEATHCLAW_SPAWN;// 165  Deathclaw Spawn
		Critter_script := SCRIPT_DETHCLAW;//DethClaw.int
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		set_global_var(MYST_STRANGER_ITEM, 2);
		call stranger;
		display_msg(message_str(SCRIPT_RNDDESRT, 301));
		display_msg(message_str(SCRIPT_RNDDESRT, 302));
	end
end

procedure Death6
begin
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Critter_direction := random(0, 5);
//	Critter_type := 16777267;
//	Critter_script := 642;
//	call Place_critter;
//	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	Critter_type := PID_DEATHCLAW_SPAWN;// 165  Deathclaw Spawn
	Critter_script := SCRIPT_DETHCLAW;//DethClaw.int
	Tot_Critter_A := 1;
	group_angle := random(0, 5);
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 4) - 2);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 2);
	call stranger;
	display_msg(message_str(SCRIPT_RNDDESRT, 302));
end

procedure Bone1
begin
	Tot_Critter_A := random(2, 3);
	group_angle := random(0, 5);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 4;
	Critter_type := PID_MEAN_SUPER_MUTANT;// MEAN SUPER MUTANT
	Critter_script := SCRIPT_MUTAMBSH;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 4) - 2);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		if (random(1, 4) == 1) then begin
			Item := create_object_sid(PID_FLAMER, 0, 0, -1);
		end
		else begin
			Item := create_object_sid(PID_MINIGUN, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		if (random(1, 5) == 1) then begin
			Item := create_object_sid(PID_ROCKET_LAUNCHER, 0, 0, -1);
			add_obj_to_inven(Critter, Item);
		end
		if (random(0, 2) == 0) then begin
			item_caps_adjust(Critter, random(5, 20) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	if (random(0, 1)) then begin
		Critter_type := PID_NIGHTKIN;
		Critter_script := SCRIPT_SUPAMBSH;
		Critter_direction := group_angle + (random(0, 4) - 2);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Item := create_object_sid(PID_MINIGUN, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
		if (random(0, 2) == 0) then begin
			item_caps_adjust(Critter, random(5, 20) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		end
	end
	set_global_var(MYST_STRANGER_ITEM, 3);
	call stranger;
	display_msg(message_str(SCRIPT_RNDDESRT, 307));
end

procedure Bone2
begin
	variable LVar0 := 0;
	group_angle := random(0, 5);
	if ((game_time_hour >= 1900) or (game_time_hour < 600) and random(0, 1)) then begin
		Critter := create_object_sid(PID_FIRE_PIT, 0, 0, -1);
		Critter_tile := tile_num_in_direction(Dude_tile, group_angle, 4);
		critter_attempt_placement(Critter, Critter_tile, elevation(dude_obj));
		Critter := create_object_sid(PID_FIRE_PIT, 0, 0, -1);
		if (group_angle == 0) then begin
			Item := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Item := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Item := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Item := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Item := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Item := 2;
							end
						end
					end
				end
			end
		end
		Critter_tile := tile_num_in_direction(Dude_tile, Item, 4);
		critter_attempt_placement(Critter, Critter_tile, elevation(dude_obj));
	end
	Dude_tile := Dude_tile + (random(0, 4) - 2 + ((random(0, 2) - 1) * 200));
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 4;
	Tot_Critter_A := random(3, 5);
	Tot_Critter_B := random(3, 5);
	Critter_type := PID_GEN_THUG;
	Critter_script := SCRIPT_GENRAIDA;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		LVar0 := random(0, 2);
		if (LVar0 == 0) then begin
			Item := create_object_sid(PID_DESERT_EAGLE, 0, 0, -1);
		end
		else begin
			if (LVar0 == 1) then begin
				Item := create_object_sid(PID_BRASS_KNUCKLES, 0, 0, -1);
			end
			else begin
				Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
			end
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 2) == 0) then begin
			item_caps_adjust(Critter, random(5, 25) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	victim := Critter;
	Critter_type := PID_THUG_FEMALE_METAL;
	Critter_script := SCRIPT_GENRAIDC;
	if (group_angle == 0) then begin
		group_angle := 3;
	end
	else begin
		if (group_angle == 1) then begin
			group_angle := 4;
		end
		else begin
			if (group_angle == 2) then begin
				group_angle := 5;
			end
			else begin
				if (group_angle == 3) then begin
					group_angle := 0;
				end
				else begin
					if (group_angle == 4) then begin
						group_angle := 1;
					end
					else begin
						if (group_angle == 5) then begin
							group_angle := 2;
						end
					end
				end
			end
		end
	end
	while(Tot_Critter_B) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		end
		else begin
			Item := create_object_sid(PID_SPEAR, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 2) == 0) then begin
			item_caps_adjust(Critter, random(4, 25) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		end
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	attack_setup(Critter, victim);
	set_global_var(MYST_STRANGER_ITEM, 2);
	call stranger;
	display_msg(message_str(SCRIPT_RNDDESRT, 308));
end

procedure Bone3
begin
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Tot_Critter_A := random(3, 7);
	group_angle := random(0, 5);
	Critter_type := PID_GEN_THUG;
	Critter_script := SCRIPT_GENRAIDA;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + random(0, 2 * 2) - 2;
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
		end
		else begin
			Item := create_object_sid(PID_10MM_SMG, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 2) == 0) then begin
			item_caps_adjust(Critter, random(4, 25) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_MAN_JEANS;
	Critter_script := SCRIPT_GENRAIDA;
	Critter_direction := group_angle + random(0, 2 * 2) - 2;
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	Item := create_object_sid(PID_LEATHER_ARMOR, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Item := create_object_sid(PID_FIRST_AID_KIT, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	item_caps_adjust(Critter, random(25, 100) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_SMALL_ENERGY_CELL, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, has_trait(0, dude_obj, 40) + 1);
	end
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_SLEDGEHAMMER, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
	end
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_44_MAGNUM_JHP, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, has_trait(0, dude_obj, 40) + 1);
	end
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
	display_msg(message_str(SCRIPT_RNDDESRT, 309));
end

procedure Bone4
begin
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Tot_Critter_A := random(2, 3);
	group_angle := random(0, 5);
	Critter_type := PID_GEN_THUG;
	Critter_script := SCRIPT_GENRAIDA;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + random(0, 2 * 2) - 2;
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
		end
		else begin
			Item := create_object_sid(PID_10MM_SMG, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 2) == 0) then begin
			item_caps_adjust(Critter, random(4, 25) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_MAN_JEANS;
	Critter_script := SCRIPT_GENRAIDA;
	Critter_direction := group_angle + random(0, 2 * 2) - 2;
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	Item := create_object_sid(PID_FIRST_AID_KIT, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	item_caps_adjust(Critter, random(25, 100) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_SMALL_ENERGY_CELL, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, has_trait(0, dude_obj, 40) + 1);
	end
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_SLEDGEHAMMER, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
	end
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_44_MAGNUM_JHP, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, has_trait(0, dude_obj, 40) + 1);
	end
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
	display_msg(message_str(SCRIPT_RNDDESRT, 310));
end

procedure Bone5
begin
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Tot_Critter_A := random(2, 3);
	group_angle := random(0, 5);
	Critter_type := PID_GEN_THUG;
	Critter_script := SCRIPT_GENRAIDA;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + random(0, 2 * 2) - 2;
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		if (random(0, 1)) then begin
			Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
		end
		else begin
			Item := create_object_sid(PID_10MM_SMG, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 2) == 0) then begin
			item_caps_adjust(Critter, random(4, 25) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_MAN_JEANS;
	Critter_script := SCRIPT_GENRAIDA;
	Critter_direction := group_angle + random(0, 2 * 2) - 2;
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	Item := create_object_sid(PID_LEATHER_ARMOR, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Item := create_object_sid(PID_FIRST_AID_KIT, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	item_caps_adjust(Critter, random(25, 100) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_SMALL_ENERGY_CELL, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, has_trait(0, dude_obj, 40) + 1);
	end
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_SLEDGEHAMMER, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
	end
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_44_MAGNUM_JHP, 0, 0, -1);
		add_mult_objs_to_inven(Critter, Item, has_trait(0, dude_obj, 40) + 1);
	end
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
	end
	set_global_var(MYST_STRANGER_ITEM, 2);
	call stranger;
	display_msg(message_str(SCRIPT_RNDDESRT, 311));
end

procedure Bone6
begin
	Tot_Critter_A := random(4, 6);
	if ((game_time_hour >= 700) and (game_time_hour < 1800)) then begin
		Outer_ring := 6;
		Inner_ring := 3;
	end
	else begin
		Outer_ring := 4;
		Inner_ring := 3;
	end
	Critter_type := PID_MANTIS;
	Critter_script := SCRIPT_MANTIS;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 5);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
	display_msg(message_str(SCRIPT_RNDDESRT, 313));
end

procedure Scenes
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;
	variable LVar3 := 0;
	variable LVar4 := 0;
	variable Place_Holder;
	Tot_Critter_A := random(3, 14);
	LVar4 := -1;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 5);
		Range := random(4, 28);
		Place_Holder := Range;
		LVar0 := tile_num_in_direction(Dude_tile, Critter_direction, Place_Holder);
		Critter_direction := random(0, 5);
		LVar0 := tile_num_in_direction(Dude_tile, Critter_direction, Place_Holder);
		LVar0 := LVar0 + (random(0, 2) - 1);
		Critter_direction := random(0, 5);
		LVar0 := tile_num_in_direction(Dude_tile, Critter_direction, Place_Holder);
		LVar0 := LVar0 + (random(0, 2) - 1);
		Critter_direction := random(0, 5);
		LVar0 := tile_num_in_direction(Dude_tile, Critter_direction, Place_Holder);
		LVar2 := random(0, 9);
		while(LVar4 == LVar2) do begin
			LVar2 := random(0, 9);
		end
		if (LVar2 == 0) then begin
			LVar3 := random(1, 6);
			if (LVar3 == 1) then begin
				Item := create_object_sid(PID_BONES_4, 0, 0, -1);
			end
			else begin
				if (LVar3 == 2) then begin
					if (random(1, 4) == 1) then begin
						Item := create_object_sid(PID_TREE_2, 0, 0, -1);
					end
					else begin
						Item := create_object_sid(PID_CACTUS_1, 0, 0, -1);
					end
				end
				else begin
					if (LVar3 == 3) then begin
						Item := create_object_sid(PID_DIRT_5, 0, 0, -1);
					end
					else begin
						if (LVar3 == 4) then begin
							Item := create_object_sid(PID_CACTUS_1, 0, 0, -1);
						end
						else begin
							if (LVar3 == 5) then begin
								Item := create_object_sid(PID_CACTUS_2, 0, 0, -1);
							end
							else begin
								if (random(1, 3) == 1) then begin
									Item := create_object_sid(PID_TREE_OLD, 0, 0, -1);
								end
								else begin
									Item := create_object_sid(PID_TRASH_2, 0, 0, -1);
								end
							end
						end
					end
				end
			end
		end
		else begin
			if (LVar2 == 1) then begin
				LVar3 := random(1, 3);
				if (LVar3 == 1) then begin
					Item := create_object_sid(PID_ROCKS_8, 0, 0, -1);
				end
				else begin
					if (LVar3 == 2) then begin
						Item := create_object_sid(PID_ROCKS_7, 0, 0, -1);
					end
					else begin
						Item := create_object_sid(PID_ROCKS_6, 0, 0, -1);
					end
				end
			end
			else begin
				if (LVar2 == 2) then begin
					LVar3 := random(1, 5);
					if (LVar3 == 1) then begin
						Item := create_object_sid(PID_BONES_1, 0, 0, -1);
					end
					else begin
						if (LVar3 == 2) then begin
							Item := create_object_sid(PID_BONES_2, 0, 0, -1);
						end
						else begin
							if (LVar3 == 3) then begin
								Item := create_object_sid(PID_BONES_3, 0, 0, -1);
							end
							else begin
								if (LVar3 == 4) then begin
									Item := create_object_sid(PID_BONES_4, 0, 0, -1);
								end
								else begin
									Item := create_object_sid(PID_BONES_5, 0, 0, -1);
								end
							end
						end
					end
				end
				else begin
					if (LVar2 == 3) then begin
						Item := create_object_sid(PID_TIRE, 0, 0, -1);
					end
					else begin
						if (LVar2 == 4) then begin
							LVar3 := random(1, 4);
							if (LVar3 == 1) then begin
								Item := create_object_sid(PID_ROCKS_3, 0, 0, -1);
							end
							else begin
								if (LVar3 == 2) then begin
									Item := create_object_sid(PID_ROCKS_4, 0, 0, -1);
								end
								else begin
									if (LVar3 == 3) then begin
										Item := create_object_sid(PID_ROCKS_3, 0, 0, -1);
									end
									else begin
										Item := create_object_sid(PID_ROCKS_4, 0, 0, -1);
									end
								end
							end
						end
						else begin
							if (LVar2 == 5) then begin
								LVar3 := random(1, 4);
								if (LVar3 == 1) then begin
									Item := create_object_sid(PID_SCRUB_1, 0, 0, -1);
								end
								else begin
									if (LVar3 == 2) then begin
										Item := create_object_sid(PID_SCRUB_2, 0, 0, -1);
									end
									else begin
										if (LVar3 == 3) then begin
											Item := create_object_sid(PID_SCRUB_3, 0, 0, -1);
										end
										else begin
											Item := create_object_sid(PID_SCRUB_1, 0, 0, -1);
										end
									end
								end
							end
							else begin
								if (LVar2 == 6) then begin
									LVar3 := random(1, 3);
									if (LVar3 == 1) then begin
										Item := create_object_sid(PID_JUNK, 0, 0, -1);
									end
									else begin
										if (LVar3 == 2) then begin
											Item := create_object_sid(PID_ROCKS_5, 0, 0, -1);
										end
										else begin
											Item := create_object_sid(PID_WEEDS, 0, 0, -1);
										end
									end
								end
								else begin
									if (LVar2 == 7) then begin
										LVar3 := random(1, 4);
										if (LVar3 == 1) then begin
											Item := create_object_sid(PID_DIRT_5, 0, 0, -1);
										end
										else begin
											if (LVar3 == 2) then begin
												Item := create_object_sid(PID_DIRT_3, 0, 0, -1);
											end
											else begin
												if (LVar3 == 3) then begin
													Item := create_object_sid(PID_DIRT_6, 0, 0, -1);
												end
												else begin
													Item := create_object_sid(PID_DIRT_4, 0, 0, -1);
												end
											end
										end
									end
									else begin
										if (LVar2 == 8) then begin
											LVar3 := random(1, 3);
											if (LVar3 == 1) then begin
												Item := create_object_sid(PID_ROCKS_8, 0, 0, -1);
											end
											else begin
												if (LVar3 == 2) then begin
													Item := create_object_sid(PID_ROCKS_7, 0, 0, -1);
												end
												else begin
													Item := create_object_sid(PID_ROCKS_6, 0, 0, -1);
												end
											end
										end
										else begin
											LVar3 := random(1, 6);
											if (LVar3 == 1) then begin
												Item := create_object_sid(PID_BONES_4, 0, 0, -1);
											end
											else begin
												if (LVar3 == 2) then begin
													if (random(1, 3) == 1) then begin
														Item := create_object_sid(PID_TREE_2, 0, 0, -1);
													end
													else begin
														Item := create_object_sid(PID_CACTUS_1, 0, 0, -1);
													end
												end
												else begin
													if (LVar3 == 3) then begin
														Item := create_object_sid(PID_DIRT_5, 0, 0, -1);
													end
													else begin
														if (LVar3 == 4) then begin
															Item := create_object_sid(PID_CACTUS_1, 0, 0, -1);
														end
														else begin
															if (LVar3 == 5) then begin
																Item := create_object_sid(PID_CACTUS_2, 0, 0, -1);
															end
															else begin
																if (random(1, 3) == 1) then begin
																	Item := create_object_sid(PID_TREE_OLD, 0, 0, -1);
																end
																else begin
																	Item := create_object_sid(random(0, 2) + 33554710, 0, 0, -1);
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
		LVar4 := LVar2;
		critter_attempt_placement(Item, LVar0, elevation(dude_obj));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
end

procedure hunters
begin
	Inner_ring := 8;
	Outer_ring := 5;
	group_angle := random(0, 5);
	Critter_direction := group_angle + random(0, 3 * 2) - 3;
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	Critter_type := PID_AVELLONE;
	Critter_script := SCRIPT_HUNTER;
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	Item := create_object_sid(PID_ASSAULT_RIFLE, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Item := create_object_sid(PID_5MM_AP, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, 4 * (has_trait(0, dude_obj, 40) + 1));
	Item := create_object_sid(PID_COMBAT_ARMOR, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	item_caps_adjust(Critter, random(5, 30) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	Item := create_object_sid(PID_SUPER_STIMPAK, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, 2);
	Critter_direction := group_angle + random(0, 3 * 2) - 3;
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	Critter_type := PID_THUG_FEMALE_YELLOW;
	Critter_script := SCRIPT_THUG;
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	Item := create_object_sid(PID_SPEAR, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Item := create_object_sid(PID_METAL_ARMOR, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	if (random(0, 2) == 0) then begin
		item_caps_adjust(Critter, random(5, 30) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	end
	Critter_direction := group_angle + random(0, 3 * 2) - 3;
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	Critter_type := PID_THUG_FEMALE_METAL;
	Critter_script := SCRIPT_THUG;
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	Item := create_object_sid(PID_SNIPER_RIFLE, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Item := create_object_sid(PID_223_FMJ, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, 3 * (has_trait(0, dude_obj, 40) + 1));
	Item := create_object_sid(PID_METAL_ARMOR, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Item := create_object_sid(PID_EXPLOSIVE_ROCKET, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, 2 * (has_trait(0, dude_obj, 40) + 1));
	if (random(0, 2) == 0) then begin
		item_caps_adjust(Critter, random(5, 40) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	end
	Critter_direction := group_angle + random(0, 3 * 2) - 3;
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	Critter_type := PID_THUG_BLACK_METAL;
	Critter_script := SCRIPT_THUG;
	call Place_critter;
	anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	Item := create_object_sid(PID_DESERT_EAGLE, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	Item := create_object_sid(PID_44_MAGNUM_JHP, 0, 0, -1);
	add_mult_objs_to_inven(Critter, Item, 2 * (has_trait(0, dude_obj, 40) + 1));
	Item := create_object_sid(PID_METAL_ARMOR, 0, 0, -1);
	add_obj_to_inven(Critter, Item);
	if (random(0, 2) == 0) then begin
		item_caps_adjust(Critter, random(5, 30) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	end
	call stranger;
end

procedure add_party begin
	set_add_party
end

procedure update_party begin
	set_update_party
end

procedure remove_party begin
	set_remove_party
end

procedure North1
begin
//display_msg(message_str(112, 197));
//display_msg(message_str(112, 105));
	variable LVar0 := 0;
	Tot_Critter_A := random(1, 2);
	Tot_Critter_B := random(3, 5);
	group_angle := random(0, 5);
	if (is_success(do_check(dude_obj, 1, -2)) or has_trait(0, dude_obj, 0)) then begin
		display_msg(message_str(SCRIPT_RNDDESRT, 197));
		Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 7;
		Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 5;
	end
	else begin
		display_msg(message_str(SCRIPT_RNDDESRT, 105));
		LVar0 := 1;
		Outer_ring := 5;
		Inner_ring := 2;
	end
	Critter_type := PID_GEN_THUG;
	Critter_script := SCRIPT_GENRAIDA;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (LVar0) then begin
			anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		end
		else begin
			anim(Critter, 1000, random(0, 5));
		end
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				Item := create_object_sid(PID_DESERT_EAGLE, 0, 0, -1);
			end
			else begin
				Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
			end
		end
		else begin
			Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		item_caps_adjust(Critter, random(1, 20) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Outer_ring := Outer_ring + 2;
	Inner_ring := Inner_ring + 2;
	while(Tot_Critter_B) do begin
		if (random(0, 1)) then begin
			Critter_type := PID_TRAVELER_BALD_LEATHER;
		end
		else begin
			Critter_type := PID_GEN_TRAVELER;
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (LVar0) then begin
			anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		end
		else begin
			anim(Critter, 1000, random(0, 5));
		end
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				Item := create_object_sid(PID_DESERT_EAGLE, 0, 0, -1);
			end
			else begin
				Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
			end
		end
		else begin
			Item := create_object_sid(PID_KNIFE, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		item_caps_adjust(Critter, random(1, 25) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure North2
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 104));
	Tot_Critter_A := random(3, 6);
	Tot_Critter_B := random(4, 10);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 6;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 4;
	group_angle := random(0, 5);
	while(Tot_Critter_A) do begin
		if (random(0, 1) == 1) then begin
			Critter_type := PID_NASTY_RADSCORPION;// Nasty
			Critter_script := SCRIPT_RADSCORP;
		end
		else begin
			Critter_type := PID_RADSCORPION;// Normal
			Critter_script := SCRIPT_RADSCORP;
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		victim := Critter;
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		Tot_Critter_A := Tot_Critter_A - 1;
	end

	if (group_angle == 0) then begin
		group_angle := 3;
	end
	else begin
		if (group_angle == 1) then begin
			group_angle := 4;
		end
		else begin
			if (group_angle == 2) then begin
				group_angle := 5;
			end
			else begin
				if (group_angle == 3) then begin
					group_angle := 0;
				end
				else begin
					if (group_angle == 4) then begin
						group_angle := 1;
					end
					else begin
						if (group_angle == 5) then begin
							group_angle := 2;
						end
					end
				end
			end
		end
	end
	while(Tot_Critter_B) do begin
		if (random(0, 1) == 0) then begin
			Critter_type := PID_LESSER_MOLE_RAT;//Lesser
			Critter_script := SCRIPT_WANRATS;
		end
		else begin
			Critter_type := PID_GREATER_MOLE_RAT;//Greater
			Critter_script := SCRIPT_WANRATS;
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		/* AI_PACKET */  critter_add_trait(Critter, 1, 5, 13);// Mole Rats
		/* TEAM_NUM */  critter_add_trait(Critter, 1, 6, 9);
		attack_setup(Critter, victim);
		if (group_angle == 0) then begin
			Critter_direction := 3;
		end
		else begin
			if (group_angle == 1) then begin
				Critter_direction := 4;
			end
			else begin
				if (group_angle == 2) then begin
					Critter_direction := 5;
				end
				else begin
					if (group_angle == 3) then begin
						Critter_direction := 0;
					end
					else begin
						if (group_angle == 4) then begin
							Critter_direction := 1;
						end
						else begin
							if (group_angle == 5) then begin
								Critter_direction := 2;
							end
						end
					end
				end
			end
		end
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		anim(Critter, 1000, Critter_direction);
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure North3
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 106));
	Tot_Critter_A := random(4, 6);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	group_angle := random(0, 5);
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle;
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_MERCHANT;
	Critter_direction := random(0, 5);
	Outer_ring := 4;
	Inner_ring := 2;
	call Place_critter;
	anim(Critter, 1000, random(0, 5));
	item_caps_adjust(Critter, random(40, 100) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
		add_obj_to_inven(Critter, Item);
	end
	kill_critter(Critter, 61);
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure North4
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 107));
	Tot_Critter_A := random(2, 4);
	group_angle := random(0, 5);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
	Inner_ring := get_critter_stat(dude_obj, 1) / 2;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 3 * 2) - 3);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure North5
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 108));
	Tot_Critter_A := random(3, 6);//was 2, 6
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 8;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 4;
	Critter_script := SCRIPT_WANRATS;
	while(Tot_Critter_A) do begin
		if (random(0, 3) == 3) then begin
			Critter_type := PID_GREATER_MOLE_RAT;// GREATER MOLE RAT
		end
		else begin
			Critter_type := PID_LESSER_MOLE_RAT;// LESSER MOLE RAT
		end
		Critter_direction := random(0, 2);
		call Place_critter;
		anim(Critter, 1000, random(0, 5));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 1);
	call stranger;
end

procedure North6
begin
	call North5;
	/*
	variable HasFlask := 0
	variable Hours := 0;
	variable DamageHP := 0;
	variable CurrentHP := 0;
	variable PercentMax95 := 0;
	HasFlask := obj_carrying_pid_obj(dude_obj, PID_WATER_FLASK);
	if (HasFlask > 0) then begin
		rm_obj_from_inven(dude_obj, HasFlask);
		destroy_object(HasFlask);
		display_msg(message_str(SCRIPT_RNDDESRT, 125));
	end
	else begin
		//Skill_roll := roll_vs_skill(dude_obj, 17, (0 + (20 * has_trait(0, dude_obj, 16))));
		if (is_success(Skill_roll)) then begin
			if (is_critical(Skill_roll)) then begin
				display_msg(message_str(SCRIPT_RNDDESRT, 147));//{147}{}{You manage to avoid dehydration by searching for water. The search takes 1 hour.}
				Hours := 1;
			end
			else begin
				Hours := random(1, 6);
				if (Hours == 1) then begin
					display_msg(message_str(SCRIPT_RNDDESRT, 109));//{109}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional hour.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 110) + Hours + message_str(SCRIPT_RNDDESRT, 111));//{110}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional X hours}
				end
				Hours := (Hours + 1);
			end
		end
		else begin
			PercentMax95 := random(1, 100);
			if (is_critical(Skill_roll)) or (PercentMax95 > 95) then begin
				Hours := random(6, 12);
				DamageHP := (random(5, 8) + random(5, 8) + random(5, 8));// is now 15 to 24, was previously 2 to 4
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 116));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you }{116}{}{ points of health damage.}
				end
			end
			else begin
				Hours := random(4, 8);
				DamageHP := (100 + random(2, 4) + random(2, 4) + random(2, 4));// is now 6 to 12, was previously 1 to 2
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 124));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained }{124}{}{ points of health damage.}
				end
			end
		end
		game_time_advance((10 * 60 * 60 * Hours));
	end*/
end

procedure South1
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 131));
	Tot_Critter_A := random(6, 10);
	Outer_ring := 7;
	Inner_ring := 10;
	Critter_type := PID_BRAHMIN;
	Critter_script := SCRIPT_STAMPEDE;
	while(Tot_Critter_A) do begin
		Critter_direction := 1;
		call Place_critter;
		anim(Critter, 1000, 4);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
end

procedure South2
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 132));
	Tot_Critter_A := random(6, 8);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	group_angle := random(0, 5);
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2 * 2) - 2);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 2);
	call stranger;
end

procedure South3
begin
	call South2;
	/*
	variable HasFlask := 0
	variable Hours := 0;
	variable DamageHP := 0;
	variable CurrentHP := 0;
	variable PercentMax95 := 0;
	HasFlask := obj_carrying_pid_obj(dude_obj, PID_WATER_FLASK);
	if (HasFlask > 0) then begin
		rm_obj_from_inven(dude_obj, HasFlask);
		destroy_object(HasFlask);
		display_msg(message_str(SCRIPT_RNDDESRT, 125));
	end
	else begin
		//Skill_roll := roll_vs_skill(dude_obj, 17, (0 + (20 * has_trait(0, dude_obj, 16))));
		if (is_success(Skill_roll)) then begin
			if (is_critical(Skill_roll)) then begin
				display_msg(message_str(SCRIPT_RNDDESRT, 147));//{147}{}{You manage to avoid dehydration by searching for water. The search takes 1 hour.}
				Hours := 1;
			end
			else begin
				Hours := random(1, 6);
				if (Hours == 1) then begin
					display_msg(message_str(SCRIPT_RNDDESRT, 109));//{109}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional hour.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 110) + Hours + message_str(SCRIPT_RNDDESRT, 111));//{110}{}{You manage to avoid a serious case of dehydration by searching for water. The search takes an additional X hours}
				end
				Hours := (Hours + 1);
			end
		end
		else begin
			PercentMax95 := random(1, 100);
			if (is_critical(Skill_roll)) or (PercentMax95 > 95) then begin
				Hours := random(6, 12);
				DamageHP := (random(5, 8) + random(5, 8) + random(5, 8));// is now 15 to 24, was previously 2 to 4
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 114) + Hours + message_str(SCRIPT_RNDDESRT, 115) + DamageHP + message_str(SCRIPT_RNDDESRT, 116));//{114}{}{Your water supply runs out, and your search of }{115}{}{ hours fails to locate any water. Severe dehydration sets in, causing you }{116}{}{ points of health damage.}
				end
			end
			else begin
				Hours := random(4, 8);
				DamageHP := (random(2, 4) + random(2, 4) + random(2, 4));// is now 6 to 12, was previously 1 to 2
				CurrentHP := get_critter_stat(dude_obj, 35);
				if (DamageHP >= CurrentHP) then begin
					DamageHP := (CurrentHP - 1);
				end
				if (DamageHP > 0) then begin
					critter_heal(dude_obj, -DamageHP);
				end
				if (DamageHP <= 1) then begin
					DamageHP := 1;
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 148));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained 1 point of health damage.}
				end
				else begin
					display_msg(message_str(SCRIPT_RNDDESRT, 122) + Hours + message_str(SCRIPT_RNDDESRT, 123) + DamageHP + message_str(SCRIPT_RNDDESRT, 124));//{122}{}{You search for water in the high desert landscape for }{123}{}{ hours, but you do not find enough to fully satisfy your thirst. You have sustained }{124}{}{ points of health damage.}
				end
			end
		end
		game_time_advance((10 * 60 * 60 * Hours));
	end*/
end

procedure South4
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 143));
	Tot_Critter_A := random(2, 5);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 2;
	Critter_script := SCRIPT_GENRAIDA;
	group_angle := random(0, 5);
	while(Tot_Critter_A) do begin
		if (random(0, 1)) then begin
			Critter_type := PID_TRAVELER_BALD_LEATHER;
		end
		else begin
			Critter_type := PID_GEN_TRAVELER;
		end
		Critter_direction := group_angle + (random(0, 1 * 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				if (Critter_type == 16777449) then begin
					Item := create_object_sid(PID_223_FMJ, 0, 0, -1);
				end
				else begin
					Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
				end
				add_obj_to_inven(Critter, Item);
				if (has_trait(0, dude_obj, 40)) then begin
					if (Critter_type == 16777449) then begin
						Item := create_object_sid(PID_223_FMJ, 0, 0, -1);
					end
					else begin
						Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
					end
					add_obj_to_inven(Critter, Item);
				end
				if (Critter_type == 16777449) then begin
					Item := create_object_sid(PID_HUNTING_RIFLE, 0, 0, -1);
				end
				else begin
					Item := create_object_sid(PID_10MM_SMG, 0, 0, -1);
				end
			end
			else begin
				Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
				add_mult_objs_to_inven(Critter, Item, has_trait(0, dude_obj, 40) + 1);
				Item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);
			end
		end
		else begin
			Item := create_object_sid(PID_SPEAR, 0, 0, -1);
		end
		add_obj_to_inven(Critter, Item);
		item_caps_adjust(Critter, random(10, 30) * (has_trait(0, dude_obj, 20) * global_var(FORTUNE_FINDER_HOW_MUCH)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 2);
	call stranger;
end

procedure South5
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 144));
	Tot_Critter_A := random(4, 8);
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 7;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 5;
	Critter_script := SCRIPT_MOLERAT2;
	group_angle := random(0, 5);
	while(Tot_Critter_A) do begin
		if (random(0, 4) == 4) then begin
			Critter_type := PID_GREATER_MOLE_RAT;// GREATER MOLE RAT
		end
		else begin
			Critter_type := PID_LESSER_MOLE_RAT;// LESSER MOLE RAT
		end
		Critter_direction := group_angle + (random(0, 2 * 2) - 2);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, random(0, 5));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 2);
	call stranger;
end

procedure South6
begin
	display_msg(message_str(SCRIPT_RNDDESRT, 145));
	Tot_Critter_A := random(2, 4);// was 3, 6
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
	group_angle := random(0, 5);
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2 * 2) - 2);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var(MYST_STRANGER_ITEM, 2);
	call stranger;
end

procedure Vault_MOUNTAIN_table
begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 3) or (Encounter_Num == 5) or (Encounter_Num == 6) or (Encounter_Num == 7)) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var(RANDOM_ENC_SOMETHING) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(RANDOM_ENC_SOMETHING) + " ");
		Encounter_Num := global_var(RANDOM_ENC_SOMETHING);
		set_global_var(RANDOM_ENC_SOMETHING, 0);
	end
	if (Encounter_Num) then begin
		if global_var(DEBUG_MODE_MESSAGES_ON) then begin
			debug_msg(" ");    display_msg("Mountain Vault_MOUNTAIN_ loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Vault_MOUNTAIN_1;
		end
		else begin
			if (Encounter_Num == 2) then begin
				call Vault_MOUNTAIN_2;
			end
			else begin
				if (Encounter_Num == 3) then begin
					call Vault_MOUNTAIN_3;
				end
				else begin
					if (Encounter_Num == 4) then begin
						call Vault_MOUNTAIN_4;
					end
					else begin
						if (Encounter_Num == 5) then begin
							call Vault_MOUNTAIN_5;
						end
						else begin
							if (Encounter_Num == 6) then begin
								call Vault_MOUNTAIN_6;
							end
							else begin
								call hunters;
							end
						end
					end
				end
			end
		end
	end
end

procedure Vault_MOUNTAIN_1
begin
	display_msg(message_str(SCRIPT_RNDMTN, 128));
	Outer_ring := (get_critter_stat(dude_obj, 1) / 4) + 5;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 4) + 4;
	Critter_direction := random(0, 4);
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCOR2;
	call Place_critter;
	anim(Critter, 1000, random(0, 5));
	call stranger;
end

procedure Vault_MOUNTAIN_2
begin
	display_msg(message_str(SCRIPT_RNDMTN, 135));
	Critter_type := PID_DEAD_TRAVELER;
	Critter_script := -1;
	Outer_ring := 6;
	Inner_ring := 4;
	Critter_direction := 1;
	call Place_critter;
	anim(Critter, 1000, random(0, 5));
	kill_critter(Critter, 48);
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
		critter_attempt_placement(Item, tile_num(Critter), 0);
	end
	if (random(0, 1)) then begin
		Item := create_object_sid(PID_STIMPAK, 0, 0, -1);
		critter_attempt_placement(Item, tile_num(Critter), 0);
	end
end

procedure Vault_MOUNTAIN_3
begin
	display_msg(message_str(SCRIPT_RNDMTN, 129));
	Outer_ring := (get_critter_stat(dude_obj, 1) / 3) + 4;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 3) + 2;
	Tot_Critter_A := random(2, 3);
	Critter_script := SCRIPT_WANRATS;
	while(Tot_Critter_A) do begin
		if (random(0, 3) == 3) then begin
			Critter_type := PID_GREATER_MOLE_RAT;
		end
		else begin
			Critter_type := PID_LESSER_MOLE_RAT;
		end
		Critter_direction := random(0, 4);
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	call stranger;
end

procedure Vault_MOUNTAIN_4
begin
	display_msg(message_str(SCRIPT_RNDMTN, 130));
	Outer_ring := (get_critter_stat(dude_obj, 1) / 2) + 3;
	Inner_ring := (get_critter_stat(dude_obj, 1) / 2) + 1;
	Tot_Critter_A := random(4, 8);
	Critter_type := PID_RAT_CAVE;
	Critter_script := SCRIPT_WANRATS;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 5);
		call Place_critter;
		if (random(0, 1)) then begin
			anim(Critter, 1000, random(0, 5));
		end
		else begin
			anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	call stranger;
end

procedure Vault_MOUNTAIN_5
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;
	LVar0 := do_check(dude_obj, 5, -1);
	if (not(is_success(LVar0))) then begin
		LVar2 := random(1, 100);
		if ((LVar2 >= 95) or is_critical(LVar0)) then begin
			display_msg(message_str(SCRIPT_RNDMTN, 132));
			LVar1 := random(5, 15);
			LVar2 := get_critter_stat(dude_obj, 35);
			if (LVar1 >= LVar2) then begin
				LVar1 := (LVar2 - 1);
			end
			reg_anim_func(2, dude_obj);
			reg_anim_func(1, 1);
			reg_anim_animate(dude_obj, 48, -1);
			reg_anim_animate(dude_obj, 37, -1);
			reg_anim_func(3, 0);
			critter_heal(dude_obj, -LVar1);
			if (random(0, 1) == 0) then begin
				critter_injure(dude_obj, 4);//    DAM_CRIP_LEG_LEFT      4
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 139));
			end
			else begin
				critter_injure(dude_obj, 8);//    DAM_CRIP_LEG_RIGHT     8
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 140));
			end
		end
		else begin
			display_msg(message_str(SCRIPT_RNDMTN, 133));
			LVar1 := 5;
			LVar2 := get_critter_stat(dude_obj, 35);
			if (LVar1 >= LVar2) then begin
				LVar1 := (LVar2 - 1);
			end
			reg_anim_func(2, dude_obj);
			reg_anim_func(1, 1);
			reg_anim_animate(dude_obj, 48, -1);
			reg_anim_animate(dude_obj, 37, -1);
			reg_anim_func(3, 0);
			critter_heal(dude_obj, -LVar1);
			display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 141));
		end
	end
	else begin
		display_msg(message_str(SCRIPT_RNDMTN, 131));
		display_msg(message_str(SCRIPT_RNDMTN, 101));
	end
end

procedure Vault_MOUNTAIN_6
begin
	display_msg(message_str(SCRIPT_RNDMTN, 134));
	Outer_ring := 6;
	Inner_ring := 4;
	Tot_Critter_A := random(4, 6);
	Critter_type := PID_RAT_CAVE;
	Critter_script := SCRIPT_WANRAT2;
	while(Tot_Critter_A) do begin
		Critter_direction := 1;
		call Place_critter;
		anim(Critter, 1000, 4);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	victim := Critter;
	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		Critter_type := PID_RADSCORPION;
		Critter_script := SCRIPT_RADSCORP;
		Outer_ring := 10;
		Inner_ring := 9;
		Critter_direction := 1;
		call Place_critter;
		anim(Critter, 1000, rotation_to_tile(tile_num(Critter), tile_num(dude_obj)));
	end
	call stranger;
end
