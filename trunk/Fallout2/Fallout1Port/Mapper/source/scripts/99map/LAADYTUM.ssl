#include "..\headers\define.h"

procedure start;
procedure map_enter_p_proc;//    script_action == 15
procedure map_update_p_proc;//    script_action == 23
procedure map_exit_p_proc;//    script_action == 16
procedure Lighting;
procedure Darkness;
procedure AddInBlades;
procedure add_party;
procedure update_party;
procedure remove_party;

variable party_elevation;
variable dude_start_hex;

export variable Ian_ptr;
export variable Dog_ptr;
export variable Tycho_ptr;
export variable Katja_ptr;
export variable Tandi_ptr;
export variable warned;
export variable AdyStor1_ptr;
export variable AdyStor2_ptr;
export variable Tine_barter;
export variable JonPtr;
export variable InBladePtr1;
export variable InBladePtr2;
export variable InBladePtr3;
export variable InBladePtr4;
export variable InBladePtr5;
export variable InBladePtr6;
export variable InBladePtr7;
export variable InBladePtr8;
export variable RazorPtr;
export variable RegGuard1;
export variable RegGuard2;

procedure Invasion;

variable invaderPtr;


procedure start
begin
	if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
		call map_enter_p_proc;
	end
	else begin
		if (script_action == 23) then begin//map_update_p_proc -- called every dozen seconds or so, & additionally on certain events (exit dialog, end combat, load map, etc)
			call map_update_p_proc;
		end
		else begin
			if (script_action == 16) then begin//map_exit_p_proc (also appears as "remove_party"!) - called on red exit grids
				call map_exit_p_proc;
			end
		end
	end
end

procedure map_enter_p_proc
begin
	set_global_var(MARK_LA_1, 1);
	if (elevation(dude_obj) == 1) then begin
		call Darkness;
	end
	else begin
		call Lighting;
	end
	//call Invasion;
	if (map_first_run) then begin
		if (global_var(FOLLOWERS_INVADED) != 1) then begin
			display_msg(message_str(SCRIPT_SHADYWST, 115));
		end
		else begin
			variable LVar0;
			LVar0 := random(0,4);
			if not(LVar0) then begin
				display_msg(message_str(SCRIPT_SHADYWST, 150));
			end
			else begin
				if LVar0 == 1 then begin
					display_msg(message_str(SCRIPT_SHADYWST, 151));
				end
				else begin
					if LVar0 == 2 then begin
						display_msg(message_str(SCRIPT_SHADYWST, 152));
					end
					else begin
						if LVar0 == 3 then begin
							display_msg(message_str(SCRIPT_SHADYWST, 153));
						end
						else begin
							display_msg(message_str(SCRIPT_SHADYWST, 154));
						end
					end
				end
			end
		end
	end
	if ((global_var(FOLLOWERS_INVADED) == 1) and (metarule(22, 0) == 0) and (map_var(3) == 0)) then begin
		set_map_var(3, 1);
		kill_critter_type(16777216 + 3, 1);
		kill_critter_type(16777216 + 27, 1);
		kill_critter_type(16777216 + 36, 1);
		kill_critter_type(16777216 + 112, 1);
		kill_critter_type(16777216 + 215, 1);
		kill_critter_type(16777216 + 247, 1);
		kill_critter_type(16777216 + 248, 1);
		kill_critter_type(16777216 + 252, 1);
		kill_critter_type(16777216 + 253, 1);
		kill_critter_type(16777216 + 254, 1);
		kill_critter_type(16777216 + 257, 1);
		kill_critter_type(16777216 + 258, 1);
		kill_critter_type(16777216 + 261, 1);
		kill_critter_type(16777216 + 263, 1);
		kill_critter_type(16777216 + 19, 1);
		kill_critter_type(16777216 + 268, 1);
		kill_critter_type(16777216 + 13, 1);
		kill_critter_type(16777216 + 17, 1);
		kill_critter_type(16777216 + 18, 1);
		kill_critter_type(16777216 + 20, 1);
		kill_critter_type(16777216 + 30, 1);
		kill_critter_type(16777216 + 31, 1);
		kill_critter_type(16777216 + 32, 1);
		kill_critter_type(16777216 + 40, 1);
		kill_critter_type(16777216 + 42, 1);
		kill_critter_type(16777216 + 96, 1);
		kill_critter_type(16777216 + 98, 1);
		kill_critter_type(16777216 + 171, 1);
		kill_critter_type(16777216 + 172, 1);
		kill_critter_type(16777216 + 174, 1);
		kill_critter_type(16777216 + 199, 1);
		kill_critter_type(16777216 + 208, 1);
		kill_critter_type(16777216 + 220, 1);
		invaderPtr := create_object_sid(16777216 + 190, 0, 0, SCRIPT_SCSUPMUT);
		critter_add_trait(invaderPtr, 1, 5, 48);
		critter_attempt_placement(invaderPtr, 13493, 0);
		invaderPtr := create_object_sid(16777216 + 190, 0, 0, SCRIPT_SCSUPMUT);
		critter_add_trait(invaderPtr, 1, 5, 48);
		critter_attempt_placement(invaderPtr, 19101, 0);
		invaderPtr := create_object_sid(16777216 + 190, 0, 0, SCRIPT_SCSUPMUT);
		critter_add_trait(invaderPtr, 1, 5, 48);
		critter_attempt_placement(invaderPtr, 25916, 0);
		invaderPtr := create_object_sid(16777216 + 190, 0, 0, SCRIPT_SCSUPMUT);
		critter_add_trait(invaderPtr, 1, 5, 48);
		critter_attempt_placement(invaderPtr, 22887, 0);
	end
	override_map_start(100, 53, 0, 2);
	call add_party;
end

procedure map_update_p_proc
begin
	if (elevation(dude_obj) == 1) then begin
		call Darkness;
	end
	else begin
		call Lighting;
	end
	if ((global_var(BLADES_STATUS) == 9103) and (map_var(2) == 0) and (global_var(WATER_CHIP_9) == 1)) then begin
		call AddInBlades;
		gfade_in(1);
	end
	else begin
		if ((global_var(BLADES_STATUS) == 9104) and (map_var(2) == 0)) then begin
			set_map_var(2, 1);
			kill_critter(JonPtr, 0);
			kill_critter_type(16777216 + 3, 0);
			kill_critter_type(16777216 + 27, 0);
			kill_critter_type(16777216 + 36, 0);
			kill_critter_type(16777216 + 112, 0);
			kill_critter_type(16777216 + 215, 0);
			kill_critter_type(16777216 + 244, 0);
			kill_critter_type(16777216 + 245, 0);
			kill_critter_type(16777216 + 246, 0);
			kill_critter_type(16777216 + 247, 0);
			kill_critter_type(16777216 + 248, 0);
			kill_critter_type(16777216 + 249, 0);
			kill_critter_type(16777216 + 250, 0);
			kill_critter_type(16777216 + 251, 0);
			kill_critter_type(16777216 + 252, 0);
			kill_critter_type(16777216 + 253, 0);
			kill_critter_type(16777216 + 254, 0);
			kill_critter_type(16777216 + 255, 0);
			kill_critter_type(16777216 + 256, 0);
			kill_critter_type(16777216 + 257, 0);
			kill_critter_type(16777216 + 258, 0);
			kill_critter_type(16777216 + 259, 0);
			kill_critter_type(16777216 + 260, 0);
			kill_critter_type(16777216 + 261, 0);
			kill_critter_type(16777216 + 262, 0);
			kill_critter_type(16777216 + 263, 0);
			critter_attempt_placement(RazorPtr, 12700, 0);
			set_global_var(BLADES_STATUS, 2);
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 2);
			display_msg(message_str(SCRIPT_GENCHAT, 103) + 2000 + message_str(SCRIPT_GENCHAT, 104));
			give_exp_points(2000);
		end
		else begin
			if ((map_var(1) == 0) and (global_var(BLADES_STATUS) == 9103)) then begin
				if global_var(FADE_TIMES_INCREASED) then begin
					gfade_out(1);
					gfade_out(1);
				end
				gfade_out(1);
				kill_critter_type(16777216 + 268, 0);
				critter_attempt_placement(RazorPtr, 12700, 0);
				set_global_var(BLADES_STATUS, 2);
				set_global_var(ADYTUM_RAZOR_SOMETHING_1, 1);
				set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 2);
				display_msg(message_str(SCRIPT_GENCHAT, 103) + 2000 + message_str(SCRIPT_GENCHAT, 104));
				give_exp_points(2000);
				gfade_in(1);
			end
			else begin
				if ((map_var(1) == 0) and (global_var(BLADES_STATUS) != 2) and (global_var(ADYTUM_CALEB_SOMETHING_0) == 1)) then begin
					set_global_var(BLADES_STATUS, 2);
					set_global_var(ADYTUM_RAZOR_SOMETHING_0, 1);
				end
			end
		end
	end
	call update_party;
end

procedure map_exit_p_proc
begin
	call remove_party;
end

procedure Lighting
begin
	variable LVar0 := 0;
	LVar0 := game_time_hour;
	if ((LVar0 >= 600) and (LVar0 < 700)) then begin
		set_light_level(LVar0 - 600 + 40);
	end
	else begin
		if ((LVar0 >= 700) and (LVar0 < 1800)) then begin
			set_light_level(100);
		end
		else begin
			if ((LVar0 >= 1800) and (LVar0 < 1900)) then begin
				set_light_level(100 - (LVar0 - 1800));
			end
			else begin
				set_light_level(40);
			end
		end
	end
end

procedure Darkness
begin
	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
		set_light_level(global_var(CAVES_LIGHT_LEVEL));
	end
	else begin
		set_light_level(40);
	end
end

procedure AddInBlades
begin
	set_map_var(2, 1);
	critter_attempt_placement(InBladePtr1, 9702, 0);
	critter_attempt_placement(InBladePtr2, 9700, 0);
	critter_attempt_placement(InBladePtr3, 9698, 0);
	critter_attempt_placement(InBladePtr4, 9895, 0);
	critter_attempt_placement(InBladePtr5, 9696, 0);
	critter_attempt_placement(InBladePtr6, 26717, 0);
	critter_attempt_placement(InBladePtr7, 26711, 0);
	critter_attempt_placement(InBladePtr8, 24492, 0);
end

procedure add_party begin
	set_add_party
end

procedure update_party begin
	set_update_party
end

procedure remove_party begin
	set_remove_party
end

procedure Invasion begin
	check_invasion
end

