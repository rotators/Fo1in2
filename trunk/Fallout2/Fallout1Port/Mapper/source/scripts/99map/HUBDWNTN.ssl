#include "..\headers\define.h"

procedure start;
export variable Beth_Box_Ptr;
export variable Beth_Ptr;
export variable BitsBob_Dialog_Ptr;
export variable BitsBob_Ptr;
export variable BitsBob_Stand_Ptr;
export variable Decker_Ptr;
export variable Dog_ptr;
export variable Fry_Stub_Ptr;
export variable Guido_Ptr;
export variable Ian_ptr;
export variable Justin_Ptr;
export variable Kane_Ptr;
export variable Katja_ptr;
export variable Leon_Ptr;
export variable Lorenzo_Safe_Ptr;
export variable Mitch_Box_Ptr;
export variable Richie_Ptr;
export variable Sid_Ptr;
export variable Staple_Box_Ptr;
export variable Tandi_ptr;
export variable Tycho_ptr;
export variable Vault_Ptr;
procedure add_party;
procedure Darkness;
procedure Invasion;
procedure Lighting;
procedure remove_party;
procedure update_party;
procedure map_exit_p_proc;
variable dude_start_hex;
variable party_elevation;

procedure start
begin
	if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
		set_global_var(MARK_HUB_2, 1);
		if (elevation(dude_obj) == 1) then begin
			call Darkness;
		end
		else begin
			call Lighting;
		end
		if (global_var(LOAD_MAP_INDEX) == 3) then begin
			override_map_start(99, 59, 0, 2);
		end
		if (global_var(THE_HUB_WAS_INVADED) == 1) and (map_var(57) == 0) then begin
			if (metarule(22, 0) == 0) then begin
				variable invaderPtr;
				set_map_var(57, 1);
				kill_critter_type(16777216 + 240, 1);
				kill_critter_type(16777216 + 243, 1);
				kill_critter_type(PID_DECKER, 1);
				kill_critter_type(PID_FRY, 0);
				kill_critter_type(16777216 + 231, 1);
				kill_critter_type(PID_KERI, 1);
				kill_critter_type(PID_DEMETRE, 1);
				kill_critter_type(16777216 + 225, 1);
				kill_critter_type(PID_PEASANT_FEMALE_CUTE, 1);
				kill_critter_type(PID_PEASANT_1, 1);
				kill_critter_type(PID_LEATHER_ARMOR_MALE, 1);
				kill_critter_type(PID_CITIZEN_2, 1);
				kill_critter_type(PID_TRAVELER_2, 1);
				kill_critter_type(PID_MERCHANT_3, 1);
				kill_critter_type(PID_TRAVELER_1, 1);
				kill_critter_type(PID_KANE, 1);
				kill_critter_type(PID_MERCHANT_4, 1);
				kill_critter_type(PID_LORENZO, 1);
				kill_critter_type(16777216 + 258, 1);
				kill_critter_type(PID_MERCHANT_7, 1);
				kill_critter_type(PID_MERCHANT_2, 1);
				kill_critter_type(PID_BUTCH, 1);
				kill_critter_type(PID_RUTGER, 1);
				kill_critter_type(16777216 + 194, 1);
				kill_critter_type(16777216 + 217, 1);
				kill_critter_type(PID_PEASANT_5, 1);
				kill_critter_type(PID_GREENE, 1);
				kill_critter_type(16777216 + 237, 1);
				kill_critter_type(PID_GABRIEL, 1);
				kill_critter_type(16777216 + 66, 1);
				kill_critter_type(PID_LOSER, 1);
				invaderPtr := create_object_sid(PID_MAD_SUPER_MUTANT, 0, 0, SCRIPT_INVADER);
				critter_add_trait(invaderPtr, 1, 5, 48);
				critter_attempt_placement(invaderPtr, 16294, 0);
				invaderPtr := create_object_sid(PID_MAD_SUPER_MUTANT, 0, 0, SCRIPT_INVADER);
				critter_add_trait(invaderPtr, 1, 5, 48);
				critter_attempt_placement(invaderPtr, 20723, 0);
				invaderPtr := create_object_sid(PID_MAD_SUPER_MUTANT, 0, 0, SCRIPT_INVADER);
				critter_add_trait(invaderPtr, 1, 5, 48);
				critter_attempt_placement(invaderPtr, 27080, 0);
				invaderPtr := create_object_sid(PID_MAD_SUPER_MUTANT, 0, 0, SCRIPT_INVADER);
				critter_add_trait(invaderPtr, 1, 5, 48);
				critter_attempt_placement(invaderPtr, 19658, 0);
			end
		end
		call add_party;
	end
	else begin
		if (script_action == 23) then begin//map_update_p_proc -- called every dozen seconds or so, & additionally on certain events (exit dialog, end combat, load map, etc)
			if (elevation(dude_obj) == 1) then begin
				call Darkness;
			end
			else begin
				call Lighting;
			end
			if ((combat_is_initialized == 0) and (global_var(UNDERGROUND_STATUS) == 1) and (map_var(52) == 1) and (metarule(22, 0) == 0)) then begin
				set_map_var(52, 0);
				set_map_var(53, 1);
				if global_var(FADE_TIMES_INCREASED) then begin
					gfade_out(1);
					gfade_out(1);
				end
				gfade_out(1);
				if (metarule(22, 0) == 0) then begin	set_obj_visibility(Fry_Stub_Ptr, 1);	end
				if (global_var(GREENE_DEAD) != 1) then begin
					move_to(Justin_Ptr, 24064, 0);
					critter_add_trait(Justin_Ptr, 1, 6, 67);
				end
				move_to(dude_obj, 24267, 0);
				if (global_var(GREENE_DEAD) != 1) then begin
					anim(Justin_Ptr, 1000, rotation_to_tile(tile_num(Justin_Ptr), tile_num(dude_obj)));
					anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(Justin_Ptr)));
				end
				gfade_in(1);
			end
			call update_party;
		end
		else begin
			if (script_action == 16) then begin//map_exit_p_proc (also appears as "remove_party"!) - called on red exit grids
				call map_exit_p_proc;
			end
		end
	end
end

procedure map_exit_p_proc
begin
	if map_var(58) == 1 then begin
		set_map_var(58, 0);
		//game_time_advance((0 - (10 * 60 * 60 * 24 * 6)));
	end
	call remove_party;
end

procedure Lighting
begin
	variable LVar0 := 0;
	LVar0 := game_time_hour;
	if ((LVar0 >= 600) and (LVar0 < 700)) then begin
		set_light_level(LVar0 - 600 + 40);
	end
	else begin
		if ((LVar0 >= 700) and (LVar0 < 1800)) then begin
			set_light_level(100);
		end
		else begin
			if ((LVar0 >= 1800) and (LVar0 < 1900)) then begin
				set_light_level(100 - (LVar0 - 1800));
			end
			else begin
				set_light_level(40);
			end
		end
	end
end

procedure Darkness
begin
	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
		set_light_level(global_var(CAVES_LIGHT_LEVEL));
	end
	else begin
		set_light_level(40);
	end
end

procedure add_party
begin
	set_add_party
end

procedure update_party
begin
	set_update_party
end

procedure remove_party
begin
	set_remove_party
end

procedure Invasion begin
	check_invasion
end
