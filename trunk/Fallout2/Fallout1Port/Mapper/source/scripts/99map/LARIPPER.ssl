#include "..\headers\define.h"

procedure start;
procedure map_enter_p_proc;//    script_action == 15
procedure map_update_p_proc;//    script_action == 23
procedure map_exit_p_proc;//    script_action == 16
procedure Lighting;
procedure Darkness;
procedure PlaceCritter;
procedure add_party;
procedure update_party;
procedure remove_party;

variable party_elevation;
variable dude_start_hex;

export variable Ian_ptr;
export variable Dog_ptr;
export variable Tycho_ptr;
export variable Katja_ptr;
export variable Tandi_ptr;

procedure Invasion;


procedure start
begin
	if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
		call map_enter_p_proc;
	end
	else begin
		if (script_action == 23) then begin//map_update_p_proc -- called every dozen seconds or so, & additionally on certain events (exit dialog, end combat, load map, etc)
			call map_update_p_proc;
		end
		else begin
			if (script_action == 16) then begin//map_exit_p_proc (also appears as "remove_party"!) - called on red exit grids
				call map_exit_p_proc;
			end
		end
	end
end

procedure map_enter_p_proc
begin
	variable LVar0 := 0;
	set_global_var(MARK_LA_5, 1);
	if (elevation(dude_obj) == 1) then begin
		call Darkness;
	end
	else begin
		call Lighting;
	end
	if (metarule(22, 0) == 0) then begin
		if ((map_var(0) == 0) and (((game_time / 10) - global_var(WATER_CHIP_13)) > (60 * 60))) then begin
			set_global_var(WATER_CHIP_13, game_time / 10);
			if (map_var(1) == 0) then begin
				LVar0 := random(2, 3);
				set_map_var(1, LVar0);
				set_map_var(3, LVar0);
				call PlaceCritter;
			end
			else begin
				if (map_var(1) == 1) then begin
					LVar0 := random(1, 2);
					set_map_var(1, LVar0 + 1);
					set_map_var(3, LVar0);
					call PlaceCritter;
				end
				else begin
					if (map_var(1) == 2) then begin
						if (random(0, 1)) then begin
							set_map_var(1, 3);
							set_map_var(3, 1);
							call PlaceCritter;
						end
					end
				end
			end
		end
	end
	override_map_start(96, 121, 0, 0);
	call add_party;
end

procedure map_update_p_proc
begin
	if (elevation(dude_obj) == 1) then begin
		call Darkness;
	end
	else begin
		call Lighting;
	end
	call update_party;
end

procedure map_exit_p_proc
begin
	call remove_party;
	if ((map_var(0) == 1) and (map_var(1) == 0) and (map_var(2) == 0)) then begin
		if (global_var(WATER_CHIP_8) != 2) then begin
			set_global_var(WATER_CHIP_8, 9250);
		end
	end
end

procedure Lighting
begin
	variable LVar0 := 0;
	LVar0 := game_time_hour;
	if ((LVar0 >= 600) and (LVar0 < 700)) then begin
		set_light_level(LVar0 - 600 + 40);
	end
	else begin
		if ((LVar0 >= 700) and (LVar0 < 1800)) then begin
			set_light_level(100);
		end
		else begin
			if ((LVar0 >= 1800) and (LVar0 < 1900)) then begin
				set_light_level(100 - (LVar0 - 1800));
			end
			else begin
				set_light_level(40);
			end
		end
	end
end

procedure Darkness
begin
	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
		set_light_level(global_var(CAVES_LIGHT_LEVEL));
	end
	else begin
		set_light_level(40);
	end
end

procedure PlaceCritter
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;
	variable LVar3 := 0;
	LVar3 := map_var(3);
	while(LVar3 > 0) do begin
		LVar2 := random(1, 7);
		if (LVar2 == 1) then begin
			LVar1 := 16890;
		end
		else begin
			if (LVar2 == 2) then begin
				LVar1 := 17269;
			end
			else begin
				if (LVar2 == 3) then begin
					LVar1 := 23492;
				end
				else begin
					if (LVar2 == 4) then begin
						LVar1 := 15885;
					end
					else begin
						if (LVar2 == 5) then begin
							LVar1 := 12287;
						end
						else begin
							if (LVar2 == 6) then begin
								LVar1 := 17511;
							end
							else begin
								if (LVar2 == 7) then begin
									LVar1 := 15475;
								end
							end
						end
					end
				end
			end
		end
		LVar0 := create_object_sid(PID_DEATHCLAW, 0, 0, SCRIPT_ROAMCLAW);
		critter_attempt_placement(LVar0, LVar1, 0);
		LVar3 := LVar3 - 1;
	end
end

procedure add_party begin
	set_add_party
end

procedure update_party begin
	set_update_party
end

procedure remove_party begin
	set_remove_party
end

procedure Invasion begin
	check_invasion
end

