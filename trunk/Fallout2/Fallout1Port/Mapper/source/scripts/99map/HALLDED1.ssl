export variable Set_Pointer;
export variable Garret_ptr;
export variable Fridge_ptr;
export variable Shotgun_ptr;
export variable Shells1_ptr;
export variable Shells2_ptr;
export variable Flare1_ptr;
export variable Flare2_ptr;
export variable Flare3_ptr;
export variable Flare4_ptr;
export variable Cola1_ptr;
export variable Cola2_ptr;
export variable Cola3_ptr;
export variable Cola4_ptr;
export variable Manhole_Pointer_Top;
export variable Manhole_Pointer_Middle;
export variable Manhole_Pointer_Bottom;
export variable Use_Manhole_Top;
export variable Use_Manhole_Bottom;
export variable Use_Manhole_Middle;
export variable set_gone;
export variable set_dead;

variable fugee_ptr;
variable fugee_hex;

#include "..\headers\define.h"
#include "..\headers\updatmap.h"

procedure start;


variable party_elevation;
variable dude_start_hex;

export variable GhDorGrd_Ptr;

procedure Invasion;

procedure start begin
end

procedure map_enter_p_proc begin
	mark_map_entrance_state(MAP_HALLDED,1); // TODO: Figure out why this workaround is necessary in Necropolis

	// sewers; elev on this map is reversed from standard setup for some reason
	if (elevation(dude_obj) == 0) then
		Darkness;
	else
		Lighting;

	if (global_var(LOAD_MAP_INDEX) == 2) then begin
		override_map_start(153, 100, 1, 0);
	end
	else if (global_var(LOAD_MAP_INDEX) == 12) then begin
		override_map_start(103, 58, 0, 2);
	end
	else if (global_var(LOAD_MAP_INDEX) == 13) then begin
		override_map_start(141, 134, 0, 5);
	end
	else begin
		override_map_start(153, 100, 1, 0);
	end

	//if get_car_from_worldmap then begin
	//	override_map_start_hex(12901,0,3);
	//end

	set_global_var(MARK_NECROP_2, 1);

	call Invasion;

	if ((global_var(NECROP_WATER_CHIP_TAKEN) == 1) and not(is_loading_game)) then begin
		if (((game_time / (10 * 60 * 60 * 24)) - global_var(TIME_CHIP_GONE)) > 7) then begin
			if (global_var(NECROP_WATER_PUMP_FIXED) != 2) then begin
				kill_critter_type(PID_SETH, 2);
				kill_critter_type(PID_GARRET, 2);
				kill_critter_type(PID_MINDLESS_GHOUL, 2);
				kill_critter_type(PID_GHOUL, 2);
				kill_critter_type(PID_ZOMBIE_GUARD, 2);
				kill_critter_type(PID_GLOWING_ONE, 2);
			end
		end
	end
	if (global_var(GARRET_STATUS) == 3) then begin
		kill_critter_type(PID_GARRET, 0);
	end


end

procedure map_update_p_proc begin
	if (elevation(dude_obj) == 0) then
		Darkness;
	else
		Lighting;

	if (Use_Manhole_Top) then begin
		animate_stand_reverse_obj(Manhole_Pointer_Top);
	end
	if (Use_Manhole_Middle) then begin
		animate_stand_reverse_obj(Manhole_Pointer_Middle);
	end
	if (Use_Manhole_Bottom) then begin
		animate_stand_reverse_obj(Manhole_Pointer_Bottom);
	end
end

procedure Invasion begin
	if ((global_var(GVAR_NECROPOLIS_WAS_INVADED) == 1) and not(is_loading_game) and (map_var(10) == 0)) then begin
		set_map_var(10, 1);
		kill_critter_type(PID_SETH, 1);
		kill_critter_type(PID_GARRET, 1);
		kill_critter_type(PID_MINDLESS_GHOUL, 1);
		kill_critter_type(PID_GHOUL, 1);
		kill_critter_type(PID_ZOMBIE_GUARD, 1);
		kill_critter_type(PID_GLOWING_ONE, 1);
		fugee_ptr := create_object_sid(PID_GUARD_5, 0, 0, SCRIPT_GHREFUGE);
		fugee_hex := 28689;
		critter_attempt_placement(fugee_ptr, fugee_hex, 1);
		critter_add_trait(fugee_ptr, 1, 6, 0);
		fugee_ptr := create_object_sid(PID_MAD_SUPER_MUTANT, 0, 0, SCRIPT_INVADER);
		critter_add_trait(fugee_ptr, 1, 5, 48);
		fugee_hex := 16886;
		critter_attempt_placement(fugee_ptr, fugee_hex, 1);
		fugee_ptr := create_object_sid(PID_MAD_SUPER_MUTANT, 0, 0, SCRIPT_INVADER);
		critter_add_trait(fugee_ptr, 1, 5, 48);
		fugee_hex := 16084;
		critter_attempt_placement(fugee_ptr, fugee_hex, 1);
		fugee_ptr := create_object_sid(PID_MAD_SUPER_MUTANT, 0, 0, SCRIPT_INVADER);
		critter_add_trait(fugee_ptr, 1, 5, 48);
		fugee_hex := 20111;
		critter_attempt_placement(fugee_ptr, fugee_hex, 1);
	end
	else begin
		if (global_var(WATER_CHIP_6) == 1) then begin
			kill_critter_type(PID_SETH, 1);
			kill_critter_type(PID_GARRET, 1);
		end
	end
end

