#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\command.h"
#include "..\headers\updatmap.h"

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;

procedure map_lightning;
procedure set_critter_state;

variable party_elevation;
variable dude_start_hex;

variable fugee_ptr;
variable fugee_hex;

export variable SuperLeave;
export variable SuperLeft;
export variable ghoul_door_open;
export variable Harry_Pointer;
export variable Manhole_Pointer_Top;
export variable Manhole_Pointer_Middle;
export variable Manhole_Pointer_Bottom;
export variable Use_Manhole_Top;
export variable Use_Manhole_Bottom;
export variable Use_Manhole_Middle;

procedure start begin
end

procedure map_enter_p_proc begin
	set_global_var(MARK_NECROP_3, 1);

   if (map_first_run) then begin
	   // Add motorcycle
	   if not(fo1in2_motorcycle_disabled) then begin
			Create_Moto1(CAR_UNCLAIMED_HEX, CAR_UNCLAIMED_ELEV)
			car_give_gas(-80000); // start with 0 fuel!
		end
	end

	// If player has the motorcycle, delete the initial bike on the unused hex
	else begin
		if (dude_has_car and tile_contains_obj_pid(CAR_UNCLAIMED_HEX,CAR_UNCLAIMED_ELEV,PID_DRIVABLE_MOTO1)) then begin
			Dest_Car(CAR_UNCLAIMED_HEX, CAR_UNCLAIMED_ELEV)
		end
	end

	if (global_var(HUB_FILLER_30)) then begin
		override_map_start(57, 62, 1, 0);
	end
	else begin
		if (global_var(LOAD_MAP_INDEX) == 1) then
			override_map_start(134, 54, 1, 5);
		else if (global_var(LOAD_MAP_INDEX) == 12) then
			override_map_start(53, 98, 0, 5);
		else
			override_map_start(134, 54, 1, 5);
	end

	if get_car_from_worldmap then begin
		override_map_start_hex(9334,1,2);
	end

	if (map_var(7) == 2) then begin
		kill_critter_type(PID_SUPER_MUTANT, 0);
		kill_critter_type(PID_HARRY, 0);
	end
	if (global_var(NECROP_MUTANTS_KILLED) == 2) then begin
		if global_var(NECRO_30_DAYS_GVAR225) or global_var(FIXT_BUGFIXES_ONLY) then begin
			if (((GAME_TIME_IN_DAYS) - global_var(NECRO_MUTANTS_TIME_LEFT)) > 1) then begin
				kill_critter_type(PID_PEASANT_ROBE, 0);
			end
		end
	end

	call set_critter_state;
	call map_lightning;
end

procedure map_update_p_proc begin
	call map_lightning;

	if (Use_Manhole_Top) then begin
		animate_stand_reverse_obj(Manhole_Pointer_Top);
	end
	if (Use_Manhole_Middle) then begin
		animate_stand_reverse_obj(Manhole_Pointer_Middle);
	end
	if (Use_Manhole_Bottom) then begin
		animate_stand_reverse_obj(Manhole_Pointer_Bottom);
	end
end

procedure map_lightning begin
	if (elevation(dude_obj) == 0) then
		Darkness;
	else
		Lighting;
end

procedure set_critter_state begin
	if (necropolis_invaded and not(is_loading_game) and (map_var(10) == 0)) then begin
		set_map_var(10, 1);
		kill_critter_type(PID_GARRET, 0);
		kill_critter_type(PID_MINDLESS_GHOUL, 1);
		kill_critter_type(PID_GHOUL, 1);
		kill_critter_type(PID_ZOMBIE_GUARD, 1);
		kill_critter_type(PID_GLOWING_ONE, 1);
		fugee_ptr := create_object_sid(PID_MAD_SUPER_MUTANT, 0, 0, SCRIPT_INVADER);
		set_ai( fugee_ptr, AI_SUPER_MUTANT_AGGRESSIVE );
		fugee_hex := 16501;
		critter_attempt_placement(fugee_ptr, fugee_hex, 1);
		fugee_ptr := create_object_sid(PID_MAD_SUPER_MUTANT, 0, 0, SCRIPT_INVADER);
		set_ai( fugee_ptr, AI_SUPER_MUTANT_AGGRESSIVE );
		fugee_hex := 15696;
		critter_attempt_placement(fugee_ptr, fugee_hex, 1);
		fugee_ptr := create_object_sid(PID_MAD_SUPER_MUTANT, 0, 0, SCRIPT_INVADER);
		set_ai( fugee_ptr, AI_SUPER_MUTANT_AGGRESSIVE );
		fugee_hex := 16696;
		critter_attempt_placement(fugee_ptr, fugee_hex, 1);
	end

	// Is the prisoner still around?
	if (global_var(GARRET_STATUS) == 3) then begin
		kill_critter_type(PID_GARRET, 0);
	end

	// Also kill everyone in the vault
	if (global_var(NECROP_WATER_CHIP_TAKEN) == 1) then begin
		if (((GAME_TIME_IN_DAYS) - global_var(TIME_CHIP_GONE)) > 7) then begin
			if (global_var(NECROP_WATER_PUMP_FIXED) != 2) then begin
				kill_critter_type(PID_GARRET, 0);
				kill_critter_type(PID_MINDLESS_GHOUL, 2);
				kill_critter_type(PID_GHOUL, 2);
				kill_critter_type(PID_ZOMBIE_GUARD, 2);
				kill_critter_type(PID_GLOWING_ONE, 2);
				kill_critter_type(PID_SUPER_MUTANT, 0);
				kill_critter_type(PID_HARRY, 0);
			end
		end
	end
end


