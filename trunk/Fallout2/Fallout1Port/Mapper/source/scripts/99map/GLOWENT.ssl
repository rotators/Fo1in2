#include "..\headers\define.h"

procedure start;
procedure add_party;
procedure update_party;
procedure remove_party;
procedure Lighting;
procedure Darkness;
procedure Invasion;
export variable Ian_ptr;
export variable Dog_ptr;
export variable Tycho_ptr;
export variable Katja_ptr;
export variable Tandi_ptr;
variable First_Time;
variable Next_Time;
variable party_elevation;
variable dude_start_hex;
variable rads;

procedure start
begin
	if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
		call Lighting;
//		rads := random(100, 200) - random(0, 10);
//		radiation_inc(dude_obj, rads);
//		rads := 0;
		if (map_first_run) then begin
			set_global_var(GLOW_POWER, 1);
			display_msg(message_str(SCRIPT_SHADYWST, 108));
		end
		set_global_var(MARK_GLOW_1, 1);
		First_Time := game_time / 10;
		if (global_var(LOAD_MAP_INDEX) == 0) then begin
			override_map_start(107, 130, 0, 5);
		end
		else begin
			if (global_var(LOAD_MAP_INDEX) == 2) then begin
				override_map_start(117, 103, 0, 1);
			end
			else begin
				override_map_start(107, 130, 0, 5);
			end
		end
		call add_party;
	end
	else begin
		if (script_action == 23) then begin//map_update_p_proc -- called every dozen seconds or so, & additionally on certain events (exit dialog, end combat, load map, etc)
			call Lighting;
			Next_Time := game_time / 10;
			if ((Next_Time - First_Time) > 30) then begin
				Rads := (Next_Time - First_Time) / 30 * 15;
//			if ((Next_Time - First_Time) >= 1) then begin
//				rads := random(50, 100) - random(0, 10);
				radiation_inc(dude_obj, rads);
				First_Time := game_time / 10;
				rads := 0;
			end
			else begin
				radiation_inc(dude_obj, 15);
			end
			call update_party;
		end
		else begin
			if (script_action == 16) then begin//map_exit_p_proc (also appears as "remove_party"!) - called on red exit grids
				call remove_party;
			end
		end
	end
end

procedure Lighting
begin
	variable LVar0 := 0;
	LVar0 := game_time_hour;
	if ((LVar0 >= 600) and (LVar0 < 700)) then begin
		set_light_level(LVar0 - 600 + 40);
	end
	else begin
		if ((LVar0 >= 700) and (LVar0 < 1800)) then begin
			set_light_level(100);
		end
		else begin
			if ((LVar0 >= 1800) and (LVar0 < 1900)) then begin
				set_light_level(100 - (LVar0 - 1800));
			end
			else begin
				set_light_level(40);
			end
		end
	end
end

procedure add_party begin
	set_add_party
end

procedure update_party begin
	set_update_party
end

procedure remove_party begin
	set_remove_party
end

procedure Darkness
begin
	set_light_level(40);
end

procedure Invasion begin
	check_invasion
end

