#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\mapv13ent.h"
#include "..\headers\updatmap.h"
#include "..\headers\voodoo.h"

export variable vault_door_ptr;

procedure start;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;

procedure Endgame_Slides;

procedure base_inventory;
procedure cheat_mode;
procedure NamedInven;
procedure TagInven;

procedure SetLight;

variable endgame_running;
variable party_elevation;
variable Item := 0;
variable NumItems := 0;

#define EVENT_END_1 		(1)
#define EVENT_END_2 		(2)

procedure start begin
end

procedure map_enter_p_proc begin
variable Item;

	call SetLight;

	if v13_invaded then begin
		set_map_var(2, 1);
	end

	if (map_first_run) then begin
		if debug_mode then begin
			override_map_start_hex(25936,0,1);
		end
		else begin
			override_map_start_hex(17690,0,2);
		end

	   // randomize time between 3:00AM and 7:00AM to get "night sky" message:
	   // Advance until 00:00, then add 3 to 7 hours.
	   game_time_advance( (ONE_GAME_MINUTE * (ticks_til_hour(0) / 60) / 10) + (ONE_GAME_MINUTE * random(180,420)) );

		set_global_var( GVAR_QUEST_VAULT13_0_WATERCHIP_TRACKER, 1 );
		set_global_var( GVAR_QUEST_VAULT15_1_SEARCH_FOR_CLUES, 1 );
		set_global_var( GVAR_QUEST_VAULT15_2_FIND_WATER_CHIP, 1 );

		//--- Activate V13 and V15 on the worldmap:
		mark_on_map(AREA_VAULT_13)
		mark_on_map(AREA_VAULT_15)

		//--- Give initial reputation:
		inc_v13_rep(REP_BONUS_GAME_STARTED);

		display_msg(message_str(SCRIPT_FEARDARK, 100));

		if global_var( GVAR_IRONMAN_MODE ) == 0 then begin
			call base_inventory;
			call TagInven;
		end
		else if global_var( GVAR_IRONMAN_MODE ) == 1 then
			call base_inventory;
		else if global_var( GVAR_IRONMAN_MODE ) == 2 then
			call TagInven;
		//call NamedInven;
	end

	// Check if we should run the endgame scene:
	else begin
		if ( (waterchip_returned /*or dude_item_count(PID_WATER_CHIP)*/) and (military_base_destoryed and cathedral_destroyed and (endgame_running == 0)) and (not(is_story_finished)) ) then begin
			// Remove water chip, if player still has one:
			if not(waterchip_returned) and (dude_item_count( PID_WATER_CHIP )) then begin
				set_global_var( GVAR_QUEST_VAULT13_4_WATERCHIP, 2 );
				item := dude_item( PID_WATER_CHIP );
				rm_obj_from_inven(dude_obj, item);
			end

			// Hide party members
			party_member_hide_all

			game_ui_disable;
			call Endgame_Slides;
		end
		else begin
			override_map_start(136, 129, 0, 1);
		end
	end

	set_global_var(GVAR_LOAD_MAP_INDEX,0);
end

procedure map_update_p_proc begin
	call SetLight;
end

procedure SetLight begin
	if not(endgame_running) and (global_var( GVAR_OVERSEER_END_SEQ ) == 0) and (not(is_story_finished)) then begin
		Darkness;
	end
	else begin
		if is_story_finished then
			Darkness;
		else
			set_light_level(100);
	end
end

procedure map_exit_p_proc begin
end

procedure timed_event_p_proc begin
variable Critter;

	if (fixed_param == EVENT_END_1) then begin
		debug("EG Scene 1 - Setup");

		kill_critter_type(PID_RAT_CAVE, 0);

		set_light_level(100);
		override_map_start(90, 96, 0, 5);

		gfade_out(1);
		VOODOO_mode_fo1_ending;
		endgame_slideshow;

		endgame_running := 2;
		add_timer_event(self_obj, game_ticks(0), EVENT_END_2);
	end
	else if (fixed_param == EVENT_END_2) then begin
		debug("EG Scene 2 - Overseer approaching");

		// Create the Overseer while the ending slides are running:
		Critter := create_object_sid(PID_OVERSEER, 0, 0, SCRIPT_OVER);
		set_map_var(0, Critter);
		anim(Critter, 1000, 2);

		// Move to the vault door and use it:
		critter_attempt_placement(Critter, 15690, dude_elevation);
		use_obj(vault_door_ptr);

		set_global_var( GVAR_OVERSEER_END_SEQ, 1 );
		add_timer_event(vault_door_ptr, game_ticks(5), 1);
		endgame_running := 3;
	end
end

procedure base_inventory begin
   Item := create_object( PID_KNIFE, 0, 0 );
   add_obj_to_inven(dude_obj, Item);
   Item := create_object( PID_10MM_PISTOL, 0, 0 );
   add_obj_to_inven(dude_obj, Item);
   Item := create_object( PID_10MM_JHP, 0, 0 );
   add_obj_to_inven(dude_obj, Item);
   Item := create_object( PID_10MM_JHP, 0, 0 );
   add_obj_to_inven(dude_obj, Item);
   Item := create_object( PID_STIMPAK, 0, 0 );
   add_obj_to_inven(dude_obj, Item);
   Item := create_object( PID_STIMPAK, 0, 0 );
   add_obj_to_inven(dude_obj, Item);
   Item := create_object( PID_STIMPAK, 0, 0 );
   add_obj_to_inven(dude_obj, Item);
   Item := create_object( PID_STIMPAK, 0, 0 );
   add_obj_to_inven(dude_obj, Item);
   Item := create_object( PID_FLARE, 0, 0 );
   add_obj_to_inven(dude_obj, Item);
   Item := create_object( PID_FLARE, 0, 0 );
   add_obj_to_inven(dude_obj, Item);
end

procedure TagInven begin
   if (((has_skill( dude_obj, SKILL_LOCKPICK ) - ((dude_perception + dude_agility) / 2) - 20 + (dude_trait( TRAIT_bruiser ) * 10)) >= 20) or ((has_skill( dude_obj, SKILL_STEAL ) - dude_agility - 20 + (dude_trait( TRAIT_bruiser ) * 10)) >= 20)) then begin
      Item := create_object( PID_LOCKPICKS, 0, 0 );
      add_obj_to_inven(dude_obj, Item);
   end
   if ((has_skill( dude_obj, SKILL_UNARMED_COMBAT ) - ((dude_agility + dude_strength) / 2) - 65 + (dude_trait( TRAIT_bruiser ) * 10) + (dude_trait( TRAIT_good_natured ) * 10)) >= 20) then begin
      Item := create_object( PID_BRASS_KNUCKLES, 0, 0 );
      add_obj_to_inven(dude_obj, Item);
   end
   if ((has_skill( dude_obj, SKILL_FIRST_AID ) - ((dude_perception + dude_iq) / 2) - 30 - (dude_trait( TRAIT_good_natured ) * 20) + (dude_trait( TRAIT_bruiser ) * 10) - (dude_trait( TRAIT_good_natured ) * 15)) >= 20) then begin
      Item := create_object( PID_STIMPAK, 0, 0 );
      add_mult_objs_to_inven(dude_obj, Item, 2);
   end
   if ((has_skill( dude_obj, SKILL_DOCTOR ) - ((dude_perception + dude_iq) / 2) - 15 - (dude_trait( TRAIT_good_natured ) * 20) + (dude_trait( TRAIT_bruiser ) * 10) - (dude_trait( TRAIT_good_natured ) * 15)) >= 20) then begin
      Item := create_object( PID_FIRST_AID_KIT, 0, 0 );
      add_obj_to_inven(dude_obj, Item);
   end
   if ((has_skill( dude_obj, SKILL_SMALL_GUNS ) - dude_agility - 35 + (dude_trait( TRAIT_good_natured ) * 10) + (dude_trait( TRAIT_bruiser ) * 10)) >= 20) then begin
      Item := create_object( PID_10MM_JHP, 0, 0 );
      add_obj_to_inven(dude_obj, Item);
   end
   if ((has_skill( dude_obj, SKILL_THROWING ) - dude_agility - 40 + (dude_trait( TRAIT_good_natured ) * 10) + (dude_trait( TRAIT_bruiser ) * 10)) >= 20) then begin
      Item := create_object( PID_THROWING_KNIFE, 0, 0 );
      add_mult_objs_to_inven(dude_obj, Item, 2);
   end
   if ((has_skill( dude_obj, SKILL_REPAIR ) - dude_iq - 20 + (dude_trait( TRAIT_bruiser ) * 10)) >= 20) then begin
      Item := create_object( PID_MULTI_TOOL, 0, 0 );
      add_obj_to_inven(dude_obj, Item);
   end
   if ((has_skill( dude_obj, SKILL_OUTDOORSMAN ) - ((dude_iq + dude_endurance) / 2) - 5 + (dude_trait( TRAIT_bruiser ) * 10)) >= 20) then begin
      Item := create_object( PID_WATER_FLASK, 0, 0 );
      add_mult_objs_to_inven(dude_obj, Item, 3);
   end
   if ((has_skill( dude_obj, SKILL_SCIENCE ) - (2 * dude_iq) - 25 - (dude_trait( TRAIT_bruiser ) * 10)) >= 20) then begin
      Item := create_object( PID_MENTATS, 0, 0 );
      add_mult_objs_to_inven(dude_obj, Item, 2);
      Item := create_object( PID_BUFFOUT, 0, 0 );
      add_mult_objs_to_inven(dude_obj, Item, 2);
   end
end


procedure NamedInven begin
   if (proto_data(obj_pid(dude_obj), 1) == "Max Stone") then begin
      Item := create_object( PID_10MM_AP, 0, 0 );
      add_obj_to_inven(dude_obj, Item);
      Item := create_object( PID_BRASS_KNUCKLES, 0, 0 );
      add_obj_to_inven(dude_obj, Item);
   end
   if (proto_data(obj_pid(dude_obj), 1) == "Natalia") then begin
      Item := create_object( PID_THROWING_KNIFE, 0, 0 );
      add_obj_to_inven(dude_obj, Item);
      Item := create_object( PID_LOCKPICKS, 0, 0 );
      add_obj_to_inven(dude_obj, Item);
   end
   if (proto_data(obj_pid(dude_obj), 1) == "Albert") then begin
      Item := create_object( PID_STIMPAK, 0, 0 );
      add_obj_to_inven(dude_obj, Item);
      Item := create_object( PID_MENTATS, 0, 0 );
      add_obj_to_inven(dude_obj, Item);
   end
end

/*******************************************************************
   Set the outcome of the endgame slides.
*******************************************************************/
procedure Endgame_Slides begin
	// Start
	if (global_var(GVAR_ENDGAME_MOVIE_MUTANTS) == 0) then
		set_end_Master;

	// Necropolis
	if necropolis_invaded then
		set_end_necropolis_invaded;
	else if necropolis_wpump_fixed then
		set_end_necropolis_survived;
	else
		set_end_necropolis_dehydrated;

	// Boneyard
	if boneyard_visible_on_map then begin
		if /*followers_trained*/ not(boneyard_invaded) and is_nicole_alive and is_laura_escaped then
			set_end_foa_trained; // good ending \o/
		else
			set_end_foa_invaded;
	end

	// Shady Sands
	if shady_sands_visible_on_map then begin
		if shady_invaded then
			set_end_shady_invaded;
		else if is_tandi_alive and is_aradesh_alive then
			set_end_shady_good;
		else if is_aradesh_alive then
			set_end_shady_tandi_dead;
		else if is_tandi_alive then
			set_end_shady_aradesh_dead;
		else
			set_end_shady_bad;
	end

	// Junktown
	if junktown_visible_on_map then begin
		if junktown_invaded or (not(is_killian_alive) and (not(is_gizmo_alive))) then
			set_end_junktown_invaded;
		else if is_killian_alive then
			set_end_junktown_killian;
		else
			set_end_junktown_gizmo;
	end

	// Brotherhood of Steel
	if brotherhood_visible_on_map then begin
		if is_rhombus_alive then
			set_end_bos_good;
		else
			set_end_bos_bad;
	end

	// Hub
	if hub_visible_on_map then begin
		if ( (global_var( GVAR_IS_HAROLD_ALIVE ) == 1) and (global_var( GVAR_DECKER_STATUS ) == 1) and (global_var( GVAR_SLIDE_KIND_TO_HAROLD ) == 1) ) then
			set_end_hub_good;
		else
			set_end_hub_bad;
	end

	// Raiders
	if raiders_visible_on_map then begin

		if ( (get_raiders_alive <= 3) or ( (not(is_garl_alive)) and (get_raiders_alive <= 8) ) ) then
			set_end_raiders_dead;
		else if (get_raiders_alive < 16) then
			set_end_raiders_hurt;
		else
			set_end_raiders_alive;
	end
	else begin
		set_end_raiders_alive;
	end

	// Vault Dweller
	set_end_ending_vd;

	add_timer_event(self_obj, game_ticks(0), EVENT_END_1);
end
