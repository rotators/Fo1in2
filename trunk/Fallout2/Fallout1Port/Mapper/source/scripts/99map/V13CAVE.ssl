#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\MAPVAULT13.h"

export variable Dog_ptr;
export variable Ian_ptr;
export variable Katja_ptr;
export variable Tandi_ptr;
export variable Tycho_ptr;
export variable vault_door_ptr;

procedure start;
procedure map_enter_p_proc;//    script_action == 15
procedure map_exit_p_proc;//    script_action == 16
procedure map_update_p_proc;//    script_action == 23

procedure Endgame_Info;

procedure add_party;
procedure base_inventory;
procedure cheat_mode;
procedure DehydrationTesting;// Fallout Fixt
procedure endgame_part0;// Endgame Mod by Corpse
procedure endgame_part1;
procedure endgame_part2;
procedure endgame_part3;
procedure endgame_part4;// Endgame Mod by Corpse
procedure Lighting;
procedure LoadMapCheat;// Fallout Fixt
procedure NamedInven;
procedure remove_over;// Endgame Mod by Corpse
procedure remove_party;
procedure TaggedInven;
procedure update_party;

variable endgame_running;
variable party_elevation;
variable item := 0;// for starting items creation
variable NumItems := 0;// for starting items creation (Fallout Fixt)

procedure start begin
end

procedure map_enter_p_proc begin
	call Lighting;
	if global_var(VAULT_13_WAS_INVADED) then begin
		set_map_var(2, 1);
	end

	if (global_var(DEBUG_MODE_MESSAGES_ON) != 0) then begin
		override_map_start(90, 88, 0, 2);
	end

	if (map_first_run) then begin

	   // randomize time between 3:00AM and 7:00AM to get "night sky" message:
	   // Advance until 00:00, then add 3 to 7 hours.
	   game_time_advance( (ONE_GAME_MINUTE * (ticks_til_hour(0) / 60) / 10) + (ONE_GAME_MINUTE * random(180,420)) );

		set_global_var(QUEST_VAULT13_0_WATERCHIP_TRACKER, 1);
		set_global_var(QUEST_VAULT15_1_SEARCH_FOR_CLUES, 1);
		set_global_var(QUEST_VAULT15_2_FIND_WATER_CHIP, 1);

		//--- Activate V13 and V15 on the worldmap:
		mark_on_map(AREA_VAULT_13)
		mark_on_map(AREA_VAULT_15)

		display_msg(message_str(SCRIPT_FEARDARK, 100));

		if global_var(IRONMAN_MODE) == 0 then begin
			call base_inventory;
			call TaggedInven;
		end
		else if global_var(IRONMAN_MODE) == 1 then begin
			call base_inventory;
		end
		else if global_var(IRONMAN_MODE) == 2 then begin
			call TaggedInven;
		end
		if global_var(CHEAT_START_ITEMS_ENABLED) == 1 then begin
			override_map_start(136, 129, 0, 1);
		end
		call NamedInven;
		if (global_var(CHEAT_MAPSTART_ENABLED) == 1) then begin
			call LoadMapCheat;
		end

	end

	// Check if we should run the endgame scene:
	else begin
		if (global_var(MASTER_BLOWN) and global_var(VATS_BLOWN) and (endgame_running == 0)) then begin
			call endgame_part0;//was 1 in vanilla
		end
		else begin
			override_map_start(136, 129, 0, 1);
		end
	end
	call add_party;
end

procedure map_update_p_proc begin
	call Lighting;
	if (global_var(MASTER_BLOWN) and global_var(VATS_BLOWN) and (endgame_running == 0)) then begin
		call endgame_part0;//was 1 in vanilla
	end
	if (endgame_running == 1) then begin
		call endgame_part2;
	end
	else begin
		if (endgame_running == 2) then begin
			call endgame_part3;
		end
		else begin
			if (endgame_running == 3) then begin
				call endgame_part4;
			end
		end
	end
	call update_party;
end

procedure map_exit_p_proc begin
	//if (global_var(GAME_CONTINUES) == 1) then begin
	//	call remove_over;
	//end
	//else begin
		call remove_party;
	//end
end

procedure Lighting begin
	if not(endgame_running) and (global_var(OVERSEER_END_SEQ) == 0) and (global_var(ENDGAME_MOD_STUFF) == 0) then begin
		set_light_level(40);
	end
	else begin
		set_light_level(100);
	end
end

procedure add_party begin
	set_add_party
end

procedure update_party begin
	set_update_party
end

procedure remove_party begin
	set_remove_party
end

procedure endgame_part0 begin
	if (global_var(GAME_CONTINUES) == 0) then begin
		call endgame_part1;
	end
end

procedure endgame_part1 begin
	// Setup endgame slides:
	call Endgame_Info;

	kill_critter_type(PID_RAT_CAVE, 0);//Cave Rats
	set_light_level(100);
	override_map_start(90, 96, 0, 5);
	set_global_var(ENDGAME_MOD_STUFF, 1);
	endgame_slideshow;//"maybe_credits" in Fo2
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
//	gfade_in(1);
//	endgame_movie;
	endgame_running := 2;
end

procedure endgame_part2 begin
	endgame_running := 2;
end

//procedure endgame_part3
//begin
//	variable LVar0 := 0;
//	if ((global_var(ENDGAME_MOD_STUFF) == 0) and (map_var(0) == 0)) then begin
//		LVar0 := create_object_sid(16777263, 0, 0, 55);
//		set_map_var(0, LVar0);
//		anim(LVar0, 1000, 2);
//		critter_attempt_placement(LVar0, 18290, elevation(dude_obj));
//		add_timer_event(dude_obj, 1, 5);
//		endgame_running := 3;
//	end
//end

procedure endgame_part3 begin
	variable LVar1 := 0;
	if (global_var(ENDGAME_MOD_STUFF) == 0) then begin
		LVar1 := create_object_sid(PID_OVERSEER, 0, 0, SCRIPT_OVER);
		set_map_var(0, LVar1);
		anim(LVar1, 1000, 2);
		critter_attempt_placement(LVar1, 15690, elevation(dude_obj));
		use_obj(vault_door_ptr);
		set_global_var(OVERSEER_END_SEQ, 1);
		add_timer_event(vault_door_ptr, game_ticks(5), 1);
		endgame_running := 3;
	end
end

procedure endgame_part4 begin
	if (global_var(OVERSEER_KILLED) == 1) then begin
		if (obj_is_open(vault_door_ptr)) then begin
			use_obj(vault_door_ptr);
		end
		else begin
			if (global_var(OVERSEER_KILLED) == 2) then begin
				if (obj_is_open(vault_door_ptr)) then begin
					add_timer_event(vault_door_ptr, game_ticks(15), 1);
				end
			end
		end
	end

end

procedure remove_over begin
//	kill_critter_type(16777263, 0);//Want corpse to stay behind
	call remove_party;
end

procedure base_inventory begin
//
// ALSO NOTE: Ed's corpse provides 1 Knife and 1 ammo (10mm AP)
//
	if global_var(FIXT_BUGFIXES_ONLY) then begin// vanilla items
		item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);//10mm Pistol
		add_mult_objs_to_inven(dude_obj, item, 1);
		if difficulty_level != 2 then begin
			item := create_object_sid(PID_10MM_JHP, 0, 0, -1);//10mm JHP
			add_mult_objs_to_inven(dude_obj, item, 2);
		end
		else begin
			item := create_object_sid(PID_10MM_JHP, 0, 0, -1);//10mm JHP
			add_mult_objs_to_inven(dude_obj, item, 1);
		end
		if difficulty_level != 2 then begin
			item := create_object_sid(PID_STIMPAK, 0, 0, -1);//Stimpak
			add_mult_objs_to_inven(dude_obj, item, 4);
		end
		else begin
			item := create_object_sid(PID_STIMPAK, 0, 0, -1);//Stimpak
			add_mult_objs_to_inven(dude_obj, item, 3);
		end
		if difficulty_level != 2 then begin
			item := create_object_sid(PID_FLARE, 0, 0, -1);//Flare
			add_mult_objs_to_inven(dude_obj, item, 2);
		end
		else begin
			item := create_object_sid(PID_FLARE, 0, 0, -1);//Flare
			add_mult_objs_to_inven(dude_obj, item, 1);
		end
	end
	else begin
		item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);//10mm Pistol
		add_mult_objs_to_inven(dude_obj, item, 1);
		NumItems := 2 - difficulty_level;
		if NumItems then begin
			item := create_object_sid(PID_10MM_JHP, 0, 0, -1);//10mm JHP
			add_mult_objs_to_inven(dude_obj, item, NumItems);
			NumItems := 0;
		end
		NumItems := 4 - difficulty_level;
		if NumItems then begin
			item := create_object_sid(PID_STIMPAK, 0, 0, -1);//Stimpak
			add_mult_objs_to_inven(dude_obj, item, NumItems);
		end
		NumItems := 3 - difficulty_level;
		if NumItems then begin
		item := create_object_sid(PID_FLARE, 0, 0, -1);//Flare
			add_mult_objs_to_inven(dude_obj, item, NumItems);
			NumItems := 0;
		end
		NumItems := 2 - difficulty_level;
		if NumItems then begin
			item := create_object_sid(PID_WATER_FLASK, 0, 0, -1);//Water Flask
			add_mult_objs_to_inven(dude_obj, item, NumItems);
			NumItems := 0;
		end
		if not(get_critter_stat(dude_obj, 34)) then begin
			if global_var(MALE_PLAYER_SMOKES) then begin
				item := create_object_sid(PID_LIGHTER, 0, 0, -1);//Lighter
				add_mult_objs_to_inven(dude_obj, item, 1);
			end
		end
	end
end

procedure TaggedInven begin
variable
	HasGifted := has_trait(2, dude_obj, TRAIT_gifted),
	GIFTED_Handicap := HasGifted * 10,
	HasSkilled := has_trait(2, dude_obj, TRAIT_skilled),
	SKILLED_Bonus := HasSkilled * 10,
	HasGoodNat := has_trait(2, dude_obj, TRAIT_good_natured),
	GOOD_NATURED_Handicap := HasGoodNat * TRAIT_good_natured,
	GOOD_NATURED_Bonus := HasGoodNat * TRAIT_good_natured,
	AlreadyHas := 0,
	NumItems := 0,
	DiffLevelTaggedPercent;

	if difficulty_level < 2 then begin
		DiffLevelTaggedPercent := 20;
	end
	else begin
		DiffLevelTaggedPercent := 10;
	end
//
//	0 = Small Guns
//
	if (has_skill(dude_obj, SKILL_SMALL_GUNS) - dude_agility - 35 + GIFTED_Handicap - SKILLED_Bonus + GOOD_NATURED_Handicap) >= DiffLevelTaggedPercent then begin
		if global_var(FIXT_BUGFIXES_ONLY) then begin
			item := create_object_sid(PID_10MM_JHP, 0, 0, -1);//10mm JHP
			add_mult_objs_to_inven(dude_obj, item, 1);
		end
		else begin
			NumItems := 3 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_10MM_JHP, 0, 0, -1);//10mm JHP
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
		end
	end
//
//	1 = Big Guns
//
	if (has_skill(dude_obj, SKILL_BIG_GUNS) - dude_agility - 10 + GIFTED_Handicap - SKILLED_Bonus + GOOD_NATURED_Handicap) >= DiffLevelTaggedPercent then begin
		item := create_object_sid(PID_FLAMER, 0, 0, -1);//Flamer
		add_mult_objs_to_inven(dude_obj, item, 1);
		if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
			NumItems := 3 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_FLAMETHROWER_FUEL, 0, 0, -1);//Flamer Fuel
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
		end
	end
//
//	2 = Energy Weapons
//
	if (has_skill(dude_obj, SKILL_ENERGY_WEAPONS) - dude_agility - 10 + GIFTED_Handicap - SKILLED_Bonus + GOOD_NATURED_Handicap) >= DiffLevelTaggedPercent then begin
		item := create_object_sid(PID_LASER_PISTOL, 0, 0, -1);//Laser Pistol
		add_mult_objs_to_inven(dude_obj, item, 1);
		if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
			NumItems := 2 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_SMALL_ENERGY_CELL, 0, 0, -1);//Small Energy Cell
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
		end
	end
//
//	3 = Unarmed
//
	if (has_skill(dude_obj, SKILL_UNARMED_COMBAT) - ((dude_agility + dude_strength) / 2) - 65 + GIFTED_Handicap - SKILLED_Bonus + GOOD_NATURED_Handicap) >= DiffLevelTaggedPercent then begin
		item := create_object_sid(PID_BRASS_KNUCKLES, 0, 0, -1);//Brass Knuckles
		add_mult_objs_to_inven(dude_obj, item, 1);
		if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
			NumItems := 2 - difficulty_level;
			if NumItems then begin
			item := create_object_sid(PID_BUFFOUT, 0, 0, -1);//Buffout
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
		end
	end
//
//	4 = Melee Weapons
//
	if (has_skill(dude_obj, SKILL_MELEE) - ((dude_agility + dude_strength) / 2) - 55 + GIFTED_Handicap - SKILLED_Bonus + GOOD_NATURED_Handicap) >= DiffLevelTaggedPercent then begin
		item := create_object_sid(PID_CLUB, 0, 0, -1);//Club
		add_mult_objs_to_inven(dude_obj, item, 1);
		if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
			NumItems := 2 - difficulty_level;
			if NumItems then begin
			item := create_object_sid(PID_BUFFOUT, 0, 0, -1);//Buffout
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
		end
	end
//
//	5 = Throwing
//
	if (has_skill(dude_obj, SKILL_THROWING) - dude_agility - 40 + GIFTED_Handicap - SKILLED_Bonus + GOOD_NATURED_Handicap) >= DiffLevelTaggedPercent then begin
		if global_var(FIXT_BUGFIXES_ONLY) then begin
			item := create_object_sid(PID_THROWING_KNIFE, 0, 0, -1);//Throwing Knife
			add_mult_objs_to_inven(dude_obj, item, 2);
		end
		else begin
			NumItems := 3 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_THROWING_KNIFE, 0, 0, -1);//Throwing Knife
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
			NumItems := 3 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_FRAG_GRENADE, 0, 0, -1);//Frag Grenade
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
			NumItems := 2 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_PLASMA_GRENADE, 0, 0, -1);//Plasma Grenade
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
		end
	end
	if difficulty_level == 0 then begin
		DiffLevelTaggedPercent := 40;
	end
//
//	6 = First aid
//
	if (has_skill(dude_obj, SKILL_FIRST_AID) - ((dude_perception + dude_iq) / 2) - 30 + GIFTED_Handicap - SKILLED_Bonus - GOOD_NATURED_Bonus) >= DiffLevelTaggedPercent then begin
		if global_var(FIXT_BUGFIXES_ONLY) then begin
			item := create_object_sid(PID_STIMPAK, 0, 0, -1);
			add_mult_objs_to_inven(dude_obj, item, 2);
		end
		else begin
			item := create_object_sid(PID_FIRST_AID_KIT, 0, 0, -1);
			add_mult_objs_to_inven(dude_obj, item, 1);
			NumItems := 3 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_STIMPAK, 0, 0, -1);
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
		end
	end
//
//	7 = Doctor
//
	if (has_skill(dude_obj, SKILL_DOCTOR) - ((dude_perception + dude_iq) / 2) - 15 + GIFTED_Handicap - SKILLED_Bonus - GOOD_NATURED_Bonus) >= DiffLevelTaggedPercent then begin
		if global_var(FIXT_BUGFIXES_ONLY) then begin
			item := create_object_sid(PID_STIMPAK, 0, 0, -1);
			add_mult_objs_to_inven(dude_obj, item, 2);
		end
		else begin
			item := create_object_sid(PID_DOCTORS_BAG, 0, 0, -1);
			add_mult_objs_to_inven(dude_obj, item, 1);
			NumItems := 3 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_STIMPAK, 0, 0, -1);
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
		end
	end
//
//	8 = Sneak
//
	if (has_skill(dude_obj, SKILL_SNEAK) - dude_agility - 25 + GIFTED_Handicap - SKILLED_Bonus) >= DiffLevelTaggedPercent then begin
		item := create_object_sid(PID_STEALTH_BOY, 0, 0, -1);
		add_mult_objs_to_inven(dude_obj, item, 1);
	end
//
//	9 = Lockpick
//
	if (has_skill(dude_obj, SKILL_LOCKPICK) - ((dude_perception + dude_agility) / 2) - 20 + GIFTED_Handicap - SKILLED_Bonus) >= DiffLevelTaggedPercent then begin
		if global_var(FIXT_BUGFIXES_ONLY) then begin
			AlreadyHas := obj_carrying_pid_obj(dude_obj, PID_LOCKPICKS);
			if not(AlreadyHas) then begin
				item := create_object_sid(PID_LOCKPICKS, 0, 0, -1);
				add_mult_objs_to_inven(dude_obj, item, 1);
			end
		end
		else begin
			item := create_object_sid(PID_LOCKPICKS, 0, 0, -1);
			add_mult_objs_to_inven(dude_obj, item, 1);
		end
	end
//
//	10 = Steal
//
	if (has_skill(dude_obj, SKILL_STEAL) - dude_agility - 20 + GIFTED_Handicap - SKILLED_Bonus) >= DiffLevelTaggedPercent then begin
		if global_var(FIXT_BUGFIXES_ONLY) then begin
			AlreadyHas := obj_carrying_pid_obj(dude_obj, PID_LOCKPICKS);
			if not(AlreadyHas) then begin
				item := create_object_sid(PID_LOCKPICKS, 0, 0, -1);
				add_mult_objs_to_inven(dude_obj, item, 1);
			end
		end
		else begin
			AlreadyHas := obj_carrying_pid_obj(dude_obj, PID_STEALTH_BOY);
			if not(AlreadyHas) then begin
				item := create_object_sid(PID_STEALTH_BOY, 0, 0, -1);
				add_mult_objs_to_inven(dude_obj, item, 1);
			end
			else begin
				AlreadyHas := obj_carrying_pid_obj(dude_obj, PID_LOCKPICKS);
				if not(AlreadyHas) then begin
					item := create_object_sid(PID_LOCKPICKS, 0, 0, -1);
					add_mult_objs_to_inven(dude_obj, item, 1);
				end
				else begin
					item := create_object_sid(PID_BOTTLE_CAPS, 0, 0, -1);
					add_mult_objs_to_inven(dude_obj, item, 25);
				end
			end
		end
	end
//
//	11 = Traps
//
	if (has_skill(dude_obj, SKILL_TRAPS) - ((dude_perception + dude_agility) / 2) - 20 + GIFTED_Handicap - SKILLED_Bonus) >= DiffLevelTaggedPercent then begin
		if global_var(FIXT_BUGFIXES_ONLY) then begin
			item := create_object_sid(PID_DYNAMITE, 0, 0, -1);
			add_mult_objs_to_inven(dude_obj, item, 1);
		end
		else begin
			NumItems := 3 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_DYNAMITE, 0, 0, -1);
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
		end
	end
//
//	12 = Science
//
	if (has_skill(dude_obj, SKILL_SCIENCE) - (2 * dude_iq) - 25 + GIFTED_Handicap - SKILLED_Bonus) >= DiffLevelTaggedPercent then begin
		if global_var(FIXT_BUGFIXES_ONLY) then begin
			item := create_object_sid(PID_MENTATS, 0, 0, -1);
			add_mult_objs_to_inven(dude_obj, item, 2);
		end
		else begin
			NumItems := 3 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_MENTATS, 0, 0, -1);
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
		end
	end
//
//	13 = Repair
//
	if (has_skill(dude_obj, SKILL_REPAIR) - dude_iq - 20 + GIFTED_Handicap - SKILLED_Bonus) >= DiffLevelTaggedPercent then begin
		item := create_object_sid(PID_MULTI_TOOL, 0, 0, -1);
		add_mult_objs_to_inven(dude_obj, item, 1);
	end
//
//	14 = Speech
//
	if (has_skill(dude_obj, SKILL_SPEECH) - (2 * dude_charisma) - 25 + GIFTED_Handicap - SKILLED_Bonus - GOOD_NATURED_Bonus) >= DiffLevelTaggedPercent then begin
		if global_var(FIXT_BUGFIXES_ONLY) then begin
			item := create_object_sid(PID_MENTATS, 0, 0, -1);
			add_mult_objs_to_inven(dude_obj, item, 1);
		end
		else begin
			NumItems := 3 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_MENTATS, 0, 0, -1);
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
		end
	end
//
//	15 = Barter
//
	if (has_skill(dude_obj, SKILL_BARTER) - (2 * dude_charisma) - 20 + GIFTED_Handicap - SKILLED_Bonus - GOOD_NATURED_Bonus) >= DiffLevelTaggedPercent then begin
		if global_var(FIXT_BUGFIXES_ONLY) then begin
			item := create_object_sid(PID_MENTATS, 0, 0, -1);
			add_mult_objs_to_inven(dude_obj, item, 1);
		end
		else begin
			NumItems := 3 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_MENTATS, 0, 0, -1);
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
		end
	end
//
//	16 = Gambling
//
	if (has_skill(dude_obj, SKILL_GAMBLING) - (3 * dude_luck) - 20 + GIFTED_Handicap - SKILLED_Bonus) >= DiffLevelTaggedPercent then begin
		if global_var(FIXT_BUGFIXES_ONLY) then begin
			item := create_object_sid(PID_BOTTLE_CAPS, 0, 0, -1);
			add_mult_objs_to_inven(dude_obj, item, 25);
		end
		else begin
			NumItems := (75 - (difficulty_level * 25));
			if NumItems then begin
			item := create_object_sid(PID_BOTTLE_CAPS, 0, 0, -1);
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
		end
	end
//
//	17 = Outdoorsman
//
	if (has_skill(dude_obj, SKILL_OUTDOORSMAN) - ((dude_endurance + dude_iq) / 2) - 5 + GIFTED_Handicap - SKILLED_Bonus) >= DiffLevelTaggedPercent then begin
		if global_var(FIXT_BUGFIXES_ONLY) then begin
			item := create_object_sid(PID_WATER_FLASK, 0, 0, -1);
			add_mult_objs_to_inven(dude_obj, item, 3);
		end
		else begin
			NumItems := 3 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_WATER_FLASK, 0, 0, -1);
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
			NumItems := 2 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_FLARE, 0, 0, -1);
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end
			NumItems := 1 - difficulty_level;
			if NumItems then begin
				item := create_object_sid(PID_RADAWAY, 0, 0, -1);
				add_mult_objs_to_inven(dude_obj, item, NumItems);
				NumItems := 0;
			end

		end
	end
end

procedure NamedInven
begin
	if (proto_data(obj_pid(dude_obj), 1) == "Max Stone") then begin
		item := create_object_sid(PID_10MM_AP, 0, 0, -1);//10mm AP
		add_mult_objs_to_inven(dude_obj, item, 1);
		item := create_object_sid(PID_BRASS_KNUCKLES, 0, 0, -1);//Brass Knuckles
		add_mult_objs_to_inven(dude_obj, item, 1);
	end
	if (proto_data(obj_pid(dude_obj), 1) == "Natalia") then begin
		item := create_object_sid(PID_THROWING_KNIFE, 0, 0, -1);//Throwing Knife
		add_mult_objs_to_inven(dude_obj, item, 2);
		item := create_object_sid(PID_LOCKPICKS, 0, 0, -1);//Lock Picks
		add_mult_objs_to_inven(dude_obj, item, 1);
	end
	if (proto_data(obj_pid(dude_obj), 1) == "Albert") then begin
		item := create_object_sid(PID_STIMPAK, 0, 0, -1);//Stimpak
		add_mult_objs_to_inven(dude_obj, item, 1);
		item := create_object_sid(PID_MENTATS, 0, 0, -1);//Mentats
		add_mult_objs_to_inven(dude_obj, item, 1);
	end
	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
		if (proto_data(obj_pid(dude_obj), 1) == "Hell Razor") or (proto_data(obj_pid(dude_obj), 1) == "Angela Deth") or (proto_data(obj_pid(dude_obj), 1) == "Thrasher") or (proto_data(obj_pid(dude_obj), 1) == "Snake") or (proto_data(obj_pid(dude_obj), 1) == "Vargas") or (proto_data(obj_pid(dude_obj), 1) == "Snake Varga") or (proto_data(obj_pid(dude_obj), 1) == "Snake Vargas") then begin
			item := create_object_sid(PID_ROPE, 0, 0, -1);//Rope
			add_mult_objs_to_inven(dude_obj, item, 1);
			item := create_object_sid(PID_WATER_FLASK, 0, 0, -1);//Water Flask
			add_mult_objs_to_inven(dude_obj, item, 1);
			item := create_object_sid(PID_CROWBAR, 0, 0, -1);//Crowbar
			add_mult_objs_to_inven(dude_obj, item, 1);
			item := create_object_sid(PID_KNIFE, 0, 0, -1);//Knife
			add_mult_objs_to_inven(dude_obj, item, 1);
		end
	end
end

procedure cheat_mode
begin
	item := create_object_sid(PID_BOTTLE_CAPS, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 99999);
/*	item := create_object_sid(PID_CAR_FUEL_INJECTION, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);*/
	item := create_object_sid(PID_CLUB, 0, 0, -1);//sledge
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_10MM_PISTOL, 0, 0, -1);//10mm Pistol
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_10MM_AP, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 5);
	item := create_object_sid(PID_MOTION_SENSOR, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_BAG, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_BACKPACK, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_BROWN_BAG, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_HARDENED_POWER_ARMOR, 0, 0, -1);// Hardened power armor
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_CHEST, 0, 0, -1);// Alien Blaster with 100 range and 999 damage.
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_MICRO_FUSION_CELL, 0, 0, -1);// MFC ammo
	add_mult_objs_to_inven(dude_obj, item, 10);
	item := create_object_sid(PID_GATLING_LASER, 0, 0, -1);// Gatling Laser
	add_mult_objs_to_inven(dude_obj, item, 2);
	item := create_object_sid(PID_FLARE, 0, 0, -1);// Flare
	add_mult_objs_to_inven(dude_obj, item, 20);
	item := create_object_sid(PID_14MM_PISTOL, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_223_PISTOL, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_BEER, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 20);
	item := create_object_sid(PID_BOOZE, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 20);
	item := create_object_sid(PID_MOLOTOV_COCKTAIL, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 20);
	item := create_object_sid(PID_RADAWAY, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 20);
	item := create_object_sid(PID_NUKA_COLA, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 20);
	item := create_object_sid(PID_FRAG_GRENADE, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 25);
	item := create_object_sid(PID_PLASMA_GRENADE, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 25);
	item := create_object_sid(PID_PULSE_GRENADE, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 25);
	item := create_object_sid(PID_STIMPAK, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 100);
	item := create_object_sid(PID_SPEAR, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 15);
	item := create_object_sid(PID_EXPLOSIVE_ROCKET, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 25);
	item := create_object_sid(PID_MENTATS, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 20);
	item := create_object_sid(PID_BUFFOUT, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 20);
	item := create_object_sid(PID_PSYCHO, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 20);
	item := create_object_sid(PID_LEATHER_ARMOR, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_METAL_ARMOR, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_COMBAT_ARMOR, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_LEATHER_JACKET, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_PURPLE_ROBE, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	wield_obj_critter(dude_obj, item);
	item := create_object_sid(PID_BROTHERHOOD_COMBAT_ARMOR, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_TESLA_ARMOR, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_FLOWER, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_HUNTING_RIFLE, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_FLAMETHROWER_FUEL, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_10MM_SMG, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_5MM_AP, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 3);
	item := create_object_sid(PID_SMALL_ENERGY_CELL, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 2);
	item := create_object_sid(PID_RAD_X, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 2);
	item := create_object_sid(PID_ELECTRONIC_LOCKPICKS, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 2);
	item := create_object_sid(PID_LOCKPICKS, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 2);
	item := create_object_sid(PID_RED_RYDER_LE_BB_GUN, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_BBS, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 2);
	item := create_object_sid(PID_BUFFOUT, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 2);
	item := create_object_sid(PID_RIPPER, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_DYNAMITE, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 5);
	item := create_object_sid(PID_ROCKET_LAUNCHER, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 2);
	item := create_object_sid(PID_MINIGUN, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_5MM_AP, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 3);
	item := create_object_sid(PID_STEALTH_BOY, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_FLAMER, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 1);
	item := create_object_sid(PID_ROPE, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 5);
	item := create_object_sid(PID_10MM_JHP, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 10);
	item := create_object_sid(PID_PLASTIC_EXPLOSIVES, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 5);
	item := create_object_sid(PID_10MM_AP, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 10);
	item := create_object_sid(PID_LASER_PISTOL, 0, 0, -1);
	add_mult_objs_to_inven(dude_obj, item, 2);
	item := create_object_sid(PID_GEIGER_COUNTER, 0, 0, -1);// Geiger counter
	add_mult_objs_to_inven(dude_obj, item, 1);
end

procedure LoadMapCheat
begin
	//load_map("MBVATS12.MAP", 1);
	debug_msg(" ");
	debug_msg("Map cheat upon character creation running... teleporting Player to new map...");
	debug_msg(" ");
	debug_msg(" ");
	//load_map(3, 0);
	//game_time_advance(10 * 60 * 60 * 12);//  for maps that like to start at night
end

procedure Endgame_Info begin
// Start
	if (global_var(GVAR_ENDGAME_MOVIE_MUTANTS) == 0) then
		set_end_Master;

// Necropolis
	if necropolis_invaded then
		set_end_necropolis_invaded;
	else if necropolis_wpump_fixed then
		set_end_necropolis_survived;
	else
		set_end_necropolis_dehydrated;

// Boneyard  -- check obj_dude script!! has code!!
	if boneyard_visible_on_map then begin
		if followers_trained then
			set_end_foa_trained;
		else
			set_end_foa_invaded;
	end

// Shady Sands
	if shady_sands_visible_on_map then begin
		if shady_invaded then
			set_end_shady_invaded;
		else if is_tandi_alive and is_aradesh_alive then
			set_end_shady_good;
		else if is_aradesh_alive then
			set_end_shady_tandi_dead;
		else if is_tandi_alive then
			set_end_shady_aradesh_dead;
		else
			set_end_shady_bad;
	end

// Junktown
	if junktown_visible_on_map then begin
		if junktown_invaded or (not(is_killian_alive) and (not(is_gizmo_alive))) then
			set_end_junktown_invaded;
		else if is_killian_alive then
			set_end_junktown_killian;
		else
			set_end_junktown_gizmo;
	end

// Brotherhood of Steel
	if brotherhood_visible_on_map then begin
		if is_rhombus_alive then
			set_end_bos_good;
		else
			set_end_bos_bad;
	end

	// Hub -- check obj_dude script!! has code!!
	if hub_visible_on_map then begin
		if ( (global_var(IS_HAROLD_ALIVE) == 1) and (global_var(DECKER_STATUS) == 1) ) then
			set_end_hub_good;
		else
			set_end_hub_bad;
	end

// Raiders
	if raiders_visible_on_map then begin

		if ( (get_raiders_alive <= 3) or ( (not(is_garl_alive)) and (get_raiders_alive <= 8) ) ) then
			set_end_raiders_dead;
		else if (get_raiders_alive < 16) then
			set_end_raiders_hurt;
		else
			set_end_raiders_alive;
	end
	else begin
		set_end_raiders_alive;
	end

// Vault Dweller
	set_end_ending_vd;
end


