#include "..\headers\define.h"

procedure start;

procedure Lighting;
procedure Darkness;
procedure Invasion;
export variable Front_Door_Ptr;

variable party_elevation;
variable dude_start_hex;
variable invaderPtr;

procedure start
begin
	if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
		set_global_var(MARK_HUB_3, 1);
		call Lighting;
		if ((global_var(THE_HUB_WAS_INVADED) == 1) and (metarule(22, 0) == 0) and (map_var(6) == 0)) then begin
			set_map_var(6, 1);
			kill_critter_type(PID_GUARD_10, 1);
			kill_critter_type(16777216 + 231, 1);
			kill_critter_type(16777216 + 235, 1);
			kill_critter_type(PID_MYSTERIOUS_STRANGER, 1);
			kill_critter_type(PID_MARTHA, 1);
			kill_critter_type(PID_HIGHTOWER, 1);
			invaderPtr := create_object_sid(PID_MAD_SUPER_MUTANT, 0, 0, SCRIPT_INVADER);
			critter_add_trait(invaderPtr, 1, 5, 48);
			critter_attempt_placement(invaderPtr, 19693, 0);
			invaderPtr := create_object_sid(PID_MAD_SUPER_MUTANT, 0, 0, SCRIPT_INVADER);
			critter_add_trait(invaderPtr, 1, 5, 48);
			critter_attempt_placement(invaderPtr, 23332, 0);
		end
		override_map_start(94, 88, 0, 2);

	end
	else begin
		if (script_action == 23) then begin//map_update_p_proc -- called every dozen seconds or so, & additionally on certain events (exit dialog, end combat, load map, etc)
			call Lighting;

		end

	end
end

procedure Lighting
begin
	variable LVar0 := 0;
	LVar0 := game_time_hour;
	if ((LVar0 >= 600) and (LVar0 < 700)) then begin
		set_light_level(LVar0 - 600 + 40);
	end
	else begin
		if ((LVar0 >= 700) and (LVar0 < 1800)) then begin
			set_light_level(100);
		end
		else begin
			if ((LVar0 >= 1800) and (LVar0 < 1900)) then begin
				set_light_level(100 - (LVar0 - 1800));
			end
			else begin
				set_light_level(40);
			end
		end
	end
end

procedure Darkness
begin
	set_light_level(40);
end

procedure Invasion begin
	check_invasion
end
