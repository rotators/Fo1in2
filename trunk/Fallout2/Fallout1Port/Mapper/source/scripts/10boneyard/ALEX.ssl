/*

	Boneyard - Alex, FoA

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\mapnecro.h"

#define NAME                    SCRIPT_ALEX
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;

procedure Alex01;
procedure Alex02;
procedure Alex03;
procedure Alex04;
procedure Alex05;
procedure Alex06;
procedure Alex07;

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;

variable tmp_hostile;
variable initial :=  0;

#define LVAR_Sleeping 							(1)

procedure start begin
	if not(initial) then begin
		set_self_team(TEAM_LA_ADYTOWNER );
		sleep_tile := 14275;
		home_tile := 11300;
		wake_time := 2030;
		sleep_time := 730;
		night_person := 1;
		initial :=  1;
	end
end

procedure map_enter_p_proc begin
   if map_first_run then
      self_caps_adjust( random(0, 20) );
end

procedure critter_p_proc begin
	if (self_can_see_dude) then begin
		if (tmp_hostile) then begin
			tmp_hostile := 0;
			attack(dude_obj);
		end
		else begin
			if (local_var(0) == 0) then begin
				if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
					dialogue_system_enter;
				end
			end
			if (tile_distance(dude_tile, 10700) > tile_distance(dude_tile, 11900)) then begin
				if (global_var( GVAR_QUEST_BONEYARD_7_GANG_WAR ) < 2) then begin
					tmp_hostile := 1;
				end
			end
		end
	end
	else begin
		sleeping
	end
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure look_at_p_proc
begin
	if (local_var(0)) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_ALEX, 100));
	end
end

procedure talk_p_proc
begin
	dude_look_at_self;
	if (global_var( GVAR_QUEST_BONEYARD_7_GANG_WAR ) == 2) then begin
		float_msg(self_obj, message_str(SCRIPT_ALEX, 101) + dude_name, 0);
	end
	else begin
		if (local_var(0)) then begin
			call Alex01;
		end
		else begin
			start_gdialog(670, self_obj, 4, -1, -1);
			gsay_start;
			call Alex02;
			gsay_end;
			end_dialogue;
		end
	end
end

procedure Alex01
begin
	float_msg(self_obj, message_str(SCRIPT_ALEX, 102), 0);
end

procedure Alex02
begin
	set_local_var(0, 1);
	gsay_reply(670, 103);
	giq_option( 4, SCRIPT_ALEX, 104, Alex03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ALEX, 105, Alex05, BAD_REACTION );
	giq_option( 4, SCRIPT_ALEX, 106, Alex06, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_ALEX, 114, Alex06, NEUTRAL_REACTION );
end

procedure Alex03
begin
	gsay_reply(670, 107);
	giq_option( 4, SCRIPT_ALEX, 108, Alex04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ALEX, 106, Alex06, NEUTRAL_REACTION );
end

procedure Alex04
begin
	gsay_message(670, 109, 50);
end

procedure Alex05
begin
	gsay_reply(670, 110);
	giq_option( 4, SCRIPT_ALEX, 106, Alex06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ALEX, 111, Alex07, NEUTRAL_REACTION );
end

procedure Alex06
begin
	gsay_message(670, 112, 50);
end

procedure Alex07
begin
	tmp_hostile := 1;
	gsay_message(670, 113, 51);
end
