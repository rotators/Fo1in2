#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure combat_p_proc;//    script_action == 13
procedure critter_p_proc;//    script_action == 12
procedure description_p_proc;//    script_action == 3
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure combat_rads_inc;

procedure Talius00;
procedure Talius01;
procedure Talius02;
procedure Talius03;
procedure Talius04;
procedure Talius05;
procedure Talius06;
procedure Talius07;
procedure Talius08;
procedure Talius09;
procedure Talius10;
procedure Talius11;
procedure Talius12;
procedure Talius13;
procedure Talius14;
procedure Talius15;
procedure Talius16;
procedure Talius17;
procedure Talius18;
procedure Talius19;
procedure Talius20;
procedure Talius21;
procedure Talius22;
procedure Talius23;
procedure Talius24;
procedure Talius25;
procedure Talius26;
procedure Talius27;
procedure Talius28;
procedure Talius29;
procedure Talius29a;
procedure Talius30;
procedure Talius31;
procedure Talius32;
procedure Talius33;
procedure Talius34;
procedure Talius35;
procedure Talius36;
procedure Talius37;
procedure Talius38;
procedure Talius39;
procedure Talius40;
procedure Talius41;
procedure TaliusEnd;
procedure combat;

variable hostile;
variable initial :=  0;

variable rndRads;
variable rndx;


procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, STAT_max_hp) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, PID_BAG) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BACKPACK) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BROWN_BAG) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if not(initial) then begin
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 46);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 33);
		initial :=  1;
		if (global_var(QUEST_BONEYARD_3_BOMBFOLL) == 2) then begin
			if (random(0, 1)) then begin
				kill_critter(self_obj, ANIM_exploded_to_nothing_sf);
			end
			else begin
				kill_critter(self_obj, ANIM_burned_to_nothing_sf);
			end
		end
	end
	else begin
		if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
			call critter_p_proc;
		end
		else begin
			if (script_action == 3) then begin//DETAILED ON-CLICK DESCRIPTION (Binoculars icon) - description_p_proc
				call description_p_proc;
			end
			else begin
				if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
					call destroy_p_proc;
				end
				else begin
					if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
						call look_at_p_proc;
					end
					else begin
						if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
							call pickup_p_proc;
						end
						else begin
							if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
								call talk_p_proc;
							end
						end
					end
				end
			end
		end
	end
end

procedure critter_p_proc
begin
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
end

procedure description_p_proc
begin
	if (is_success(do_check(dude_obj, STAT_pe, has_trait(0, dude_obj, 0)))) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_TALIUS, 231));
	end
end

procedure destroy_p_proc
begin

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	if (local_var(4)) then begin
		display_msg(message_str(SCRIPT_TALIUS, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_TALIUS, 230));
	end
end

procedure pickup_p_proc
begin
	hostile := 1;
end

procedure talk_p_proc
begin
	script_overrides;
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (global_var(QUEST_BONEYARD_4_FIND_SPY) == 2) then begin
		call Talius41;
	end
	else begin
		if (global_var(QUEST_BONEYARD_4_FIND_SPY) == 1) then begin
			call Talius40;
		end
		else begin
			if ((game_time_hour < 600) or (game_time_hour > 1800)) then begin
				call Talius00;
			end
			else begin
				start_gdialog(274, self_obj, 4, -1, -1);
				gsay_start;
				call Talius01;
				gsay_end;
				end_dialogue;
			end
		end
	end
end

procedure Talius00
begin
	float_msg(self_obj, message_str(SCRIPT_TALIUS, 101), 0);
end

procedure Talius01
begin
	if (get_critter_stat(dude_obj, STAT_gender) == 1) then begin
		gsay_reply(274, 102);
	end
	else begin
		gsay_reply(274, 103);
	end
	giq_option(-3, 274, 104, Talius02, 50);
	giq_option(-3, 274, message_str(SCRIPT_TALIUS, 105) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_TALIUS, 106) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_TALIUS, 107), Talius05, 50);
	giq_option(4, 274, message_str(SCRIPT_TALIUS, 108) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_TALIUS, 109), Talius06, 50);
	giq_option(4, 274, 110, combat, 50);
	giq_option(4, 274, 111, Talius36, 50);
	giq_option(6, 274, message_str(SCRIPT_TALIUS, 112) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_TALIUS, 113), Talius37, 50);
	giq_option(8, 274, 114, Talius37, 50);
end

procedure Talius02
begin
	gsay_reply(274, 115);
	giq_option(-3, 274, 116, Talius03, 50);
	giq_option(-3, 274, 117, combat, 50);
end

procedure Talius03
begin
	gsay_reply(274, 118);
	giq_option(-3, 274, 119, combat, 50);
	giq_option(-3, 274, 120, Talius04, 50);
end

procedure Talius04
begin
	variable LVar0 := 0;
	if (local_var(5) == 0) then begin
		LVar0 := create_object_sid(PID_MENTATS, 0, 0, -1);
		add_mult_objs_to_inven(dude_obj, LVar0, 3);
		set_local_var(5, 1);
		gsay_message(274, 121, 50);
	end
	else begin
		gsay_message(274, 232, 50);
	end
end

procedure Talius05
begin
	gsay_reply(274, message_str(SCRIPT_TALIUS, 122) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_TALIUS, 123));
	giq_option(-3, 274, 124, Talius02, 50);
	giq_option(-3, 274, 125, combat, 50);
end

procedure Talius06
begin
	gsay_reply(274, 126);
//	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
//		giq_option(4, 274, 127, Talius07, 50);
//	end
	giq_option(4, 274, 128, Talius31, 50);
	giq_option(4, 274, 129, Talius32, 50);
end

procedure Talius07
begin
	gsay_reply(274, 130);
	giq_option(4, 274, 131, Talius08, 50);
//	if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
//		giq_option(4, 274, 132, Talius29, 50);
//	end
	giq_option(4, 274, 133, Talius30, 50);
	giq_option(4, 274, 134, combat, 50);
end

procedure Talius08
begin
	gsay_reply(274, 135);
	giq_option(4, 274, 136, TaliusEnd, 50);
	giq_option(4, 274, 137, Talius09, 50);
	giq_option(4, 274, 138, Talius09, 50);
	giq_option(4, 274, 139, combat, 50);
end

procedure Talius09
begin
	gsay_reply(274, 140);
	giq_option(4, 274, 141, Talius10, 50);
	giq_option(4, 274, 142, Talius15, 50);
	giq_option(5, 274, 143, Talius16, 50);
	giq_option(5, 274, 144, Talius17, 50);
end

procedure Talius10
begin
	gsay_reply(274, 145);
	giq_option(4, 274, 146, Talius11, 50);
	giq_option(4, 274, 147, TaliusEnd, 50);
	giq_option(4, 274, 148, Talius15, 50);
	giq_option(4, 274, 149, Talius16, 50);
	giq_option(4, 274, 150, Talius17, 50);
end

procedure Talius11
begin
	gsay_reply(274, 151);
	giq_option(4, 274, 152, Talius12, 50);
end

procedure Talius12
begin
	gsay_reply(274, 153);
	if (local_var(6) == 0) then begin
		giq_option(4, 274, 154, Talius13, 50);
	end
	giq_option(4, 274, 155, Talius14, 50);
end

procedure Talius13
begin
	variable LVar0 := 0;
	set_local_var(6, 1);
	gsay_message(274, 156, 50);
	LVar0 := create_object_sid(PID_FLAMETHROWER_FUEL, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object_sid(PID_FLAMETHROWER_FUEL, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	LVar0 := create_object_sid(PID_FLAMER, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
end

procedure Talius14
begin
	gsay_message(274, 157, 50);
end

procedure Talius15
begin
	gsay_reply(274, 158);
	giq_option(4, 274, 159, Talius16, 50);
	giq_option(4, 274, 160, Talius17, 50);
	giq_option(4, 274, 161, Talius22, 50);
	giq_option(4, 274, 162, TaliusEnd, 50);
end

procedure Talius16
begin
	gsay_reply(274, message_str(SCRIPT_TALIUS, 163) + " " + message_str(SCRIPT_TALIUS, 164));
	giq_option(4, 274, 165, Talius17, 50);
	giq_option(4, 274, 166, Talius22, 50);
	giq_option(4, 274, 167, TaliusEnd, 50);
end

procedure Talius17
begin
	gsay_message(274, 168, 50);
	gsay_reply(274, 169);
	giq_option(4, 274, 170, Talius18, 50);
	giq_option(4, 274, 171, Talius19, 50);
	giq_option(4, 274, 172, Talius21, 50);
end

procedure Talius18
begin
	gsay_message(274, 173, 50);
	gsay_reply(274, 174);
	giq_option(4, 274, 175, TaliusEnd, 50);
	giq_option(4, 274, 176, TaliusEnd, 50);
	giq_option(4, 274, 177, Talius12, 50);
end

procedure Talius19
begin
	gsay_message(274, 178, 50);
	gsay_reply(274, 179);
	giq_option(4, 274, 180, TaliusEnd, 50);
	if ((global_var(NECROP_MUTANTS_KILLED) == 2) and (local_var(6) == 0)) then begin
		giq_option(4, 274, 181, Talius20, 50);
	end
end

procedure Talius20
begin
	variable LVar0 := 0;
	set_local_var(6, 1);
	gsay_message(274, 182, 50);
	LVar0 := create_object_sid(PID_FLAMER, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
end

procedure Talius21
begin
	gsay_message(274, 183, 50);
end

procedure Talius22
begin
	gsay_reply(274, 184);
	giq_option(4, 274, 185, Talius23, 50);
	giq_option(4, 274, 186, Talius26, 50);
	giq_option(4, 274, 187, Talius27, 50);
end

procedure Talius23
begin
	gsay_reply(274, 188);
	giq_option(4, 274, 189, Talius24, 50);
	giq_option(4, 274, 190, Talius24, 50);
	giq_option(4, 274, 191, Talius25, 50);
end

procedure Talius24
begin
	gsay_message(274, 192, 50);
end

procedure Talius25
begin
	gsay_message(274, 193, 50);
end

procedure Talius26
begin
	gsay_message(274, 194, 50);
end

procedure Talius27
begin
	gsay_reply(274, 195);
	giq_option(4, 274, 196, combat, 50);
	giq_option(4, 274, 197, Talius28, 50);
end

procedure Talius28
begin
	gsay_message(274, 198, 50);
	call combat;
end

procedure Talius29
begin
	gsay_reply(274, 199);
	giq_option(4, 274, 200, Talius29a, 50);
	giq_option(4, 274, 201, combat, 50);
end

procedure Talius29a
begin
	set_global_var(QUEST_BONEYARD_4_FIND_SPY, 1);
end

procedure Talius30
begin
	gsay_message(274, 202, 50);
	call combat;
end

procedure Talius31
begin
	gsay_message(274, 203, 50);
	gsay_reply(274, 204);
	giq_option(4, 274, 205, TaliusEnd, 50);
	giq_option(4, 274, 206, Talius09, 50);
	giq_option(4, 274, 207, Talius09, 50);
	giq_option(4, 274, 208, combat, 50);
end

procedure Talius32
begin
	gsay_reply(274, 209);
	giq_option(4, 274, 210, TaliusEnd, 50);
	giq_option(4, 274, 211, Talius33, 50);
end

procedure Talius33
begin
	gsay_reply(274, 212);
	giq_option(4, 274, 213, TaliusEnd, 50);
	giq_option(6, 274, 214, Talius34, 50);
end

procedure Talius34
begin
	gsay_reply(274, 215);
	giq_option(6, 274, 216, TaliusEnd, 50);
	giq_option(8, 274, 217, Talius35, 50);
end

procedure Talius35
begin
	gsay_reply(274, 218);
	giq_option(8, 274, 219, TaliusEnd, 50);
end

procedure Talius36
begin
	gsay_message(274, 220, 50);
end

procedure Talius37
begin
	gsay_reply(274, 221);
	giq_option(6, 274, 222, Talius38, 50);
end

procedure Talius38
begin
	gsay_reply(274, 223);
	giq_option(6, 274, 224, Talius39, 50);
end

procedure Talius39
begin
	gsay_reply(274, 225);
	giq_option(6, 274, 226, TaliusEnd, 50);
	giq_option(6, 274, 227, TaliusEnd, 50);
end

procedure Talius40
begin
	float_msg(self_obj, message_str(SCRIPT_TALIUS, 228), 0);
end

procedure Talius41
begin
	float_msg(self_obj, message_str(SCRIPT_TALIUS, 229), 0);
end

procedure TaliusEnd
begin
end

procedure combat
begin
	hostile := 1;
end

procedure combat_p_proc
begin
	if (fixed_param == 2) then begin
		if (target_obj == dude_obj) then begin
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg("Combat Rads From Irradiated Critters BEGINS");
			end
			if not(global_var(FIXT_BUGFIXES_ONLY)) then begin
				variable cont := 0;// checked to see if continue to run the code after each stage
				variable CritterTYPE := 0;// 1 = Ghoul, 2 = Floater, 3 = Centaur, 4 = RadRat, 5 = GlowingOne
				if global_var(HIT_GIVES_RADS_GHOULS) > 0 then begin// HIT_GIVES_RADS_GHOULS
					if (obj_pid(self_obj) == (16777216 + 14)) or (obj_pid(self_obj) == (16777216 + 104)) or (obj_pid(self_obj) == (16777216 + 105)) or (obj_pid(self_obj) == (16777216 + 106)) or (obj_pid(self_obj) == (16777216 + 109)) or (obj_pid(self_obj) == (16777216 + 110)) or (obj_pid(self_obj) == (16777216 + 131)) or (obj_pid(self_obj) == (16777216 + 157)) or (obj_pid(self_obj) == (16777216 + 184)) then begin// 14 = Zombie Guard, 104 = Set, 105 = Garret, 106 = Zombie, 109 = Ghoul Guard, 110 = Undergrounder, 131 = Talius, 157 = Harold, 184 = Zombie
						CritterTYPE := 1;
						cont := 1;
					end
				end
				if not(continue) then begin
					if global_var(HIT_GIVES_MORE_RADS_GLOW) > 0 then begin// HIT_GIVES_MORE_RADS_GLOW
						if (obj_pid(self_obj) == (16777216 + 16)) or (obj_pid(self_obj) == (16777216 + 182)) or (obj_pid(self_obj) == (16777216 + 183)) then begin// 16 = Glowing One, 182 = Glower, 183 = Mad Glowing One
							CritterTYPE := 5;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var(HIT_GIVES_MORE_RADS_RATS) > 0 then begin// HIT_GIVES_MORE_RADS_RATS
						if (obj_pid(self_obj) == (16777216 + 160)) or (obj_pid(self_obj) == (16777216 + 161)) then begin//  160, 161 = Rad Rat
							CritterTYPE := 4;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var(HIT_GIVES_RADS_FLOATERS) > 0 then begin// HIT_GIVES_RADS_FLOATERS
						if (obj_pid(self_obj) == (16777216 + 45)) or (obj_pid(self_obj) == (16777216 + 167)) then begin//  45 = Floater, 167 = Bloody Floater
							CritterTYPE := 2;
							cont := 1;
						end
					end
				end
				if not(continue) then begin
					if global_var(HIT_GIVES_RADS_CENTAURS) > 0 then begin// HIT_GIVES_RADS_CENTAURS
						if (obj_pid(self_obj) == (16777216 + 43)) or (obj_pid(self_obj) == (16777216 + 168)) then begin//  43 = Lesser Centaur, 168 = Greater Centaur
							CritterTYPE := 3;
							cont := 1;
						end
					end
				end
				if continue then begin
					variable BonusRads := 0;
					if (CritterTYPE == 5) or (CritterTYPE == 4) then begin
						BonusRads := 1;
					end
					if (random(0, 3) + combat_difficulty + BonusRads) >= 3 then begin// CHANCE TO RUN = Easy: 25%, 50% if glowing/radrat - Normal: 50%, 75% if glowing - Brutal: 75%, 100% if glowing/radrat
						variable giveRads := 1;
						if critter_inven_obj(self_obj, 1) then begin
							if (obj_pid(critter_inven_obj(self_obj, 1)) != PID_BRASS_KNUCKLES) and (obj_pid(critter_inven_obj(self_obj, 1)) != PID_SPIKED_KNUCKLES) and (obj_pid(critter_inven_obj(self_obj, 1)) != PID_POWER_FIST) then begin// Brass Knuckles, Spiked Knuckles, Power Fist
								giveRads := 0;
							end
						end
						if critter_inven_obj(self_obj, 2) then begin
							if (obj_pid(critter_inven_obj(self_obj, 2)) != PID_BRASS_KNUCKLES) and (obj_pid(critter_inven_obj(self_obj, 2)) != PID_SPIKED_KNUCKLES) and (obj_pid(critter_inven_obj(self_obj, 2)) != PID_POWER_FIST) then begin// Brass Knuckles, Spiked Knuckles, Power Fist
								giveRads := 0;
							end
						end
						if giveRads == 1 then begin
							variable LuckRoll := 0;
							variable EnduranceRoll := 0;
							LuckRoll := do_check(dude_obj, STAT_lu, 0);
							EnduranceRoll := do_check(dude_obj, STAT_en, 0);
							rndRads := 0;
							if not(is_success(LuckRoll)) and not(is_success(EnduranceRoll)) then begin
								rndRads := random((2 + combat_difficulty + BonusRads), (3 + combat_difficulty + BonusRads));// EASY: 2-3 / 3-4 if glowing/radrat, NORMAL: 3-4 / 4-5 if glowing/radrat, BRUTAL: 4-5 / 5-6 if glowing/radrat
							end
							else begin
								if not(is_success(LuckRoll)) or not(is_success(EnduranceRoll)) then begin
									rndRads := random((1 + combat_difficulty + BonusRads), (2 + combat_difficulty + BonusRads));// EASY: 1-2 / 2-3 if glowing/radrat, NORMAL: 2-3 / 3-4 if glowing/radrat, BRUTAL: 3-4 / 4-5 if glowing/radrat
								end
								else begin
									if (random(0, 5) + BonusRads) >= 5 then begin// Chance to run if both stat checks pass: 16.67%, 33% if glowing/radrat
										rndRads := random((0 + combat_difficulty + BonusRads), (1 + combat_difficulty + BonusRads));// EASY: 0-1 / 1-2 if glowing/radrat, NORMAL: 1-2 / 2-3 if glowing/radrat, BRUTAL: 2-3 / 3-4 if glowing/radrat
									end
								end
							end
							if rndRads > 0 then begin
								call combat_rads_inc;
							end
						end
					end
				end
			end
			else begin// if (BUG_FIXES_ONLY == 1)
				if (obj_pid(self_obj) == PID_GLOWING_ONE) or (obj_pid(self_obj) == PID_RADIATED_RAT) or (obj_pid(self_obj) == PID_TOUGH_RADIATED_RAT) or (obj_pid(self_obj) == PID_GLOWER) or (obj_pid(self_obj) == PID_MAD_GLOWING_ONE) then begin
					variable rndx := 0;
					rndx := (random(1, 4) - 3);// was 1d6 - 5, is now 1d4 - 3
					if (rndx < 0) then begin
						rndx := 0;
					end
					if (rndx > 0) then begin
						radiation_inc(dude_obj, rndx);
						display_msg(message_str(SCRIPT_GENGHOUL, 1004));
					end
				end
			end
			if global_var(DEBUG_MODE_MESSAGES_ON) then begin
				debug_msg("Combat Rads From Irradiated Critters ENDS");
			end
		end
	end
end

procedure combat_rads_inc
begin
	radiation_inc(dude_obj, rndRads);
	if ((rndRads == 1) or (rndRads == 2)) then begin
		display_msg(message_str(SCRIPT_GENGHOUL, 1004));
	end
	else begin
		if ((rndRads > 2) and (rndRads <= 5)) then begin
			display_msg(message_str(SCRIPT_GENGHOUL, 1005));
		end
		else begin
			if ((rndRads > 5) and (rndRads < 10)) then begin
				display_msg(message_str(SCRIPT_GENGHOUL, 1006));
			end
		end
	end
end
