#include "..\headers\define.h"

procedure start;
procedure critter_p_proc;//    script_action == 12
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure destroy_p_proc;//    script_action == 18
variable initial :=  0;
variable hostile;
variable my_script_mode;

procedure start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, STAT_max_hp) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, PID_BAG) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BACKPACK) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BROWN_BAG) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if not(initial) then begin
		initial :=  1;
		/* TEAM_NUM */  critter_add_trait(self_obj, 1, 6, 29);
		/* AI_PACKET */  critter_add_trait(self_obj, 1, 5, 11);
		if (cur_map_index != MAP_LAFOLLWR) then begin
			//hostile := 1;
			//attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
			my_script_mode := 1;
		end
		else begin
			if (global_var(HUNTER_STATUS) == 3) then begin
				move_to(self_obj, 7000, 0);
				if (metarule(22, 0) == 0) then begin    set_obj_visibility(self_obj, 1);    end//  MAKE INVISIBLE
			end
		end
	end
	if (not(my_script_mode)) then begin
		if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
			call destroy_p_proc;
		end
		else begin
			if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
				call critter_p_proc;
			end
			else begin
				if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
					call pickup_p_proc;
				end
				else begin
					if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
						call talk_p_proc;
					end
				end
			end
		end
	end
	else begin
		if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
			call destroy_p_proc;
		end
	end
end

procedure critter_p_proc
begin
	if (hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		hostile := 0;
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
end

procedure pickup_p_proc
begin
	hostile := 1;
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	float_msg(self_obj, message_str(SCRIPT_THUG, 100), 0);
end

procedure destroy_p_proc
begin
	variable removal_ptr := 0;
	if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin// metal armor
		if random(0, 10) then begin
			removal_ptr := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR);
			rm_obj_from_inven(self_obj, removal_ptr);
			destroy_object(removal_ptr);
		end
	end
	if obj_carrying_pid_obj(self_obj, PID_RIPPER) then begin// ripper
		if random(0, 10) then begin
			removal_ptr := obj_carrying_pid_obj(self_obj, PID_RIPPER);
			rm_obj_from_inven(self_obj, removal_ptr);
			destroy_object(removal_ptr);
		end
	end
	if obj_carrying_pid_obj(self_obj, PID_SUPER_SLEDGE) then begin// supersledge
		if random(0, 10) then begin
			removal_ptr := obj_carrying_pid_obj(self_obj, PID_SUPER_SLEDGE);
			rm_obj_from_inven(self_obj, removal_ptr);
			destroy_object(removal_ptr);
		end
	end
	if obj_carrying_pid_obj(self_obj, PID_POWER_FIST) then begin// powerfist
		if random(0, 10) then begin
			removal_ptr := obj_carrying_pid_obj(self_obj, PID_POWER_FIST);
			rm_obj_from_inven(self_obj, removal_ptr);
			destroy_object(removal_ptr);
		end
	end
	if obj_carrying_pid_obj(self_obj, PID_SNIPER_RIFLE) then begin// sniper rifle
		if random(0, 10) then begin
			removal_ptr := obj_carrying_pid_obj(self_obj, PID_SNIPER_RIFLE);
			rm_obj_from_inven(self_obj, removal_ptr);
			destroy_object(removal_ptr);
		end
	end
	if obj_carrying_pid_obj(self_obj, PID_14MM_PISTOL) then begin// 14mm pistol
		if random(0, 10) then begin
			removal_ptr := obj_carrying_pid_obj(self_obj, PID_14MM_PISTOL);
			rm_obj_from_inven(self_obj, removal_ptr);
			destroy_object(removal_ptr);
		end
	end
	if obj_carrying_pid_obj(self_obj, PID_223_PISTOL) then begin// .223 pistol
		if random(0, 10) then begin
			removal_ptr := obj_carrying_pid_obj(self_obj, PID_223_PISTOL);
			rm_obj_from_inven(self_obj, removal_ptr);
			destroy_object(removal_ptr);
		end
	end
	if obj_carrying_pid_obj(self_obj, PID_PLASMA_PISTOL) then begin// plasma pistol
		if random(0, 10) then begin
			removal_ptr := obj_carrying_pid_obj(self_obj, PID_PLASMA_PISTOL);
			rm_obj_from_inven(self_obj, removal_ptr);
			destroy_object(removal_ptr);
		end
	end
	if obj_carrying_pid_obj(self_obj, PID_COMBAT_SHOTGUN) then begin// combat shotgun
		if random(0, 10) then begin
			removal_ptr := obj_carrying_pid_obj(self_obj, PID_COMBAT_SHOTGUN);
			rm_obj_from_inven(self_obj, removal_ptr);
			destroy_object(removal_ptr);
		end
	end

end
