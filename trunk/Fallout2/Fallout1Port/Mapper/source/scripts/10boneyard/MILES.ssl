/*

	Boneyard - Miles the chemist

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_MILES
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;

procedure Miles01;
procedure Miles02;
procedure Miles03;
procedure Miles04;
procedure Miles05;
procedure Miles06;
procedure Miles07;
procedure Miles08;
procedure Miles09;
procedure Miles11;
procedure Miles12;
procedure Miles13;
procedure Miles14;
procedure Miles15;
procedure Miles16;
procedure Miles17;
procedure Miles17a;
procedure Miles18;
procedure Miles19;
procedure Miles22;
procedure Miles22a;
procedure Miles23;
procedure Miles24;
procedure Miles25;
procedure Miles27;
procedure Miles28;
procedure Miles29;
procedure MilesEnd;

variable Only_Once := 1;
variable DisplayMessage := 100;

procedure Start begin
	if Only_Once then begin
		if (obj_is_carrying_obj_pid(self_obj, PID_BOTTLE_CAPS) == 0) then begin
			item_caps_adjust(self_obj, random(500, 750));
		end
		if ((global_var(BLADES_STATUS) == 9103) or (global_var(BLADES_STATUS) == 9102)) then begin
			set_self_team(TEAM_PLAYER);
		end
		else begin
			set_self_team(TEAM_LA_ADYTOWNER);
		end
		set_self_ai(AI_PEASANT);
		Only_Once := 0;
	end
end

procedure look_at_p_proc begin
	script_overrides;
	if (local_var(4) == 1) then begin
		display_msg(message_str(SCRIPT_MILES, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_MILES, 101));
	end
end

procedure description_p_proc begin
	script_overrides;
	if (local_var(4) == 1) then begin
		display_msg(message_str(SCRIPT_MILES, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_MILES, 101));
	end
end

procedure talk_p_proc begin
	dude_look_at_critter;
	if (global_var(ENEMY_ADYTUM) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 2);
	end
	else begin
		if ((local_var(4) == 1) and (get_critter_stat(dude_obj, STAT_iq) < 4)) then begin
			float_msg(self_obj, message_str(SCRIPT_MILES, 152), 0);
		end
		else begin
			if (local_var(5) == 2) then begin
				float_msg(self_obj, message_str(SCRIPT_MILES, 152), 0);
			end
			else begin
				get_reaction
				start_gdialog(249, self_obj, -1, -1, -1);
				gsay_start;
				if (local_var(4) == 0) then begin
					call Miles01;
				end
				else begin
					if (global_var(QUEST_BONEYARD_5_FIX_FARM) == 0) then begin
						DisplayMessage := 118;
						call Miles04;
					end
					else begin
						if (global_var(QUEST_BONEYARD_5_FIX_FARM) == 1) then begin
							call Miles13;
						end
						else begin
							if (global_var(QUEST_BONEYARD_5_FIX_FARM) == 9302) then begin
								call Miles18;
							end
							else begin
								if (global_var(QUEST_BONEYARD_5_FIX_FARM) == 9303) then begin
									call Miles19;
								end
								else begin
									if (global_var(QUEST_BONEYARD_5_FIX_FARM) == 9304) then begin
										if (local_var(5) == 0) then begin
											/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, PID_POWERED_ARMOR)) then begin
												call Miles22;
											end
											else begin
												call Miles22a;
											end
										end
										else begin
											if (local_var(5) == 9305) then begin
												/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, PID_POWERED_ARMOR)) then begin
													call Miles24;
												end
												else begin
													call Miles29;
												end
											end
											else begin
												/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, PID_POWERED_ARMOR)) then begin
													call Miles28;
												end
												else begin
													call Miles29;
												end
											end
										end
									end
								end
							end
						end
					end
				end
				gsay_end;
				end_dialogue;
			end
		end
	end
end

procedure damage_p_proc begin
	if source_obj == dude_obj then begin
		set_global_var(ENEMY_ADYTUM, 1);
		set_self_team(TEAM_LA_ADYTOWNER);
	end
end

procedure destroy_p_proc begin
	if source_obj == dude_obj then begin
		inc_good_critter
		set_global_var(ENEMY_ADYTUM, 1);
		set_self_team(TEAM_LA_ADYTOWNER);
	end
end

procedure critter_p_proc begin
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if (global_var(ENEMY_ADYTUM) == 1) then begin
			attack(dude_obj);
		end
	end
end

procedure pickup_p_proc begin
	set_global_var(ENEMY_ADYTUM, 1);
end

procedure Miles01 begin
	gsay_reply(249, 102);
	NOption( 103, Miles02, 4 );
	NOption( 104, Miles03, 4 );
	NOption( 105, Miles09, -3 );
end

procedure Miles02
begin
	gsay_message(249, 106, 50);
end

procedure Miles03
begin
	DisplayMessage := 107;
	call Miles04;
end

procedure Miles04
begin
	set_local_var(4, 1);
	gsay_reply(249, DisplayMessage);
	gsay_option(249, 108, Miles05, 50);
	gsay_option(249, 109, Miles06, 50);
	gsay_option(249, 110, Miles07, 50);
	gsay_option(249, 111, Miles08, 50);
end

procedure Miles05
begin
	gsay_reply(249, 112);
	gsay_option(249, 113, Miles11, 50);
end

procedure Miles06
begin
	DisplayMessage := 114;
	call Miles04;
end

procedure Miles07
begin
	DisplayMessage := 115;
	call Miles04;
end

procedure Miles08
begin
	gsay_message(249, 116, 50);
end

procedure Miles09
begin
	set_local_var(4, 1);
	gsay_message(249, 117, 50);
end

procedure Miles11
begin
	gsay_reply(249, 119);
	gsay_option(249, 120, Miles12, 50);
	gsay_option(249, 121, MilesEnd, 50);
end

procedure Miles12
begin
	gsay_message(249, 122, 50);
	set_global_var(QUEST_BONEYARD_5_FIX_FARM, 1);
end

procedure Miles13
begin
	gsay_reply(249, 123);
	if (obj_is_carrying_obj_pid(dude_obj, PID_PUMP_PARTS)) then begin
		gsay_option(249, 124, Miles15, 50);
	end
	else begin
		gsay_option(249, 125, Miles14, 50);
	end
end

procedure Miles14
begin
	gsay_message(249, 126, 50);
end

procedure Miles15
begin
	gsay_reply(249, 127);
	set_global_var(QUEST_BONEYARD_5_FIX_FARM, 9302);
	gsay_option(249, 128, Miles16, 50);
	gsay_option(249, 129, MilesEnd, 50);
end

procedure Miles16
begin
	gsay_reply(249, 130);
	gsay_option(249, 131, Miles17, 50);
	gsay_option(249, 132, Miles17a, 50);
end

procedure Miles17 begin
	variable LVar0 := 0;
	gsay_message(249, 133, 50);
	LVar0 := obj_carrying_pid_obj(dude_obj, PID_PUMP_PARTS);
	rm_obj_from_inven(dude_obj, LVar0);
	destroy_object(LVar0);
	item_caps_adjust(dude_obj, 125);
	LVar0 := create_object( PID_STIMPAK, 0, 0 );
	add_mult_objs_to_inven(dude_obj, LVar0, 3);
	set_global_var(QUEST_BONEYARD_5_FIX_FARM, 9304);
	gsay_message(249, 137, 50);
end

procedure Miles17a begin
	variable LVar0 := 0;
	UpReactLevel
	gsay_message(249, 133, 50);
	LVar0 := obj_carrying_pid_obj(dude_obj, PID_PUMP_PARTS);
	rm_obj_from_inven(dude_obj, LVar0);
	destroy_object(LVar0);
	item_caps_adjust(dude_obj, 150);
	LVar0 := create_object( PID_STIMPAK, 0, 0 );
	add_mult_objs_to_inven(dude_obj, LVar0, 4);
	set_global_var(QUEST_BONEYARD_5_FIX_FARM, 9304);
	gsay_message(249, 137, 50);
end

procedure Miles18
begin
	gsay_reply(249, 134);
	gsay_option(249, 128, Miles16, 50);
	gsay_option(249, 129, MilesEnd, 50);
end

procedure Miles19
begin
	variable LVar0 := 0;
	gsay_message(249, 135, 50);
	gsay_message(249, 136, 50);
	LVar0 := obj_carrying_pid_obj(dude_obj, PID_PUMP_PARTS);
	rm_obj_from_inven(dude_obj, LVar0);
	destroy_object(LVar0);
	item_caps_adjust(dude_obj, 250);
	LVar0 := create_object( PID_STIMPAK, 0, 0 );
	add_mult_objs_to_inven(dude_obj, LVar0, 6);
	set_global_var(QUEST_BONEYARD_5_FIX_FARM, 9304);
	gsay_message(249, 137, 50);
end

procedure Miles22
begin
	gsay_reply(249, 138);
	set_local_var(5, 9305);
	set_global_var(CHEMISTRY_BOOK, 1);
	gsay_option(249, 139, MilesEnd, 50);
	gsay_option(249, 140, Miles23, 50);
end

procedure Miles22a
begin
	gsay_message(249, 153, 50);
end

procedure Miles23
begin
	gsay_message(249, 141, 50);
end

procedure Miles24
begin
	gsay_reply(249, 142);
	if (obj_is_carrying_obj_pid(dude_obj, PID_CHEMISTRY_MANUAL)) then begin
		gsay_option(249, 143, Miles25, 50);
	end
	else begin
		gsay_option(249, 144, MilesEnd, 50);
	end
end

procedure Miles25
begin
	variable LVar0 := 0;
	gsay_reply(249, 145);
	LVar0 := obj_carrying_pid_obj(dude_obj, PID_CHEMISTRY_MANUAL);
	rm_obj_from_inven(dude_obj, LVar0);
	add_obj_to_inven(self_obj, LVar0);
	set_local_var(5, 9306);
	gsay_option(249, 146, Miles28, 50);
	gsay_option(249, 147, Miles27, 50);
end

procedure Miles27
begin
	gsay_message(249, 148, 50);
end

procedure Miles28 begin
variable Item;

	gsay_message(249, 149, 50);
	gfade_out(1);
	game_time_advance(game_ticks(1 * 60 * 60 * 24));// 1 day for bonding to occur
	game_time_advance(game_ticks(60 * 60 * 6));// 6 hours to read the books and perform pre-bonding tasks
	gfade_in(1);

	gsay_message(249, 150, 50);

	remove_pid_qty(dude_obj, PID_POWERED_ARMOR, 1)
   Item:=create_object(PID_HARDENED_POWER_ARMOR,0,0);
   add_mult_objs_to_inven(dude_obj,Item,1);

	set_local_var(5, 2);
end

procedure Miles29
begin
	gsay_message(249, 151, 50);
end

procedure MilesEnd
begin
end




