/*

	Boneyard - FoA scouts

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\mapnecro.h"

#define NAME                    SCRIPT_PETER
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
//#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;

procedure peter0;
procedure peter1;
procedure peter2;
procedure peter3;
procedure peter4;
procedure peter4a;
procedure peter5;
procedure peter6;
procedure peter7;
procedure peter8;
procedure peter9;
procedure peter10;
procedure peterend;

variable initial :=  0;

#define LVAR_Here_before 	(0)

procedure start begin
	if not(initial) then begin
		set_self_team(TEAM_LA_FOLLOWERS );
		set_self_ai( AI_FOLLOWER_GUARD );
		initial :=  1;
		if (global_var( GVAR_QUEST_BONEYARD_3_BOMBFOLL ) == 2) then begin
			if (random(0, 1)) then begin
				kill_critter(self_obj, ANIM_exploded_to_nothing_sf);
			end
			else begin
				kill_critter(self_obj, ANIM_burned_to_nothing_sf);
			end
		end
	end
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure look_at_p_proc begin
	if (local_var(LVAR_Here_before)) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_PETER, 100));
	end
end

procedure talk_p_proc begin
	dude_look_at_self;
	set_local_var(LVAR_Here_before, 1);
	script_overrides;

	if (global_var( GVAR_QUEST_BONEYARD_4_FIND_SPY ) == 1) then begin
		call peter9;
	end
	else if (global_var( GVAR_QUEST_BONEYARD_4_FIND_SPY ) == 2) then begin
		call peter10;
	end
	else if (day) then begin
		start_dialog_at_node(peter0);
	end
	else begin
		call peter8;
	end

end

procedure peter0 begin
	gsay_reply(267, 101);
	giq_option( -3, SCRIPT_PETER, 102, peter1, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_PETER, 103, peterend, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_PETER, 104, peter2, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_PETER, 105, peter7, NEUTRAL_REACTION );
end

procedure peter1 begin
	gsay_message(267, 106, 50);
end

procedure peter2 begin
	gsay_reply(267, 107);
	giq_option( 4, SCRIPT_PETER, 108, peter3, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_PETER, 109, peter4, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_PETER, 110, peter6, NEUTRAL_REACTION );
end

procedure peter3 begin
	gsay_message(267, 111, 50);
end

procedure peter4 begin
	gsay_reply(267, 112);
	giq_option( 4, SCRIPT_PETER, 113, peter4a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_PETER, 114, peter5, NEUTRAL_REACTION );
end

procedure peter4a begin
	set_global_var( GVAR_QUEST_BONEYARD_4_FIND_SPY, 1 );
end

procedure peter5 begin
	gsay_message(267, 115, 50);
end

procedure peter6 begin
	gsay_reply(267, 116);
	giq_option( 4, SCRIPT_PETER, 117, peter4a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_PETER, 118, peter5, NEUTRAL_REACTION );
end

procedure peter7 begin
	gsay_message(267, 119, 50);
end

procedure peter8 begin
	float_msg(self_obj, message_str(SCRIPT_PETER, 120), 0);
end

procedure peter9 begin
	float_msg(self_obj, message_str(SCRIPT_PETER, 121), 0);
end

procedure peter10 begin
	variable LVar0 := 0;
	float_msg(self_obj, message_str(SCRIPT_PETER, 122), 0);
	if (local_var(1) == 0) then begin
		set_local_var(1, 1);
		LVar0 := create_object( PID_STIMPAK, 0, 0 );
		add_obj_to_inven(dude_obj, LVar0);
		LVar0 := create_object( PID_STIMPAK, 0, 0 );
		add_obj_to_inven(dude_obj, LVar0);
		LVar0 := create_object( PID_STIMPAK, 0, 0 );
		add_obj_to_inven(dude_obj, LVar0);
	end
end

procedure peterend begin
end




