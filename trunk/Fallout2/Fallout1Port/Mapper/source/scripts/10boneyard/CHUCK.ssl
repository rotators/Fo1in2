/*

	Boneyard - Chuck, the tarot card guy

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\maps\laadytum.h"
#include "..\headers\boneyard.h"

#define NAME                    SCRIPT_CHUCK
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;

procedure Chuck01;
procedure Chuck02;
procedure Chuck03;
procedure Chuck04;
procedure Chuck05;
procedure Chuck06;
procedure Chuck07;
procedure Chuck08;
procedure Chuck09;
procedure Chuck10;
procedure Chuck11;
procedure Chuck12;
procedure Chuck13;
procedure Chuck14;
procedure Chuck15;
procedure Chuck16;
procedure Chuck17;
procedure Chuck18;
procedure Chuck19;
procedure Chuck20;
procedure Chuck21;
procedure Chuck22;
procedure Chuck23;
procedure ChuckCards;
procedure ChuckCards2;
procedure ChuckBye;
procedure ChuckEnd;

procedure ChuckUpReact;
procedure ChuckDownReact;

#define LVAR_Home_Tile              (7)
#define LVAR_Home_Rotation          (8)

procedure start begin
end

procedure map_enter_p_proc begin
	if (map_first_run) then begin
	   set_local_var(LVAR_Home_Tile, self_tile);
      set_local_var(LVAR_Home_Rotation, self_cur_rot);
		self_caps_adjust( random(0, 20) );
	end
	else begin
      critter_attempt_placement(self_obj,local_var(LVAR_Home_Tile), self_elevation);
      self_rotate(local_var(LVAR_Home_Rotation));
	end

	if (get_blades_attacking or get_blades_attacking_wait) then begin
		set_self_team(TEAM_PLAYER );
	end
	else begin
		set_self_team(TEAM_LA_ADYTOWNER );
	end
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_ADYTUM, 1 );
		set_self_team(TEAM_LA_ADYTOWNER );
	end
end

procedure destroy_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_ADYTUM, 1 );
		inc_good_critter
		set_self_team(TEAM_LA_ADYTOWNER );
	end
end

procedure look_at_p_proc begin
	script_overrides;
	if (local_var(4)) then begin
		display_msg(message_str(SCRIPT_CHUCK, 101));
	end
	else begin
		display_msg(message_str(SCRIPT_CHUCK, 100));
	end
end

procedure talk_p_proc begin
	dude_look_at_self;

	get_reaction
	if (local_var(4)) then begin
		start_dialog_at_node(Chuck22);
	end
	else begin
		start_dialog_at_node(Chuck01);
	end
end

procedure critter_p_proc begin
	if (self_can_see_dude) then begin
		if (global_var( GVAR_ENEMY_ADYTUM ) == 1) then begin
			attack(dude_obj);
		end
	end
end

procedure pickup_p_proc begin
	set_global_var( GVAR_ENEMY_ADYTUM, 1 );
end

procedure Chuck01 begin
	set_local_var(4, 1);
	gsay_reply( SCRIPT_CHUCK, 102 );
	NOption( 103, Chuck02, -3 );
	NOption( 104, Chuck03, 4 );
	NOption( 105, Chuck04, 4 );
	NOption( 106, Chuck05, 6 );
end

procedure Chuck02 begin
	gsay_message( SCRIPT_CHUCK, 107, 50 );
end

procedure Chuck03 begin
	gsay_reply( SCRIPT_CHUCK, 108 );
	NOption( 109, Chuck09, 4 );
	NOption( 110, Chuck14, 4 );
	GOption( 111, Chuck15, 6 );
end

procedure Chuck04 begin
	gsay_reply( SCRIPT_CHUCK, 112 );
	NOption( 113, Chuck14, 4 );
	NOption( 114, Chuck18, 4 );
	NOption( 115, ChuckBye, 4 );
end

procedure Chuck05 begin
	gsay_reply( SCRIPT_CHUCK, 117 );
	NOption( 118, ChuckBye, 4 );
	if (local_var(5) < 4) then begin
		NOption( 119, ChuckCards, 4 );
	end
end

procedure Chuck06 begin
	DownReact
	gsay_reply( SCRIPT_CHUCK, 128 );
	BOption( 129, Chuck07, 4 );
	NOption( 130, Chuck08, 4 );
end

procedure Chuck07 begin
	DownReact
	set_local_var(5, 4);
	gsay_message( SCRIPT_CHUCK, 131, 51 );
end

procedure Chuck08 begin
	UpReact
	gsay_message( SCRIPT_CHUCK, 132, 50 );
end

procedure Chuck09 begin
	gsay_reply( SCRIPT_CHUCK, 133 );
	NOption( 134, ChuckBye, 4 );
	NOption( 135, Chuck10, 4 );
	NOption( 136, Chuck19, 6 );
end

procedure Chuck10 begin
	gsay_reply( SCRIPT_CHUCK, 137 );
	NOption( 138, ChuckBye, 4 );
	NOption( 139, Chuck11, 4 );
end

procedure Chuck11 begin
	gsay_reply( SCRIPT_CHUCK, 140 );
	NOption( 134, ChuckBye, 4 );
	BOption( 141, Chuck12, 4 );
	NOption( 142, Chuck13, 4 );
end

procedure Chuck12 begin
	gsay_reply( SCRIPT_CHUCK, 143 );
	BOption( 144, Chuck07, 4 );
	NOption( 145, ChuckUpReact, 5 );
	NOption( 146, ChuckBye, 4 );
end

procedure ChuckUpReact begin
	UpReact
end

procedure Chuck13 begin
	gsay_reply( SCRIPT_CHUCK, 147 );
	if (local_var(5) < 4) then begin
		GOption( 148, ChuckCards, 4 );
	end
	BOption( 144, Chuck07, 4 );
end

procedure Chuck14 begin
	gsay_reply( SCRIPT_CHUCK, 149 );
	NOption( 150, ChuckEnd, 4 );
	NOption( 151, Chuck10, 4 );
end

procedure Chuck15 begin
	gsay_reply( SCRIPT_CHUCK, 152 );
	NOption( 153, ChuckBye, 4 );
	NOption( 150, ChuckEnd, 4 );
	NOption( 154, Chuck16, 6 );
end

procedure Chuck16 begin
	gsay_reply( SCRIPT_CHUCK, 155 );
	NOption( 156, ChuckBye, 4 );
	NOption( 157, Chuck17, 6 );
end

procedure Chuck17 begin
	gsay_reply( SCRIPT_CHUCK, 158 );
	NOption( 159, ChuckBye, 4 );
	BOption( 150, ChuckDownReact, 4 );
end

procedure ChuckDownReact begin
	DownReact
end

procedure Chuck18 begin
	set_local_var(6, 1);
	gsay_reply( SCRIPT_CHUCK, 160 );
	NOption( 146, ChuckBye, 4 );
	if (local_var(5) < 4) then begin
		NOption( 161, ChuckCards, 4 );
	end
end

procedure Chuck19 begin
	gsay_reply( SCRIPT_CHUCK, 162 );
	NOption( 146, ChuckBye, 4 );
	NOption( 163, Chuck20, 6 );
	NOption( 164, Chuck21, 6 );
end

procedure Chuck20 begin
	gsay_reply( SCRIPT_CHUCK, 165 );
	NOption( 146, ChuckBye, 4 );
	NOption( 164, Chuck21, 6 );
end

procedure Chuck21 begin
	gsay_reply( SCRIPT_CHUCK, 166 );
	NOption( 125, ChuckBye, 0 );
end

procedure Chuck22 begin
	gsay_reply( SCRIPT_CHUCK, random(167, 169) );
	NOption( 103, Chuck02, -3 );
	NOption( 170, Chuck23, 4 );
	if (local_var(5) < 4) then begin
		NOption( 171, ChuckCards, 4 );
	end
	if (local_var(6) == 0) then begin
		NOption( 172, Chuck18, 4 );
	end
end

procedure Chuck23 begin
	gsay_reply( SCRIPT_CHUCK, 173 );
	NOption( 125, ChuckBye, 0 );
end

procedure ChuckCards begin
	gsay_reply( SCRIPT_CHUCK, 120 );
	NOption( 125, ChuckCards2, 0 );
end

procedure ChuckCards2 begin
	if (local_var(5) == 0) then begin
		if (global_var( GVAR_WORLDMAPLIST_BROTHERHOOD ) < 1) then begin
			gsay_reply( SCRIPT_CHUCK, 121 );
		end
		else begin
			set_local_var(5, 1);
		end
	end
	if (local_var(5) == 1) then begin
		if (global_var( GVAR_WORLDMAPLIST_MILITARYBASE ) < 1) then begin
			gsay_reply( SCRIPT_CHUCK, 122 );
		end
		else begin
			set_local_var(5, 2);
		end
	end
	if (local_var(5) == 2) then begin
		if (global_var( GVAR_WORLDMAPLIST_MASTERS_LAIR ) < 1) then begin
			gsay_reply( SCRIPT_CHUCK, 123 );
		end
		else begin
			set_local_var(5, 3);
		end
	end
	if (local_var(5) >= 3) then begin
		gsay_reply( SCRIPT_CHUCK, 124 );
		set_critter_stat(dude_obj, STAT_lu, 1);
		display_msg(message_str(SCRIPT_GENCHAT, 167));
	end
	set_local_var(5, local_var(5) + 1);
	NOption( 126, ChuckBye, 4 );
	NOption( 127, Chuck06, 4 );
end

procedure ChuckBye begin
	gsay_message( SCRIPT_CHUCK, 116, 50 );
end

procedure ChuckEnd begin
end
