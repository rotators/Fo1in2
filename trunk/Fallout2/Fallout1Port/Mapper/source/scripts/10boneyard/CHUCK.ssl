/*

	Boneyard - Chuck, the tarot card guy

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\MAPLAADYTUM.h"

#define NAME                    SCRIPT_CHUCK
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;

procedure Chuck01;
procedure Chuck02;
procedure Chuck03;
procedure Chuck04;
procedure Chuck05;
procedure Chuck06;
procedure Chuck07;
procedure Chuck08;
procedure Chuck09;
procedure Chuck10;
procedure Chuck11;
procedure Chuck12;
procedure Chuck13;
procedure Chuck14;
procedure Chuck15;
procedure Chuck16;
procedure Chuck17;
procedure Chuck18;
procedure Chuck19;
procedure Chuck20;
procedure Chuck21;
procedure Chuck22;
procedure Chuck23;
procedure ChuckCards;
procedure ChuckCards2;
procedure ChuckBye;
procedure ChuckEnd;

procedure ChuckUpReact;
procedure ChuckDownReact;

procedure start begin
end

procedure map_enter_p_proc begin
	if (map_first_run) then begin

		if (obj_is_carrying_obj_pid(self_obj, PID_BOTTLE_CAPS) == 0) then begin
			variable LVar0;
			LVar0 := create_object( PID_BOTTLE_CAPS, 0, 0 );
			add_mult_objs_to_inven(self_obj, LVar0, random(0, 20));
			if ((global_var(BLADES_STATUS) == 9103) or (global_var(BLADES_STATUS) == 9102)) then begin
				set_self_team(TEAM_PLAYER );
			end
			else begin
				set_self_team(TEAM_LA_ADYTOWNER );
			end
		end

	end
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var(ENEMY_ADYTUM, 1);
		set_self_team(TEAM_LA_ADYTOWNER );
	end
end

procedure destroy_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var(ENEMY_ADYTUM, 1);
		inc_good_critter
		set_self_team(TEAM_LA_ADYTOWNER );
	end
end

procedure look_at_p_proc begin
	script_overrides;
	if (local_var(4)) then begin
		display_msg(message_str(SCRIPT_CHUCK, 101));
	end
	else begin
		display_msg(message_str(SCRIPT_CHUCK, 100));
	end
end

procedure talk_p_proc begin
	dude_look_at_critter;

	get_reaction
	if (local_var(4)) then begin
		start_dialog_at_node(Chuck22);
	end
	else begin
		start_dialog_at_node(Chuck01);
	end
end

procedure critter_p_proc begin
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if (global_var(ENEMY_ADYTUM) == 1) then begin
			attack(dude_obj);
		end
	end
end

procedure pickup_p_proc begin
	set_global_var(ENEMY_ADYTUM, 1);
end

procedure Chuck01 begin
	set_local_var(4, 1);
	gsay_reply(664, 102);
	giq_option(-3, 664, 103, Chuck02, 50);
	giq_option(4, 664, 104, Chuck03, 50);
	giq_option(4, 664, 105, Chuck04, 50);
	giq_option(6, 664, 106, Chuck05, 50);
end

procedure Chuck02 begin
	gsay_message(664, 107, 50);
end

procedure Chuck03 begin
	gsay_reply(664, 108);
	giq_option(4, 664, 109, Chuck09, 50);
	giq_option(4, 664, 110, Chuck14, 50);
	giq_option(6, 664, 111, Chuck15, 49);
end

procedure Chuck04 begin
	gsay_reply(664, 112);
	giq_option(4, 664, 113, Chuck14, 50);
	giq_option(4, 664, 114, Chuck18, 50);
	giq_option(4, 664, 115, ChuckBye, 50);
end

procedure Chuck05 begin
	gsay_reply(664, 117);
	giq_option(4, 664, 118, ChuckBye, 50);
	if (local_var(5) < 4) then begin
		giq_option(4, 664, 119, ChuckCards, 50);
	end
end

procedure Chuck06 begin
	DownReact
	gsay_reply(664, 128);
	giq_option(4, 664, 129, Chuck07, 51);
	giq_option(4, 664, 130, Chuck08, 50);
end

procedure Chuck07 begin
	DownReact
	set_local_var(5, 4);
	gsay_message(664, 131, 51);
end

procedure Chuck08 begin
	UpReact
	gsay_message(664, 132, 50);
end

procedure Chuck09 begin
	gsay_reply(664, 133);
	giq_option(4, 664, 134, ChuckBye, 50);
	giq_option(4, 664, 135, Chuck10, 50);
	giq_option(6, 664, 136, Chuck19, 50);
end

procedure Chuck10 begin
	gsay_reply(664, 137);
	giq_option(4, 664, 138, ChuckBye, 50);
	giq_option(4, 664, 139, Chuck11, 50);
end

procedure Chuck11 begin
	gsay_reply(664, 140);
	giq_option(4, 664, 134, ChuckBye, 50);
	giq_option(4, 664, 141, Chuck12, 51);
	giq_option(4, 664, 142, Chuck13, 50);
end

procedure Chuck12 begin
	gsay_reply(664, 143);
	giq_option(4, 664, 144, Chuck07, 51);
	giq_option(5, 664, 145, ChuckUpReact, 50);
	giq_option(4, 664, 146, ChuckBye, 50);
end

procedure ChuckUpReact begin
	UpReact
end

procedure Chuck13 begin
	gsay_reply(664, 147);
	if (local_var(5) < 4) then begin
		giq_option(4, 664, 148, ChuckCards, 49);
	end
	giq_option(4, 664, 144, Chuck07, 51);
end

procedure Chuck14 begin
	gsay_reply(664, 149);
	giq_option(4, 664, 150, ChuckEnd, 50);
	giq_option(4, 664, 151, Chuck10, 50);
end

procedure Chuck15 begin
	gsay_reply(664, 152);
	giq_option(4, 664, 153, ChuckBye, 50);
	giq_option(4, 664, 150, ChuckEnd, 50);
	giq_option(6, 664, 154, Chuck16, 50);
end

procedure Chuck16 begin
	gsay_reply(664, 155);
	giq_option(4, 664, 156, ChuckBye, 50);
	giq_option(6, 664, 157, Chuck17, 50);
end

procedure Chuck17 begin
	gsay_reply(664, 158);
	giq_option(4, 664, 159, ChuckBye, 50);
	giq_option(4, 664, 150, ChuckDownReact, 51);
end

procedure ChuckDownReact begin
	DownReact
end

procedure Chuck18 begin
	set_local_var(6, 1);
	gsay_reply(664, 160);
	giq_option(4, 664, 146, ChuckBye, 50);
	if (local_var(5) < 4) then begin
		giq_option(4, 664, 161, ChuckCards, 50);
	end
end

procedure Chuck19 begin
	gsay_reply(664, 162);
	giq_option(4, 664, 146, ChuckBye, 50);
	giq_option(6, 664, 163, Chuck20, 50);
	giq_option(6, 664, 164, Chuck21, 50);
end

procedure Chuck20 begin
	gsay_reply(664, 165);
	giq_option(4, 664, 146, ChuckBye, 50);
	giq_option(6, 664, 164, Chuck21, 50);
end

procedure Chuck21 begin
	gsay_reply(664, 166);
	giq_option(0, 664, 125, ChuckBye, 50);
end

procedure Chuck22 begin
	gsay_reply(664, random(167, 169));
	giq_option(-3, 664, 103, Chuck02, 50);
	giq_option(4, 664, 170, Chuck23, 50);
	if (local_var(5) < 4) then begin
		giq_option(4, 664, 171, ChuckCards, 50);
	end
	if (local_var(6) == 0) then begin
		giq_option(4, 664, 172, Chuck18, 50);
	end
end

procedure Chuck23 begin
	gsay_reply(664, 173);
	giq_option(0, 664, 125, ChuckBye, 50);
end

procedure ChuckCards begin
	gsay_reply(664, 120);
	giq_option(0, 664, 125, ChuckCards2, 50);
end

procedure ChuckCards2 begin
	if (local_var(5) == 0) then begin
		if (global_var(WORLDMAPLIST_BROTHERHOOD) < 1) then begin
			gsay_reply(664, 121);
		end
		else begin
			set_local_var(5, 1);
		end
	end
	if (local_var(5) == 1) then begin
		if (global_var(WORLDMAPLIST_MILITARYBASE) < 1) then begin
			gsay_reply(664, 122);
		end
		else begin
			set_local_var(5, 2);
		end
	end
	if (local_var(5) == 2) then begin
		if (global_var(WORLDMAPLIST_MASTERS_LAIR) < 1) then begin
			gsay_reply(664, 123);
		end
		else begin
			set_local_var(5, 3);
		end
	end
	if (local_var(5) >= 3) then begin
		gsay_reply(664, 124);
		set_critter_stat(dude_obj, STAT_lu, 1);
		display_msg(message_str(SCRIPT_GENCHAT, 167));
	end
	set_local_var(5, local_var(5) + 1);
	giq_option(4, 664, 126, ChuckBye, 50);
	giq_option(4, 664, 127, Chuck06, 50);
end

procedure ChuckBye begin
	gsay_message(664, 116, 50);
end

procedure ChuckEnd begin
end




