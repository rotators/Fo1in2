/*

	Boneyard - Sammael

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\maps\laadytum.h"
#include "..\headers\boneyard.h"

#define NAME                    SCRIPT_SAMMAEL
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;

procedure Sammael01;
procedure Sammael02;
procedure Sammael03;
procedure Sammael04;
procedure Sammael05;
procedure Sammael06;
procedure Sammael07;
procedure Sammael08;
procedure Sammael09;
procedure Sammael10;
procedure Sammael11;
procedure Sammael12;
procedure Sammael13;
procedure Sammael14;
procedure Sammael15;

procedure Farms01;
procedure Farms02;
procedure Farms03;
procedure Farms04;
procedure FarmsEnd;

variable tmp_hostile;
variable initial :=  0;

#define LVAR_Home_Tile              (8)
#define LVAR_Home_Rotation          (9)

procedure start begin
	if not(initial) then begin
		if (get_blades_attacking or get_blades_attacking_wait) then begin
			set_self_team(TEAM_PLAYER );
		end
		else begin
			set_self_team(TEAM_LA_ADYTOWNER );
		end
		set_self_ai( AI_REGULATORS );
		initial :=  1;
	end
end

procedure map_enter_p_proc begin
   if map_first_run then begin
	   set_local_var(LVAR_Home_Tile, self_tile);
      set_local_var(LVAR_Home_Rotation, self_cur_rot);
   end
   else begin
      critter_attempt_placement(self_obj,local_var(LVAR_Home_Tile), self_elevation);
      self_rotate(local_var(LVAR_Home_Rotation));
   end
end

procedure critter_p_proc begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end

	if boneyard_invaded then begin
      kill_critter(self_obj, ANIM_stand);
	end

	// WTF?
	/*else begin
		if (tile_distance_objs(dude_obj, self_obj) > dude_perception) then begin
			if not(is_loading_game) then begin
			   set_self_invisible;
			end//  MAKE INVISIBLE
		end
		else begin
			if not(boneyard_invaded) then begin
				if not(is_loading_game) then begin    set_self_visible;    end//  MAKE VISIBLE
			end
			else begin
				kill_critter(self_obj, ANIM_stand);
			end
		end
	end*/
end

procedure damage_p_proc
begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_ADYTUM, 1 );
set_self_team(TEAM_LA_ADYTOWNER );
	end
end

procedure destroy_p_proc begin
	inc_good_critter
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_ADYTUM, 1 );
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	if (local_var(4)) then begin
		display_msg(message_str(SCRIPT_SAMMAEL, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_SAMMAEL, 101));
	end
end

procedure pickup_p_proc
begin
	set_global_var( GVAR_ENEMY_ADYTUM, 1 );
end

procedure talk_p_proc
begin
	dude_look_at_self;
	start_gdialog(254, self_obj, 4, -1, -1);
	gsay_start;
	if (local_var(4)) then begin
		call Sammael14;
	end
	else begin
		call Sammael01;
	end
	gsay_end;
	end_dialogue;
end

procedure Sammael01
begin
	gsay_reply(254, 102);
	giq_option( 4, SCRIPT_SAMMAEL, message_str(SCRIPT_SAMMAEL, 103) + dude_name + message_str(SCRIPT_SAMMAEL, 104), Sammael02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SAMMAEL, 105, Sammael03, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_SAMMAEL, 106, Sammael15, NEUTRAL_REACTION );
end

procedure Sammael02
begin
	set_local_var(4, 1);
	gsay_reply(254, 107);
	if (global_var( GVAR_QUEST_BONEYARD_5_FIX_FARM ) == 1) and (local_var(7) != 2) then begin
		giq_option( 4, SCRIPT_SAMMAEL, 140, Farms01, NEUTRAL_REACTION );
		set_local_var(7, 2);
	end
	giq_option( 4, SCRIPT_SAMMAEL, 108, Sammael04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SAMMAEL, 109, Sammael05, NEUTRAL_REACTION );
end

procedure Farms01
begin
	gsay_reply(254, 141);
	giq_option( 4, SCRIPT_SAMMAEL, 142, FarmsEnd, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SAMMAEL, 143, Farms03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SAMMAEL, 144, Farms02, NEUTRAL_REACTION );
end

procedure FarmsEnd
begin
	gsay_message(254, 145, 50);
end

procedure Farms02
begin
	gsay_message(254, 146, 50);
end

procedure Farms03
begin
	gsay_message(254, 147, 50);
	set_local_var(5, 1);
end

procedure Sammael03
begin
	gsay_message(254, 110, 50);
end

procedure Sammael04
begin
	gsay_reply(254, 111);
	giq_option( 4, SCRIPT_SAMMAEL, 112, Sammael06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SAMMAEL, 113, Sammael07, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_SAMMAEL, 114, Sammael08, NEUTRAL_REACTION );
	giq_option( 0, SCRIPT_SAMMAEL, 115, Sammael05, NEUTRAL_REACTION );
end

procedure Sammael05
begin
	gsay_message(254, 116, 50);
end

procedure Sammael06
begin
	gsay_reply(254, 117);
	giq_option( 4, SCRIPT_SAMMAEL, 118, Sammael07, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_SAMMAEL, 119, Sammael08, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SAMMAEL, 120, Sammael05, NEUTRAL_REACTION );
end

procedure Sammael07
begin
	gsay_message(254, 121, 50);
end

procedure Sammael08
begin
	gsay_reply(254, 122);
	giq_option( 4, SCRIPT_SAMMAEL, 123, Sammael09, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SAMMAEL, 124, Sammael10, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SAMMAEL, 125, Sammael11, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SAMMAEL, 126, Sammael12, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SAMMAEL, 127, Sammael13, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_SAMMAEL, 128, Sammael05, NEUTRAL_REACTION );
end

procedure Sammael09
begin
	gsay_message(254, 129, 50);
	call Sammael08;
end

procedure Sammael10
begin
	gsay_message(254, 130, 50);
	gsay_message(254, 131, 50);
	call Sammael08;
end

procedure Sammael11
begin
	gsay_message(254, 132, 50);
	call Sammael08;
end

procedure Sammael12
begin
	gsay_message(254, 133, 50);
	call Sammael08;
end

procedure Sammael13
begin
	gsay_message(254, 134, 50);
	gsay_message(254, 135, 50);
	call Sammael08;
end

procedure Sammael14
begin
	gsay_reply(254, 136);
	if ((global_var( GVAR_QUEST_BONEYARD_5_FIX_FARM ) > 2) or party_has_item(PID_FARM_PARTS) /*dude_item_count( PID_FARM_PARTS )*/) and (local_var(6) != 2) then begin
		giq_option( 4, SCRIPT_SAMMAEL, 148, Farms04, NEUTRAL_REACTION );
		giq_option( 4, SCRIPT_SAMMAEL, 149, Farms04, NEUTRAL_REACTION );
	end
	else begin
		if get_quest_farm_active and (local_var(7) != 2) then begin
			giq_option( 4, SCRIPT_SAMMAEL, 140, Farms01, NEUTRAL_REACTION );
			set_local_var(7, 2);
		end
		giq_option( 4, SCRIPT_SAMMAEL, 137, Sammael04, NEUTRAL_REACTION );
		giq_option( 4, SCRIPT_SAMMAEL, 138, Sammael05, NEUTRAL_REACTION );
	end
end

procedure Sammael15
begin
	gsay_message(254, 139, 50);
end

procedure Farms04
begin
	variable LVar0;
	gsay_message(254, 150, 50);
	set_local_var(6, 2);
	if local_var(5) then begin
		gsay_message(254, 151, 50);
		LVar0 := create_object( PID_RIPPER, 0, 0 );
		add_mult_objs_to_inven(dude_obj, LVar0, 1);
	end
	else begin
		gsay_message(254, 152, 50);
		LVar0 := create_object( PID_BOTTLE_CAPS, 0, 0 );
		add_mult_objs_to_inven(dude_obj, LVar0, 200);
	end
end







