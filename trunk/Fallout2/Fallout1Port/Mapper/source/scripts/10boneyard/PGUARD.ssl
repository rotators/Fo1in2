/*

	Boneyard - Regulator guard standing behind Jon Zimmermann

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\maplaadytum.h"
#include "..\headers\boneyard.h"

#define NAME                    SCRIPT_PGUARD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure use_obj_on_p_proc;
procedure timed_event_p_proc;

import variable JonPtr;

variable Only_Once := 1;
variable PsstTime;
variable tmp_hostile;

procedure Start begin
	if Only_Once then begin
		Only_Once := 0;
		if (self_caps == 0) then begin
			self_caps_adjust( random(1, 10) );
		end
		set_self_team(TEAM_LA_REGULATORS );
		set_self_ai( AI_REGULATORS );

		add_timer_event(self_obj, game_ticks(random(1, 3)), 1);

		if (local_var(5) == 0) then begin
			set_map_var(MVAR_RegulatorCount, map_var(MVAR_RegulatorCount) + 1);
			set_local_var(5, 1);
		end
	end
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_REGULATR, 100));
end

procedure description_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_REGULATR, 100));
end

procedure talk_p_proc begin
	dude_look_at_critter;
	if ((global_var( GVAR_ENEMY_ADYTUM ) == 1) or (global_var( GVAR_DUDE_ENEMY_REGULATORS ) == 1)) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 2);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_REGULATR, random(134, 138)), 0);
	end
end

procedure critter_p_proc begin
	if (self_can_see_dude) then begin
		if ((global_var( GVAR_ENEMY_ADYTUM ) == 1) or (global_var( GVAR_DUDE_ENEMY_REGULATORS ) == 1)) then begin
			attack(dude_obj);
		end
	end
	if ((((game_time / 10) - PsstTime) >= 30) and (tile_distance_objs(self_obj, dude_obj) <= 4) and (global_var( GVAR_ENEMY_ADYTUM ) == 0) and (global_var( GVAR_DUDE_ENEMY_REGULATORS ) == 0)) then begin
		float_msg(self_obj, message_str(SCRIPT_REGULATR, random(134, 138)), 0);
		PsstTime := game_time / 10;
	end
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_DUDE_ENEMY_REGULATORS, 1 );
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);

	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_DUDE_ENEMY_REGULATORS, 1 );
	end
	inc_evil_critter
	rm_timer_event(self_obj);
	set_map_var(MVAR_RegulatorCount, (map_var(MVAR_RegulatorCount) - 1));
	if (map_var(MVAR_RegulatorCount) == 0) then begin
		terminate_combat;
	end
end

procedure pickup_p_proc begin
	set_global_var( GVAR_DUDE_ENEMY_REGULATORS, 1 );
end

procedure use_obj_on_p_proc begin
	set_global_var( GVAR_DUDE_ENEMY_REGULATORS, 1 );
end

procedure timed_event_p_proc begin
	if (get_zimmermann_turned or get_blades_attacking) then begin
		if (local_var(4) == 0) then begin
			set_local_var(4, 1);
			float_msg(self_obj, message_str(SCRIPT_REGULATR, 139), 2);
			attack_complex(JonPtr, 0, 1, 100, 250, 300, 0, 128); // The guard will always kill Zimmermann!
		end
	end
	else begin
		add_timer_event(self_obj, game_ticks(random(1, 3)), 1);
	end
end
