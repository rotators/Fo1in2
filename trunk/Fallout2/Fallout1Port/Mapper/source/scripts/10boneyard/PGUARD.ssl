#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure look_at_p_proc;//    script_action == 21
procedure description_p_proc;//    script_action == 3
procedure talk_p_proc;//    script_action == 11
procedure critter_p_proc;//    script_action == 12
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure pickup_p_proc;//    script_action == 4
procedure use_obj_on_p_proc;//    script_action == 7
procedure timed_event_p_proc;//    script_action == 22

import variable JonPtr;

variable Only_Once := 1;
variable PsstTime;
variable Hostile;



procedure Start
begin
	fixt_critter_healing
	
	if Only_Once then begin
		Only_Once := 0;
		/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_BOTTLE_CAPS) == 0) then begin
			item_caps_adjust(self_obj, random(1, 10));
		end
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 89);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 29);
		add_timer_event(self_obj, game_ticks(random(1, 3)), 1);
		if (local_var(5) == 0) then begin
			set_map_var(1, map_var(1) + 1);
			set_local_var(5, 1);
		end
	end
	if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
		call talk_p_proc;
	end
	else begin
		if (script_action == 21) then begin// 21 is look_at, 3 is description (Binoculars)
			call look_at_p_proc;
		end
		else begin
			if (script_action == 7) then begin//<-- use_obj_on_p_proc
				call use_obj_on_p_proc;
			end
			else begin
				if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
					call pickup_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
					else begin
						if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
							call critter_p_proc;
						end
						else begin
							if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
								call timed_event_p_proc;
							end
						end
					end
				end
			end
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_REGULATR, 100));
end

procedure description_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_REGULATR, 100));
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if ((global_var(ENEMY_ADYTUM) == 1) or (global_var(DUDE_ENEMY_REGULATORS) == 1)) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 2);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_REGULATR, random(134, 138)), 0);
	end
end

procedure critter_p_proc
begin
	if (obj_can_see_obj(self_obj, dude_obj)) then begin
		if ((global_var(ENEMY_ADYTUM) == 1) or (global_var(DUDE_ENEMY_REGULATORS) == 1)) then begin
			attack(dude_obj);
		end
	end
	if ((((game_time / 10) - PsstTime) >= 30) and (tile_distance_objs(self_obj, dude_obj) <= 4) and (global_var(ENEMY_ADYTUM) == 0) and (global_var(DUDE_ENEMY_REGULATORS) == 0)) then begin
		float_msg(self_obj, message_str(SCRIPT_REGULATR, random(134, 138)), 0);
		PsstTime := game_time / 10;
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(DUDE_ENEMY_REGULATORS, 1);//  ENEMY_REGULATOR == 1
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(DUDE_ENEMY_REGULATORS, 1);//  ENEMY_REGULATOR == 1
	end
	if source_obj == dude_obj then begin
		set_global_var(NUM_BAD_MONSTERS_KILLED, global_var(NUM_BAD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		if ((global_var(NUM_BAD_MONSTERS_KILLED) % 6) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, global_var(PLAYER_REPUTATION_GENERAL) + 1);
		end
	end
	rm_timer_event(self_obj);
	set_map_var(1, (map_var(1) - 1));
	if (map_var(1) == 0) then begin
		terminate_combat;
	end
end

procedure pickup_p_proc
begin
	set_global_var(DUDE_ENEMY_REGULATORS, 1);//  ENEMY_REGULATOR == 1
end

procedure use_obj_on_p_proc
begin
	set_global_var(DUDE_ENEMY_REGULATORS, 1);//  ENEMY_REGULATOR == 1
end

procedure timed_event_p_proc
begin
	if ((global_var(ZIMMERMAN_STATUS) == 9003) or (global_var(BLADES_STATUS) == 9103)) then begin
		if (local_var(4) == 0) then begin
			set_local_var(4, 1);
			float_msg(self_obj, message_str(SCRIPT_REGULATR, 139), 2);
			attack_complex(JonPtr, 0, 1, 100, 250, 300, 0, 128);
		end
	end
	else begin
		add_timer_event(self_obj, game_ticks(random(1, 3)), 1);
	end
end
