/*

	Boneyard - Regulator

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\mapnecro.h"

#define NAME                    SCRIPT_REGULATR
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure timed_event_p_proc;

variable Only_Once := 1;
variable PsstTime;
variable tmp_hostile;

procedure Start begin
	if Only_Once then begin
		Only_Once := 0;
		/* has how many? */    if (self_caps == 0) then begin
			self_caps_adjust( random(1, 10) );
		end
		set_self_team(TEAM_LA_REGULATORS );
		set_self_ai( AI_REGULATORS );
		add_timer_event(self_obj, game_ticks(random(1, 3)), 1);
		if (local_var(4) == 0) then begin
			set_map_var(1, map_var(1) + 1);
			set_local_var(4, 1);
		end
	end
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_REGULATR, 100));
end

procedure description_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_REGULATR, 100));
end

procedure talk_p_proc begin
	dude_look_at_critter;
	if ((global_var( GVAR_ENEMY_ADYTUM ) == 1) or (global_var( GVAR_DUDE_ENEMY_REGULATORS ) == 1)) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 2);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_REGULATR, random(134, 138)), 0);
	end
end

procedure critter_p_proc begin
	variable LVar0 := 0;
	if (self_can_see_dude) then begin
		if ((global_var( GVAR_ENEMY_ADYTUM ) == 1) or (global_var( GVAR_DUDE_ENEMY_REGULATORS ) == 1)) then begin
			attack(dude_obj);
		end
	end
	LVar0 := global_var( GVAR_REGULATR_SOMETHING_0 );
	if ((((game_time / 10) - LVar0) >= 5) and (tile_distance_objs(self_obj, dude_obj) <= 4) and (global_var( GVAR_ENEMY_ADYTUM ) == 0) and (global_var( GVAR_DUDE_ENEMY_REGULATORS ) == 0)) then begin
		float_msg(self_obj, message_str(SCRIPT_REGULATR, random(134, 138)), 0);
		LVar0 := game_time / 10;
		set_global_var( GVAR_REGULATR_SOMETHING_0, LVar0 );
	end
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_DUDE_ENEMY_REGULATORS, 1 );
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);

	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_DUDE_ENEMY_REGULATORS, 1 );
	end
	inc_evil_critter

	rm_timer_event(self_obj);
	set_map_var(1, (map_var(1) - 1));
	if (map_var(1) == 0) then begin
		terminate_combat;
	end
end

procedure pickup_p_proc begin
	set_global_var( GVAR_DUDE_ENEMY_REGULATORS, 1 );
end

procedure timed_event_p_proc begin
	animate_move_obj_to_tile(self_obj, tile_num_in_direction(self_tile, random(0, 5), random(1, 5)), 0);
	add_timer_event(self_obj, game_ticks(random(1, 3)), 1);
end
