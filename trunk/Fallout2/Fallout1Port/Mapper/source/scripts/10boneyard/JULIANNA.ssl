#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11
procedure timed_event_p_proc;//    script_action == 22

procedure Julianna01;
procedure Julianna02;
procedure Julianna03;
procedure Julianna04;
procedure Julianna05;
procedure Julianna06;
procedure Julianna07;
procedure Julianna08;
procedure Julianna09;
procedure Julianna10;
procedure JuliannaEnd;

procedure flee_dude;

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;

variable initial :=  0;
variable round_counter;

#define LVAR_Sleeping 							(6)

procedure start
begin
	

	if not(initial) then begin
		initial :=  1;
		if ((global_var(BLADES_STATUS) == 9103) or (global_var(BLADES_STATUS) == 9102)) then begin
			critter_add_trait( self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, TEAM_PLAYER );
		end
		else begin
			critter_add_trait( self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, TEAM_LA_ADYTOWNER );
		end
		sleep_time := 1930;
		wake_time := 830;
		sleep_tile := 23151;
		home_tile := 22749;
	end
end

procedure critter_p_proc
begin
	if (local_var(5) and (local_var(6) == 0) and (tile_distance_objs(self_obj, dude_obj) < 8)) then begin
		call flee_dude;
	end
	else begin
		sleeping
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_ADYTUM, 1);
		critter_add_trait( self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, TEAM_LA_ADYTOWNER );
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_ADYTUM, 1);
		critter_add_trait( self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, TEAM_LA_ADYTOWNER );
	end
	inc_good_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	if (local_var(4)) then begin
		display_msg(message_str(SCRIPT_JULIANNA, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_JULIANNA, 101));
	end
end

procedure pickup_p_proc
begin
	set_local_var(5, 1);
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	if (local_var(5)) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, 102), 0);
	end
	else begin
		start_gdialog(257, self_obj, 4, -1, -1);
		gsay_start;
		if (global_var(QUEST_BONEYARD_2_ROMERO) < 3) then begin
			call Julianna01;
		end
		else begin
			call Julianna10;
		end
		gsay_end;
		end_dialogue;
	end
	if (global_var(QUEST_BONEYARD_2_ROMERO) == 2) then begin
		if (local_var(7) == 0) then begin
			set_local_var(7, 1);
			display_msg(message_str(SCRIPT_JULIANNA, 126));
			give_exp_points(250);
		end
	end
end

procedure timed_event_p_proc
begin
	float_msg(self_obj, message_str(SCRIPT_JULIANNA, 124), 0);
	display_msg(message_str(SCRIPT_JULIANNA, 125));
	critter_dmg( self_obj, 200, DMG_normal_dam );
end

procedure flee_dude
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;
	while(LVar1 < 5) do begin
		if (tile_distance(tile_num(dude_obj), tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
			LVar0 := tile_num_in_direction(tile_num(self_obj), LVar1, 3);
			LVar2 := tile_distance(tile_num(dude_obj), LVar0);
		end
		LVar1 := LVar1 + 1;
	end
	animate_move_obj_to_tile(self_obj, LVar0, 0);
end

procedure Julianna01
begin
	gsay_reply(257, 102);
	giq_option(-3, 257, 103, JuliannaEnd, 50);
	giq_option(4, 257, 104, JuliannaEnd, 50);
	if (global_var(QUEST_BONEYARD_2_ROMERO) == 1) then begin
		giq_option(0, 257, 105, Julianna06, 50);
	end
	if (not(local_var(4))) then begin
		giq_option(4, 257, 106, Julianna02, 50);
	end
end

procedure Julianna02
begin
	set_local_var(4, 1);
	gsay_reply(257, 107);
	giq_option(4, 257, 108, Julianna03, 50);
	giq_option(4, 257, 109, Julianna04, 50);
end

procedure Julianna03
begin
	gsay_reply(257, 110);
	giq_option(4, 257, 111, Julianna05, 50);
	Goodbyes;
	giq_option(4, 634, exit_line, JuliannaEnd, 50);
end

procedure Julianna04
begin
	gsay_reply(257, 112);
	Goodbyes;
	giq_option(4, 634, exit_line, JuliannaEnd, 50);
end

procedure Julianna05
begin
	gsay_reply(257, 113);
	Goodbyes;
	giq_option(4, 634, exit_line, JuliannaEnd, 50);
end

procedure Julianna06
begin
	gsay_reply(257, 114);
	giq_option(0, 257, 115, Julianna07, 50);
	giq_option(0, 257, 116, Julianna08, 50);
	/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, PID_GOLD_LOCKET)) then begin
		giq_option(0, 257, 117, Julianna09, 50);
	end
end

procedure Julianna07
begin
	gsay_message(257, 118, 50);
	add_timer_event(self_obj, 1, 1);
end

procedure Julianna08
begin
	gsay_reply(257, 119);
	giq_option(4, 257, 120, JuliannaEnd, 50);
	/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, PID_GOLD_LOCKET)) then begin
		giq_option(4, 257, 121, Julianna09, 50);
	end
end

procedure Julianna09
begin
	variable LVar0 := 0;
	LVar0 := obj_carrying_pid_obj(dude_obj, PID_GOLD_LOCKET);
	rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, PID_GOLD_LOCKET));
	add_obj_to_inven(self_obj, LVar0);
	gsay_message(257, 122, 50);
	set_global_var(QUEST_BONEYARD_2_ROMERO, 2);
end

procedure Julianna10
begin
	gsay_message(257, 123, 50);
end

procedure JuliannaEnd
begin
end



