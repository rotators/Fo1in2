/*

	Boneyard - Romero, Blades

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\MAPNECRO.h"

#define NAME                    SCRIPT_ROMERO
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

/* Standard Script Procedures */
procedure start;
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure description_p_proc;//    script_action == 3
procedure talk_p_proc;//    script_action == 11

procedure show_true_name;
procedure show_false_name;
procedure Romero00;
procedure Romero01;
procedure Romero02;
procedure Romero03;
procedure Romero04;
procedure Romero05;
procedure Romero06;
procedure Romero07;
procedure Romero08;
procedure Romero09;
procedure Romero10;
procedure Romero11;
procedure Romero12;
procedure Romero13;
procedure Romero14;
procedure Romero15;
procedure RomeroCombat;
procedure RomeroEnd;
procedure GiveLocket;

variable name;
variable asked;
variable initial :=  0;
variable tmp_hostile;

procedure damage_p_proc;//    script_action == 14

procedure start begin
	if not(initial) then begin
		name := message_str(SCRIPT_ROMERO, 100);
		set_self_team(TEAM_LA_BLADES );
		set_self_ai( AI_BLADES );
		initial :=  1;
	end
end

procedure destroy_p_proc
begin
   inc_good_critter
	if (source_obj == dude_obj) then begin
		set_global_var(ENEMY_BLADES, 1);
	end
end

procedure look_at_p_proc
begin
	call description_p_proc;
end

procedure description_p_proc
begin
	if ((global_var(BLADES_STATUS) == 9101) or (global_var(BLADES_STATUS) == 2)) then begin
		call show_true_name;
	end
	else begin
		if ((dude_luck > 6) or (dude_iq > 6)) then begin
			call show_true_name;
		end
		else begin
			if (dude_iq < 4) then begin
				call show_false_name;
			end
			else begin
				if (random(0, 1)) then begin
					call show_true_name;
				end
				else begin
					call show_false_name;
				end
			end
		end
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	if (dude_iq < 4) then begin
		display_msg(message_str(SCRIPT_GENCHAT, 175));
	end
	else begin
		start_gdialog(285, self_obj, 4, -1, -1);
		gsay_start;
		set_local_var(0, 1);
		if (global_var(QUEST_BONEYARD_2_ROMERO) == 3) then begin
			call Romero15;
		end
		else begin
			if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
				call Romero06;
			end
			else begin
				if (global_var(QUEST_BONEYARD_2_ROMERO) == 2) then begin
					call Romero13;
				end
				else begin
					if (global_var(QUEST_BONEYARD_1_ME_BLADE) == 2) then begin
						if (not(local_var(1))) then begin
							call Romero07;
						end
						else begin
							call Romero14;
						end
					end
					else begin
						call Romero00;
					end
				end
			end
		end
		gsay_end;
		end_dialogue;
	end
end

procedure show_true_name
begin
	script_overrides;
	if (local_var(0)) then begin
		display_msg(message_str(SCRIPT_ROMERO, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_ROMERO, 103));
	end
end

procedure show_false_name
begin
	script_overrides;
	display_msg(message_str(SCRIPT_ROMERO, random(104, 110)));
	script_overrides;
end

procedure Romero00
begin
	gsay_reply(285, 111);
	giq_option( 4, SCRIPT_ROMERO, 112, Romero01, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 113, RomeroCombat, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 114, Romero03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 115, RomeroEnd, NEUTRAL_REACTION );
end

procedure Romero01
begin
	gsay_reply(285, 116);
	giq_option( 4, SCRIPT_ROMERO, 117, Romero02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 118, Romero03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 119, Romero03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 120, RomeroCombat, NEUTRAL_REACTION );
end

procedure Romero02
begin
	gsay_message(285, 121, 50);
end

procedure Romero03
begin
	gsay_reply(285, 122);
	giq_option( 4, SCRIPT_ROMERO, 123, Romero04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 124, RomeroCombat, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 125, RomeroEnd, NEUTRAL_REACTION );
end

procedure Romero04
begin
	gsay_reply(285, 126);
	giq_option( 4, SCRIPT_ROMERO, 127, Romero05, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 128, RomeroEnd, NEUTRAL_REACTION );
end

procedure Romero05
begin
	gsay_message(285, 129, 50);
end

procedure Romero06
begin
	gsay_message(285, 130, 50);
end

procedure Romero07
begin
	set_local_var(1, 1);
	gsay_reply(285, 131);
	giq_option( 4, SCRIPT_ROMERO, 132, Romero08, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 133, Romero09, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 134, Romero11, NEUTRAL_REACTION );
end

procedure Romero08
begin
	gsay_message(285, 135, 50);
	call GiveLocket;
end

procedure Romero09
begin
	gsay_reply(285, 136);
	giq_option( 4, SCRIPT_ROMERO, 137, Romero10, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 138, Romero12, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 139, Romero11, NEUTRAL_REACTION );
end

procedure Romero10
begin
	gsay_reply(285, 140);
	giq_option( 4, SCRIPT_ROMERO, 141, GiveLocket, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 142, Romero11, NEUTRAL_REACTION );
end

procedure Romero11
begin
	gsay_message(285, 143, 50);
end

procedure Romero12
begin
	gsay_reply(285, 144);
	giq_option( 4, SCRIPT_ROMERO, 145, Romero11, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_ROMERO, 146, Romero08, NEUTRAL_REACTION );
end

procedure Romero13
begin
	gsay_message(285, 147, 50);
	set_global_var(QUEST_BONEYARD_2_ROMERO, 3);
end

procedure Romero14
begin
	gsay_message(285, 148, 50);
end

procedure Romero15
begin
	gsay_message(285, 149, 50);
end

procedure RomeroCombat
begin
	set_global_var(ENEMY_BLADES, 1);
	attack(dude_obj);
end

procedure RomeroEnd
begin
end

procedure GiveLocket
begin
	variable LVar0 := 0;
	set_global_var(QUEST_BONEYARD_2_ROMERO, 1);
	LVar0 := create_object( PID_GOLD_LOCKET, 0, 0 );
	add_obj_to_inven(dude_obj, LVar0);
end

procedure damage_p_proc
begin
	if (source_obj == dude_obj) then begin
		set_global_var(ENEMY_BLADES, 1);
	end
end




