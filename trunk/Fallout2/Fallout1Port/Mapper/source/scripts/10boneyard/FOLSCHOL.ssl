#include "..\headers\define.h"

#define NAME                    SCRIPT_FOLSCHOL

#include "..\headers\command.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure look_at_p_proc;//    script_action == 21
procedure description_p_proc;//    script_action == 3
procedure talk_p_proc;//    script_action == 11
procedure critter_p_proc;//    script_action == 12
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure timed_event_p_proc;//    script_action == 22
procedure pickup_p_proc;//    script_action == 4
procedure map_enter_p_proc;//	15
procedure push_p_proc;

variable Only_Once := 1;
variable PsstTime;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure push_p_proc begin
end

procedure Start
begin
	
	
	if Only_Once then begin
		Only_Once := 0;
		/* has how many? */    if (self_item_count( PID_BOTTLE_CAPS ) == 0) then begin
			item_caps_adjust(self_obj, random(1, 10));
		end
		set_self_team(TEAM_LA_FOLLOWERS );
		add_timer_event(self_obj, game_ticks(random(3, 5)), 1);
	end
	if script_action == 15 then begin
		call map_enter_p_proc;
	end
end

procedure map_enter_p_proc
begin
	if global_var( GVAR_FOLLOWERS_LEFT ) == 0 then begin
		set_global_var( GVAR_FOLLOWERS_LEFT, 24 );
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_FOLSCHOL, 100));
end

procedure description_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_FOLSCHOL, 100));
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	if (global_var( GVAR_ENEMY_FOLLOWERS ) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 2);
	end
	else begin
		if (global_var( GVAR_MASTER_BLOWN ) == 1) then begin
			float_msg(self_obj, message_str(SCRIPT_FOLSCHOL, random(115, 119)), 0);
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_FOLSCHOL, random(101, 114)), 0);
		end
	end
end

procedure critter_p_proc
begin
	variable LVar0 := 0;
	LVar0 := global_var( GVAR_FOLSCHOL_SOMETHING_0 );
	if ((((game_time / 10) - LVar0) >= 10) and (tile_distance_objs(self_obj, dude_obj) <= 4) and (global_var( GVAR_ENEMY_FOLLOWERS ) == 0)) then begin
		if (global_var( GVAR_MASTER_BLOWN ) == 1) then begin
			float_msg(self_obj, message_str(SCRIPT_FOLSCHOL, random(115, 119)), 0);
		end
		else begin
			float_msg(self_obj, message_str(SCRIPT_FOLSCHOL, random(101, 114)), 0);
		end
		LVar0 := game_time / 10;
		set_global_var( GVAR_FOLSCHOL_SOMETHING_0, LVar0 );
	end
	else begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			if (global_var( GVAR_ENEMY_FOLLOWERS ) == 1) then begin
				attack(dude_obj);
			end
		end
	end
end

procedure damage_p_proc
begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_FOLLOWERS, 1 );
	end
end

procedure destroy_p_proc
begin
	set_global_var( GVAR_FOLLOWERS_LEFT, (global_var( GVAR_FOLLOWERS_LEFT ) - 1) );
	rm_timer_event(self_obj);

	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_FOLLOWERS, 1 );
	end
	inc_good_critter		
	rm_timer_event(self_obj);
end

procedure timed_event_p_proc
begin
	animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(1, 5)), 0);
	add_timer_event(self_obj, game_ticks(random(3, 5)), 1);
end

procedure pickup_p_proc
begin
	set_global_var( GVAR_ENEMY_FOLLOWERS, 1 );
end





