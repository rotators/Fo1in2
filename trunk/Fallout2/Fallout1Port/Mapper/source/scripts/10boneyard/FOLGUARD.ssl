/*

	Boneyard - FoA guards

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\mapnecro.h"

#define NAME                    SCRIPT_FOLGUARD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
//#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;

procedure guard0;
procedure guard1;
procedure guard2;
procedure guard3;
procedure guard4;
procedure guard5;
procedure guard6;
procedure guard7;
procedure guard8;
procedure guard9;
procedure guard10;
procedure guard11;
procedure guard12;
procedure guard13;
procedure guard14;
procedure guard15;
procedure guard16;
procedure guard16a;
procedure guard17;
procedure guard18;
procedure guard19;
procedure guard20;
procedure guard21;
procedure guard22;
procedure guard23;
procedure combat;
procedure guardend;

variable tmp_hostile;
variable initial :=  0;

import variable removal_ptr;

procedure start begin
	if not(initial) then begin
		set_self_team( TEAM_LA_FOLLOWERS );
		if (local_var(0) == 0) then begin
			if (self_is_female) then begin
				set_local_var(0, random(100, 104));
			end
			else begin
				set_local_var(0, random(105, 109));
			end
		end
		if (global_var( GVAR_QUEST_BONEYARD_3_BOMBFOLL ) == 2) then begin
			if (random(0, 1)) then begin
				kill_critter(self_obj, ANIM_exploded_to_nothing_sf);
			end
			else begin
				kill_critter(self_obj, ANIM_burned_to_nothing_sf);
			end
		end
		initial :=  1;
	end
end

procedure critter_p_proc begin
	if (map_var(1) == 1) then begin
		self_walk_to_tile( tile_num_in_direction(dude_tile, random(0, 6), random(3, 7)) );
	end
	else begin
		if ((map_var(1) == 2) and self_can_see_dude) then begin
			tmp_hostile := 1;
		end
	end
	if (global_var( GVAR_QUEST_BONEYARD_3_BOMBFOLL ) == 2) then begin
		removal_ptr := self_obj;
	end
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin
		if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
			if (local_var(1) or global_var( GVAR_ENEMY_FOLLOWERS )) then begin
				tmp_hostile := 1;
			end
		end
	end
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_local_var(1, 1);
	end
end

procedure destroy_p_proc begin
	inc_good_critter
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_FOLLOWERS, 1 );
	end
end

procedure look_at_p_proc begin
	display_msg(message_str(SCRIPT_FOLGUARD, local_var(0)));
end

procedure talk_p_proc begin
	script_overrides;
	dude_look_at_self;
	if (local_var(1) or global_var( GVAR_ENEMY_FOLLOWERS )) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 0);
	end
	else begin
		if (global_var( GVAR_QUEST_BONEYARD_4_FIND_SPY ) == 1) then begin
			start_dialog_at_node(guard16);
		end
		else if (global_var( GVAR_QUEST_BONEYARD_4_FIND_SPY ) == 2) then begin
			start_dialog_at_node(guard22);
		end
		else begin
			start_dialog_at_node(guard0);
		end
	end
end

procedure guard0 begin
	gsay_reply(264, 110);
	giq_option( -3, SCRIPT_FOLGUARD, 111, guard1, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FOLGUARD, message_str(SCRIPT_FOLGUARD, 112) + dude_name + message_str(SCRIPT_FOLGUARD, 113), guard4, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FOLGUARD, message_str(SCRIPT_FOLGUARD, 114) + dude_name + message_str(SCRIPT_FOLGUARD, 115), combat, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_FOLGUARD, 116, guard11, NEUTRAL_REACTION );
end

procedure guard1 begin
	gsay_reply(264, 117);
	giq_option( -3, SCRIPT_FOLGUARD, message_str(SCRIPT_FOLGUARD, 118) + dude_name + message_str(SCRIPT_FOLGUARD, 119), combat, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_FOLGUARD, message_str(SCRIPT_FOLGUARD, 120) + dude_name + message_str(SCRIPT_FOLGUARD, 121), guard2, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_FOLGUARD, message_str(SCRIPT_FOLGUARD, 122), guard3, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_FOLGUARD, message_str(SCRIPT_FOLGUARD, 123) + dude_name + message_str(SCRIPT_FOLGUARD, 124), guard3, NEUTRAL_REACTION );
end

procedure guard2 begin
	gsay_message(264, 125, 50);
end

procedure guard3 begin
	gsay_message(264, 126, 50);
end

procedure guard4 begin
	gsay_reply(264, 127);
	giq_option( 4, SCRIPT_FOLGUARD, 128, guard5, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FOLGUARD, 129, combat, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FOLGUARD, 130, guard6, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FOLGUARD, 131, guard10, NEUTRAL_REACTION );
end

procedure guard5 begin
	gsay_message(264, 132, 50);
end

procedure guard6 begin
	gsay_reply(264, 133);
	giq_option( 4, SCRIPT_FOLGUARD, 134, guard5, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FOLGUARD, 135, guard7, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FOLGUARD, 136, guard9, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FOLGUARD, 137, guard8, NEUTRAL_REACTION );
end

procedure guard7 begin
	gsay_reply(264, 138);
	giq_option( 4, SCRIPT_FOLGUARD, 139, guard5, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FOLGUARD, 140, guard8, NEUTRAL_REACTION );
end

procedure guard8 begin
	gsay_message(264, 141, 50);
end

procedure guard9 begin
	gsay_reply(264, 142);
	giq_option( 4, SCRIPT_FOLGUARD, 143, guardend, NEUTRAL_REACTION );
end

procedure guard10 begin
	gsay_reply(264, 144);
	giq_option( 4, SCRIPT_FOLGUARD, 145, guard5, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FOLGUARD, 146, guard8, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FOLGUARD, 147, guard6, NEUTRAL_REACTION );
end

procedure guard11 begin
	gsay_reply(264, 148);
	giq_option( 6, SCRIPT_FOLGUARD, 149, guardend, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_FOLGUARD, 150, guard12, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_FOLGUARD, 151, guard15, NEUTRAL_REACTION );
end

procedure guard12 begin
	gsay_reply(264, 152);
	giq_option( 6, SCRIPT_FOLGUARD, 153, guardend, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_FOLGUARD, 154, guard13, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_FOLGUARD, 155, guard14, NEUTRAL_REACTION );
end

procedure guard13 begin
	gsay_reply(264, 156);
	giq_option( 6, SCRIPT_FOLGUARD, 157, guardend, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_FOLGUARD, 158, combat, NEUTRAL_REACTION );
end

procedure guard14 begin
	gsay_message(264, 159, 50);
end

procedure guard15 begin
	gsay_reply(264, 160);
	giq_option( 6, SCRIPT_FOLGUARD, 161, guardend, NEUTRAL_REACTION );
end

procedure guard16 begin
	gsay_reply(264, 162);
	giq_option( 4, SCRIPT_FOLGUARD, 163, guard17, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FOLGUARD, 164, guard19, NEUTRAL_REACTION );
	giq_option( 6, SCRIPT_FOLGUARD, 165, guard16a, NEUTRAL_REACTION );
end

procedure guard16a begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -10))) then begin
		call guard20;
	end
	else begin
		call guard21;
	end
end

procedure guard17 begin
	gsay_reply(264, 166);
	giq_option( 4, SCRIPT_FOLGUARD, 167, guard18, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FOLGUARD, 168, guardend, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FOLGUARD, 169, combat, NEUTRAL_REACTION );
end

procedure guard18 begin
	gsay_reply(264, 170);
	giq_option( 4, SCRIPT_FOLGUARD, 171, guardend, NEUTRAL_REACTION );
end

procedure guard19 begin
	gsay_message(264, 172, 50);
	call combat;
end

procedure guard20 begin
	gsay_message(264, 173, 50);
end

procedure guard21 begin
	gsay_message(264, 174, 50);
	call combat;
end

procedure guard22 begin
	gsay_reply(264, 175);
	giq_option( 4, SCRIPT_FOLGUARD, 176, guardend, NEUTRAL_REACTION );
	if (global_var( GVAR_SLIDE_TRAIN_FOLLOWERS ) == 0) then begin
		giq_option( 4, SCRIPT_FOLGUARD, 177, guard23, NEUTRAL_REACTION );
	end
end

procedure guard23 begin
	variable LVar0 := 0;
	LVar0 := 4 * 3600;
	set_global_var( GVAR_SLIDE_TRAIN_FOLLOWERS, 1 );
	gsay_reply(264, 178);
	gfade_out(1);
	game_time_advance(game_ticks(LVar0));
	gfade_in(1);
	giq_option( 4, SCRIPT_FOLGUARD, 179, guardend, NEUTRAL_REACTION );
end

procedure combat begin
	tmp_hostile := 1;
end

procedure guardend begin
end
