/*

	Boneyard - Guard at the moat bridge.

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_MOATGRD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;

procedure Moat00;
procedure Moat01;
procedure Moat02;
procedure Moat03;
procedure Moat04;
procedure Moat05;
procedure MoatEnd;

procedure MoatCombat;

variable Only_Once := 1;
variable DestTile;

#define LVAR_Home_Tile              (4)
#define LVAR_Home_Rotation          (7)

procedure Start begin
	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_LA_GUN_RUNNERS );
		set_self_ai( AI_GUNRUNNERS );
		if (local_var(LVAR_Home_Tile) == 0) then begin
			DestTile := self_tile;
			set_local_var(LVAR_Home_Tile, DestTile);
		end
	end
end

procedure map_enter_p_proc begin
	if (not(is_loading_game)) then begin
		move_to(self_obj, local_var(LVAR_Home_Tile), 0);
      self_rotate(local_var(LVAR_Home_Rotation));
	end

   if map_first_run then
      self_caps_adjust( random(2, 20) );
end

procedure pickup_p_proc begin
	set_global_var( GVAR_DUDE_ENEMY_BLADES, 1 );
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_MOATGRD, 100));
end

procedure description_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_MOATGRD, 100));
end

procedure talk_p_proc begin
	dude_look_at_self;
	if (global_var( GVAR_DUDE_ENEMY_BLADES ) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 2);
	end
	else begin
		get_reaction
		start_gdialog(6, self_obj, -1, -1, -1);
		gsay_start;
		call Moat00;
		gsay_end;
		end_dialogue;
	end
end

procedure critter_p_proc begin
	if (self_tile != DestTile) then begin
		self_walk_to_tile( DestTile );
	end
	else begin
		self_rotate( 2 );
	end
	if (self_can_see_dude) then begin
		if (global_var( GVAR_DUDE_ENEMY_BLADES ) == 1) then begin
			attack(dude_obj);
		end
	end
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_DUDE_ENEMY_BLADES, 1 );
	end
end

procedure destroy_p_proc begin
	rm_timer_event(self_obj);

	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_DUDE_ENEMY_BLADES, 1 );
	end
	inc_good_critter
end

procedure timed_event_p_proc begin
	if (fixed_param == 1) then begin
		if (tile_distance_objs(self_obj, dude_obj) < 5) then begin
			set_global_var( GVAR_DUDE_ENEMY_BLADES, 1 );
			attack(dude_obj);
		end
	end
end

procedure Moat00
begin
	gsay_reply(6, 101);
	giq_option( 4, SCRIPT_MOATGRD, 103, Moat02, NEUTRAL_REACTION );
	if (local_var(5) == 0) then begin
		giq_option( 4, SCRIPT_MOATGRD, 104, Moat05, NEUTRAL_REACTION );
		giq_option( 4, SCRIPT_MOATGRD, 115, Moat03, NEUTRAL_REACTION );
	end
	else begin
		giq_option( 4, SCRIPT_MOATGRD, 119, Moat04, NEUTRAL_REACTION );
		giq_option( 4, SCRIPT_MOATGRD, 118, Moat04, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_MOATGRD, 111, MoatCombat, BAD_REACTION );
	giq_option( -3, SCRIPT_MOATGRD, 102, Moat01, NEUTRAL_REACTION );
end

procedure Moat01
begin
	gsay_message(6, 107, 50);
	add_timer_event(self_obj, game_ticks(10), 1);
	BottomReact
end

procedure Moat02
begin
	gsay_message(6, 107, 50);
	add_timer_event(self_obj, game_ticks(10 * 2), 1);
	BottomReact
end

procedure Moat03
begin
	gsay_message(6, 116, 50);
	DestTile := 26299;
	set_local_var(5, 1);
end

procedure Moat04
begin
	gsay_message(6, 117, 50);
	DestTile := 26299;
end

procedure Moat05
begin
	gsay_message(6, 113, 50);
	DestTile := 26299;
	set_local_var(5, 1);
end

procedure MoatCombat
begin
	add_timer_event(self_obj, game_ticks(10), 1);
	BottomReact
end

procedure MoatEnd
begin
end
