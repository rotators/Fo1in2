#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure look_at_p_proc;//    script_action == 21
procedure description_p_proc;//    script_action == 3
procedure talk_p_proc;//    script_action == 11
procedure critter_p_proc;//    script_action == 12
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure timed_event_p_proc;//    script_action == 22
procedure map_enter_p_proc;//    script_action == 15
procedure pickup_p_proc;//    script_action == 4

procedure Moat00;
procedure Moat01;
procedure Moat02;
procedure Moat03;
procedure Moat04;
procedure Moat05;
procedure MoatEnd;

procedure MoatCombat;

variable Only_Once := 1;
variable DestTile;

procedure Start
begin


	if Only_Once then begin
		Only_Once := 0;
		/* has how many? */    if (self_caps == 0) then begin
			self_caps_adjust( random(2, 20) );
		end
		set_self_team(TEAM_LA_GUN_RUNNERS );
		set_self_ai( AI_GUNRUNNERS );
		if (local_var(4) == 0) then begin
			DestTile := self_tile;
			set_local_var(4, DestTile);
		end
	end
	if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
		call talk_p_proc;
	end
	else begin
		if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
			call map_enter_p_proc;
		end
		else begin
			if (script_action == 21) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
				call look_at_p_proc;
			end
			else begin
				if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
					call pickup_p_proc;
				end
				else begin
					if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
						call destroy_p_proc;
					end
					else begin
						if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
							call critter_p_proc;
						end
						else begin
							if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
								call timed_event_p_proc;
							end
							else begin
								if (script_action == 3) then begin
									call description_p_proc;
								end
								else begin
									if (script_action == 14) then begin
										call damage_p_proc;
									end
								end
							end
						end
					end
				end
			end
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_MOATGRD, 100));
end

procedure description_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_MOATGRD, 100));
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	if (global_var( GVAR_DUDE_ENEMY_BLADES ) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 2);
	end
	else begin
		get_reaction
		start_gdialog(6, self_obj, -1, -1, -1);
		gsay_start;
		call Moat00;
		gsay_end;
		end_dialogue;
	end
end

procedure critter_p_proc
begin
	if (self_tile != DestTile) then begin
		self_walk_to_tile( DestTile );
	end
	else begin
		self_rotate( 2 );
	end
	if (self_can_see_dude) then begin
		if (global_var( GVAR_DUDE_ENEMY_BLADES ) == 1) then begin
			attack(dude_obj);
		end
	end
end

procedure damage_p_proc
begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_DUDE_ENEMY_BLADES, 1 );
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_DUDE_ENEMY_BLADES, 1 );
	end
	inc_good_critter
	rm_timer_event(self_obj);
end

procedure timed_event_p_proc
begin
	if (fixed_param == 1) then begin
		if (tile_distance_objs(self_obj, dude_obj) < 5) then begin
			set_global_var( GVAR_DUDE_ENEMY_BLADES, 1 );
			attack(dude_obj);
		end
	end
end

procedure map_enter_p_proc
begin
	if (not(is_loading_game)) then begin
		move_to(self_obj, local_var(4), 0);
		self_rotate( 2 );
	end
end

procedure pickup_p_proc
begin
	set_global_var( GVAR_DUDE_ENEMY_BLADES, 1 );
end

procedure Moat00
begin
	gsay_reply(6, 101);
	giq_option( 4, SCRIPT_MOATGRD, 103, Moat02, NEUTRAL_REACTION );
	if (local_var(5) == 0) then begin
		giq_option( 4, SCRIPT_MOATGRD, 104, Moat05, NEUTRAL_REACTION );
		giq_option( 4, SCRIPT_MOATGRD, 115, Moat03, NEUTRAL_REACTION );
	end
	else begin
		giq_option( 4, SCRIPT_MOATGRD, 119, Moat04, NEUTRAL_REACTION );
		giq_option( 4, SCRIPT_MOATGRD, 118, Moat04, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_MOATGRD, 111, MoatCombat, BAD_REACTION );
	giq_option( -3, SCRIPT_MOATGRD, 102, Moat01, NEUTRAL_REACTION );
end

procedure Moat01
begin
	gsay_message(6, 107, 50);
	add_timer_event(self_obj, game_ticks(10), 1);
	BottomReact
end

procedure Moat02
begin
	gsay_message(6, 107, 50);
	add_timer_event(self_obj, game_ticks(10 * 2), 1);
	BottomReact
end

procedure Moat03
begin
	gsay_message(6, 116, 50);
	DestTile := 26299;
	set_local_var(5, 1);
end

procedure Moat04
begin
	gsay_message(6, 117, 50);
	DestTile := 26299;
end

procedure Moat05
begin
	gsay_message(6, 113, 50);
	DestTile := 26299;
	set_local_var(5, 1);
end

procedure MoatCombat
begin
	add_timer_event(self_obj, game_ticks(10), 1);
	BottomReact
end

procedure MoatEnd
begin
end
