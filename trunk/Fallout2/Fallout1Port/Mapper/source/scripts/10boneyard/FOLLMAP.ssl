#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;
procedure map_enter_p_proc;//    script_action == 15
procedure map_update_p_proc;//    script_action == 23
procedure map_exit_p_proc;//    script_action == 16

procedure add_party;
procedure update_party;
procedure remove_party;
procedure Lighting;
procedure Darkness;
procedure Invasion;

export variable Uthern_ptr;
export variable Orfeo_ptr;
export variable removal_ptr;

variable party_elevation;
variable dude_start_hex;
variable player_elevation;
variable dude_carrying_bomb;
variable invaderPtr;

export variable Ian_ptr;
export variable Dog_ptr;
export variable Tycho_ptr;
export variable Katja_ptr;
export variable Tandi_ptr;

procedure start
begin
	if (script_action == 15) then begin//map_enter_p_proc (or "map_init") called when entering from World Map, on green "exit" grids, SOME ladders, doesn't appear to call on elevators or manholes
		call map_enter_p_proc;
	end
	else begin
		if (script_action == 23) then begin//map_update_p_proc -- called every dozen seconds or so, & additionally on certain events (exit dialog, end combat, load map, etc)
			call map_update_p_proc;
		end
		else begin
			if (script_action == 16) then begin//map_exit_p_proc (also appears as "remove_party"!) - called on red exit grids
				call map_exit_p_proc;
			end
		end
	end
end

procedure map_enter_p_proc
begin
	set_global_var(MARK_LA_2, 1);
	call Lighting;
//	if (metarule(14, 0)) then begin
//		variable Critter := 0;
//		Critter := create_object_sid(16777220, 0, 0, 271);// new Followers go here
//		critter_attempt_placement(Critter, 22482, 0);
//	end
	if ((map_first_run) and (global_var(FOLLOWERS_INVADED) != 1)) then begin
		display_msg(message_str(SCRIPT_SHADYWST, 114));
	end
	if (global_var(QUEST_BONEYARD_3_BOMBFOLL) == 2) then begin
		if (is_success(roll_vs_skill(dude_obj, SKILL_TRAPS, 0))) then begin
			display_msg(message_str(SCRIPT_SHADYWST, 118));
		end
		else begin
			display_msg(message_str(SCRIPT_SHADYWST, 117));
		end
	end
	if ((global_var(FOLLOWERS_INVADED) == 1) and (metarule(22, 0) == 0) and (map_var(2) == 0)) then begin
		set_map_var(2, 1);
		kill_critter_type(PID_THUG_BLACK_METAL, 0);
		kill_critter_type(PID_THUG_FEMALE_METAL, 0);
		kill_critter_type(PID_THUG_FEMALE_YELLOW, 0);
		kill_critter_type(PID_AVELLONE, 0);
		kill_critter_type(PID_CITIZEN_MALE_LEATHER, 0);
		kill_critter_type(PID_THUG_MALE_LEATHER, 0);
		kill_critter_type(PID_CITIZEN_PUNK, 0);
		kill_critter_type(PID_NICOLE, 0);
		kill_critter_type(PID_TALIUS, 0);
		if (global_var(KATJA_HIRELING_STATUS) != 2) then begin
			kill_critter_type(PID_KATJA, 0);
		end
		invaderPtr := create_object_sid(PID_MASTER_NIGHTKIN, 0, 0, SCRIPT_UTHERN);
		critter_attempt_placement(invaderPtr, 11517, 0);
		invaderPtr := create_object_sid(PID_SUPER_NIGHTKIN, 0, 0, SCRIPT_THSUPMUT);
		critter_attempt_placement(invaderPtr, 12102, 0);
		invaderPtr := create_object_sid(PID_SUPER_NIGHTKIN, 0, 0, SCRIPT_THSUPMUT);
		critter_attempt_placement(invaderPtr, 17119, 0);
		invaderPtr := create_object_sid(PID_SUPER_NIGHTKIN, 0, 0, SCRIPT_THSUPMUT);
		critter_attempt_placement(invaderPtr, 13115, 0);
		invaderPtr := create_object_sid(PID_TOUGH_NIGHTKIN, 0, 0, SCRIPT_FLSUPMUT);
		critter_attempt_placement(invaderPtr, 12706, 0);
		invaderPtr := create_object_sid(PID_TOUGH_NIGHTKIN, 0, 0, SCRIPT_FLSUPMUT);
		critter_attempt_placement(invaderPtr, 12094, 0);
		invaderPtr := create_object_sid(PID_TOUGH_NIGHTKIN, 0, 0, SCRIPT_FLSUPMUT);
		critter_attempt_placement(invaderPtr, 16723, 0);
		invaderPtr := create_object_sid(PID_TOUGH_NIGHTKIN, 0, 0, SCRIPT_FLSUPMUT);
		critter_attempt_placement(invaderPtr, 18323, 0);
		invaderPtr := create_object_sid(PID_MASTERS_PET_MAN, 0, 0, SCRIPT_ORFEO);
		critter_attempt_placement(invaderPtr, 18490, 0);
		invaderPtr := create_object_sid(PID_CHILD_OF_CATHEDRAL, 0, 0, SCRIPT_CHIDSCOL);
		critter_attempt_placement(invaderPtr, 20286, 0);
		invaderPtr := create_object_sid(PID_CHILD_OF_CATHEDRAL, 0, 0, SCRIPT_CHIDSCOL);
		critter_attempt_placement(invaderPtr, 18478, 0);
		invaderPtr := create_object_sid(PID_CHILD_OF_CATHEDRAL, 0, 0, SCRIPT_CHIDSCOL);
		critter_attempt_placement(invaderPtr, 16082, 0);
		invaderPtr := create_object_sid(PID_CHILD_OF_CATHEDRAL, 0, 0, SCRIPT_CHIDSCOL);
		critter_attempt_placement(invaderPtr, 16472, 1);
		invaderPtr := create_object_sid(PID_CHILD_OF_CATHEDRAL, 0, 0, SCRIPT_CHIDSCOL);
		critter_attempt_placement(invaderPtr, 18872, 1);
		invaderPtr := create_object_sid(PID_CHILD_OF_CATHEDRAL, 0, 0, SCRIPT_CHIDSCOL);
		critter_attempt_placement(invaderPtr, 15282, 1);
		invaderPtr := create_object_sid(PID_CHILD_OF_CATHEDRAL, 0, 0, SCRIPT_CHIDSCOL);
		critter_attempt_placement(invaderPtr, 15496, 1);
		invaderPtr := create_object_sid(PID_CHILD_OF_CATHEDRAL, 0, 0, SCRIPT_CHIDSCOL);
		critter_attempt_placement(invaderPtr, 20489, 1);
		invaderPtr := create_object_sid(PID_CHILD_OF_CATHEDRAL, 0, 0, SCRIPT_CHIDINIT);
		critter_attempt_placement(invaderPtr, 20095, 0);
		invaderPtr := create_object_sid(PID_CHILD_OF_CATHEDRAL, 0, 0, SCRIPT_CHIDINIT);
		critter_attempt_placement(invaderPtr, 20500, 0);
		invaderPtr := create_object_sid(PID_CHILD_OF_CATHEDRAL, 0, 0, SCRIPT_CHIDINIT);
		critter_attempt_placement(invaderPtr, 18468, 0);
		invaderPtr := create_object_sid(PID_CHILD_OF_CATHEDRAL, 0, 0, SCRIPT_CHIDINIT);
		critter_attempt_placement(invaderPtr, 18082, 1);
		invaderPtr := create_object_sid(PID_CHILD_OF_CATHEDRAL, 0, 0, SCRIPT_CHIDINIT);
		critter_attempt_placement(invaderPtr, 17698, 1);
		invaderPtr := create_object_sid(PID_CHILD_OF_CATHEDRAL, 0, 0, SCRIPT_CHIDINIT);
		critter_attempt_placement(invaderPtr, 17896, 1);
		invaderPtr := create_object_sid(PID_MASTERS_PET_MAN, 0, 0, SCRIPT_CHDSCOUT);
		critter_attempt_placement(invaderPtr, 21718, 0);
		invaderPtr := create_object_sid(PID_MASTERS_PET_MAN, 0, 0, SCRIPT_CHDSCOUT);
		critter_attempt_placement(invaderPtr, 23712, 0);
		invaderPtr := create_object_sid(PID_MASTERS_PET_MAN, 0, 0, SCRIPT_CHDSCOUT);
		critter_attempt_placement(invaderPtr, 20307, 0);
		invaderPtr := create_object_sid(PID_MASTERS_PET_MAN, 0, 0, SCRIPT_CHDGUARD);
		critter_attempt_placement(invaderPtr, 22486, 0);
		invaderPtr := create_object_sid(PID_MASTERS_PET_MAN, 0, 0, SCRIPT_CHDGUARD);
		critter_attempt_placement(invaderPtr, 22679, 0);
		invaderPtr := create_object_sid(PID_MASTERS_PET_MAN, 0, 0, SCRIPT_CHDGUARD);
		critter_attempt_placement(invaderPtr, 15867, 0);
	end
	/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, PID_BRIEFCASE) != 0) then begin
		dude_carrying_bomb := 1;
	end
	if (global_var(LOAD_MAP_INDEX) == 10) then begin
		override_map_start(11917 % 200, 11917 / 200, 0, 5);
	end
	else begin
		if (global_var(LOAD_MAP_INDEX) == 11) then begin
			override_map_start(18890 % 200, 18890 / 200, 0, 5);
		end
		else begin
			override_map_start(82, 114, 0, 5);
		end
	end
	call add_party;
end

procedure map_update_p_proc
begin
	call Lighting;
	if (removal_ptr) then begin
		destroy_object(removal_ptr);
		removal_ptr := 0;
	end
	call update_party;
end

procedure map_exit_p_proc
begin
	if (dude_carrying_bomb == 1) then begin
		/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, PID_BRIEFCASE) == 0) then begin
			set_global_var(QUEST_BONEYARD_3_BOMBFOLL, 2);
		end
	end
	call remove_party;
end

procedure Lighting
begin
	variable LVar0 := 0;
	LVar0 := game_time_hour;
	if ((LVar0 >= 600) and (LVar0 < 700)) then begin
		set_light_level(LVar0 - 600 + 40);
	end
	else begin
		if ((LVar0 >= 700) and (LVar0 < 1800)) then begin
			set_light_level(100);
		end
		else begin
			if ((LVar0 >= 1800) and (LVar0 < 1900)) then begin
				set_light_level(100 - (LVar0 - 1800));
			end
			else begin
				set_light_level(40);
			end
		end
	end
end

procedure add_party
begin
	set_add_party
end

procedure update_party
begin
	set_update_party
end

procedure remove_party
begin
	set_remove_party
end

procedure Darkness
begin
	set_light_level(40);
end

procedure Invasion
begin
		check_invasion
end
