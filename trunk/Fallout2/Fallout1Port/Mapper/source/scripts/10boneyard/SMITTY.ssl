#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure look_at_p_proc;//    script_action == 21
procedure description_p_proc;//    script_action == 3
procedure talk_p_proc;//    script_action == 11
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure pickup_p_proc;//    script_action == 4
procedure Smitty01;
procedure Smitty02;
procedure Smitty03;
procedure Smitty04;
procedure Smitty05;
procedure Smitty06;
procedure Smitty07;
procedure Smitty08;
procedure Smitty09;
procedure Smitty10;
procedure Smitty11;
procedure Smitty12;
procedure Smitty14;
procedure Smitty14a;
procedure Smitty15;
procedure SmittyEnd;

variable Only_Once := 1;
variable DisplayMessage := 100;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure Start
begin
	if local_var(12) != 1 then begin// Fallout Fixt lvar12 - this code block heals critter to full HP one time (first time player enters the map) to make sure they always start with full HP.
		if (map_first_run) then begin// Fallout Fixt lvar12 - first visit to map?
			if metarule(22, 0) == 0 then begin// Fallout Fixt lvar12 - Not currently loading a save?
				if get_critter_stat(self_obj, STAT_max_hp) > 0 then begin critter_heal(self_obj, 999); end//    if obj_is_carrying_obj_pid(self_obj, PID_BAG) > 0 then begin display_msg("S-bag " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BACKPACK) > 0 then begin display_msg("Pack " + proto_data(obj_pid(self_obj), 1)); end  if obj_is_carrying_obj_pid(self_obj, PID_BROWN_BAG) > 0 then begin display_msg("M-bag " + proto_data(obj_pid(self_obj), 1)); end
				if global_var(ARMOR_EQUIP_MOD) then begin if critter_inven_obj(self_obj, 0) <= 0 then begin// Equip held armor if not currently wearing any.
					variable A; if obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING COMBAT ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_COMBAT_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING METAL ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_METAL_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER ARMOR..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_ARMOR); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING LEATHER JACKET..."); A := obj_carrying_pid_obj(self_obj, PID_LEATHER_JACKET); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end else begin if obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE) then begin debug_msg("Fallout Fixt - Warning: CRITTER " + obj_pid(self_obj) + " HAD ARMOR BUT EMPTY ARMOR SLOT. EQUIPPING ROBES..."); A := obj_carrying_pid_obj(self_obj, PID_PURPLE_ROBE); rm_obj_from_inven(self_obj, A); add_obj_to_inven(self_obj, A); wield_obj_critter(self_obj, A); end end end end end end end
				set_local_var(12, 1);
			end
		end
	end
	if Only_Once then begin
		if (not(metarule(22, 0)) and (obj_is_carrying_obj_pid(self_obj, PID_BOTTLE_CAPS) == 0)) then begin
			item_caps_adjust(self_obj, random(500, 750));
		end
		if ((global_var(BLADES_STATUS) == 9103) or (global_var(BLADES_STATUS) == 9102)) then begin
			critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 0);
		end
		else begin
			critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 49);
		end
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 6);
		Only_Once := 0;
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	if (local_var(4) == 1) then begin
		display_msg(message_str(SCRIPT_SMITTY, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_SMITTY, 101));
	end
end

procedure description_p_proc
begin
	script_overrides;
	if (local_var(4) == 1) then begin
		display_msg(message_str(SCRIPT_SMITTY, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_SMITTY, 101));
	end
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (global_var(ENEMY_ADYTUM) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 2);
	end
	else begin
		if ((local_var(4) == 1) and (get_critter_stat(dude_obj, STAT_iq) < 4)) then begin
			float_msg(self_obj, message_str(SCRIPT_SMITTY, 117), 0);
		end
		else begin
			if (local_var(5) == 2) then begin
				float_msg(self_obj, message_str(SCRIPT_SMITTY, 131), 0);
			end
			else begin
				call get_reaction;
				start_gdialog(250, self_obj, -1, -1, -1);
				gsay_start;
				if (global_var(QUEST_BONEYARD_5_FIX_FARM) == 9303) then begin
					call Smitty11;
				end
				else begin
					if (global_var(QUEST_BONEYARD_5_FIX_FARM) == 9304) then begin
						if (local_var(5) == 0) then begin
							call Smitty12;
						end
						else begin
							if (local_var(5) == 9307) then begin
								/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, PID_PLASMA_RIFLE)) then begin
									call Smitty14;
								end
								else begin
									call Smitty15;
								end
							end
						end
					end
					else begin
						if (local_var(1) < 2) then begin
							DisplayMessage := 103;
							call Smitty01;
						end
						else begin
							DisplayMessage := 102;
							call Smitty01;
						end
					end
				end
				gsay_end;
				end_dialogue;
			end
		end
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_ADYTUM, 1);
critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 49);
	end
end

procedure destroy_p_proc
begin

	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if ((global_var(NUM_GOOD_MONSTERS_KILLED) % 2) == 0) then begin
			set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 1));
		end
		set_global_var(ENEMY_ADYTUM, 1);
critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 49);
	end
end

procedure pickup_p_proc
begin
	set_global_var(ENEMY_ADYTUM, 1);
end

procedure Smitty01
begin
	gsay_reply(250, DisplayMessage);
	DisplayMessage := 112;
	if (local_var(4) == 0) then begin
		giq_option(4, 250, 104, Smitty03, 50);
	end
	if ((global_var(QUEST_BONEYARD_5_FIX_FARM) < 9303) and (global_var(QUEST_BONEYARD_5_FIX_FARM) > 2)) then begin
		giq_option(4, 250, 105, Smitty10, 50);
	end
	giq_option(4, 250, 106, Smitty02, 50);
	giq_option(4, 250, 107, Smitty04, 50);
	giq_option(4, 250, 108, Smitty06, 50);
	giq_option(-3, 250, 109, Smitty05, 50);
end

procedure Smitty02
begin
	DisplayMessage := 110;
	call Smitty01;
end

procedure Smitty03
begin
	set_local_var(4, 1);
	DisplayMessage := 111;
	call Smitty01;
end

procedure Smitty04
begin
	gsay_reply(250, DisplayMessage);
	gsay_option(250, 113, Smitty07, 50);
	gsay_option(250, 114, Smitty08, 50);
	gsay_option(250, 115, Smitty09, 50);
	gsay_option(250, 116, Smitty06, 50);
end

procedure Smitty05
begin
	set_local_var(4, 1);
	gsay_message(250, 117, 50);
end

procedure Smitty06
begin
	gsay_message(250, 118, 50);
end

procedure Smitty07
begin
	DisplayMessage := 119;
	call Smitty04;
end

procedure Smitty08
begin
	DisplayMessage := 120;
	call Smitty04;
end

procedure Smitty09
begin
	DisplayMessage := 121;
	call Smitty04;
end

procedure Smitty10
begin
	gsay_message(250, 122, 50);
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	game_time_advance(game_ticks(10 * 60 * 60));
	gfade_in(1);
	set_global_var(QUEST_BONEYARD_5_FIX_FARM, 9303);
	gsay_message(250, 123, 50);
end

procedure Smitty11
begin
	gsay_message(250, 124, 50);
end

procedure Smitty12
begin
	gsay_message(250, 125, 50);
	set_local_var(5, 9307);
	/* has how many? */    if (obj_is_carrying_obj_pid(dude_obj, PID_PLASMA_RIFLE)) then begin
		call Smitty14;
	end
end

procedure Smitty14
begin
	gsay_reply(250, 127);
	gsay_option(250, 126, Smitty14a, 50);
end

procedure Smitty14a
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	gsay_message(250, 128, 50);
	LVar1 := create_object_sid(PID_FRIDGE, 0, 0, -1);
	move_obj_inven_to_obj(dude_obj, LVar1);
	move_obj_inven_to_obj(LVar1, dude_obj);
	LVar0 := obj_carrying_pid_obj(dude_obj, PID_PLASMA_RIFLE);
	rm_obj_from_inven(dude_obj, LVar0);
	destroy_object(LVar0);
	destroy_object(LVar1);
	if global_var(FADE_TIMES_INCREASED) then begin
		gfade_out(1);
		gfade_out(1);
	end
	gfade_out(1);
	game_time_advance(game_ticks(10 * 60 * 60 * 2));
	gfade_in(1);
	gsay_message(250, 129, 50);
	LVar0 := create_object_sid(PID_TURBO_PLASMA_RIFLE, 0, 0, -1);
	add_obj_to_inven(dude_obj, LVar0);
	set_local_var(5, 2);
end

procedure Smitty15
begin
	gsay_message(250, 130, 50);
end

procedure SmittyEnd
begin
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, STAT_ch)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
