/*

	Encounter - Generic Guard

*/

#include "..\headers\define.h"

#define NAME                    SCRIPT_GENGRDA
//#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure map_update_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

variable tmp_hostile;
variable initial :=  0;
variable scared;

procedure start begin
end

procedure critter_p_proc begin
	if (scared) then begin
		if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
			call flee_dude;
		end
	end
	else begin
		if (tmp_hostile) then begin
			tmp_hostile := 0;
			scared := 1;
			attack(dude_obj);
		end
		else begin
			if (global_var( GVAR_WATER_THIEF_2 ) == 1) then begin
				tmp_hostile := 1;
			end
		end
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	inc_good_critter
	set_global_var( GVAR_WATER_THIEF_2, 1 );
	rm_timer_event(self_obj);
end

procedure map_update_p_proc
begin
	if not(initial) then begin
		initial :=  1;
		set_self_team(TEAM_SHADY_SANDS );
		set_self_ai(15 + random(0, 4));
		add_timer_event(self_obj, game_ticks(random(1, 3)), 1);
		tmp_hostile := global_var( GVAR_AGGRO_FLAG_RND_ENC_unsure );
	end
end

procedure pickup_p_proc
begin
	if (scared == 0) then begin
		tmp_hostile := 1;
		set_global_var( GVAR_AGGRO_FLAG_RND_ENC_unsure, 1 );
	end
end

procedure talk_p_proc
begin
	dude_look_at_critter;
	if (scared) then begin
		float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), 2);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_GENGRDA, random(100, 105)), 3);
	end
end

procedure timed_event_p_proc
begin
	animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(3, 5)), 0);
	add_timer_event(self_obj, game_ticks(random(0, 3)), 1);
end

