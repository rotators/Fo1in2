/*

	Encounter - Generic BoS Paladin

*/

#include "..\headers\define.h"

#define NAME                    SCRIPT_GENPALB
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;

procedure GenPalB00;
procedure GenPalB01;
procedure GenPalB02;
procedure GenPalB03;
procedure GenPalB04;
procedure GenPalB05;
procedure GenPalB06;
procedure GenPalB07;
procedure GenPalB08;
procedure GenPalB09;
procedure GenPalB10;
procedure GenPalB10a;
procedure GenPalB11;
procedure GenPalB12;
procedure GenPalB13;
procedure GenPalB14;
procedure GenPalB15;
procedure GenPalB16;
procedure GenPalB17;
procedure GenPalB18;
procedure GenPalB19;
procedure GenPalB20;
procedure GenPalB20a;
procedure GenPalB21;
procedure GenPalB22;
procedure GenPalB23;
procedure GenPalB24;
procedure GenPalB25;

variable annoyed;
variable tmp_hostile;
variable initial :=  0;
variable known;
variable round_counter;
variable scared;

import variable random_seed_1;

procedure start begin
	if not(initial) then begin
		set_self_team(TEAM_BROTHERHOOD );
		set_self_ai( AI_BROTHERHOOD_PALADIN );
		tmp_hostile := global_var(AGGRO_FLAG_RND_ENC_unsure);
		initial :=  1;
	end
end

procedure combat_p_proc
begin
	if (fixed_param == 4) then begin
		round_counter := round_counter + 1;
		if (get_critter_stat(self_obj, STAT_current_hp) < 10) then begin
			scared := 1;
		end
	end
end

procedure critter_p_proc begin
	if (scared) then begin
		if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
			flee_dude
		end
	end
	else begin
		if (tmp_hostile) then begin
			tmp_hostile := 0;
			random_seed_1 := 1;
			attack(dude_obj);
		end
	end
end

procedure destroy_p_proc begin
	inc_good_critter
	if (source_obj == dude_obj) then begin
		set_global_var(ENEMY_BROTHERHOOD, 1);
		random_seed_1 := 1;
	end
end

procedure pickup_p_proc begin
	if (not(scared)) then begin
		tmp_hostile := 1;
		set_global_var(AGGRO_FLAG_RND_ENC_unsure, 1);
	end
end

procedure talk_p_proc begin
	dude_look_at_critter;
	if (known) then begin
		if (annoyed) then begin
			call GenPalB23;
		end
		else begin
			start_gdialog(759, self_obj, 4, -1, -1);
			gsay_start;
			call GenPalB24;
			gsay_end;
			end_dialogue;
		end
	end
	else begin
		if (scared) then begin
			call GenPalB01;
		end
		else begin
			if ((random_seed_1 == 1) or (global_var(ENEMY_BROTHERHOOD) == 1)) then begin
				call GenPalB00;
			end
			else begin
				start_gdialog(759, self_obj, 4, -1, -1);
				gsay_start;
				if (global_var(BROTHERHOOD_SEED) == 2) then begin
					call GenPalB02;
				end
				else begin
					if (global_var(WORLDMAPLIST_BROTHERHOOD) >= 1) then begin
						if (global_var( GVAR_PLAYER_REPUTATION ) >= 20) then begin
							call GenPalB03;
						end
						else begin
							call GenPalB04;
						end
					end
					else begin
						if ((global_var( GVAR_PLAYER_REPUTATION ) < 20) or (has_rep_berserker) or has_rep_childkiller) then begin
							call GenPalB06;
						end
						else begin
							call GenPalB05;
						end
					end
				end
				gsay_end;
				end_dialogue;
			end
		end
	end
end

procedure GenPalB00
begin
	float_msg(self_obj, message_str(SCRIPT_GENPALB, 100), 2);
	tmp_hostile := 1;
	set_global_var(AGGRO_FLAG_RND_ENC_unsure, 1);
end

procedure GenPalB01
begin
	float_msg(self_obj, message_str(SCRIPT_GENPALB, 101), 2);
end

procedure GenPalB02
begin
	known := 1;
	gsay_reply(759, 102);
	NOption( 103, GenPalB07, 7 );
	NOption( 104, GenPalB08, 4 );
	NOption( 105, GenPalB09, 4 );
	NOption( 106, GenPalB10, 4 );
	NOption( 107, GenPalB11, -3 );
end

procedure GenPalB03
begin
	known := 1;
	gsay_reply(759, 108);
	NOption( 109, GenPalB12, 7 );
	NOption( 110, GenPalB13, 4 );
	NOption( 111, GenPalB14, 4 );
	NOption( 112, GenPalB15, 4 );
	NOption( 113, GenPalB16, 4 );
	NOption( 114, GenPalB11, -3 );
end

procedure GenPalB04
begin
	known := 1;
	annoyed := 1;
	gsay_message(759, 115, 51);
end

procedure GenPalB05
begin
	known := 1;
	gsay_reply(759, 116);
	if ((global_var(QUEST_VAULT13_4_WATERCHIP) == 0) and (dude_item_count( PID_WATER_CHIP ) == 0)) then begin
		NOption( message_str(SCRIPT_GENPALB, 117) + dude_name + message_str(SCRIPT_GENPALB, 118), GenPalB17, 4 );
	end
	NOption( message_str(SCRIPT_GENPALB, 117) + dude_name + message_str(SCRIPT_GENPALB, 119), GenPalB18, 4 );
	NOption( message_str(SCRIPT_GENPALB, 117) + dude_name + message_str(SCRIPT_GENPALB, 120), GenPalB19, 4 );
	NOption( message_str(SCRIPT_GENPALB, 117) + dude_name + message_str(SCRIPT_GENPALB, 121), GenPalB21, 4 );
	BOption( 122, GenPalB21, 4 );
	NOption( 123, GenPalB22, -3 );
end

procedure GenPalB06
begin
	known := 1;
	annoyed := 1;
	gsay_message(759, 124, 51);
end

procedure GenPalB07
begin
	gsay_message(759, 125, 50);
end

procedure GenPalB08
begin
	gsay_message(759, 126, 50);
end

procedure GenPalB09
begin
	gsay_message(759, 127, 50);
end

procedure GenPalB10
begin
	gsay_reply(759, 128);
	NOption( 106, GenPalB10a, 0 );
end

procedure GenPalB10a
begin
	gsay_message(759, 129, 50);
end

procedure GenPalB11
begin
	gsay_message(759, 130, 50);
end

procedure GenPalB12
begin
	gsay_reply(759, 131);
	if ((global_var(QUEST_VAULT13_4_WATERCHIP) == 0) and (dude_item_count( PID_WATER_CHIP ) == 0)) then begin
		NOption( 132, GenPalB17, 4 );
	end
	NOption( 133, GenPalB18, 4 );
	NOption( 134, GenPalB19, 4 );
	NOption( 135, GenPalB20, 4 );
	NOption( 122, GenPalB21, 4 );
end

procedure GenPalB13
begin
	known := 1;
	annoyed := 1;
	gsay_message(759, 136, 51);
end

procedure GenPalB14
begin
	gsay_message(759, 137, 50);
end

procedure GenPalB15
begin
	gsay_message(759, 138, 50);
end

procedure GenPalB16
begin
	gsay_message(759, 139, 50);
	gfade_out(1);
	game_time_advance(game_ticks(random(86400, 172800)));
	load_map(MAP_BROHDENT, 0);
	gfade_in(1);
end

procedure GenPalB17
begin
	gsay_message(759, 140, 50);
end

procedure GenPalB18
begin
	gsay_message(759, 141, 50);
end

procedure GenPalB19
begin
	annoyed := 1;
	gsay_message(759, 142, 51);
end

procedure GenPalB20
begin
	gsay_reply(759, 143);
	NOption( 106, GenPalB20a, 0 );
end

procedure GenPalB20a
begin
	gsay_message(759, 144, 50);
end

procedure GenPalB21
begin
	tmp_hostile := 1;
	set_global_var(AGGRO_FLAG_RND_ENC_unsure, 1);
	if (dude_is_male) then begin
		gsay_message(759, 145, 51);
	end
	else begin
		gsay_message(759, 146, 51);
	end
end

procedure GenPalB22
begin
	gsay_message(759, 147, 50);
end

procedure GenPalB23
begin
	float_msg(self_obj, message_str(SCRIPT_GENPALB, 148), 2);
end

procedure GenPalB24
begin
	gsay_reply(759, 149);
	if ((global_var(QUEST_VAULT13_4_WATERCHIP) == 0) and (dude_item_count( PID_WATER_CHIP ) == 0)) then begin
		NOption( 132, GenPalB17, 4 );
	end
	NOption( 133, GenPalB18, 4 );
	NOption( 150, GenPalB25, 4 );
	NOption( 135, GenPalB20, 4 );
	BOption( 122, GenPalB21, 4 );
end

procedure GenPalB25
begin
	annoyed := 1;
	gsay_message(759, 151, 51);
end



