/*

	Encounter - Fisherman

*/

/* Include Files */
#include "..\headers\define.h"

#define NAME                    SCRIPT_FISHRMAN

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;

procedure FishrMan00;
procedure FishrMan01;
procedure FishrMan02;
procedure FishrMan03;
procedure FishrMan03a;
procedure FishrMan04;
procedure FishrMan04a;
procedure FishrMan04b;
procedure FishrMan05;
procedure FishrMan05a;
procedure FishrMan06;
procedure FishrMan07;
procedure FishrMan07a;
procedure FishrMan08;
procedure FishrMan08a;
procedure FishrMan09;
procedure FishrMan09a;
procedure FishrMan10;
procedure FishrMan11;
procedure FishrMan12;
procedure FishrMan12a;
procedure FishrMan13;
procedure FishrMan14;
procedure FishrMan15;
procedure FishrMan15a;
procedure FishrMan16;
procedure FishrMan17;
procedure FishrMan18;
procedure FishrMan19;
procedure FishrMan20;
procedure FishrMan21;
procedure FishrMan22;
procedure FishrMan23;
procedure FishrMan24;
procedure FishrMan25;
procedure FishrManBarter;
procedure FishrManCombat;
procedure FishrManEnd;
procedure FishrManEnd1;
procedure FishrManEnd2;

export variable dude_enemy;

variable tmp_hostile;
variable initial :=  0;
variable known;

procedure start begin
	if not(initial) then begin
		set_self_team(TEAM_SHADY_SANDS );
		set_self_ai( AI_PEASANT );
		tmp_hostile := global_var( GVAR_AGGRO_FLAG_RND_ENC_unsure );
		initial :=  1;
	end
end

procedure critter_p_proc begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if (dude_enemy) then begin
		if (self_can_see_dude) then begin
			tmp_hostile := 1;
			set_global_var( GVAR_AGGRO_FLAG_RND_ENC_unsure, 1 );
		end
	end
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		dude_enemy := 1;
		set_global_var( GVAR_AGGRO_FLAG_RND_ENC_unsure, 1 );
	end
end

procedure destroy_p_proc begin
	inc_good_critter
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_FISHRMAN, 100));
end

procedure pickup_p_proc begin
	dude_enemy := 1;
	tmp_hostile := 1;
	set_global_var( GVAR_AGGRO_FLAG_RND_ENC_unsure, 1 );
end

procedure talk_p_proc begin
	variable LVar0 := 0;
	dude_look_at_self;
	get_reaction
	if (dude_enemy) then begin
		LVar0 := random(100, 102);
		float_msg(self_obj, message_str(SCRIPT_ENEMY, LVar0), 0);
	end
	else begin
		if ((local_var(1) < 2) or has_rep_childkiller or (check_general_rep < -30)) then begin
			call FishrMan00;
		end
		else begin

			if (dude_is_armed) then begin
				call FishrMan25;
			end
			else begin
				start_gdialog(644, self_obj, 4, -1, -1);
				gsay_start;
				if (known) then begin
					call FishrMan03;
				end
				else begin
					if (check_general_rep >= 30) then begin
						call FishrMan02;
					end
					else begin
						call FishrMan01;
					end
				end
				gsay_end;
				end_dialogue;
			end
		end
	end
end

procedure FishrMan00 begin
	float_msg(self_obj, message_str(SCRIPT_FISHRMAN, 101 + (dude_is_female)), 0);
end

procedure FishrMan01 begin
	known := 1;
	if (dude_is_male) then begin
		gsay_reply(644, 103);
	end
	else begin
		gsay_reply(644, 104);
	end
	if ((global_var( GVAR_QUEST_VAULT13_4_WATERCHIP ) == 1) and (dude_item_count( PID_WATER_CHIP ) == 0)) then begin
		giq_option( 4, SCRIPT_FISHRMAN, 105, FishrMan04, NEUTRAL_REACTION );
	end
	giq_option( 7, SCRIPT_FISHRMAN, 106, FishrMan05, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FISHRMAN, 107, FishrMan06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FISHRMAN, 108, FishrMan07, NEUTRAL_REACTION );
	if (has_rep_berserker) then begin
		giq_option( 4, SCRIPT_FISHRMAN, 109, FishrMan08, BAD_REACTION );
	end
	giq_option( -3, SCRIPT_FISHRMAN, 110, FishrMan09, NEUTRAL_REACTION );
end

procedure FishrMan02 begin
	known := 1;
	if (dude_is_male) then begin
		gsay_reply(644, 111);
	end
	else begin
		gsay_reply(644, 112);
	end
	if ((global_var( GVAR_QUEST_VAULT13_4_WATERCHIP ) == 1) and (dude_item_count( PID_WATER_CHIP ) == 0)) then begin
		giq_option( 4, SCRIPT_FISHRMAN, 105, FishrMan04, NEUTRAL_REACTION );
	end
	giq_option( 7, SCRIPT_FISHRMAN, 106, FishrMan05, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FISHRMAN, 108, FishrMan07, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FISHRMAN, 113, FishrMan13, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_FISHRMAN, 110, FishrMan14, NEUTRAL_REACTION );
end

procedure FishrMan03 begin
	gsay_reply(644, 114);
	giq_option( 4, SCRIPT_FISHRMAN, 115, FishrMan15, BAD_REACTION );
	giq_option( 4, SCRIPT_FISHRMAN, 116, FishrMan16, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FISHRMAN, 117, FishrMan03a, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_FISHRMAN, 110, FishrMan19, NEUTRAL_REACTION );
end

procedure FishrMan03a begin
	if (dude_charisma >= 6) then begin
		call FishrMan17;
	end
	else begin
		call FishrMan18;
	end
end

procedure FishrMan04 begin
	gsay_reply(644, 118);
	giq_option( 0, SCRIPT_MODREACT, 106, FishrMan04a, NEUTRAL_REACTION );
end

procedure FishrMan04a begin
	gsay_reply(644, 119);
	giq_option( 0, SCRIPT_MODREACT, 106, FishrMan04b, NEUTRAL_REACTION );
end

procedure FishrMan04b begin
	gsay_reply(644, 120);
	giq_option( 0, SCRIPT_MODREACT, 106, FishrManEnd1, NEUTRAL_REACTION );
end

procedure FishrMan05 begin
	gsay_reply(644, 122);
	giq_option( 0, SCRIPT_MODREACT, 106, FishrMan05a, NEUTRAL_REACTION );
end

procedure FishrMan05a begin
	gsay_reply(644, 123);
	giq_option( 0, SCRIPT_MODREACT, 106, FishrManEnd1, NEUTRAL_REACTION );
end

procedure FishrMan06 begin
	gsay_reply(644, 124);
	giq_option( 0, SCRIPT_MODREACT, 106, FishrManEnd1, NEUTRAL_REACTION );
end

procedure FishrMan07 begin
	gsay_reply(644, 125);
	giq_option( 0, SCRIPT_MODREACT, 106, FishrMan07a, NEUTRAL_REACTION );
end

procedure FishrMan07a begin
	gsay_reply(644, 126);
	giq_option( 0, SCRIPT_MODREACT, 106, FishrManEnd1, NEUTRAL_REACTION );
end

procedure FishrMan08 begin
	DownReactLevel
	DownReactLevel
	gsay_reply(644, 127);
	giq_option( 4, SCRIPT_FISHRMAN, 128, FishrMan08a, BAD_REACTION );
	giq_option( 4, SCRIPT_FISHRMAN, 129, FishrManCombat, BAD_REACTION );
	giq_option( 4, SCRIPT_FISHRMAN, 130, FishrMan22, NEUTRAL_REACTION );
end

procedure FishrMan08a begin
	if ((dude_strength >= 8) or dude_item_count( PID_FLAMER ) or dude_item_count( PID_MINIGUN ) or dude_item_count( PID_ROCKET_LAUNCHER ) or dude_item_count( PID_LASER_RIFLE ) or dude_item_count( PID_PLASMA_RIFLE )) then begin
		call FishrMan20;
	end
	else begin
		call FishrMan21;
	end
end

procedure FishrMan09 begin
	gsay_reply(644, 131 + (dude_is_female));
	giq_option( 0, SCRIPT_MODREACT, 106, FishrMan09a, NEUTRAL_REACTION );
end

procedure FishrMan09a begin
	variable LVar0 := 0;
	/* has how many? */    if (self_item_count( PID_RAD_X )) then begin
		LVar0 := self_item( PID_RAD_X );
		rm_obj_from_inven(self_obj, LVar0);
		add_obj_to_inven(dude_obj, LVar0);
		gsay_message(644, 133, 50);
	end
	else begin
		gsay_message(644, 134, 50);
	end
end

procedure FishrMan10 begin
	gsay_reply(644, 135);
	giq_option( 0, SCRIPT_MODREACT, 106, FishrManEnd2, NEUTRAL_REACTION );
end

procedure FishrMan11 begin
	gsay_reply(644, 137);
	giq_option( 0, SCRIPT_MODREACT, 106, FishrManEnd2, NEUTRAL_REACTION );
end

procedure FishrMan12 begin
	gsay_reply(644, 138);
	giq_option( 0, SCRIPT_MODREACT, 106, FishrMan12a, NEUTRAL_REACTION );
end

procedure FishrMan12a begin
	gsay_reply(644, 139);
	giq_option( 0, SCRIPT_MODREACT, 106, FishrManEnd2, NEUTRAL_REACTION );
end

procedure FishrMan13 begin
	gsay_reply(644, 140);
	call FishrManBarter;
end

procedure FishrMan14 begin
	gsay_reply(644, 141);
	giq_option( 0, SCRIPT_MODREACT, 106, FishrManEnd2, NEUTRAL_REACTION );
end

procedure FishrMan15 begin
	gsay_reply(644, 142);
	giq_option( 0, SCRIPT_MODREACT, 106, FishrMan15a, NEUTRAL_REACTION );
end

procedure FishrMan15a begin
	gsay_message(644, 143, 50);
end

procedure FishrMan16 begin
	gsay_message(644, 144, 50);
end

procedure FishrMan17 begin
	gsay_reply(644, 145);
	if ((global_var( GVAR_QUEST_VAULT13_4_WATERCHIP ) == 1) and (dude_item_count( PID_WATER_CHIP ) == 0)) then begin
		giq_option( 4, SCRIPT_FISHRMAN, 146, FishrMan04, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_FISHRMAN, 147, FishrMan11, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FISHRMAN, 148, FishrMan23, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FISHRMAN, 149, FishrMan24, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_FISHRMAN, 108, FishrMan07, NEUTRAL_REACTION );
end

procedure FishrMan18 begin
	gsay_message(644, 150, 50);
end

procedure FishrMan19 begin
	gsay_message(644, 151, 50);
end

procedure FishrMan20 begin
	gsay_reply(644, 152);
	call FishrManBarter;
end

procedure FishrMan21 begin
	gsay_message(644, 153, 51);
	call FishrManCombat;
end

procedure FishrMan22 begin
	gsay_message(644, 154, 51);
end

procedure FishrMan23 begin
	gsay_message(644, 155, 50);
end

procedure FishrMan24 begin
	gsay_message(644, 156, 50);
end

procedure FishrMan25 begin
	float_msg(self_obj, message_str(SCRIPT_FISHRMAN, 157), 0);
end

procedure FishrManBarter begin
	gdialog_mod_barter(0);
	giq_option( 0, SCRIPT_MODREACT, 100, FishrManEnd, NEUTRAL_REACTION );
end

procedure FishrManCombat begin
	tmp_hostile := 1;
	set_global_var( GVAR_AGGRO_FLAG_RND_ENC_unsure, 1 );
end

procedure FishrManEnd begin
end

procedure FishrManEnd1 begin
	gsay_message(644, 121, 50);
end

procedure FishrManEnd2 begin
	gsay_message(644, 136, 50);
end
