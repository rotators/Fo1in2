#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11

procedure FishrMan00;
procedure FishrMan01;
procedure FishrMan02;
procedure FishrMan03;
procedure FishrMan03a;
procedure FishrMan04;
procedure FishrMan04a;
procedure FishrMan04b;
procedure FishrMan05;
procedure FishrMan05a;
procedure FishrMan06;
procedure FishrMan07;
procedure FishrMan07a;
procedure FishrMan08;
procedure FishrMan08a;
procedure FishrMan09;
procedure FishrMan09a;
procedure FishrMan10;
procedure FishrMan11;
procedure FishrMan12;
procedure FishrMan12a;
procedure FishrMan13;
procedure FishrMan14;
procedure FishrMan15;
procedure FishrMan15a;
procedure FishrMan16;
procedure FishrMan17;
procedure FishrMan18;
procedure FishrMan19;
procedure FishrMan20;
procedure FishrMan21;
procedure FishrMan22;
procedure FishrMan23;
procedure FishrMan24;
procedure FishrMan25;
procedure FishrManBarter;
procedure FishrManCombat;
procedure FishrManEnd;
procedure FishrManEnd1;
procedure FishrManEnd2;

export variable dude_enemy;

variable tmp_hostile;
variable initial :=  0;
variable known;

procedure start
begin
	fixt_critter_healing

	if not(initial) then begin
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 2);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 6);
		tmp_hostile := global_var(AGGRO_FLAG_RND_ENC_unsure);
		initial :=  1;
	end
	if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
		call critter_p_proc;
	end
	else begin
		if (script_action == 14) then begin//<-- damage_p_proc - has this Critter or Object been shot, hit with TNT, punched, etc.
			call damage_p_proc;
		end
		else begin
			if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
				call destroy_p_proc;
			end
			else begin
				if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
					call look_at_p_proc;
				end
				else begin
					if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
						call talk_p_proc;
					end
				end
			end
		end
	end
end



procedure critter_p_proc
begin
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if (dude_enemy) then begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			tmp_hostile := 1;
			set_global_var(AGGRO_FLAG_RND_ENC_unsure, 1);
		end
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		dude_enemy := 1;
		set_global_var(AGGRO_FLAG_RND_ENC_unsure, 1);
	end
end

procedure destroy_p_proc
begin

	inc_good_critter
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_FISHRMAN, 100));
end

procedure pickup_p_proc
begin
	dude_enemy := 1;
	tmp_hostile := 1;
	set_global_var(AGGRO_FLAG_RND_ENC_unsure, 1);
end

procedure talk_p_proc
begin
	variable LVar0 := 0;
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	get_reaction
	if (dude_enemy) then begin
		LVar0 := random(100, 102);
		float_msg(self_obj, message_str(SCRIPT_ENEMY, LVar0), 0);
	end
	else begin
		if ((local_var(1) < 2) or (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) or (global_var(PLAYER_REPUTATION_GENERAL) < -30)) then begin
			call FishrMan00;
		end
		else begin

			if (dude_is_armed) then begin
				call FishrMan25;
			end
			else begin
				start_gdialog(644, self_obj, 4, -1, -1);
				gsay_start;
				if (known) then begin
					call FishrMan03;
				end
				else begin
					if (global_var(PLAYER_REPUTATION_GENERAL) >= 30) then begin
						call FishrMan02;
					end
					else begin
						call FishrMan01;
					end
				end
				gsay_end;
				end_dialogue;
			end
		end
	end
end

procedure FishrMan00
begin
	float_msg(self_obj, message_str(SCRIPT_FISHRMAN, 101 + (get_critter_stat(dude_obj, STAT_gender) == 1)), 0);
end

procedure FishrMan01
begin
	known := 1;
	if (get_critter_stat(dude_obj, STAT_gender) == 0) then begin
		gsay_reply(644, 103);
	end
	else begin
		gsay_reply(644, 104);
	end
	if ((global_var(QUEST_VAULT13_4_WATERCHIP) == 1) and (obj_is_carrying_obj_pid(dude_obj, PID_WATER_CHIP) == 0)) then begin
		giq_option(4, 644, 105, FishrMan04, 50);
	end
	giq_option(7, 644, 106, FishrMan05, 50);
	giq_option(4, 644, 107, FishrMan06, 50);
	giq_option(4, 644, 108, FishrMan07, 50);
	if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
		giq_option(4, 644, 109, FishrMan08, 51);
	end
	giq_option(-3, 644, 110, FishrMan09, 50);
end

procedure FishrMan02
begin
	known := 1;
	if (get_critter_stat(dude_obj, STAT_gender) == 0) then begin
		gsay_reply(644, 111);
	end
	else begin
		gsay_reply(644, 112);
	end
	if ((global_var(QUEST_VAULT13_4_WATERCHIP) == 1) and (obj_is_carrying_obj_pid(dude_obj, PID_WATER_CHIP) == 0)) then begin
		giq_option(4, 644, 105, FishrMan04, 50);
	end
	giq_option(7, 644, 106, FishrMan05, 50);
	giq_option(4, 644, 108, FishrMan07, 50);
	giq_option(4, 644, 113, FishrMan13, 50);
	giq_option(-3, 644, 110, FishrMan14, 50);
end

procedure FishrMan03
begin
	gsay_reply(644, 114);
	giq_option(4, 644, 115, FishrMan15, 51);
	giq_option(4, 644, 116, FishrMan16, 50);
	giq_option(4, 644, 117, FishrMan03a, 50);
	giq_option(-3, 644, 110, FishrMan19, 50);
end

procedure FishrMan03a
begin
	if (get_critter_stat(dude_obj, STAT_ch) >= 6) then begin
		call FishrMan17;
	end
	else begin
		call FishrMan18;
	end
end

procedure FishrMan04
begin
	gsay_reply(644, 118);
	giq_option(0, 634, 106, FishrMan04a, 50);
end

procedure FishrMan04a
begin
	gsay_reply(644, 119);
	giq_option(0, 634, 106, FishrMan04b, 50);
end

procedure FishrMan04b
begin
	gsay_reply(644, 120);
	giq_option(0, 634, 106, FishrManEnd1, 50);
end

procedure FishrMan05
begin
	gsay_reply(644, 122);
	giq_option(0, 634, 106, FishrMan05a, 50);
end

procedure FishrMan05a
begin
	gsay_reply(644, 123);
	giq_option(0, 634, 106, FishrManEnd1, 50);
end

procedure FishrMan06
begin
	gsay_reply(644, 124);
	giq_option(0, 634, 106, FishrManEnd1, 50);
end

procedure FishrMan07
begin
	gsay_reply(644, 125);
	giq_option(0, 634, 106, FishrMan07a, 50);
end

procedure FishrMan07a
begin
	gsay_reply(644, 126);
	giq_option(0, 634, 106, FishrManEnd1, 50);
end

procedure FishrMan08
begin
	DownReactLevel
	DownReactLevel
	gsay_reply(644, 127);
	giq_option(4, 644, 128, FishrMan08a, 51);
	giq_option(4, 644, 129, FishrManCombat, 51);
	giq_option(4, 644, 130, FishrMan22, 50);
end

procedure FishrMan08a
begin
	if ((get_critter_stat(dude_obj, STAT_st) >= 8) or obj_is_carrying_obj_pid(dude_obj, PID_FLAMER) or obj_is_carrying_obj_pid(dude_obj, PID_MINIGUN) or obj_is_carrying_obj_pid(dude_obj, PID_ROCKET_LAUNCHER) or obj_is_carrying_obj_pid(dude_obj, PID_LASER_RIFLE) or obj_is_carrying_obj_pid(dude_obj, PID_PLASMA_RIFLE)) then begin
		call FishrMan20;
	end
	else begin
		call FishrMan21;
	end
end

procedure FishrMan09
begin
	gsay_reply(644, 131 + (get_critter_stat(dude_obj, STAT_gender) == 1));
	giq_option(0, 634, 106, FishrMan09a, 50);
end

procedure FishrMan09a
begin
	variable LVar0 := 0;
	/* has how many? */    if (obj_is_carrying_obj_pid(self_obj, PID_RAD_X)) then begin
		LVar0 := obj_carrying_pid_obj(self_obj, PID_RAD_X);
		rm_obj_from_inven(self_obj, LVar0);
		add_obj_to_inven(dude_obj, LVar0);
		gsay_message(644, 133, 50);
	end
	else begin
		gsay_message(644, 134, 50);
	end
end

procedure FishrMan10
begin
	gsay_reply(644, 135);
	giq_option(0, 634, 106, FishrManEnd2, 50);
end

procedure FishrMan11
begin
	gsay_reply(644, 137);
	giq_option(0, 634, 106, FishrManEnd2, 50);
end

procedure FishrMan12
begin
	gsay_reply(644, 138);
	giq_option(0, 634, 106, FishrMan12a, 50);
end

procedure FishrMan12a
begin
	gsay_reply(644, 139);
	giq_option(0, 634, 106, FishrManEnd2, 50);
end

procedure FishrMan13
begin
	gsay_reply(644, 140);
	call FishrManBarter;
end

procedure FishrMan14
begin
	gsay_reply(644, 141);
	giq_option(0, 634, 106, FishrManEnd2, 50);
end

procedure FishrMan15
begin
	gsay_reply(644, 142);
	giq_option(0, 634, 106, FishrMan15a, 50);
end

procedure FishrMan15a
begin
	gsay_message(644, 143, 50);
end

procedure FishrMan16
begin
	gsay_message(644, 144, 50);
end

procedure FishrMan17
begin
	gsay_reply(644, 145);
	if ((global_var(QUEST_VAULT13_4_WATERCHIP) == 1) and (obj_is_carrying_obj_pid(dude_obj, PID_WATER_CHIP) == 0)) then begin
		giq_option(4, 644, 146, FishrMan04, 50);
	end
	giq_option(4, 644, 147, FishrMan11, 50);
	giq_option(4, 644, 148, FishrMan23, 50);
	giq_option(4, 644, 149, FishrMan24, 50);
	giq_option(4, 644, 108, FishrMan07, 50);
end

procedure FishrMan18
begin
	gsay_message(644, 150, 50);
end

procedure FishrMan19
begin
	gsay_message(644, 151, 50);
end

procedure FishrMan20
begin
	gsay_reply(644, 152);
	call FishrManBarter;
end

procedure FishrMan21
begin
	gsay_message(644, 153, 51);
	call FishrManCombat;
end

procedure FishrMan22
begin
	gsay_message(644, 154, 51);
end

procedure FishrMan23
begin
	gsay_message(644, 155, 50);
end

procedure FishrMan24
begin
	gsay_message(644, 156, 50);
end

procedure FishrMan25
begin
	float_msg(self_obj, message_str(SCRIPT_FISHRMAN, 157), 0);
end

procedure FishrManBarter
begin
	gdialog_mod_barter(0);
	giq_option(0, 634, 100, FishrManEnd, 50);
end

procedure FishrManCombat
begin
	tmp_hostile := 1;
	set_global_var(AGGRO_FLAG_RND_ENC_unsure, 1);
end

procedure FishrManEnd
begin
end

procedure FishrManEnd1
begin
	gsay_message(644, 121, 50);
end

procedure FishrManEnd2
begin
	gsay_message(644, 136, 50);
end


