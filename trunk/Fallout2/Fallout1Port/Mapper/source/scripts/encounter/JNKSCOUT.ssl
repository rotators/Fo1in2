/*

	Junktown Scout (Encounter)

*/

/* Include Files */
#include "..\headers\define.h"

#define NAME                    SCRIPT_JNKSCOUT
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "..\headers\command.h"
#include "..\headers\ModReact.h"

procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;

procedure Scout01;
procedure Scout02;
procedure Scout03;
procedure Scout04;
procedure Scout05;
procedure ScoutEnd;

variable tmp_hostile;
variable SrcObj := 0;
variable SrcIsParty := 0;


procedure start begin
	fixt_critter_healing
end

procedure critter_p_proc begin
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		attack(dude_obj);
	end
	if (global_var(ENEMY_JUNKTOWN) == 1) then begin
		if (obj_can_see_obj(self_obj, dude_obj)) then begin
			attack(dude_obj);
		end
	end
end

procedure damage_p_proc begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_JUNKTOWN, 1);
	end
end

procedure destroy_p_proc begin

	if source_obj > 0 then begin
		SrcObj := 0;
		SrcIsParty := 0;
		SrcObj := obj_pid(source_obj);

		if party_member_obj(SrcObj) then begin
			SrcIsParty := 1;
		end
	end

	if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		inc_good_critter
		set_global_var(ENEMY_JUNKTOWN, 1);
	end

end

procedure look_at_p_proc begin
	display_msg(message_str(SCRIPT_JNKSCOUT, 100));
end

procedure pickup_p_proc begin
	tmp_hostile := 1;
end

procedure talk_p_proc begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	start_dialog_at_node(Scout01);
end

procedure Scout01 begin
	Reply(101);
	call Scout02;
end

procedure Scout02 begin
	giq_option(4, 437, 102, Scout03, 50);
	giq_option(4, 437, 103, Scout04, 50);
	giq_option(4, 437, 104, Scout05, 50);
	giq_option(4, 437, 105, ScoutEnd, 50);
	giq_option(-3, 437, 106, ScoutEnd, 50);
end

procedure Scout03 begin
	Reply(107);
	call Scout02;
end

procedure Scout04 begin
	Reply(108);
	call Scout02;
end

procedure Scout05 begin
	Reply(109);
	call Scout02;
end

procedure ScoutEnd begin
end
