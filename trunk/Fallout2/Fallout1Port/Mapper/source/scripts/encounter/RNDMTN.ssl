/*

	Random mountain encounter map

*/

#define NAME                    SCRIPT_RNDMTN

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\mapenc.h"
#include "..\headers\updatmap.h"

procedure start;
procedure map_enter_p_proc;
procedure map_exit_p_proc;

export variable random_seed_1;//FROM RNDDESRT
export variable random_seed_2;//FROM RNDDESRT
export variable random_seed_3;//FROM RNDDESRT

procedure Bone_table;//FROM RNDDESRT
procedure Bone1;//FROM RNDDESRT
procedure Bone2;//FROM RNDDESRT
procedure Bone3;//FROM RNDDESRT
procedure Bone4;//FROM RNDDESRT
procedure Bone5;//FROM RNDDESRT
procedure Bone6;//FROM RNDDESRT
procedure choose_start;
procedure Glow_table;//FROM RNDDESRT
procedure Glow1;//FROM RNDDESRT
procedure Glow2;//FROM RNDDESRT
procedure Glow3;//FROM RNDDESRT
procedure Glow4;//FROM RNDDESRT
procedure Glow5;//FROM RNDDESRT
procedure Glow6;//FROM RNDDESRT
procedure hunters;

procedure Junk_custom_table;//FROM RNDDESRT - modified
procedure Junk_custom1;//FROM RNDDESRT - modified
procedure Junk_custom2;//FROM RNDDESRT - modified
procedure Junk_custom3;//FROM RNDDESRT - modified
procedure Junk_custom4;//FROM RNDDESRT - modified
procedure Junk_custom5;//FROM RNDDESRT - modified
procedure Junk_custom6;//FROM RNDDESRT - modified

procedure NORTH_table;
procedure NORTH1;
procedure NORTH2;
procedure NORTH3;
procedure NORTH4;
procedure NORTH5;
procedure NORTH6;
procedure Patrick;// ---------------RNDMTN ONLY

procedure Raider_table;//FROM RNDDESRT
procedure Raider1;//FROM RNDDESRT
procedure Raider2;//FROM RNDDESRT
procedure Raider3;//FROM RNDDESRT
procedure Raider4;//FROM RNDDESRT
procedure Raider5;//FROM RNDDESRT
procedure Raider6;//FROM RNDDESRT
procedure remove_party;

procedure South_table;
procedure South1;
procedure South2;
procedure South3;
procedure South4;
procedure South5;
procedure South6;

procedure SOUTH_BoneGlow_table;
procedure SOUTH_BoneGlow1;
procedure SOUTH_BoneGlow2;
procedure SOUTH_BoneGlow3;
procedure SOUTH_BoneGlow4;
procedure SOUTH_BoneGlow5;
procedure SOUTH_BoneGlow6;

procedure update_party;
procedure Vats_table;//FROM RNDDESRT
procedure Vats1;//FROM RNDDESRT
procedure Vats2;//FROM RNDDESRT
procedure Vats3;//FROM RNDDESRT
procedure Vats4;//FROM RNDDESRT
procedure Vats5;//FROM RNDDESRT
procedure Vats6;//FROM RNDDESRT
procedure VAULT_table;// ---------------RNDMTN ONLY
procedure VAULT1;// ---------------RNDMTN ONLY
procedure VAULT2;// ---------------RNDMTN ONLY
procedure VAULT3;// ---------------RNDMTN ONLY
procedure VAULT4;// ---------------RNDMTN ONLY
procedure VAULT5;// ---------------RNDMTN ONLY
procedure VAULT6;// ---------------RNDMTN ONLY

variable rnd_critter;

variable dude_pos;
variable dude_rot;
variable dude_start_hex;// ---------------RNDMTN ONLY
variable Dude_tile;
variable Encounter_Num;
variable group_angle;
variable party_elevation;
variable Ranger_rerolls;

variable Skill_roll;//FROM RNDDESRT
variable Tot_Critter_A;
variable Tot_Critter_B;//FROM RNDDESRT
variable victim;

export variable signal_mutants;

variable knock_down_sound;

#define dude_knockdown 			knock_down_sound := sfx_build_char_name(dude_obj, ANIM_fall_front, snd_knock_down); 	\
									   reg_anim_clear(dude_obj); 																					\
									   reg_anim_begin(); 																							\
									      reg_anim_play_sfx(dude_obj, knock_down_sound, 1); 												\
									      reg_anim_animate(dude_obj,ANIM_fall_back_sf,5); 												\
									      reg_anim_animate(dude_obj,ANIM_back_to_standing,-1); 											\
									   reg_anim_end(); 																								\
									   critter_injure(dude_obj,DAM_KNOCKED_OUT)

procedure start begin
end

procedure map_enter_p_proc begin
	Lighting;
	dude_rot := random(0, 5);
	set_global_var( GVAR_MERCS_RANDOM_ENC_unsure, 0 );
	if (map_first_run) and not(is_loading_game) then begin
		if debug_mode then begin
			debug_msg(" ");  debug_msg(" ");  debug_msg(" ");    display_msg(" --- RANDOM ENCOUNTER, MOUNTAIN --- ");
			debug_msg(" ");  display_msg("GLOBALVAR (32) is " + global_var( GVAR_LOAD_MAP_INDEX ) + " ");
		end

		Ranger_rerolls := dude_perk( PERK_ranger );
		set_global_var( GVAR_AGGRO_FLAG_RND_ENC_unsure, 0 );
      while (Encounter_Num == 0) do begin
         Encounter_Num := random(1, 6) + random(1, 6) + random(1, 6);
         if (dude_luck > 8) then begin
            Encounter_Num := Encounter_Num + 2;
         end
         else if (dude_luck > 7) then begin
            Encounter_Num := Encounter_Num + 1;
         end
         else if (dude_luck < 3) then begin
            Encounter_Num := Encounter_Num - 1;
         end

         if (global_var( GVAR_HUNTER_STATUS ) != 3) and has_rep_childkiller and random(0, 1) then begin
            Encounter_Num := 7;
         end
         else if (Encounter_Num <= 3) then begin
            Encounter_Num := 1;
         end
         else if (Encounter_Num <= 5) then begin
            Encounter_Num := 2;
         end
         else if (Encounter_Num <= 8) then begin
            Encounter_Num := 3;
         end
         else if (Encounter_Num <= 12) then begin
            Encounter_Num := 4;
         end
         else if (Encounter_Num <= 15) then begin
            Encounter_Num := 5;
         end
         else begin
            Encounter_Num := 6;
         end

         if (global_var(GVAR_WORLDMAP_TABLE) == 2) then begin
            call North_table;
         end
         else if (global_var(GVAR_WORLDMAP_TABLE) == 3) then begin
            call South_table;
         end
         else if (global_var(GVAR_WORLDMAP_TABLE) == 12) then begin
            call Glow_table;
         end
         else begin
            call Vault_table;
         end
      end

	end
end

procedure map_update_p_proc begin
	Lighting;
end

procedure map_exit_p_proc begin
	set_car_exit_map
end

procedure Place_critter
begin
	variable Facing := 0;
	variable Distance := 0;
	variable Ring := 0;
	Critter := create_object_sid(Critter_type, 0, 0, Critter_script);
	Ring := random(Inner_ring, Outer_ring);
	Facing := random(0, 5);
	Critter_tile := tile_num_in_direction(Dude_tile, Critter_direction, Ring);
	Distance := tile_num_in_direction(Critter_tile, Facing, (Ring / 2));
	if ((tile_distance(Dude_tile, Distance) <= Outer_ring) and (tile_distance(Dude_tile, Distance) >= Inner_ring)) then begin
		Critter_tile := tile_num_in_direction(Critter_tile, Facing, (Ring / 2));
	end
	critter_attempt_placement(Critter, Critter_tile, dude_elevation);
end

// TODO: FIX SHITTY START POSITION!!!
procedure choose_start begin
	if (global_var(GVAR_WORLDMAP_TABLE) == 2) then begin
		if (Encounter_Num == 1) then begin
			override_map_start(99, 87, 0, 2);
		end
		else if (Encounter_Num == 6) then begin
			override_map_start(81, 88, 0, 2);
		end
		else begin
			override_map_start(88, 93, 0, dude_rot);
		end
	end
	else if (global_var(GVAR_WORLDMAP_TABLE) == 3) then begin
		if (Encounter_Num == 1) then begin
			override_map_start(99, 87, 0, 2);
		end
		else if (Encounter_Num == 5) then begin
			override_map_start(82, 95, 0, 2);
		end
		else if (Encounter_Num == 6) then begin
			override_map_start(81, 88, 0, 2);
		end
		else begin
			override_map_start(88, 93, 0, dude_rot);
		end
	end
	else begin
		if (Encounter_Num == 5) then begin
			override_map_start(99, 87, 0, 2);
		end
		else if (Encounter_Num == 6) then begin
			override_map_start(92, 93, 0, 2);
		end
		else begin
			override_map_start(88, 93, 0, dude_rot);
		end
	end
	Dude_tile := dude_tile;
end

procedure Patrick begin
	variable Patrick := 0;

	display_msg(message_str(SCRIPT_RNDMTN, 121));

	Patrick := create_object_sid(PID_LEATHER_ARMOR_MALE, 0, 0, SCRIPT_PATRICK);
	critter_attempt_placement(Patrick, Dude_tile - 4, 0);
	obj_rotate( Patrick, rotation_to_tile(tile_num(Patrick), dude_tile) );
	CritterXpos := (Dude_tile % 200) - 4;
	CritterYpos := Dude_tile / 200;
	Critter := create_object( PID_RUG_3, 0, 0 );
	critter_attempt_placement(Critter, (CritterYpos * 200) + (CritterXpos - 3), 0);
	Critter := create_object( PID_CART, 0, 0 );
	critter_attempt_placement(Critter, ((CritterYpos - 1) * 200) + (CritterXpos - 3), 0);
	Critter := create_object( PID_POT, 0, 0 );
	critter_attempt_placement(Critter, ((CritterYpos + 1) * 200) + (CritterXpos - 3), 0);
	Critter := create_object( PID_CONTAINER_WOOD_CRATE, 0, 0 );
	critter_attempt_placement(Critter, (CritterYpos * 200) + (CritterXpos - 2), 0);
	item_caps_adjust(Critter, random(2, 6) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
	if (random(0, 1)) then begin
		Item := create_object( PID_IGUANA_ON_A_STICK, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end

	Critter := create_object( PID_CHAIR, 0, 0 );
	critter_attempt_placement(Critter, (CritterYpos * 200) + (CritterXpos - 4), 0);
	Critter := create_object( PID_TRASH_3, 0, 0 );
	critter_attempt_placement(Critter, ((CritterYpos + 1) * 200) + (CritterXpos - 2), 0);
	Critter := create_object( PID_CONTAINER_WOOD_CRATE, 0, 0 );
	critter_attempt_placement(Critter, ((CritterYpos - 2) * 200) + (CritterXpos - 2), 0);
	Item := create_object( PID_NUKA_COLA, 0, 0 );
	add_mult_objs_to_inven(Critter, Item, random(1, 2));
	Item := create_object( PID_BEER, 0, 0 );
	add_mult_objs_to_inven(Critter, Item, random(1, 2));
	Critter := create_object( PID_TRASH_2, 0, 0 );
	critter_attempt_placement(Critter, ((CritterYpos - 1) * 200) + (CritterXpos - 5), 0);
	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		Critter := create_object( PID_FIRE_PIT, 0, 0 );
		critter_attempt_placement(Critter, ((CritterYpos + 4) * 200) + (CritterXpos - 2), 0);
		Critter := create_object( PID_BED_1, 0, 0 );
		critter_attempt_placement(Critter, ((CritterYpos + 4) * 200) + (CritterXpos - 4), 0);
		Critter := create_object( PID_BEER, 0, 0 );
		critter_attempt_placement(Critter, ((CritterYpos + 5) * 200) + (CritterXpos - 1), 0);
	end
	else begin
		Critter := create_object( PID_ROCKS_6, 0, 0 );
		critter_attempt_placement(Critter, ((CritterYpos + 4) * 200) + (CritterXpos - 2), 0);
		Critter := create_object( PID_ROCKS_7, 0, 0 );
		critter_attempt_placement(Critter, ((CritterYpos + 4) * 200) + (CritterXpos - 1), 0);
		Critter := create_object( PID_ROCKS_8, 0, 0 );
		critter_attempt_placement(Critter, ((CritterYpos + 4) * 200) + (CritterXpos - 3), 0);
		Critter := create_object( PID_ROCKS_15, 0, 0 );
		critter_attempt_placement(Critter, ((CritterYpos + 3) * 200) + (CritterXpos - 2), 0);
	end
	Critter := create_object( PID_CONTAINER_WOOD_CRATE, 0, 0 );
	critter_attempt_placement(Critter, ((CritterYpos - 2) * 200) + (CritterXpos - 4), 0);

	Item := create_object( PID_DESERT_EAGLE, 0, 0 );
	add_obj_to_inven(Patrick, Item);
	wield_obj_critter(Patrick, Item);

	Item := create_object( PID_44_MAGNUM_JHP, 0, 0 );
	add_obj_to_inven(Patrick, Item);
	if (dude_perk( PERK_scrounger )) then begin
		Item := create_object( PID_10MM_AP, 0, 0 );
		add_obj_to_inven(Patrick, Item);
	end

	Item := create_object( PID_LEATHER_ARMOR, 0, 0 );
	add_obj_to_inven(Patrick, Item);
	wield_obj_critter(Patrick, Item);

	item_caps_adjust(Patrick, random(25, 50) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));

	Item := create_object( PID_KNIFE, 0, 0 );
	add_obj_to_inven(Patrick, Item);
	Item := create_object( PID_CROWBAR, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_THROWING_KNIFE, 0, 0 );
	add_mult_objs_to_inven(Patrick, Item, 2);
	Item := create_object( PID_BAG, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_FLARE, 0, 0 );
	add_mult_objs_to_inven(Critter, Item, 2);
	Item := create_object( PID_MULTI_TOOL, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_SUPER_STIMPAK, 0, 0 );
	add_mult_objs_to_inven(Patrick, Item, 2);
end

procedure NORTH_table begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 2) or (Encounter_Num == 4) or (Encounter_Num == 6) or (Encounter_Num == 7)) then begin
			if debug_mode then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var( GVAR_RANDOM_ENC_SOMETHING ) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");
		Encounter_Num := global_var( GVAR_RANDOM_ENC_SOMETHING );
		set_global_var( GVAR_RANDOM_ENC_SOMETHING, 0 );
	end
	if (Encounter_Num) then begin
		if debug_mode then begin
			debug_msg(" ");    display_msg("Mountain NORTH loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call NORTH1;
		end
		else if (Encounter_Num == 2) then begin
			call NORTH2;
		end
		else if (Encounter_Num == 3) then begin
			call NORTH3;
		end
		else if (Encounter_Num == 4) then begin
			call NORTH4;
		end
		else if (Encounter_Num == 5) then begin
			call NORTH5;
		end
		else if (Encounter_Num == 6) then begin
			call NORTH6;
		end
		else begin
			call hunters;
		end
	end
end

procedure South_table begin
   if ((Encounter_Num == 4) and (global_var(GVAR_RANDOM_ENC_SOMETHING) != 0)) then begin
      Encounter_Num := 5;
   end

   if (Ranger_rerolls) then begin
      Ranger_rerolls := Ranger_rerolls - 1;
      if ((Encounter_Num == 1) or (Encounter_Num == 2) or (Encounter_Num == 5) or (Encounter_Num == 6) or (Encounter_Num == 7)) then begin
         Encounter_Num := 0;
      end
   end

   if (global_var(GVAR_RANDOM_ENC_SOMETHING)) then begin
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
      debug_msg("Southern Mountain encounter type: " + Encounter_Num);
   end

   if (Encounter_Num) then begin
      call choose_start();
      if (Encounter_Num == 1) then begin
         call South1;
      end
      else if (Encounter_Num == 2) then begin
         call South2;
      end
      else if (Encounter_Num == 3) then begin
         call South3;
      end
      else if (Encounter_Num == 4) then begin
         call South4;
      end
      else if (Encounter_Num == 5) then begin
         call South5;
      end
      else if (Encounter_Num == 6) then begin
         call South6;
      end
      else begin
         call hunters;
      end
   end
end

procedure SOUTH_BoneGlow_table begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 2) or (Encounter_Num == 5) or (Encounter_Num == 6) or (Encounter_Num == 7)) then begin
			if debug_mode then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var( GVAR_RANDOM_ENC_SOMETHING ) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");
		Encounter_Num := global_var( GVAR_RANDOM_ENC_SOMETHING );
		set_global_var( GVAR_RANDOM_ENC_SOMETHING, 0 );
	end
	if (Encounter_Num) then begin
		if debug_mode then begin
			debug_msg(" ");    display_msg("Mountain SOUTH_BoneGlow loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call SOUTH_BoneGlow1;
		end
		else if (Encounter_Num == 2) then begin
			call SOUTH_BoneGlow2;
		end
		else if (Encounter_Num == 3) then begin
			call SOUTH_BoneGlow3;
		end
		else if (Encounter_Num == 4) then begin
			call SOUTH_BoneGlow4;
		end
		else if (Encounter_Num == 5) then begin
			call SOUTH_BoneGlow5;
		end
		else if (Encounter_Num == 6) then begin
			call SOUTH_BoneGlow6;
		end
		else begin
			call hunters;
		end
	end
end

procedure Raider_table begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 3) or (Encounter_Num == 4) or (Encounter_Num == 7)) then begin
			if debug_mode then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var( GVAR_RANDOM_ENC_SOMETHING ) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");
		Encounter_Num := global_var( GVAR_RANDOM_ENC_SOMETHING );
		set_global_var( GVAR_RANDOM_ENC_SOMETHING, 0 );
	end
	if (Encounter_Num) then begin
		if debug_mode then begin
			debug_msg(" ");    display_msg("Mountain RAIDER loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Raider1;
		end
		else if (Encounter_Num == 2) then begin
			call Raider2;
		end
		else if (Encounter_Num == 3) then begin
			call Raider3;
		end
		else if (Encounter_Num == 4) then begin
			call Raider4;
		end
		else if (Encounter_Num == 5) then begin
			call Raider5;
		end
		else if (Encounter_Num == 6) then begin
			call Raider6;
		end
		else begin
			call hunters;
		end
	end
end

procedure Junk_custom_table begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 2) or (Encounter_Num == 3) or (Encounter_Num == 4) or (Encounter_Num == 7)) then begin
			if debug_mode then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var( GVAR_RANDOM_ENC_SOMETHING ) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");
		Encounter_Num := global_var( GVAR_RANDOM_ENC_SOMETHING );
		set_global_var( GVAR_RANDOM_ENC_SOMETHING, 0 );
	end
	if (Encounter_Num) then begin
		if debug_mode then begin
			debug_msg(" ");    display_msg("Mountain Junk_custom loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Junk_custom1;
		end
		else if (Encounter_Num == 2) then begin
			call Junk_custom2;
		end
		else if (Encounter_Num == 3) then begin
			call Junk_custom3;
		end
		else if (Encounter_Num == 4) then begin
			call Junk_custom4;
		end
		else if (Encounter_Num == 5) then begin
			call Junk_custom5;
		end
		else if (Encounter_Num == 6) then begin
			call Junk_custom6;
		end
		else begin
			call hunters;
		end
	end
end

procedure Vats_table begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 2) or (Encounter_Num == 3) or (Encounter_Num == 4) or (Encounter_Num == 7)) then begin
			if debug_mode then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var( GVAR_RANDOM_ENC_SOMETHING ) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");
		Encounter_Num := global_var( GVAR_RANDOM_ENC_SOMETHING );
		set_global_var( GVAR_RANDOM_ENC_SOMETHING, 0 );
	end
	if (Encounter_Num) then begin
		if debug_mode then begin
			debug_msg(" ");    display_msg("Mountain VATS loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Vats1;
		end
		else if (Encounter_Num == 2) then begin
			call Vats2;
		end
		else if (Encounter_Num == 3) then begin
			call Vats3;
		end
		else if (Encounter_Num == 4) then begin
			call Vats4;
		end
		else if (Encounter_Num == 5) then begin
			call Vats5;
		end
		else if (Encounter_Num == 6) then begin
			call Vats6;
		end
		else begin
			call hunters;
		end
	end
end

procedure Glow_table begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 3) or (Encounter_Num == 4) or (Encounter_Num == 5) or (Encounter_Num == 7)) then begin
			if debug_mode then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var( GVAR_RANDOM_ENC_SOMETHING ) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");
		Encounter_Num := global_var( GVAR_RANDOM_ENC_SOMETHING );
		set_global_var( GVAR_RANDOM_ENC_SOMETHING, 0 );
	end
	if (Encounter_Num) then begin
		if debug_mode then begin
			debug_msg(" ");    display_msg("Mountain GLOW loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Glow1;
		end
		else if (Encounter_Num == 2) then begin
			call Glow2;
		end
		else if (Encounter_Num == 3) then begin
			call Glow3;
		end
		else if (Encounter_Num == 4) then begin
			call Glow4;
		end
		else if (Encounter_Num == 5) then begin
			call Glow5;
		end
		else if (Encounter_Num == 6) then begin
			call Glow6;
		end
		else begin
			call hunters;
		end
	end
end

procedure Bone_table begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 3) or (Encounter_Num == 5) or (Encounter_Num == 7)) then begin
			if debug_mode then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var( GVAR_RANDOM_ENC_SOMETHING ) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");
		Encounter_Num := global_var( GVAR_RANDOM_ENC_SOMETHING );
		set_global_var( GVAR_RANDOM_ENC_SOMETHING, 0 );
	end
	if (Encounter_Num) then begin
		if debug_mode then begin
			debug_msg(" ");    display_msg("Mountain BONE loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call Bone1;
		end
		else if (Encounter_Num == 2) then begin
			call Bone2;
		end
		else if (Encounter_Num == 3) then begin
			call Bone3;
		end
		else if (Encounter_Num == 4) then begin
			call Bone4;
		end
		else if (Encounter_Num == 5) then begin
			call Bone5;
		end
		else if (Encounter_Num == 6) then begin
			call Bone6;
		end
		else begin
			call hunters;
		end
	end
end

procedure Raider1 begin // Same as Raider3 in RNDDESRT
	variable LVar0 := 0;

	debug("Raider1");

	display_msg(message_str(SCRIPT_RNDDESRT, 173));
	Inner_ring := (dude_perception / 2) + 2;
	Outer_ring := (dude_perception / 2) + 3;
	Tot_Critter_A := random(5, 7);
	Tot_Critter_B := random(2, 3);
	group_angle := random(0, 5);
	random_seed_1 := Tot_Critter_A;
	random_seed_2 := 0;
	random_seed_3 := 0;

	LVar0 := tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(7, 12));
	Create_EW_Red_Caravan(LVar0,0)

	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		Critter := create_object( PID_BURNING_BARREL, 0, 0 );
		Critter_tile := tile_num_in_direction(Dude_tile, group_angle, 5);
		critter_attempt_placement(Critter, Critter_tile, dude_elevation);
	end

	spawn_dead_critter(PID_BRAHMIN,-1,ANIM_fall_back_blood_sf);
	spawn_dead_critter(PID_BRAHMIN,-1,ANIM_fall_back_blood_sf);

	Critter_script := SCRIPT_GENRAIDB;

	while(Tot_Critter_A) do begin
		if (random(0, 1)) then begin
			Critter_type := PID_TRAVELER_BALD_LEATHER;
		end
		else begin
			Critter_type := PID_GEN_TRAVELER;
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;

		enc_group_angle(Critter_direction)

		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		obj_rotate( Critter, Critter_direction );
		Item := create_object( PID_KNIFE, 0, 0 );
		add_obj_to_inven(Critter, Item);
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				if (Critter_type == PID_TRAVELER_BALD_LEATHER) then begin
					Item := create_object( PID_223_FMJ, 0, 0 );
				end
				else begin
					Item := create_object( PID_10MM_JHP, 0, 0 );
				end
				add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 1);
				if (Critter_type == PID_TRAVELER_BALD_LEATHER) then begin
					Item := create_object( PID_HUNTING_RIFLE, 0, 0 );
				end
				else begin
					Item := create_object( PID_10MM_SMG, 0, 0 );
				end
			end
			else begin
				Item := create_object( PID_10MM_JHP, 0, 0 );
				add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 1);
				Item := create_object( PID_10MM_PISTOL, 0, 0 );
			end
		end
		else begin
			Item := create_object( PID_SPEAR, 0, 0 );
		end
		add_obj_to_inven(Critter, Item);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	victim := Critter;
	if (random(0, 1)) then begin
		Critter_type := PID_TRAVELER_BALD_LEATHER;
	end
	else begin
		Critter_type := PID_GEN_TRAVELER;
	end
	Critter_script := -1;
	Critter_direction := group_angle + (random(0, 2) - 1);
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;

	enc_group_angle(Critter_direction)

	if (random(0, 2) == 0) then begin
		Critter_direction := Critter_direction + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
	end
	obj_rotate( Critter, Critter_direction );

	Item := create_object( PID_LEATHER_ARMOR, 0, 0 );
	add_obj_to_inven(Critter, Item);
	wield_obj_critter(Critter, Item);

	Item := create_object( PID_KNIFE, 0, 0 );
	add_obj_to_inven(Critter, Item);
	kill_critter(Critter, ANIM_fall_back_blood_sf);

	Critter_type := PID_TOWNSMAN_METAL;
	Critter_script := SCRIPT_GENGRDA;

	enc_group_angle(group_angle)

	while(Tot_Critter_B) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;

		enc_group_angle(Critter_direction)

		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		obj_rotate( Critter, Critter_direction );
		Item := create_object( PID_HUNTING_RIFLE, 0, 0 );
		add_obj_to_inven(Critter, Item);
		Item := create_object( PID_223_FMJ, 0, 0 );
		add_obj_to_inven(Critter, Item);
		if (dude_perk( PERK_scrounger )) then begin
			Item := create_object( PID_223_FMJ, 0, 0 );
			add_obj_to_inven(Critter, Item);
		end
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	attack_setup(victim, Critter);
	Critter_type := PID_TOWNSMAN_METAL;
	Critter_script := -1;
	Critter_direction := group_angle + (random(0, 2) - 1);
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;

	enc_group_angle(Critter_direction)

	if (random(0, 2) == 0) then begin
		Critter_direction := Critter_direction + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
	end
	obj_rotate( Critter, Critter_direction );
	Item := create_object( PID_METAL_ARMOR, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_HUNTING_RIFLE, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_223_FMJ, 0, 0 );
	add_obj_to_inven(Critter, Item);
	kill_critter(Critter, ANIM_fall_back_blood_sf);
	Critter_type := PID_MERCHANT;
	Critter_script := SCRIPT_GENMERCB;
	Critter_direction := random(0, 5);
	call Place_critter;
	critter_heal(Critter, -5);
	item_caps_adjust(Critter, random(100, 300) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
	if (random(1, 10) > 6) then begin
		Item := create_object( PID_FIRST_AID_KIT, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	if (random(1, 10) > 6) then begin
		Item := create_object( PID_STIMPAK, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	if (random(1, 10) > 6) then begin
		Item := create_object( PID_FUZZY_PAINTING, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	if (random(1, 10) > 6) then begin
		Item := create_object( PID_LOCKPICKS, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 1 );
	call Add_Mysterious_Stranger;
end

procedure Raider2 begin // Same as Raider3 in RNDMTN or Raider1in RNDDESRT
	variable LVar0 := 0;

	debug("Raider2");

	display_msg(message_str(SCRIPT_RNDDESRT, 173));
	Inner_ring := (dude_perception / 2) + 2;
	Outer_ring := (dude_perception / 2) + 3;
	Tot_Critter_A := random(5, 7);
	Tot_Critter_B := random(2, 3);
	group_angle := random(0, 5);
	random_seed_1 := Tot_Critter_A;
	random_seed_2 := 0;
	random_seed_3 := 0;

	LVar0 := tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(7, 12));
	Create_EW_Red_Caravan(LVar0,0)

	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		Critter := create_object( PID_BURNING_BARREL, 0, 0 );
		Critter_tile := tile_num_in_direction(Dude_tile, group_angle, 5);
		critter_attempt_placement(Critter, Critter_tile, dude_elevation);
	end

	spawn_dead_critter(PID_BRAHMIN,-1,ANIM_fall_back_blood_sf);
	spawn_dead_critter(PID_BRAHMIN,-1,ANIM_fall_back_blood_sf);

	Critter_script := SCRIPT_GENRAIDB;

	while(Tot_Critter_A) do begin
		if (random(0, 1)) then begin
			Critter_type := PID_TRAVELER_BALD_LEATHER;
		end
		else begin
			Critter_type := PID_GEN_TRAVELER;
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;

		enc_group_angle(Critter_direction)

		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		obj_rotate( Critter, Critter_direction );
		Item := create_object( PID_KNIFE, 0, 0 );
		add_obj_to_inven(Critter, Item);
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				if (Critter_type == PID_TRAVELER_BALD_LEATHER) then begin
					Item := create_object( PID_223_FMJ, 0, 0 );
				end
				else begin
					Item := create_object( PID_10MM_JHP, 0, 0 );
				end
				add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 1);
				if (Critter_type == PID_TRAVELER_BALD_LEATHER) then begin
					Item := create_object( PID_HUNTING_RIFLE, 0, 0 );
				end
				else begin
					Item := create_object( PID_10MM_SMG, 0, 0 );
				end
			end
			else begin
				Item := create_object( PID_10MM_JHP, 0, 0 );
				add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 1);
				Item := create_object( PID_10MM_PISTOL, 0, 0 );
			end
		end
		else begin
			Item := create_object( PID_SPEAR, 0, 0 );
		end
		add_obj_to_inven(Critter, Item);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	victim := Critter;
	if (random(0, 1)) then begin
		Critter_type := PID_TRAVELER_BALD_LEATHER;
	end
	else begin
		Critter_type := PID_GEN_TRAVELER;
	end
	Critter_script := -1;
	Critter_direction := group_angle + (random(0, 2) - 1);
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;

	enc_group_angle(Critter_direction)

	if (random(0, 2) == 0) then begin
		Critter_direction := Critter_direction + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
	end
	obj_rotate( Critter, Critter_direction );

	Item := create_object( PID_LEATHER_ARMOR, 0, 0 );
	add_obj_to_inven(Critter, Item);
	wield_obj_critter(Critter, Item);

	Item := create_object( PID_KNIFE, 0, 0 );
	add_obj_to_inven(Critter, Item);
	kill_critter(Critter, ANIM_fall_back_blood_sf);
	Critter_type := PID_TOWNSMAN_METAL;
	Critter_script := SCRIPT_GENGRDA;

	enc_group_angle(group_angle)

	while(Tot_Critter_B) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;

		enc_group_angle(Critter_direction)

		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		obj_rotate( Critter, Critter_direction );
		Item := create_object( PID_HUNTING_RIFLE, 0, 0 );
		add_obj_to_inven(Critter, Item);
		Item := create_object( PID_223_FMJ, 0, 0 );
		add_obj_to_inven(Critter, Item);
		if (dude_perk( PERK_scrounger )) then begin
			Item := create_object( PID_223_FMJ, 0, 0 );
			add_obj_to_inven(Critter, Item);
		end
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	attack_setup(victim, Critter);
	Critter_type := PID_TOWNSMAN_METAL;
	Critter_script := -1;
	Critter_direction := group_angle + (random(0, 2) - 1);
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;

	enc_group_angle(Critter_direction)

	if (random(0, 2) == 0) then begin
		Critter_direction := Critter_direction + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
	end
	obj_rotate( Critter, Critter_direction );
	Item := create_object( PID_METAL_ARMOR, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_HUNTING_RIFLE, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_223_FMJ, 0, 0 );
	add_obj_to_inven(Critter, Item);
	kill_critter(Critter, ANIM_fall_back_blood_sf);
	Critter_type := PID_MERCHANT;
	Critter_script := SCRIPT_GENMERCB;
	Critter_direction := random(0, 5);
	call Place_critter;
	critter_heal(Critter, -5);
	item_caps_adjust(Critter, random(100, 300) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
	if (random(1, 10) > 6) then begin
		Item := create_object( PID_FIRST_AID_KIT, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	if (random(1, 10) > 6) then begin
		Item := create_object( PID_STIMPAK, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	if (random(1, 10) > 6) then begin
		Item := create_object( PID_FUZZY_PAINTING, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	if (random(1, 10) > 6) then begin
		Item := create_object( PID_LOCKPICKS, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 1 );
	call Add_Mysterious_Stranger;
end

procedure Raider3 begin

	debug("Raider3");

	display_msg(message_str(SCRIPT_RNDDESRT, 196));
	Tot_Critter_A := random(3, 4);
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 1;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := random(4, 5);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 1 );
	call Add_Mysterious_Stranger;
end

procedure Raider4 begin

	debug("Raider4");

	display_msg(message_str(SCRIPT_RNDDESRT, 197));
	Outer_ring := (dude_perception / 3) + 4;
	Inner_ring := (dude_perception / 3) + 2;
	Tot_Critter_A := random(4, 6);
	group_angle := random(0, 5);
	Critter_script := SCRIPT_GENRAIDA;
	while(Tot_Critter_A) do begin
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				Critter_type := PID_TRAVELER_BALD_LEATHER;
			end
			else begin
				Critter_type := PID_GEN_TRAVELER;
			end
		end
		else begin
			Critter_type := PID_TRAVELER_3;
		end
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;

		enc_group_angle(Critter_direction)

		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		obj_rotate( Critter, Critter_direction );
		Item := create_object( PID_KNIFE, 0, 0 );
		add_obj_to_inven(Critter, Item);
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				if (Critter_type == PID_TRAVELER_BALD_LEATHER) then begin
					Item := create_object( PID_HUNTING_RIFLE, 0, 0 );
				end
				else begin
					Item := create_object( PID_10MM_SMG, 0, 0 );
				end
			end
			else begin
				Item := create_object( PID_DESERT_EAGLE, 0, 0 );
			end
		end
		else begin
			Item := create_object( PID_10MM_PISTOL, 0, 0 );
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 1)) then begin
			Item := create_object( PID_BEER, 0, 0 );
			add_obj_to_inven(Critter, Item);
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 1 );
	call Add_Mysterious_Stranger;
end

procedure Raider5 begin

	debug("Raider5");

	display_msg(message_str(SCRIPT_RNDDESRT, 198));
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 2;
	Critter_direction := dude_rot;
	Critter_type := PID_MAN_JEANS;
	Critter_script := SCRIPT_LONERAID;
	call Place_critter;
	obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
	Item := create_object( PID_KNIFE, 0, 0 );
	add_obj_to_inven(Critter, Item);
	if (random(0, 1)) then begin
		if (random(0, 1)) then begin
			Item := create_object( PID_10MM_SMG, 0, 0 );
		end
		else begin
			Item := create_object( PID_DESERT_EAGLE, 0, 0 );
		end
	end
	else begin
		Item := create_object( PID_10MM_PISTOL, 0, 0 );
	end
	add_obj_to_inven(Critter, Item);
	if (random(0, 1)) then begin
		item_caps_adjust(Critter, random(5, 10) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
	end
end

procedure Raider6 begin

	debug("Raider6");

	display_msg(message_str(SCRIPT_RNDDESRT, 199));
	Tot_Critter_A := random(3, 5);
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 1;
	Critter_script := -1;
	while(Tot_Critter_A) do begin
		if (random(0, 1)) then begin
			if (random(0, 1)) then begin
				Critter_type := PID_TRAVELER_BALD_LEATHER;
			end
			else begin
				Critter_type := PID_GEN_TRAVELER;
			end
		end
		else begin
			Critter_type := PID_TRAVELER_3;
		end

		spawn_dead_critter(Critter_type,Critter_script,ANIM_fall_back_blood_sf);

		Tot_Critter_A := Tot_Critter_A - 1;
	end

	spawn_dead_critter(PID_DOG,-1,ANIM_fall_back_blood_sf);
end

procedure Junk_custom1 begin
	debug("junk_custom1");

	display_msg(message_str(SCRIPT_RNDDESRT, 200));
	Tot_Critter_A := random(3, 4);
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 1;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 4);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 1 );
	call Add_Mysterious_Stranger;
end

procedure Junk_custom2 begin
	debug("junk_custom2");

	display_msg(message_str(SCRIPT_RNDDESRT, 200));
	Tot_Critter_A := random(3, 4);
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 1;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 4);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 1 );
	call Add_Mysterious_Stranger;
end

procedure Junk_custom3 begin
	debug("junk_custom3");

	display_msg(message_str(SCRIPT_RNDDESRT, 223));
	Tot_Critter_A := random(4, 6);
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 1;
	group_angle := random(0, 5);
	Critter_type := PID_COYOTE;
	Critter_script := SCRIPT_COYOTE;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		obj_rotate( Critter, random(0, 5) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 1 );
	call Add_Mysterious_Stranger;
end

procedure Junk_custom4 begin
	debug("junk_custom4");

	display_msg(message_str(SCRIPT_RNDDESRT, 224));
	Tot_Critter_A := random(2, 4);
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 1;
	Critter_type := PID_TRAVELER_GEN_LEATHER;
	Critter_script := SCRIPT_JNKSCOUT;
	group_angle := random(0, 5);
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		if (random(1, 3) == 1) then begin
			obj_rotate( Critter, random(0, 5) );
		end
		else begin
			obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		end
		Item := create_object( PID_KNIFE, 0, 0 );
		add_obj_to_inven(Critter, Item);
		wield_obj_critter(Critter, Item);

		if (random(0, 1)) then begin
			Item := create_object( PID_HUNTING_RIFLE, 0, 0 );
			add_obj_to_inven(Critter, Item);
			wield_obj_critter(Critter, Item);

			Item := create_object( PID_223_FMJ, 0, 0 );
			add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 1);
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Item := create_object( PID_RADIO, 0, 0 );
	add_obj_to_inven(Critter, Item);
end

procedure Junk_custom5 begin
	variable LVar0 := 0;

	debug("junk_custom5");
	display_msg(message_str(SCRIPT_RNDDESRT, 225));
	Tot_Critter_A := random(1, 3);
	Tot_Critter_B := (random(1, 6) + random(1, 6));
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 1;
	group_angle := random(0, 5);

	LVar0 := tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(7, 12));
	Create_EW_Red_Caravan(LVar0,0)

	LVar0 := tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(7, 12));
	Create_EW_Grey_Caravan(LVar0,0)

	Critter_type := PID_PEASANT_ROBE;
	Critter_script := SCRIPT_GENMERCA;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		obj_rotate( Critter, random(0, 5) );
		item_caps_adjust(Critter, random(50, 150) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
		Item := create_object( PID_10MM_AP, 0, 0 );
		add_mult_objs_to_inven(Critter, Item, random(1, 4));
		Item := create_object( PID_10MM_JHP, 0, 0 );
		add_mult_objs_to_inven(Critter, Item, random(1, 4));
		Item := create_object( PID_KNIFE, 0, 0 );
		add_mult_objs_to_inven(Critter, Item, random(1, 4));
		Item := create_object( PID_MUTATED_FRUIT, 0, 0 );
		add_mult_objs_to_inven(Critter, Item, random(4, 8));
		Item := create_object( PID_ROPE, 0, 0 );
		add_mult_objs_to_inven(Critter, Item, random(0, 2));
		Item := create_object( PID_BROWN_BAG, 0, 0 );
		add_mult_objs_to_inven(Critter, Item, random(0, 2));
		Tot_Critter_A := Tot_Critter_A - 1;
	end

	Critter_script := SCRIPT_GENGRDA;
	while(Tot_Critter_B) do begin
   	rnd_critter := random(0,1);
   	if (rnd_critter == 0) then
   	   Critter_type := PID_STRANGER_HMMETL;
   	else
   	   Critter_type := PID_MALE_GUARD_METAL_BLACK;

		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		obj_rotate( Critter, random(0, 5) );
		Item := create_object( PID_KNIFE, 0, 0 );
		add_obj_to_inven(Critter, Item);

		if (random(0, 1)) then begin
			Item := create_object( PID_DESERT_EAGLE, 0, 0 );
			add_obj_to_inven(Critter, Item);
			wield_obj_critter(Critter, Item);

			Item := create_object( PID_44_MAGNUM_JHP, 0, 0 );
			add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 1);
		end
		else begin
			Item := create_object( PID_10MM_PISTOL, 0, 0 );
			add_obj_to_inven(Critter, Item);
			wield_obj_critter(Critter, Item);

			Item := create_object( PID_10MM_JHP, 0, 0 );
			add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 1);
		end
		Tot_Critter_B := Tot_Critter_B - 1;
	end
end

procedure Junk_custom6 begin
	variable LVar0 := 2;
	variable LVar1 := 0;

	debug("junk_custom6");
	display_msg(message_str(SCRIPT_RNDDESRT, 172));
	LVar1 := create_object( PID_BOTTLE_CAPS, 0, 0 );
	Critter_direction := random(0, 5);
	Critter_tile := tile_num_in_direction(Dude_tile, Critter_direction, 4);
	if (dude_luck < 3) then begin
		Item := create_object( PID_MUTATED_FRUIT, 0, 0 );
		critter_attempt_placement(Item, Critter_tile, dude_elevation);
	end
	else begin
		if (dude_luck == 8) then begin
			Item := create_object( PID_MUTATED_FRUIT, 0, 0 );
			critter_attempt_placement(Item, Critter_tile, dude_elevation);
			Item := create_object( PID_10MM_JHP, 0, 0 );
			critter_attempt_placement(Item, Critter_tile, dude_elevation);
			if (dude_perk( PERK_scrounger )) then begin
				Item := create_object( PID_10MM_JHP, 0, 0 );
				critter_attempt_placement(Item, Critter_tile, dude_elevation);
			end
			Item := create_object( PID_BAG, 0, 0 );
			critter_attempt_placement(Item, Critter_tile, dude_elevation);
			add_mult_objs_to_inven(Item, LVar1, 6 * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
		end
		else begin
			if (dude_luck > 8) then begin
				Item := create_object( PID_MUTATED_FRUIT, 0, 0 );
				critter_attempt_placement(Item, Critter_tile, dude_elevation);
				if (dude_perk( PERK_scrounger )) then begin
					LVar0 := 4;
				end
				while(LVar0) do begin
					Item := create_object( PID_10MM_JHP, 0, 0 );
					critter_attempt_placement(Item, Critter_tile, dude_elevation);
					LVar0 := LVar0 - 1;
				end
				Item := create_object( PID_BAG, 0, 0 );
				add_mult_objs_to_inven(Item, LVar1, 122 * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
				critter_attempt_placement(Item, Critter_tile, dude_elevation);
				Item := create_object( PID_10MM_PISTOL, 0, 0 );
				critter_attempt_placement(Item, Critter_tile, dude_elevation);
			end
			else begin
				Item := create_object( PID_MUTATED_FRUIT, 0, 0 );
				critter_attempt_placement(Item, Critter_tile, dude_elevation);
				Item := create_object( PID_BAG, 0, 0 );
				add_mult_objs_to_inven(Item, LVar1, 4 * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
				critter_attempt_placement(Item, Critter_tile, dude_elevation);
			end
		end
	end
end

procedure Vats1 begin
	debug("vats1");
	display_msg(message_str(SCRIPT_RNDDESRT, 253));
	radiation_inc(dude_obj, random(15, 30));
	Tot_Critter_A := random(3, 4);
	Tot_Critter_B := 1;
	Outer_ring := (dude_perception / 3) + 4;
	Inner_ring := (dude_perception / 3) + 2;
	Critter_type := PID_MEAN_SUPER_MUTANT;
	Critter_script := SCRIPT_MUTAMBSH;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		if (random(0, 1) == 1) then begin
			if (random(0, 3) == 0) then begin
				Item := create_object( PID_FLAMER, 0, 0 );
			end
			else begin
				Item := create_object( PID_MINIGUN, 0, 0 );
			end
		end
		else begin
			Item := create_object( PID_SPIKED_KNUCKLES, 0, 0 );
		end
		add_obj_to_inven(Critter, Item);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_NIGHTKIN;
	Critter_script := SCRIPT_SUPAMBSH;
	while(Tot_Critter_B) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Item := create_object( PID_MINIGUN, 0, 0 );
		add_obj_to_inven(Critter, Item);
		Item := create_object( PID_5MM_JHP, 0, 0 );
		add_obj_to_inven(Critter, Item);
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 3 );
	call Add_Mysterious_Stranger;
end

procedure Vats2 begin
	debug("vats2");
	display_msg(message_str(SCRIPT_RNDDESRT, 254));
	radiation_inc(dude_obj, random(15, 30));
	if (random(0, 1)) then begin
		Critter_type := PID_CENTAUR_LESSER;// LESSER CENTAUR
		Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	end
	else begin
		Critter_type := PID_FLOATER;// FLOATER
		Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	end
	Tot_Critter_A := random(3, 5);
	Outer_ring := (dude_perception / 3) + 4;
	Inner_ring := (dude_perception / 3) + 2;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 3 );
	call Add_Mysterious_Stranger;
end

procedure Vats3 begin
	debug("vats3");
	display_msg(message_str(SCRIPT_RNDDESRT, 306));
	radiation_inc(dude_obj, random(15, 30));
	Tot_Critter_A := random(1, 2);
	Outer_ring := (dude_perception / 3) + 4;
	Inner_ring := (dude_perception / 3) + 2;
	Critter_type := PID_FLOATER;// FLOATER
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_CENTAUR_LESSER;// LESSER CENTAUR
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	Tot_Critter_A := 1;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 2;
	Tot_Critter_A := random(2, 3);
	Critter_type := PID_MEAN_SUPER_MUTANT;
	Critter_script := SCRIPT_MUTAMBSH;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_NIGHTKIN;
	Critter_script := SCRIPT_SUPAMBSH;
	Critter_direction := random(0, 2);
	call Place_critter;
	obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
	Item := create_object( PID_LASER_RIFLE, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_SMALL_ENERGY_CELL, 0, 0 );
	add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 2);
	/* has how many? */    if (not(dude_item_count( PID_RADIO ))) then begin
		Item := create_object( PID_RADIO, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 3 );
	call Add_Mysterious_Stranger;
end

procedure Vats4 begin
	debug("vats4");
	display_msg(message_str(SCRIPT_RNDDESRT, 256));
	radiation_inc(dude_obj, random(15, 30));
	Tot_Critter_A := random(3, 4);
	Outer_ring := (dude_perception / 2) + 4;
	Inner_ring := (dude_perception / 2) + 2;
	Critter_type := PID_MEAN_SUPER_MUTANT;
	Critter_script := SCRIPT_MUTAMBSH;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		obj_rotate( Critter, random(3, 4) );
		if (random(0, 1) == 1) then begin
			if (random(0, 1) == 1) then begin
				Item := create_object( PID_FLAMER, 0, 0 );
			end
			else begin
				Item := create_object( PID_MINIGUN, 0, 0 );
			end
		end
		else begin
			Item := create_object( PID_SPIKED_KNUCKLES, 0, 0 );
		end
		add_obj_to_inven(Critter, Item);
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_NIGHTKIN;
	Critter_script := SCRIPT_SUPAMBSH;
	Tot_Critter_B := 1;
	while(Tot_Critter_B) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		obj_rotate( Critter, random(3, 4) );
		Item := create_object( PID_MINIGUN, 0, 0 );
		add_obj_to_inven(Critter, Item);
		Item := create_object( PID_5MM_JHP, 0, 0 );
		add_obj_to_inven(Critter, Item);
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	Outer_ring := (dude_perception / 3) + 4;
	Inner_ring := (dude_perception / 3) + 2;
	Critter_type := PID_FLOATER;// FLOATER
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	Critter_direction := random(0, 2);
	call Place_critter;
	obj_rotate( Critter, random(3, 4) );
	set_global_var( GVAR_MYST_STRANGER_ITEM, 3 );
	call Add_Mysterious_Stranger;
end

procedure Vats5 begin
	debug("vats5");
	display_msg(message_str(SCRIPT_RNDDESRT, 306));
	radiation_inc(dude_obj, random(15, 30));
	Tot_Critter_A := random(1, 2);
	Outer_ring := (dude_perception / 3) + 4;
	Inner_ring := (dude_perception / 3) + 2;
	Critter_type := PID_FLOATER;// FLOATER
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_CENTAUR_LESSER;// LESSER CENTAUR
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	Tot_Critter_A := 1;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 2;
	Tot_Critter_A := random(2, 3);
	Critter_type := PID_MEAN_SUPER_MUTANT;
	Critter_script := SCRIPT_MUTAMBSH;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_NIGHTKIN;
	Critter_script := SCRIPT_SUPAMBSH;
	Critter_direction := random(0, 2);
	call Place_critter;
	obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
	Item := create_object( PID_LASER_RIFLE, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_SMALL_ENERGY_CELL, 0, 0 );
	add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 2);
	/* has how many? */    if (not(dude_item_count( PID_RADIO ))) then begin
		Item := create_object( PID_RADIO, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 3 );
	call Add_Mysterious_Stranger;
end

procedure Vats6 begin
	debug("vats6");
	display_msg(message_str(SCRIPT_RNDDESRT, 279));
	radiation_inc(dude_obj, random(15, 30));
	Item := create_object( PID_POT, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(8, 10)), 0 );
	Item := create_object( PID_BOXES_2, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(5, 9)), 0 );
	Item := create_object( PID_BOXES_3, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(5, 9)), 0 );
	Item := create_object( PID_TRASH_CAN, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(5, 9)), 0 );
	Item := create_object( PID_CHAIR, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(5, 9)), 0 );
	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		Item := create_object( PID_BURNING_BARREL, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(8, 10)), 0 );
		if (random(0, 1)) then begin
			Item := create_object( PID_BURNING_BARREL, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(8, 10)), 0 );
		end
	end
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 2;
	group_angle := random(0, 5);
	Critter_type := PID_MEAN_SUPER_MUTANT;
	Critter_script := SCRIPT_MUTAMBSH;
	Tot_Critter_A := random(2, 3);
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_NIGHTKIN;
	Critter_script := SCRIPT_SUPAMBSH;
	Critter_direction := random(0, 2);
	Critter_direction := group_angle + (random(0, 2) - 1);
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;
	obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
	Item := create_object( PID_MINIGUN, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_5MM_JHP, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Outer_ring := (dude_perception / 3) + 4;
	Inner_ring := (dude_perception / 3) + 2;
	Critter_type := PID_FLOATER;// FLOATER
	Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
	Tot_Critter_A := 2;

	enc_group_angle(group_angle)

	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 3 );
	call Add_Mysterious_Stranger;
end

procedure Glow1 begin
	variable LVar0 := 3;

	debug("Glow1");
	display_msg(message_str(SCRIPT_RNDDESRT, 280));
	radiation_inc(dude_obj, random(30, 60));
	Tot_Critter_A := random(2, 3);
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 2;

	Critter_type := PID_MEAN_SUPER_MUTANT;
	Critter_script := SCRIPT_MUTAMBSH;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 5);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end

	if (random(0, 1)) then begin
		Critter_type := PID_NIGHTKIN;
		Critter_script := SCRIPT_SUPAMBSH;
		Critter_direction := random(0, 5);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Item := create_object( PID_LASER_RIFLE, 0, 0 );
		add_obj_to_inven(Critter, Item);
		if (dude_perk( PERK_scrounger )) then begin
			LVar0 := 5;
		end
		while(LVar0) do begin
			Item := create_object( PID_SMALL_ENERGY_CELL, 0, 0 );
			add_obj_to_inven(Critter, Item);
			LVar0 := LVar0 - 1;
		end
	end

	set_global_var( GVAR_MYST_STRANGER_ITEM, 3 );
	call Add_Mysterious_Stranger;
end

procedure Glow2 begin
	variable LVar0 := 0;

	debug("Glow2");
	display_msg(message_str(SCRIPT_RNDDESRT, 281));
	radiation_inc(dude_obj, random(30, 60));
	LVar0 := game_time_hour;
	Tot_Critter_A := random(3, 5);
	if ((LVar0 > 600) and (LVar0 < 1900)) then begin
		Outer_ring := (dude_perception / 3) + 4;
		Inner_ring := (dude_perception / 3) + 2;
	end
	else begin
		Outer_ring := (dude_perception / 3) + 2;
		Inner_ring := (dude_perception / 3) + 2;
	end

	Critter_type := PID_FLOATER;
	Critter_script := SCRIPT_FLOATER;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 5);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end

	if (random(0, 1)) then begin
		Critter_direction := random(0, 4);
		Critter_type := PID_CENTAUR_LESSER;
		Critter_script := SCRIPT_FLOATER;
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
	end

	set_global_var( GVAR_MYST_STRANGER_ITEM, 3 );
	call Add_Mysterious_Stranger;
end

procedure Glow3 begin
	debug("Glow3");

	display_msg(message_str(SCRIPT_RNDDESRT, 282));
	radiation_inc(dude_obj, random(30, 60));
	Tot_Critter_A := random(4, 8);
	Outer_ring := (dude_perception / 2) + 4;
	Inner_ring := (dude_perception / 2) + 2;

	Critter_type := PID_RADSCORPION;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 4);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end

	set_global_var( GVAR_MYST_STRANGER_ITEM, 3 );
	call Add_Mysterious_Stranger;
end

procedure Glow4 begin
	debug("Glow4");

	display_msg(message_str(SCRIPT_RNDDESRT, 283));
	Outer_ring := (dude_perception / 3) + 4;
	Inner_ring := (dude_perception / 3) + 2;

	Critter_type := PID_FLOATER;
	Critter_script := SCRIPT_FLOATER;
	Tot_Critter_A := 1;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 2);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	radiation_inc(dude_obj, random(30, 60));
end

procedure Glow5 begin
	debug("Glow5");

	display_msg(message_str(SCRIPT_RNDDESRT, 284));
	radiation_inc(dude_obj, random(30, 60));
	Outer_ring := (dude_perception / 3) + 4;
	Inner_ring := (dude_perception / 3) + 2;
	group_angle := random(0, 5);
	Tot_Critter_A := 1 + random(0, 1);

	Critter_type := PID_FLOATER;
	Critter_script := SCRIPT_FLOATER;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;

		enc_group_angle(Critter_direction)

		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		obj_rotate( Critter, Critter_direction );
		Tot_Critter_A := Tot_Critter_A - 1;
	end

	if (random(0, 1)) then begin
		Critter_type := PID_CENTAUR_LESSER;
		Critter_script := SCRIPT_FLOATER;
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		enc_group_angle(Critter_direction)
		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		obj_rotate( Critter, Critter_direction );
	end
end

procedure Glow6 begin
	debug("Glow6");
	display_msg(message_str(SCRIPT_RNDDESRT, 285));
	radiation_inc(dude_obj, random(30, 60));
	Outer_ring := (dude_perception / 3) + 4;
	Inner_ring := (dude_perception / 3) + 2;

	Critter_type := PID_CENTAUR_LESSER;
	Critter_script := SCRIPT_FLOATER;
	Critter_direction := random(2, 5);
	call Place_critter;
	obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
	if (random(0, 1)) then begin
		Critter_type := PID_FLOATER;
		Critter_script := SCRIPT_FLOATER;
		Critter_direction := random(1, 4);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
	end

	set_global_var( GVAR_MYST_STRANGER_ITEM, 3 );
	call Add_Mysterious_Stranger;
end

procedure Bone1 begin

	debug("Bone1");
	display_msg(message_str(SCRIPT_RNDDESRT, 307));

	Tot_Critter_A := random(2, 3);
	group_angle := random(0, 5);
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 2;
	Critter_type := PID_MEAN_SUPER_MUTANT;
	Critter_script := SCRIPT_MUTAMBSH;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 4) - 2);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		if (random(1, 4) == 1) then begin
			Item := create_object( PID_FLAMER, 0, 0 );
		end
		else begin
			Item := create_object( PID_MINIGUN, 0, 0 );
		end
		add_obj_to_inven(Critter, Item);
		if (random(1, 5) == 1) then begin
			Item := create_object( PID_ROCKET_LAUNCHER, 0, 0 );
			add_obj_to_inven(Critter, Item);
		end
		if (random(0, 2) == 0) then begin
			item_caps_adjust(Critter, random(5, 20) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	if (random(0, 1)) then begin
		Critter_type := PID_NIGHTKIN;
		Critter_script := SCRIPT_SUPAMBSH;
		Critter_direction := group_angle + (random(0, 4) - 2);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Item := create_object( PID_MINIGUN, 0, 0 );
		add_obj_to_inven(Critter, Item);
		if (random(0, 2) == 0) then begin
			item_caps_adjust(Critter, random(5, 20) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
		end
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 3 );
	call Add_Mysterious_Stranger;
end

procedure Bone2 begin
	variable LVar0 := 0;

	debug("Bone2");
	display_msg(message_str(SCRIPT_RNDDESRT, 308));

	group_angle := random(0, 5);
	if ((game_time_hour >= 1900) or (game_time_hour < 600) and random(0, 1)) then begin
		Critter := create_object( PID_FIRE_PIT, 0, 0 );
		Critter_tile := tile_num_in_direction(Dude_tile, group_angle, 4);
		critter_attempt_placement(Critter, Critter_tile, dude_elevation);
		Critter := create_object( PID_FIRE_PIT, 0, 0 );

		enc_group_angle(Item)

		Critter_tile := tile_num_in_direction(Dude_tile, Item, 4);
		critter_attempt_placement(Critter, Critter_tile, dude_elevation);
	end
	Dude_tile := Dude_tile + (random(0, 4) - 2 + ((random(0, 2) - 1) * 200));
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 2;
	Tot_Critter_A := random(3, 5);
	Tot_Critter_B := random(3, 5);
	Critter_type := PID_GEN_THUG;
	Critter_script := SCRIPT_GENRAIDA;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end

		call Place_critter;
		enc_group_angle(Critter_direction)

		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		obj_rotate( Critter, Critter_direction );
		LVar0 := random(0, 2);
		if (LVar0 == 0) then begin
			Item := create_object( PID_DESERT_EAGLE, 0, 0 );
		end
		else begin
			if (LVar0 == 1) then begin
				Item := create_object( PID_BRASS_KNUCKLES, 0, 0 );
			end
			else begin
				Item := create_object( PID_10MM_PISTOL, 0, 0 );
			end
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 2) == 0) then begin
			item_caps_adjust(Critter, random(5, 25) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	victim := Critter;
	Critter_type := PID_THUG_MALE_METAL;
	Critter_script := SCRIPT_GENRAIDC;

	enc_group_angle(group_angle)

	while(Tot_Critter_B) do begin
		Critter_direction := group_angle + (random(0, 2) - 1);
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end

		call Place_critter;
		enc_group_angle(Critter_direction)

		if (random(0, 2) == 0) then begin
			Critter_direction := Critter_direction + (random(0, 2) - 1);
			while(Critter_direction < 0) do begin
				Critter_direction := Critter_direction + 6;
			end
			if (Critter_direction > 5) then begin
				Critter_direction := Critter_direction % 6;
			end
		end
		obj_rotate( Critter, Critter_direction );
		if (random(0, 1)) then begin
			Item := create_object( PID_KNIFE, 0, 0 );
		end
		else begin
			Item := create_object( PID_SPEAR, 0, 0 );
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 2) == 0) then begin
			item_caps_adjust(Critter, random(4, 25) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
		end
		Tot_Critter_B := Tot_Critter_B - 1;
	end
	attack_setup(Critter, victim);
	set_global_var( GVAR_MYST_STRANGER_ITEM, 2 );
	call Add_Mysterious_Stranger;
end

procedure Bone3 begin

	debug("Bone3");
	display_msg(message_str(SCRIPT_RNDDESRT, 309));
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 1;
	Tot_Critter_A := random(3, 7);
	group_angle := random(0, 5);
	Critter_type := PID_GEN_THUG;
	Critter_script := SCRIPT_GENRAIDA;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + random(0, 2 * 2) - 2;
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		if (random(0, 1)) then begin
			Item := create_object( PID_10MM_PISTOL, 0, 0 );
		end
		else begin
			Item := create_object( PID_10MM_SMG, 0, 0 );
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 2) == 0) then begin
			item_caps_adjust(Critter, random(4, 25) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_MAN_JEANS;
	Critter_script := SCRIPT_GENRAIDA;
	Critter_direction := group_angle + random(0, 2 * 2) - 2;
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;
	obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );

	Item := create_object( PID_LEATHER_ARMOR, 0, 0 );
	add_obj_to_inven(Critter, Item);
	wield_obj_critter(Critter, Item);

	Item := create_object( PID_FIRST_AID_KIT, 0, 0 );
	add_obj_to_inven(Critter, Item);
	item_caps_adjust(Critter, random(25, 100) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
	if (random(0, 1)) then begin
		Item := create_object( PID_SMALL_ENERGY_CELL, 0, 0 );
		add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 1);
	end
	if (random(0, 1)) then begin
		Item := create_object( PID_SLEDGEHAMMER, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	if (random(0, 1)) then begin
		Item := create_object( PID_44_MAGNUM_JHP, 0, 0 );
		add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 1);
	end
	if (random(0, 1)) then begin
		Item := create_object( PID_KNIFE, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 1 );
	call Add_Mysterious_Stranger;
end

procedure Bone4 begin

	debug("Bone4");
	display_msg(message_str(SCRIPT_RNDDESRT, 310));
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 1;
	Tot_Critter_A := random(2, 3);
	group_angle := random(0, 5);
	Critter_type := PID_GEN_THUG;
	Critter_script := SCRIPT_GENRAIDA;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + random(0, 2 * 2) - 2;
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		if (random(0, 1)) then begin
			Item := create_object( PID_10MM_PISTOL, 0, 0 );
		end
		else begin
			Item := create_object( PID_10MM_SMG, 0, 0 );
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 2) == 0) then begin
			item_caps_adjust(Critter, random(4, 25) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_MAN_JEANS;
	Critter_script := SCRIPT_GENRAIDA;
	Critter_direction := group_angle + random(0, 2 * 2) - 2;
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;
	obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
	Item := create_object( PID_FIRST_AID_KIT, 0, 0 );
	add_obj_to_inven(Critter, Item);
	item_caps_adjust(Critter, random(25, 100) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
	if (random(0, 1)) then begin
		Item := create_object( PID_SMALL_ENERGY_CELL, 0, 0 );
		add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 1);
	end
	if (random(0, 1)) then begin
		Item := create_object( PID_SLEDGEHAMMER, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	if (random(0, 1)) then begin
		Item := create_object( PID_44_MAGNUM_JHP, 0, 0 );
		add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 1);
	end
	if (random(0, 1)) then begin
		Item := create_object( PID_KNIFE, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 1 );
	call Add_Mysterious_Stranger;
end

procedure Bone5 begin

	debug("Bone5");
	display_msg(message_str(SCRIPT_RNDDESRT, 311));

	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 1;
	Tot_Critter_A := random(2, 3);
	group_angle := random(0, 5);
	Critter_type := PID_GEN_THUG;
	Critter_script := SCRIPT_GENRAIDA;
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle + random(0, 2 * 2) - 2;
		while(Critter_direction < 0) do begin
			Critter_direction := Critter_direction + 6;
		end
		if (Critter_direction > 5) then begin
			Critter_direction := Critter_direction % 6;
		end
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		if (random(0, 1)) then begin
			Item := create_object( PID_10MM_PISTOL, 0, 0 );
		end
		else begin
			Item := create_object( PID_10MM_SMG, 0, 0 );
		end
		add_obj_to_inven(Critter, Item);
		if (random(0, 2) == 0) then begin
			item_caps_adjust(Critter, random(4, 25) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Critter_type := PID_MAN_JEANS;
	Critter_script := SCRIPT_GENRAIDA;
	Critter_direction := group_angle + random(0, 2 * 2) - 2;
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	call Place_critter;
	obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );

	Item := create_object( PID_LEATHER_ARMOR, 0, 0 );
	add_obj_to_inven(Critter, Item);
	wield_obj_critter(Critter, Item);

	Item := create_object( PID_FIRST_AID_KIT, 0, 0 );
	add_obj_to_inven(Critter, Item);
	item_caps_adjust(Critter, random(25, 100) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
	if (random(0, 1)) then begin
		Item := create_object( PID_SMALL_ENERGY_CELL, 0, 0 );
		add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 1);
	end
	if (random(0, 1)) then begin
		Item := create_object( PID_SLEDGEHAMMER, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	if (random(0, 1)) then begin
		Item := create_object( PID_44_MAGNUM_JHP, 0, 0 );
		add_mult_objs_to_inven(Critter, Item, dude_perk( PERK_scrounger ) + 1);
	end
	if (random(0, 1)) then begin
		Item := create_object( PID_KNIFE, 0, 0 );
		add_obj_to_inven(Critter, Item);
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 2 );
	call Add_Mysterious_Stranger;
end

procedure Bone6 begin
	debug("Bone6");
	display_msg(message_str(SCRIPT_RNDDESRT, 313));
	Tot_Critter_A := random(4, 6);
	if (day) then begin
		Outer_ring := 6;
		Inner_ring := 3;
	end
	else begin
		Outer_ring := 4;
		Inner_ring := 3;
	end
	Critter_type := PID_MANTIS;
	Critter_script := SCRIPT_MANTIS;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 5);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	set_global_var( GVAR_MYST_STRANGER_ITEM, 1 );
	call Add_Mysterious_Stranger;
end

procedure hunters begin
	debug("hunters");

	Inner_ring := 8;
	Outer_ring := 5;
	group_angle := random(0, 5);
	Critter_direction := group_angle + random(0, 3 * 2) - 3;
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	Critter_type := PID_AVELLONE;
	Critter_script := SCRIPT_HUNTER;
	call Place_critter;
	obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
	Item := create_object( PID_ASSAULT_RIFLE, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_5MM_AP, 0, 0 );
	add_mult_objs_to_inven(Critter, Item, 4 * (dude_perk( PERK_scrounger ) + 1));
	Item := create_object( PID_COMBAT_ARMOR, 0, 0 );
	add_obj_to_inven(Critter, Item);
	item_caps_adjust(Critter, random(5, 30) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
	Item := create_object( PID_SUPER_STIMPAK, 0, 0 );
	add_mult_objs_to_inven(Critter, Item, 2);
	Critter_direction := group_angle + random(0, 3 * 2) - 3;
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	Critter_type := PID_THUG_FEMALE_YELLOW;
	Critter_script := SCRIPT_THUG;
	call Place_critter;
	obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
	Item := create_object( PID_SPEAR, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_METAL_ARMOR, 0, 0 );
	add_obj_to_inven(Critter, Item);
	if (random(0, 2) == 0) then begin
		item_caps_adjust(Critter, random(5, 30) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
	end
	Critter_direction := group_angle + random(0, 3 * 2) - 3;
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	Critter_type := PID_THUG_MALE_METAL;
	Critter_script := SCRIPT_THUG;
	call Place_critter;
	obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
	Item := create_object( PID_SNIPER_RIFLE, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_223_FMJ, 0, 0 );
	add_mult_objs_to_inven(Critter, Item, 3 * (dude_perk( PERK_scrounger ) + 1));
	Item := create_object( PID_METAL_ARMOR, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_EXPLOSIVE_ROCKET, 0, 0 );
	add_mult_objs_to_inven(Critter, Item, 2 * (dude_perk( PERK_scrounger ) + 1));
	if (random(0, 2) == 0) then begin
		item_caps_adjust(Critter, random(5, 40) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
	end
	Critter_direction := group_angle + random(0, 3 * 2) - 3;
	while(Critter_direction < 0) do begin
		Critter_direction := Critter_direction + 6;
	end
	if (Critter_direction > 5) then begin
		Critter_direction := Critter_direction % 6;
	end
	Critter_type := PID_THUG_BLACK_METAL;
	Critter_script := SCRIPT_THUG;
	call Place_critter;
	obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
	Item := create_object( PID_DESERT_EAGLE, 0, 0 );
	add_obj_to_inven(Critter, Item);
	Item := create_object( PID_44_MAGNUM_JHP, 0, 0 );
	add_mult_objs_to_inven(Critter, Item, 2 * (dude_perk( PERK_scrounger ) + 1));
	Item := create_object( PID_METAL_ARMOR, 0, 0 );
	add_obj_to_inven(Critter, Item);
	if (random(0, 2) == 0) then begin
		item_caps_adjust(Critter, random(5, 30) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
	end
	call Add_Mysterious_Stranger;
end

procedure VAULT_table begin
	if (Ranger_rerolls) then begin
		Ranger_rerolls := (Ranger_rerolls - 1);
		if ((Encounter_Num == 1) or (Encounter_Num == 3) or (Encounter_Num == 5) or (Encounter_Num == 6) or (Encounter_Num == 7)) then begin
			if debug_mode then begin
				debug_msg(" ");  display_msg("RANGER PERK rerolls; Encounter_Num == 0");
			end
			Encounter_Num := 0;
		end
	end
	if (global_var( GVAR_RANDOM_ENC_SOMETHING ) > 0) then begin
		debug_msg(" ");  debug_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");  display_msg("Warning: GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var( GVAR_RANDOM_ENC_SOMETHING ) + " ");
		Encounter_Num := global_var( GVAR_RANDOM_ENC_SOMETHING );
		set_global_var( GVAR_RANDOM_ENC_SOMETHING, 0 );
	end
	if (Encounter_Num) then begin
		if debug_mode then begin
			debug_msg(" ");    display_msg("Mountain VAULT loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
		end
		call choose_start;
		if (Encounter_Num == 1) then begin
			call VAULT1;
		end
		else if (Encounter_Num == 2) then begin
			call VAULT2;
		end
		else if (Encounter_Num == 3) then begin
			call VAULT3;
		end
		else if (Encounter_Num == 4) then begin
			call VAULT4;
		end
		else if (Encounter_Num == 5) then begin
			call VAULT5;
		end
		else if (Encounter_Num == 6) then begin
			call VAULT6;
		end
		else begin
			call hunters;
		end
	end
end

procedure NORTH1 begin

	debug("north1");

	if fo1in2_fluff_enc_disabled then begin
		call NORTH2;
	end
	else begin
	//	{114}{}{You are traveling through sheer cliffs and rugged terrain.}
	//
		variable LVar0 := 0;//mainroll
		variable LVar1 := 0;//dmghp
		variable LVar2 := 0;//

		display_msg(message_str(SCRIPT_RNDMTN, 114));
		LVar0 := roll_vs_skill(dude_obj, SKILL_OUTDOORSMAN, ((20 * dude_perk( PERK_survivalist )) - (5 * dude_perception) ));
		if (not(is_success(LVar0))) then begin
			if ((random(1, 100) >= 95) or is_critical(LVar0)) then begin
				display_msg(message_str(SCRIPT_RNDMTN, 118));
				LVar1 := (random(7, 20) + 3);
				LVar2 := dude_cur_hp;
				if (LVar1 >= LVar2) then begin
					LVar1 := (LVar2 - 1);
				end

				reg_anim_clear( dude_obj );
				reg_anim_begin();
				reg_anim_animate(dude_obj, 48, -1);
				reg_anim_animate(dude_obj, 37, -1);
				reg_anim_end();

				critter_heal(dude_obj, -LVar1);
				critter_injure(dude_obj, 4);//    DAM_CRIP_LEG_LEFT      4
				critter_injure(dude_obj, 8);//    DAM_CRIP_LEG_RIGHT     8
				critter_injure(dude_obj, 16);//    DAM_CRIP_ARM_LEFT     16
				critter_injure(dude_obj, 32);//    DAM_CRIP_ARM_RIGHT    32
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 139));
			end
			else begin
				display_msg(message_str(SCRIPT_RNDMTN, 117));
				LVar1 := random(4, 16);
				LVar2 := dude_cur_hp;
				if (LVar1 >= LVar2) then begin
					LVar1 := (LVar2 - 1);
				end

				reg_anim_clear( dude_obj );
				reg_anim_begin();
				reg_anim_animate(dude_obj, 48, -1);
				reg_anim_animate(dude_obj, 37, -1);
				reg_anim_end();

				critter_heal(dude_obj, -LVar1);
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 141));
				if (random(0, 3) == 0) then begin
					critter_injure(dude_obj, 4);//    DAM_CRIP_LEG_LEFT      4
					display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 139));
				end
				else begin
	// == 1
					critter_injure(dude_obj, 8);//    DAM_CRIP_LEG_RIGHT     8
					display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 140));
	// == 2  injure 16
	// == 3 injure 32

				end
			end
		end
		else begin
			display_msg(message_str(SCRIPT_RNDMTN, 115));
			if (is_critical(LVar0)) then begin
				display_msg(message_str(SCRIPT_RNDMTN, 116));
				critter_heal(dude_obj, random(5, 15));
	//{116}{}{You find a cave with a small spring and manage to get your first good night's sleep in a long time.}
	//{142}{}{You refill your empty canteen in the spring.}
	//{143}{}{You refill your empty canteens in the spring.}

			end
		end

	end
end

procedure NORTH2 begin
//	{105}{}{Radscorpions!!}
//

	debug("north2");
	display_msg(message_str(SCRIPT_RNDMTN, 105));
	Tot_Critter_A := random(2, 3);
	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		Outer_ring := 5;
		Inner_ring := 3;
	end
	else begin
		Outer_ring := 8;
		Inner_ring := 6;
	end
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	group_angle := random(0, 3);
	if (group_angle == 3) then begin
		group_angle := 4;
	end
	if (group_angle == 2) then begin
		group_angle := 4;
	end
	while(Tot_Critter_A) do begin
		Critter_direction := group_angle;
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	call Add_Mysterious_Stranger;
end

procedure NORTH3 begin
	debug("north3");

//	{121}{}{You see a lone traveler in the distance.}
//
	if (global_var( GVAR_IS_PATRICK_DEAD ) == 0) then begin
		call Patrick;
	end
	else begin
		call NORTH1;// that's stupid, load something else.
	end
end

procedure NORTH4 begin
//	{106}{}{A particularly sneaky radscorpion seems to be trying to ambush you.}
//	{107}{}{Out of nowhere, a radscorpion suddenly strikes!}
//
	variable LVar0 := 0;

	debug("north4");
	LVar0 := roll_vs_skill(dude_obj, SKILL_OUTDOORSMAN, 20 * dude_perk( PERK_survivalist ));
	if (is_success(LVar0)) then begin
		display_msg(message_str(SCRIPT_RNDMTN, 106));
		Outer_ring := (dude_perception / 2) + 2;
		Inner_ring := (dude_perception / 2) + 1;
	end
	else begin
		display_msg(message_str(SCRIPT_RNDMTN, 107));
		Outer_ring := 2;
		Inner_ring := 1;
	end
	Critter_direction := dude_rot;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	call Place_critter;
	obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
end

procedure NORTH5 begin
//{108}{}{You have stumbled upon a family of mole rats.}
//
	variable LVar0 := 1;

	debug("north5");
	display_msg(message_str(SCRIPT_RNDMTN, 108));
	Tot_Critter_A := random(2, 4);
	Outer_ring := 5;
	Inner_ring := 3;
	Critter_script := SCRIPT_WANRATS;
	while(Tot_Critter_A) do begin
		if (random(0, 4) == 4) then begin
			Critter_type := PID_GREATER_MOLE_RAT;
		end
		else begin
			Critter_type := PID_LESSER_MOLE_RAT;
		end
		Critter_direction := random(0, 2);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		if (LVar0) then begin
			LVar0 := random(2, 4);
			while(LVar0) do begin
				Item := create_object( PID_MUTATED_FRUIT, tile_num_in_direction(tile_num(Critter), random(0, 5), random(2, 4)), 0 );
				LVar0 := LVar0 - 1;
			end
			LVar0 := 0;
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	call Add_Mysterious_Stranger;
end

procedure NORTH6 begin

//	{100}{}{You are nearly crushed by a large boulder in an avalanche.}
//
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;

	debug("north6");
	display_msg(message_str(SCRIPT_RNDMTN, 100));
	Tot_Critter_A := 8;
	while(Tot_Critter_A) do begin
		LVar0 := random(0, 5);
		if (LVar0 == 4) then begin
			LVar1 := PID_ROCKS_13;
		end
		else begin
			if (LVar0 == 5) then begin
				LVar1 := PID_ROCKS_13 + 1;
			end
			else begin
				LVar1 := PID_ROCKS_15;
			end
		end
		LVar0 := random(0, 5);
		if ((LVar0 == 5) or (LVar0 == 0)) then begin
			Item := create_object( LVar1, tile_num_in_direction(Dude_tile + random(0, 8) - 4, LVar0, random(1, 6)), 0 );
		end
		else begin
			Item := create_object( LVar1, tile_num_in_direction(Dude_tile + random(0, 8) - 4, LVar0, random(1, 9)), 0 );
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Tot_Critter_A := 10;
	while(Tot_Critter_A) do begin
		LVar1 := random(0, 3);
		if (LVar1 == 3) then begin
			LVar1 := 6;
		end
		LVar0 := random(0, 5);
		if ((LVar0 == 5) or (LVar0 == 0)) then begin
			Item := create_object( 33554861 + LVar1, tile_num_in_direction(Dude_tile + random(0, 4) - 2, LVar0, random(1, 6)), 0 );
		end
		else begin
			Item := create_object( 33554861 + LVar1, tile_num_in_direction(Dude_tile + random(0, 4) - 2, LVar0, random(1, 9)), 0 );
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Tot_Critter_A := 3;
	while(Tot_Critter_A) do begin
		LVar0 := random(0, 5);
		if ((LVar0 == 5) or (LVar0 == 0)) then begin
			Item := create_object( PID_ROCKS_9, tile_num_in_direction(Dude_tile + random(0, 4) - 2, LVar0, random(3, 6)), 0 );
		end
		else begin
			Item := create_object( PID_ROCKS_9, tile_num_in_direction(Dude_tile + random(0, 4) - 2, LVar0, random(3, 9)), 0 );
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	LVar0 := roll_vs_skill(dude_obj, SKILL_OUTDOORSMAN, 20 * dude_perk( PERK_survivalist ));
	if (is_success(LVar0)) then begin
		display_msg(message_str(SCRIPT_RNDMTN, 101));
		if (is_critical(LVar0)) then begin
			if (random(0, 1)) then begin
				display_msg(message_str(SCRIPT_RNDMTN, 102));
				Critter_type := PID_DEAD_TRAVELER;
				Critter_script := -1;
				Outer_ring := 10;
				Inner_ring := 10;
				Critter_direction := 2;
				call Place_critter;
				item_caps_adjust(Critter, random(10, 60) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_STIMPAK, 0, 0 );
					add_obj_to_inven(Critter, Item);
				end
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_10MM_PISTOL, 0, 0 );
					add_obj_to_inven(Critter, Item);
				end
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_10MM_JHP, 0, 0 );
					add_mult_objs_to_inven(Critter, Item, 1 + dude_perk( PERK_scrounger ));
				end
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_LEATHER_ARMOR, 0, 0 );
					add_obj_to_inven(Critter, Item);
					wield_obj_critter(Critter, Item);
				end
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_BACKPACK, 0, 0 );
					add_obj_to_inven(Critter, Item);
				end
				kill_critter(Critter, ANIM_fall_back_sf);
			end
			else begin
				display_msg(message_str(SCRIPT_RNDMTN, 111));
				Tot_Critter_A := random(8, 10);
				while(Tot_Critter_A) do begin
					Item := create_object( PID_TALL_POT, tile_num_in_direction(Dude_tile + (random(0, 4) * ((2 * random(0, 1)) - 1)), random(0, 5), random(1, 6)), 0 );
					Tot_Critter_A := Tot_Critter_A - 1;
				end
			end
		end
	end
	else begin
		LVar1 := random(1, 100);
		if (is_critical(LVar0) or (LVar1 >= 95)) then begin
			display_msg(message_str(SCRIPT_RNDMTN, 103));
			LVar2 := (random(5, 15) + 2);
			LVar0 := dude_cur_hp;
			if (LVar2 >= LVar0) then begin
				LVar2 := (LVar0 - 1);
			end
			reg_anim_clear( dude_obj );
			reg_anim_begin();
			reg_anim_animate(dude_obj, 48, -1);
			reg_anim_animate(dude_obj, 37, -1);
			reg_anim_end();
			critter_heal(dude_obj, -LVar2);
			if random(0, 1) == 0 then begin
				critter_injure(dude_obj, 4);//    DAM_CRIP_LEG_LEFT      4
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 139));
			end
			else begin
				critter_injure(dude_obj, 8);//    DAM_CRIP_LEG_RIGHT     8
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 140));
			end
		end
		else begin
			display_msg(message_str(SCRIPT_RNDMTN, 104));
			LVar2 := (random(1, 4) + random(1, 4));
			LVar0 := dude_cur_hp;
			if (LVar2 >= LVar0) then begin
				LVar2 := (LVar0 - 1);
			end
			reg_anim_clear( dude_obj );
			reg_anim_begin();
			reg_anim_animate(dude_obj, 48, -1);
			reg_anim_animate(dude_obj, 37, -1);
			reg_anim_end();
			critter_heal(dude_obj, -LVar2);
			display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 141));
		end
	end
end

procedure SOUTH_BoneGlow1 begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;

	debug("SOUTH_BoneGlow1");

	display_msg(message_str(SCRIPT_RNDMTN, 114));
	LVar0 := roll_vs_skill(dude_obj, SKILL_OUTDOORSMAN, 20 * dude_perk( PERK_survivalist ));
	if (not(is_success(LVar0))) then begin
		LVar2 := random(1, 100);
		if ((LVar2 >= 95) or is_critical(LVar0)) then begin
			display_msg(message_str(SCRIPT_RNDMTN, 118));
			LVar1 := (random(7, 20) + 3);
			LVar2 := dude_cur_hp;
			if (LVar1 >= LVar2) then begin
				LVar1 := (LVar2 - 1);
			end
			reg_anim_clear( dude_obj );
			reg_anim_begin();
			reg_anim_animate(dude_obj, 48, -1);
			reg_anim_animate(dude_obj, 37, -1);
			reg_anim_end();
			critter_heal(dude_obj, -LVar1);
			if (random(0, 1) == 0) then begin
				critter_injure(dude_obj, 4);//    DAM_CRIP_LEG_LEFT      4
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 139));
			end
			else begin
				critter_injure(dude_obj, 8);//    DAM_CRIP_LEG_RIGHT     8
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 140));
			end
		end
		else begin
			display_msg(message_str(SCRIPT_RNDMTN, 117));
			LVar1 := random(4, 16);
			LVar2 := dude_cur_hp;
			if (LVar1 >= LVar2) then begin
				LVar1 := (LVar2 - 1);
			end
			reg_anim_clear( dude_obj );
			reg_anim_begin();
			reg_anim_animate(dude_obj, 48, -1);
			reg_anim_animate(dude_obj, 37, -1);
			reg_anim_end();
			critter_heal(dude_obj, -LVar1);
			display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 141));
		end
	end
	else begin
		display_msg(message_str(SCRIPT_RNDMTN, 115));
		if (is_critical(LVar0)) then begin
			display_msg(message_str(SCRIPT_RNDMTN, 116));
			critter_heal(dude_obj, random(5, 15));
		end
	end
end

procedure SOUTH_BoneGlow2 begin

	debug("SOUTH_BoneGlow2");
	display_msg(message_str(SCRIPT_RNDMTN, 136));
	Tot_Critter_A := random(2, 6);
	Outer_ring := 7;
	Inner_ring := 4;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 4);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	call Add_Mysterious_Stranger;
end

procedure SOUTH_BoneGlow3 begin

	debug("SOUTH_BoneGlow3");
	display_msg(message_str(SCRIPT_RNDMTN, 120));
	Tot_Critter_A := random(3, 8);
	Outer_ring := 5;
	Inner_ring := 2;
	Critter_type := PID_RAT_CAVE;
	Critter_script := SCRIPT_WANRATS;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 4);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	call Add_Mysterious_Stranger;
end

procedure SOUTH_BoneGlow4 begin

	debug("SOUTH_BoneGlow4");
	if (global_var( GVAR_IS_PATRICK_DEAD ) == 0) then begin
		call Patrick;
	end
	else begin
		call SOUTH_BoneGlow3;
	end
end

procedure SOUTH_BoneGlow5 begin
	debug("SOUTH_BoneGlow5");
	display_msg(message_str(SCRIPT_RNDMTN, 122));
	Tot_Critter_A := 9;
	Outer_ring := 7;
	Inner_ring := 0;
	while(Tot_Critter_A) do begin
		if (random(0, 2) == 0) then begin
			Critter_type := PID_ROCKS_7;
		end
		else begin
			Critter_type := PID_ROCKS_15;
		end
		Item := create_object( Critter_type, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(0, 11)), 0 );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Item := create_object( PID_BONES_1, tile_num_in_direction(Dude_tile + random(0, 4) - 2, random(0, 5), random(1, 8)), 0 );
	Item := create_object( PID_BONES_2, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(2, 7)), 0 );
	Item := create_object( PID_SPEAR, tile_num_in_direction(Dude_tile + random(0, 4) - 2, random(0, 5), random(3, 7)), 0 );
	Item := create_object( PID_KNIFE, tile_num_in_direction(Dude_tile + random(0, 4) - 2, random(0, 5), random(2, 9)), 0 );
	Item := create_object( PID_KNIFE, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(2, 7)), 0 );
	Outer_ring := 9;
	Inner_ring := 3;
	Critter_script := -1;

	spawn_dead_critter(PID_PEASANT_BLACK,Critter_script,ANIM_fall_back_sf);
	spawn_dead_critter(PID_PEASANT_BLACK,Critter_script,ANIM_burned_to_nothing_sf);
	spawn_dead_critter(PID_MERCHANT,Critter_script,ANIM_burned_to_nothing_sf);
	spawn_dead_critter(PID_MERCHANT,Critter_script,ANIM_fall_back_sf);
	spawn_dead_critter(PID_PEASANT_YELLOW_FEMALE,Critter_script,ANIM_fall_back_sf);
	spawn_dead_critter(PID_LEATHER_ARMOR_MALE,Critter_script,ANIM_fall_back_sf);
	spawn_dead_critter(PID_ZOMBIE_GUARD,Critter_script,ANIM_fall_back_sf);
	spawn_dead_critter(PID_MERCHANT,Critter_script,ANIM_burned_to_nothing_sf);

	if (dude_luck >= 4) then begin
		Critter_type := PID_MALE_GUARD_METAL_BLACK;
		Critter_direction := random(0, 5);
		call Place_critter;
		obj_rotate( Critter, random(0, 5) );
		Item := create_object( PID_10MM_AP, 0, 0 );
		add_obj_to_inven(Critter, Item);
		if (dude_perk( PERK_scrounger )) then begin
			Item := create_object( PID_10MM_JHP, 0, 0 );
			add_obj_to_inven(Critter, Item);
		end
		kill_critter(Critter, ANIM_fall_back_sf);
	end
	if (dude_luck >= 4) then begin
		if (random(0, 1)) then begin
			Item := create_object( PID_10MM_JHP, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0 );
			if (dude_perk( PERK_scrounger )) then begin
				Item := create_object( PID_10MM_JHP, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0 );
			end
		end
		if (random(0, 1)) then begin
			Item := create_object( PID_10MM_AP, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0 );
			if (dude_perk( PERK_scrounger )) then begin
				Item := create_object( PID_10MM_AP, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0 );
			end
		end
	end
	if (dude_luck >= 9) then begin
		if (random(0, 1)) then begin
			Item := create_object( PID_10MM_PISTOL, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0 );
		end
		else begin
			if (random(0, 1)) then begin
				Item := create_object( PID_HUNTING_RIFLE, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0 );
			end
			else begin
				Item := create_object( PID_SHOTGUN, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0 );
			end
		end
	end
	Tot_Critter_A := 0;
	if (dude_luck <= 3) then begin
		Tot_Critter_A := random(2, 4);
	end
	else begin
		if (dude_luck < 7) then begin
			Tot_Critter_A := random(1, 2);
		end
	end
	Outer_ring := 7;
	Inner_ring := 4;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := random(1, 2);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
end

procedure SOUTH_BoneGlow6 begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;

	debug("SOUTH_BoneGlow6");
	display_msg(message_str(SCRIPT_RNDMTN, 100));
	Tot_Critter_A := 8;
	while(Tot_Critter_A) do begin
		LVar0 := random(0, 5);
		if (LVar0 == 4) then begin
			LVar1 := PID_ROCKS_13;
		end
		else begin
			if (LVar0 == 5) then begin
				LVar1 := PID_ROCKS_13 + 1;
			end
			else begin
				LVar1 := PID_ROCKS_15;
			end
		end
		LVar0 := random(0, 5);
		if ((LVar0 == 5) or (LVar0 == 0)) then begin
			Item := create_object( LVar1, tile_num_in_direction(Dude_tile + random(0, 8) - 4, LVar0, random(1, 6)), 0 );
		end
		else begin
			Item := create_object( LVar1, tile_num_in_direction(Dude_tile + random(0, 8) - 4, LVar0, random(1, 9)), 0 );
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Tot_Critter_A := 10;
	while(Tot_Critter_A) do begin
		LVar1 := random(0, 3);
		if (LVar1 == 3) then begin
			LVar1 := 6;
		end
		LVar0 := random(0, 5);
		if ((LVar0 == 5) or (LVar0 == 0)) then begin
			Item := create_object( 33554861 + LVar1, tile_num_in_direction(Dude_tile + random(0, 4) - 2, LVar0, random(1, 6)), 0 );
		end
		else begin
			Item := create_object( 33554861 + LVar1, tile_num_in_direction(Dude_tile + random(0, 4) - 2, LVar0, random(1, 9)), 0 );
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Tot_Critter_A := 3;
	while(Tot_Critter_A) do begin
		LVar0 := random(0, 5);
		if ((LVar0 == 5) or (LVar0 == 0)) then begin
			Item := create_object( PID_ROCKS_9, tile_num_in_direction(Dude_tile + random(0, 4) - 2, LVar0, random(3, 6)), 0 );
		end
		else begin
			Item := create_object( PID_ROCKS_9, tile_num_in_direction(Dude_tile + random(0, 4) - 2, LVar0, random(3, 9)), 0 );
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	LVar0 := roll_vs_skill(dude_obj, SKILL_OUTDOORSMAN, 20 * dude_perk( PERK_survivalist ));
	if (is_success(LVar0)) then begin
		display_msg(message_str(SCRIPT_RNDMTN, 101));
		if (is_critical(LVar0)) then begin
			if (random(0, 1)) then begin
				display_msg(message_str(SCRIPT_RNDMTN, 102));
				Critter_type := PID_DEAD_TRAVELER;
				Critter_script := -1;
				Outer_ring := 10;
				Inner_ring := 10;
				Critter_direction := 2;
				call Place_critter;
				item_caps_adjust(Critter, random(10, 60) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_STIMPAK, 0, 0 );
					add_obj_to_inven(Critter, Item);
				end
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_10MM_PISTOL, 0, 0 );
					add_obj_to_inven(Critter, Item);
				end
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_10MM_JHP, 0, 0 );
					add_mult_objs_to_inven(Critter, Item, 1 + dude_perk( PERK_scrounger ));
				end
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_LEATHER_ARMOR, 0, 0 );
					add_obj_to_inven(Critter, Item);
					wield_obj_critter(Critter, Item);
				end
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_BACKPACK, 0, 0 );
					add_obj_to_inven(Critter, Item);
				end
				kill_critter(Critter, ANIM_fall_back_sf);
			end
			else begin
				display_msg(message_str(SCRIPT_RNDMTN, 111));
				Tot_Critter_A := random(8, 10);
				while(Tot_Critter_A) do begin
					Item := create_object( PID_TALL_POT, tile_num_in_direction(Dude_tile + (random(0, 4) * ((2 * random(0, 1)) - 1)), random(0, 5), random(1, 6)), 0 );
					Tot_Critter_A := Tot_Critter_A - 1;
				end
			end
		end
	end
	else begin
		LVar1 := random(1, 100);
		if (is_critical(LVar0) or (LVar1 >= 95)) then begin
			display_msg(message_str(SCRIPT_RNDMTN, 103));
			LVar2 := (random(5, 15) + 2);
			LVar0 := dude_cur_hp;
			if (LVar2 >= LVar0) then begin
				LVar2 := (LVar0 - 1);
			end
			reg_anim_clear( dude_obj );
			reg_anim_begin();
			reg_anim_animate(dude_obj, 48, -1);
			reg_anim_animate(dude_obj, 37, -1);
			reg_anim_end();
			critter_heal(dude_obj, -LVar2);
			if (random(0, 1) == 0) then begin
				critter_injure(dude_obj, 4);//    DAM_CRIP_LEG_LEFT      4
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 139));
			end
			else begin
				critter_injure(dude_obj, 8);//    DAM_CRIP_LEG_RIGHT     8
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 140));
			end
		end
		else begin
			display_msg(message_str(SCRIPT_RNDMTN, 104));
			LVar2 := (random(1, 4) + random(1, 4));
			LVar0 := dude_cur_hp;
			if (LVar2 >= LVar0) then begin
				LVar2 := (LVar0 - 1);
			end
			reg_anim_clear( dude_obj );
			reg_anim_begin();
			reg_anim_animate(dude_obj, 48, -1);
			reg_anim_animate(dude_obj, 37, -1);
			reg_anim_end();
			critter_heal(dude_obj, -LVar2);
			display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 141));
		end
	end
end

procedure VAULT1 begin

	debug("VAULT1");
	display_msg(message_str(SCRIPT_RNDMTN, 128));
	Outer_ring := (dude_perception / 4) + 5;
	Inner_ring := (dude_perception / 4) + 4;
	Critter_direction := random(0, 4);
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCOR2;
	call Place_critter;
	obj_rotate( Critter, random(0, 5) );
	call Add_Mysterious_Stranger;
end

procedure VAULT2 begin

	debug("VAULT2");
	display_msg(message_str(SCRIPT_RNDMTN, 135));
	Critter_type := PID_DEAD_TRAVELER;
	Critter_script := -1;
	Outer_ring := 6;
	Inner_ring := 4;
	Critter_direction := 1;
	call Place_critter;
	obj_rotate( Critter, random(0, 5) );
	kill_critter(Critter, ANIM_fall_back_sf);
	if (random(0, 1)) then begin
		Item := create_object( PID_10MM_JHP, 0, 0 );
		critter_attempt_placement(Item, tile_num(Critter), 0);
	end
	if (random(0, 1)) then begin
		Item := create_object( PID_STIMPAK, 0, 0 );
		critter_attempt_placement(Item, tile_num(Critter), 0);
	end
end

procedure VAULT3 begin

	debug("VAULT3");
	display_msg(message_str(SCRIPT_RNDMTN, 129));
	Outer_ring := (dude_perception / 3) + 4;
	Inner_ring := (dude_perception / 3) + 2;
	Tot_Critter_A := random(2, 3);
	Critter_script := SCRIPT_WANRATS;
	while(Tot_Critter_A) do begin
		if (random(0, 3) == 3) then begin
			Critter_type := PID_GREATER_MOLE_RAT;
		end
		else begin
			Critter_type := PID_LESSER_MOLE_RAT;
		end
		Critter_direction := random(0, 4);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	call Add_Mysterious_Stranger;
end

procedure VAULT4 begin

	debug("VAULT4");
	display_msg(message_str(SCRIPT_RNDMTN, 130));
	Outer_ring := (dude_perception / 2) + 3;
	Inner_ring := (dude_perception / 2) + 1;
	Tot_Critter_A := random(4, 8);
	Critter_type := PID_RAT_CAVE;
	Critter_script := SCRIPT_WANRATS;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 5);
		call Place_critter;
		if (random(0, 1)) then begin
			obj_rotate( Critter, random(0, 5) );
		end
		else begin
			obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	call Add_Mysterious_Stranger;
end

procedure VAULT5 begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;

	debug("VAULT5");
	LVar0 := do_check(dude_obj, STAT_ag, -1);
	if (not(is_success(LVar0))) then begin
		LVar2 := random(1, 100);
		if ((LVar2 >= 95) or is_critical(LVar0)) then begin
			display_msg(message_str(SCRIPT_RNDMTN, 132));
			LVar1 := random(5, 15);
			LVar2 := dude_cur_hp;
			if (LVar1 >= LVar2) then begin
				LVar1 := (LVar2 - 1);
			end
			reg_anim_clear( dude_obj );
			reg_anim_begin();
			reg_anim_animate(dude_obj, 48, -1);
			reg_anim_animate(dude_obj, 37, -1);
			reg_anim_end();
			critter_heal(dude_obj, -LVar1);
			if (random(0, 1) == 0) then begin
				critter_injure(dude_obj, 4);//    DAM_CRIP_LEG_LEFT      4
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 139));
			end
			else begin
				critter_injure(dude_obj, 8);//    DAM_CRIP_LEG_RIGHT     8
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 140));
			end
		end
		else begin
			display_msg(message_str(SCRIPT_RNDMTN, 133));
			LVar1 := 5;
			LVar2 := dude_cur_hp;
			if (LVar1 >= LVar2) then begin
				LVar1 := (LVar2 - 1);
			end
			reg_anim_clear( dude_obj );
			reg_anim_begin();
			reg_anim_animate(dude_obj, 48, -1);
			reg_anim_animate(dude_obj, 37, -1);
			reg_anim_end();
			critter_heal(dude_obj, -LVar1);
			display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 141));
		end
	end
	else begin
		display_msg(message_str(SCRIPT_RNDMTN, 131));
		display_msg(message_str(SCRIPT_RNDMTN, 101));
	end
end

procedure VAULT6 begin
	debug("VAULT6");

	display_msg(message_str(SCRIPT_RNDMTN, 134));

	Outer_ring := 6;
	Inner_ring := 4;
	Tot_Critter_A := random(4, 6);

	Critter_type := PID_RAT_CAVE;
	Critter_script := SCRIPT_WANRAT2;
	while(Tot_Critter_A) do begin
		Critter_direction := 1;
		call Place_critter;
		obj_rotate( Critter, 4 );
		Tot_Critter_A := Tot_Critter_A - 1;
	end

	victim := Critter;
	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		Critter_type := PID_RADSCORPION;
		Critter_script := SCRIPT_RADSCORP;
		Outer_ring := 10;
		Inner_ring := 9;
		Critter_direction := 1;
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
	end
	call Add_Mysterious_Stranger;
end

procedure South1 begin
	debug("South1");

	if fo1in2_fluff_enc_disabled then begin
		call NORTH2;
	end
	else begin
		variable LVar0 := 0;
		variable LVar1 := 0;
		variable LVar2 := 0;

		display_msg(message_str(SCRIPT_RNDMTN, 114));
		LVar0 := roll_vs_skill(dude_obj, SKILL_OUTDOORSMAN, ((20 * dude_perk( PERK_survivalist )) - (5 * dude_perception) ));
		if (not(is_success(LVar0))) then begin
			if ((random(1, 100) >= 95) or is_critical(LVar0)) then begin
				display_msg(message_str(SCRIPT_RNDMTN, 118));
				LVar1 := (random(7, 20) + 3);
				LVar2 := dude_cur_hp;
				if (LVar1 >= LVar2) then begin
					LVar1 := (LVar2 - 1);
				end

				reg_anim_clear( dude_obj );
				reg_anim_begin();
				reg_anim_animate(dude_obj, 48, -1);
				reg_anim_animate(dude_obj, 37, -1);
				reg_anim_end();

				critter_heal(dude_obj, -LVar1);
				critter_injure(dude_obj, DAM_CRIP_LEG_LEFT);
				critter_injure(dude_obj, DAM_CRIP_LEG_RIGHT);
				critter_injure(dude_obj, DAM_CRIP_ARM_LEFT);
				critter_injure(dude_obj, DAM_CRIP_ARM_RIGHT);
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 139));
			end
			else begin
				display_msg(message_str(SCRIPT_RNDMTN, 117));
				LVar1 := random(4, 16);
				LVar2 := dude_cur_hp;
				if (LVar1 >= LVar2) then begin
					LVar1 := (LVar2 - 1);
				end

				reg_anim_clear( dude_obj );
				reg_anim_begin();
				reg_anim_animate(dude_obj, 48, -1);
				reg_anim_animate(dude_obj, 37, -1);
				reg_anim_end();

				critter_heal(dude_obj, -LVar1);
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 141));
				if (random(0, 3) == 0) then begin
					critter_injure(dude_obj, 4);//    DAM_CRIP_LEG_LEFT      4
					display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 139));
				end
				else begin
					critter_injure(dude_obj, 8);//    DAM_CRIP_LEG_RIGHT     8
					display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 140));
				end
			end
		end
		else begin
			display_msg(message_str(SCRIPT_RNDMTN, 115));
			if (is_critical(LVar0)) then begin
				display_msg(message_str(SCRIPT_RNDMTN, 116));
				critter_heal(dude_obj, random(5, 15));
			end
		end

	end
end

procedure South2 begin
	debug("South2");
	display_msg(message_str(SCRIPT_RNDMTN, 136));
	Tot_Critter_A := random(2, 6);
	Outer_ring := 7;
	Inner_ring := 4;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 4);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	call Add_Mysterious_Stranger;
end

procedure South3 begin
	debug("South3");
	display_msg(message_str(SCRIPT_RNDMTN, 120));
	Tot_Critter_A := random(3, 8);
	Outer_ring := 5;
	Inner_ring := 2;
	Critter_type := PID_RAT_CAVE;
	Critter_script := SCRIPT_WANRATS;
	while(Tot_Critter_A) do begin
		Critter_direction := random(0, 4);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	call Add_Mysterious_Stranger;
end

procedure South4 begin
	debug("South4");
	if (global_var( GVAR_IS_PATRICK_DEAD ) == 0) then begin
		call Patrick;
	end
	else begin
		call South3;
	end
end

procedure South5 begin
	debug("South5");
	display_msg(message_str(SCRIPT_RNDMTN, 122));
	Tot_Critter_A := 9;
	Outer_ring := 7;
	Inner_ring := 0;
	while(Tot_Critter_A) do begin
		if (random(0, 2) == 0) then begin
			Critter_type := PID_ROCKS_7;
		end
		else begin
			Critter_type := PID_ROCKS_15;
		end
		Item := create_object( Critter_type, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(0, 11)), 0 );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Item := create_object( PID_BONES_1, tile_num_in_direction(Dude_tile + random(0, 4) - 2, random(0, 5), random(1, 8)), 0 );
	Item := create_object( PID_BONES_2, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(2, 7)), 0 );
	Item := create_object( PID_SPEAR, tile_num_in_direction(Dude_tile + random(0, 4) - 2, random(0, 5), random(3, 7)), 0 );
	Item := create_object( PID_KNIFE, tile_num_in_direction(Dude_tile + random(0, 4) - 2, random(0, 5), random(2, 9)), 0 );
	Item := create_object( PID_KNIFE, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(2, 7)), 0 );
	Outer_ring := 9;
	Inner_ring := 3;
	Critter_script := -1;

	spawn_dead_critter(PID_PEASANT_BLACK,Critter_script,ANIM_fall_back_sf);
	spawn_dead_critter(PID_PEASANT_BLACK,Critter_script,ANIM_burned_to_nothing_sf);
	spawn_dead_critter(PID_MERCHANT,Critter_script,ANIM_burned_to_nothing_sf);
	spawn_dead_critter(PID_MERCHANT,Critter_script,ANIM_fall_back_sf);
	spawn_dead_critter(PID_PEASANT_YELLOW_FEMALE,Critter_script,ANIM_fall_back_sf);
	spawn_dead_critter(PID_LEATHER_ARMOR_MALE,Critter_script,ANIM_fall_back_sf);
	spawn_dead_critter(PID_ZOMBIE_GUARD,Critter_script,ANIM_fall_back_sf);
	spawn_dead_critter(PID_MERCHANT,Critter_script,ANIM_burned_to_nothing_sf);

	if (dude_luck >= 4) then begin
		Critter_type := PID_MALE_GUARD_METAL_BLACK;
		Critter_direction := random(0, 5);
		call Place_critter;
		obj_rotate( Critter, random(0, 5) );
		Item := create_object( PID_10MM_AP, 0, 0 );
		add_obj_to_inven(Critter, Item);
		if (dude_perk( PERK_scrounger )) then begin
			Item := create_object( PID_10MM_JHP, 0, 0 );
			add_obj_to_inven(Critter, Item);
		end
		kill_critter(Critter, ANIM_fall_back_sf);
	end
	if (dude_luck >= 4) then begin
		if (random(0, 1)) then begin
			Item := create_object( PID_10MM_JHP, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0 );
			if (dude_perk( PERK_scrounger )) then begin
				Item := create_object( PID_10MM_JHP, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0 );
			end
		end
		if (random(0, 1)) then begin
			Item := create_object( PID_10MM_AP, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0 );
			if (dude_perk( PERK_scrounger )) then begin
				Item := create_object( PID_10MM_AP, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0 );
			end
		end
	end
	if (dude_luck >= 9) then begin
		if (random(0, 1)) then begin
			Item := create_object( PID_10MM_PISTOL, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0 );
		end
		else begin
			if (random(0, 1)) then begin
				Item := create_object( PID_HUNTING_RIFLE, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0 );
			end
			else begin
				Item := create_object( PID_SHOTGUN, tile_num_in_direction(Dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0 );
			end
		end
	end
	Tot_Critter_A := 0;
	if (dude_luck <= 3) then begin
		Tot_Critter_A := random(2, 4);
	end
	else begin
		if (dude_luck < 7) then begin
			Tot_Critter_A := random(1, 2);
		end
	end
	Outer_ring := 7;
	Inner_ring := 4;
	Critter_type := PID_RADSCORPION;
	Critter_script := SCRIPT_RADSCORP;
	while(Tot_Critter_A) do begin
		Critter_direction := random(1, 2);
		call Place_critter;
		obj_rotate( Critter, rotation_to_tile(tile_num(Critter), dude_tile) );
		Tot_Critter_A := Tot_Critter_A - 1;
	end
end

procedure South6 begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;

	debug("South6");
	display_msg(message_str(SCRIPT_RNDMTN, 100));
	Tot_Critter_A := 8;
	while(Tot_Critter_A) do begin
		LVar0 := random(0, 5);
		if (LVar0 == 4) then begin
			LVar1 := PID_ROCKS_13;
		end
		else begin
			if (LVar0 == 5) then begin
				LVar1 := PID_ROCKS_13 + 1;
			end
			else begin
				LVar1 := PID_ROCKS_15;
			end
		end
		LVar0 := random(0, 5);
		if ((LVar0 == 5) or (LVar0 == 0)) then begin
			Item := create_object( LVar1, tile_num_in_direction(Dude_tile + random(0, 8) - 4, LVar0, random(1, 6)), 0 );
		end
		else begin
			Item := create_object( LVar1, tile_num_in_direction(Dude_tile + random(0, 8) - 4, LVar0, random(1, 9)), 0 );
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Tot_Critter_A := 10;
	while(Tot_Critter_A) do begin
		LVar1 := random(0, 3);
		if (LVar1 == 3) then begin
			LVar1 := 6;
		end
		LVar0 := random(0, 5);
		if ((LVar0 == 5) or (LVar0 == 0)) then begin
			Item := create_object( 33554861 + LVar1, tile_num_in_direction(Dude_tile + random(0, 4) - 2, LVar0, random(1, 6)), 0 );
		end
		else begin
			Item := create_object( 33554861 + LVar1, tile_num_in_direction(Dude_tile + random(0, 4) - 2, LVar0, random(1, 9)), 0 );
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	Tot_Critter_A := 3;
	while(Tot_Critter_A) do begin
		LVar0 := random(0, 5);
		if ((LVar0 == 5) or (LVar0 == 0)) then begin
			Item := create_object( PID_ROCKS_9, tile_num_in_direction(Dude_tile + random(0, 4) - 2, LVar0, random(3, 6)), 0 );
		end
		else begin
			Item := create_object( PID_ROCKS_9, tile_num_in_direction(Dude_tile + random(0, 4) - 2, LVar0, random(3, 9)), 0 );
		end
		Tot_Critter_A := Tot_Critter_A - 1;
	end
	LVar0 := roll_vs_skill(dude_obj, SKILL_OUTDOORSMAN, 20 * dude_perk( PERK_survivalist ));
	if (is_success(LVar0)) then begin
		display_msg(message_str(SCRIPT_RNDMTN, 101));
		if (is_critical(LVar0)) then begin
			if (random(0, 1)) then begin
				display_msg(message_str(SCRIPT_RNDMTN, 102));
				Critter_type := PID_DEAD_TRAVELER;
				Critter_script := -1;
				Outer_ring := 10;
				Inner_ring := 10;
				Critter_direction := 2;
				call Place_critter;
				item_caps_adjust(Critter, random(10, 60) * (dude_fortune_finder * global_var( GVAR_FORTUNE_FINDER_HOW_MUCH )));
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_STIMPAK, 0, 0 );
					add_obj_to_inven(Critter, Item);
				end
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_10MM_PISTOL, 0, 0 );
					add_obj_to_inven(Critter, Item);
				end
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_10MM_JHP, 0, 0 );
					add_mult_objs_to_inven(Critter, Item, 1 + dude_perk( PERK_scrounger ));
				end
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_LEATHER_ARMOR, 0, 0 );
					add_obj_to_inven(Critter, Item);
					wield_obj_critter(Critter, Item);
				end
				if (random(1, 4) == 4) then begin
					Item := create_object( PID_BACKPACK, 0, 0 );
					add_obj_to_inven(Critter, Item);
				end
				kill_critter(Critter, ANIM_fall_back_sf);
			end
			else begin
				display_msg(message_str(SCRIPT_RNDMTN, 111));
				Tot_Critter_A := random(8, 10);
				while(Tot_Critter_A) do begin
					Item := create_object( PID_TALL_POT, tile_num_in_direction(Dude_tile + (random(0, 4) * ((2 * random(0, 1)) - 1)), random(0, 5), random(1, 6)), 0 );
					Tot_Critter_A := Tot_Critter_A - 1;
				end
			end
		end
	end
	else begin
		LVar1 := random(1, 100);
		if (is_critical(LVar0) or (LVar1 >= 95)) then begin
			display_msg(message_str(SCRIPT_RNDMTN, 103));
			LVar2 := (random(5, 15) + 2);
			LVar0 := dude_cur_hp;
			if (LVar2 >= LVar0) then begin
				LVar2 := (LVar0 - 1);
			end
			reg_anim_clear( dude_obj );
			reg_anim_begin();
			reg_anim_animate(dude_obj, 48, -1);
			reg_anim_animate(dude_obj, 37, -1);
			reg_anim_end();
			critter_heal(dude_obj, -LVar2);
			if random(0, 1) == 0 then begin
				critter_injure(dude_obj, 4);//    DAM_CRIP_LEG_LEFT      4
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 139));
			end
			else begin
				critter_injure(dude_obj, 8);//    DAM_CRIP_LEG_RIGHT     8
				display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 140));
			end
		end
		else begin
			display_msg(message_str(SCRIPT_RNDMTN, 104));
			LVar2 := (random(1, 4) + random(1, 4));
			LVar0 := dude_cur_hp;
			if (LVar2 >= LVar0) then begin
				LVar2 := (LVar0 - 1);
			end
			reg_anim_clear( dude_obj );
			reg_anim_begin();
			reg_anim_animate(dude_obj, 48, -1);
			reg_anim_animate(dude_obj, 37, -1);
			reg_anim_end();
			critter_heal(dude_obj, -LVar2);
			display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 141));
		end
	end
end
