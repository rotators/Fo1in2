/*

	Random encounter map script

	This script is attached to desert0 and will load another encounter map on enter.
	We are using this workaround to allow different map types based on where the player
	currently is on the worldmap: Desert, Mountain, City, Coast.

*/

#include "..\headers\define.h"
#include "..\headers\updatmap.h"
#include "..\headers\gl_worldmap.h"

#define NAME                    SCRIPT_RNDENC

#include "..\headers\command.h"

procedure start;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;

procedure CreateSceneryClutter;
procedure CreateCityClutter;

variable scenery_pid;
variable scenery_tile;
variable a := 0;
variable iter := 0;
variable temp_pid;

variable iter2 := 0;
variable iter_cluster := 0;
variable rnd_tile := 0;

variable map;
variable spawn_hex := 0;

#define set_new_wm_pos 						wm_area_set_pos(AREA_RND_CITY, worldmap_xpos, worldmap_ypos); 		\
													wm_area_set_pos(AREA_RND_MOUNTAIN, worldmap_xpos, worldmap_ypos); \
													wm_area_set_pos(AREA_RND_DESERT, worldmap_xpos, worldmap_ypos); 	\
													wm_area_set_pos(AREA_RND_COAST, worldmap_xpos, worldmap_ypos)

#define in_spawn_zone(x,y)             tile_in_tile_rect((x%200)-5,(x/200)-5,(x%200)+5,(x/200)+5,y)

procedure start begin
end

procedure map_exit_p_proc begin
   if (CUR_MAP_DESERT0) then begin
      set_new_wm_pos;
   end
	set_car_exit_map
end

procedure timed_event_p_proc begin
   if (CUR_MAP_DESERT0) then begin

   	if (fixed_param == 1) then begin
   		set_new_wm_pos;

			// In Desert:
			if (is_terrain_desert) then begin
				load_map(MAP_RNDDESER, 0);
			end

   		// In Mountains:
   		else if (is_terrain_mountain) then begin
   			load_map(MAP_RNDMOUNT, 0);
   		end

      	// In City:
   		else if (is_terrain_city) then begin
   			load_map(MAP_RNDCITY, 0);
			end

   		// In Coast:
   		else if (is_terrain_ocean) then begin
   			load_map(MAP_RNDCOAST, 0);
   		end

   		// Other:
   		else begin
   			load_map(MAP_RNDDESER, 0);
   			debug("!!!BIG BUG!!!");
   		end

			debug("Loading terrain: " + global_var(GVAR_WORLDMAP_TERRAIN));
   	end

   end
end

procedure map_enter_p_proc begin
   variable map := random(1,3);
   variable Critter;
   variable Critter_Tile;

   if (CUR_MAP_DESERT0) then begin
   	set_new_wm_pos;
   	add_timer_event(self_obj, game_ticks(0), 1);
   end

   // Random start position for desert map:
   else if (CUR_MAP_RNDDESER) then begin
      map := random(1,8);
      if (map == 1) then
         spawn_hex := 12103;
      else if (map == 2) then
         spawn_hex := 21133;
      else if (map == 3) then
         spawn_hex := 25099;
      else if (map == 4) then
         spawn_hex := 16262;
      else if (map == 5) then
         spawn_hex := 17323;
      else if (map == 6) then
         spawn_hex := 19268;
      else if (map == 7) then
         spawn_hex := 15691;
      else if (map == 8) then
         spawn_hex := 21106;
   end

   // Random start position for city map:
   else if (CUR_MAP_RNDCITY) then begin
      map := random(1,7);
      if (map == 1) then
         spawn_hex := 26293;
      else if (map == 2) then
         spawn_hex := 22075;
      else if (map == 3) then
         spawn_hex := 12893;
      else if (map == 4) then
         spawn_hex := 17730;
      else if (map == 5) then
         spawn_hex := 21941;
      else if (map == 6) then
         spawn_hex := 22117;
      else if (map == 7) then
         spawn_hex := 20294;
   end

   if (spawn_hex != 0) then
      override_map_start_hex(spawn_hex,0,random(0,5));

   set_map_exit_tiles(0,0);
   Lighting;

   if (CUR_MAP_RNDDESER) then
   	call CreateSceneryClutter;
   else if (CUR_MAP_RNDCITY) then
		call CreateCityClutter;

end

procedure map_update_p_proc begin
   if (CUR_MAP_DESERT0) then begin
	   add_timer_event(self_obj, game_ticks(0), 1);
	end

   Lighting;
end

procedure CreateSceneryClutter begin
	debug("spawn desert clutter!");

   // Scrub grass
   iter:=0;
   while iter<50 do
   begin
      iter:=iter+1;
		a:=random(7000,30000);
      scenery_pid:=random( PID_SCRUB_1, PID_SCRUB_4 );
		if tile_contains_pid_obj(a,0,scenery_pid) then begin end else begin
   		//if not(tile_in_tile_rect(19904,19698,21104,20898,a)) then
   		if not(in_spawn_zone(dude_tile,a)) then
	   	begin
            create_object(scenery_pid,a,0);
         end
      end
   end

   // Remains / dead animals, etc.
   iter:=0;
   while iter<3 do
   begin
      iter:=iter+1;
		a:=random(7000,30000);
      scenery_pid:=random( PID_BONES_4, PID_BONES_5 ); // ashes, dead animals //kosci i zw?oki zwierz?cia i bramina
		if tile_contains_pid_obj(a,0,scenery_pid) then begin end else begin
   		if not(in_spawn_zone(dude_tile,a)) then
	   	begin
            create_object(scenery_pid,a,0);
         end
      end
   end

   // Tires, grass, smog, barrels desert elements
   iter:=0;
   while iter<8 do
   begin
      iter:=iter+1;
		a:=random(7000,30000);
      scenery_pid:=random( PID_TIRE, PID_WEED_3 );
		if tile_contains_pid_obj(a,0,scenery_pid) then begin end else begin
   		if not(in_spawn_zone(dude_tile,a)) then
	   	begin
            create_object(scenery_pid,a,0);
            create_object(PID_BLOCKING_HEX,a,0); //create a blocker on the same hex
         end
      end
   end

   // Piles of cool rocks in the desert
   iter:=0;
   while iter<8 do
   begin
      iter:=iter+1;
		a:=random(8000,29000);
      scenery_pid:=random( PID_ROCKS_3, PID_ROCKS_4 );
		if tile_contains_pid_obj(a,0,scenery_pid) then begin end else begin
   		if not(in_spawn_zone(dude_tile,a)) then
	   	begin
            create_object(scenery_pid,a,0); // generuje sceneri?
         end
      end
   end

/*
// Generation of desert scenery - dry trees without thick branches
   iter:=0;
   while iter<10 do
   begin
      iter:=iter+1;
		a:=random(8000,29000);
      scenery_pid:=random( PID_TREE_1, PID_TREE_3 );
		if tile_contains_pid_obj(a,0,scenery_pid) then begin end else begin
   		if not(tile_in_tile_rect(19904,19698,21104,20898,a)) then
	   	begin
            create_object(scenery_pid,a,0); // generuje sceneri?
         end
      end
   end
*/

   // Stone plains just in the desert near the mountains
   iter:=0;
   while iter<5 do
   begin
      iter:=iter+1;
		a:=random(7000,30000);
      scenery_pid:=random(33556497,33556499);
		if tile_contains_pid_obj(a,0,scenery_pid) then begin end else begin
   		if not(in_spawn_zone(dude_tile,a)) then
	   	begin
            create_object(scenery_pid,a,0);
         end
      end
   end

   // Cactus! - from RNDDESRT.ssl
   if (random(0,3) == 1) then begin
      iter:=0;
      while iter<10 do
      begin
         iter:=iter+1;
   		a:=random(7000,30000);
         scenery_pid:=random(PID_CACTUS_1,PID_CACTUS_2);
   		if tile_contains_pid_obj(a,0,scenery_pid) then begin end else begin
      		if not(in_spawn_zone(dude_tile,a)) then
   	   	begin
               create_object(scenery_pid,a,0);
            end
         end
      end
   end

   // Tires
   if (random(0,5) == 1) then begin
      iter:=0;
      while iter<14 do
      begin
         iter:=iter+1;
   		a:=random(7000,30000);
         scenery_pid:=PID_TIRE;
   		if tile_contains_pid_obj(a,0,scenery_pid) then begin end else begin
      		if not(in_spawn_zone(dude_tile,a)) then
   	   	begin
               create_object(scenery_pid,a,0);
            end
         end
      end
   end

end

procedure CreateCityClutter begin
variable Item;

	if (random(0, 2) == 1) then begin
		Item := create_object( PID_BOXES_2, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(5, 8)), 0 );
		Item := create_object( PID_BOXES_3, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(5, 8)), 0 );
	end
   else if (random(0,2) == 1) then begin
   	Item := create_object( PID_JUNK, tile_num_in_direction(dude_tile, random(0, 5), random(5, 20)), 0 );
   	Item := create_object( PID_METAL_BARREL_1, tile_num_in_direction(dude_tile, random(0, 5), random(5, 20)), 0 );
   	Item := create_object( PID_ROCKS_3, tile_num_in_direction(dude_tile, random(0, 5), random(5, 25)), 0 );
	end
   else if (random(0, 5) == 5) then begin
		if (day) then begin
			if (random(0, 2) >= 1) then
				Item := create_object( PID_METAL_BARREL_1, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(5, 8)), 0 );
			else begin
				Item := create_object( PID_METAL_BARREL_1, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(5, 8)), 0 );
				Item := create_object( PID_METAL_BARREL_1, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(5, 8)), 0 );
		   end
		end
		else begin
			Item := create_object( PID_BURNING_BARREL, tile_num_in_direction(dude_tile + random(0, 5) - 4, random(0, 5), random(5, 8)), 0 );
			if (random(0, 2) >= 1) then
			   Item := create_object( PID_BURNING_BARREL, tile_num_in_direction(dude_tile + random(0, 5) - 4, random(0, 5), random(15, 35)), 0 );
		end
	end

	if (random(0,2) == 1) then
      Item := create_object( PID_TRASH_CAN, tile_num_in_direction(dude_tile + random(8, 16) - 4, random(0, 5), random(8, 16)), 0 );

	if (random(0,3) == 1) then
	   Item := create_object( PID_CHAIR, tile_num_in_direction(dude_tile + random(2, 10) - 4, random(0, 5), random(0, 10)), 0 );

end
