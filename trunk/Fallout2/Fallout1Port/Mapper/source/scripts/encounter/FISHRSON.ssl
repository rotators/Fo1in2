#include "..\headers\define.h"
#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure damage_p_proc;//    script_action == 14
procedure destroy_p_proc;//    script_action == 18
procedure look_at_p_proc;//    script_action == 21
procedure pickup_p_proc;//    script_action == 4
procedure talk_p_proc;//    script_action == 11

procedure FishrSon00;
procedure FishrSon01;
procedure FishrSon02;
procedure FishrSon02a;
procedure FishrSon03;
procedure FishrSon04;
procedure FishrSon05;
procedure FishrSon05a;
procedure FishrSon06;
procedure FishrSon07;
procedure FishrSon08;
procedure FishrSon09;
procedure FishrSon10;
procedure FishrSon11;
procedure FishrSon11a;
procedure FishrSon12;
procedure FishrSon13;
procedure FishrSon14;
procedure FishrSon15;
procedure FishrSon16;
procedure FishrSon17;
procedure FishrSon18;
procedure FishrSon19;
procedure FishrSon20;
procedure FishrSon21;
procedure flee_dude;

import variable dude_enemy;

variable initial :=  0;
variable known;

procedure start
begin
	fixt_critter_healing

	if not(initial) then begin
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 2);
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 68);
		dude_enemy := global_var(AGGRO_FLAG_RND_ENC_unsure);
		initial :=  1;
	end
	if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
		call critter_p_proc;
	end
	else begin
		if (script_action == 14) then begin//<-- damage_p_proc - has this Critter or Object been shot, hit with TNT, punched, etc.
			call damage_p_proc;
		end
		else begin
			if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
				call destroy_p_proc;
			end
			else begin
				if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
					call look_at_p_proc;
				end
				else begin
					if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
						call pickup_p_proc;
					end
					else begin
						if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
							call talk_p_proc;
						end
					end
				end
			end
		end
	end
end



procedure critter_p_proc
begin
	if (dude_enemy and (tile_distance_objs(dude_obj, self_obj) < 8)) then begin
		call flee_dude;
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		dude_enemy := 1;
		set_global_var(AGGRO_FLAG_RND_ENC_unsure, 1);
	end
end

procedure destroy_p_proc
begin

	if source_obj == dude_obj then begin
		set_global_var(NUM_GOOD_MONSTERS_KILLED, global_var(NUM_GOOD_MONSTERS_KILLED) + 1);// THIS MONSTER WAS A GOOD GUY. INCREASE GoodGuysKilled COUNTER
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var(CHAMPION_REPUTATION, 0);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_global_var(CHAMPION_REPUTATION, 1);
			set_global_var(BERSERKER_REPUTATION, 0);
		end
	end
	if (global_var(CHILDKILLER_FROM_HOMIES) == 0) then begin
		if source_obj == dude_obj then begin
			if (metarule(51, self_obj) == 2) or (obj_pid(self_obj) == PID_BOY) or (obj_pid(self_obj) == PID_GIRL) then begin
				set_global_var(CHILDKILLER_REPUTATION, global_var(CHILDKILLER_REPUTATION) + 1);
				set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 5));
			end
		end
	end
	else begin
		if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
			if (metarule(51, self_obj) == 2) or (obj_pid(self_obj) == PID_BOY) or (obj_pid(self_obj) == PID_GIRL) then begin
				set_global_var(CHILDKILLER_REPUTATION, global_var(CHILDKILLER_REPUTATION) + 1);
				set_global_var(PLAYER_REPUTATION_GENERAL, (global_var(PLAYER_REPUTATION_GENERAL) - 5));
			end
		end
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_FISHRSON, 100));
end

procedure pickup_p_proc
begin
	dude_enemy := 1;
	set_global_var(AGGRO_FLAG_RND_ENC_unsure, 1);
end

procedure talk_p_proc
begin
	variable LVar0 := 0;
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	get_reaction
	if (dude_enemy) then begin
		LVar0 := random(1, 3);
		if (LVar0 == 1) then begin
			LVar0 := 103;
		end
		if (LVar0 == 2) then begin
			LVar0 := 106;
		end
		if (LVar0 == 3) then begin
			LVar0 := 107;
		end
		float_msg(self_obj, message_str(SCRIPT_ENEMY, LVar0), 0);
	end
	else begin
		if ((global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) or (local_var(1) < 2) or (global_var(PLAYER_REPUTATION_GENERAL) < -30)) then begin
			call FishrSon00;
		end
		else begin

			if (dude_is_armed) then begin
				call FishrSon01;
			end
			else begin
				start_gdialog(645, self_obj, 4, -1, -1);
				gsay_start;
				if (known or (global_var(PLAYER_REPUTATION_GENERAL) < 30)) then begin
					call FishrSon04;
				end
				else begin
					call FishrSon02;
				end
				gsay_end;
				end_dialogue;
			end
		end
	end
end

procedure FishrSon00
begin
	float_msg(self_obj, message_str(SCRIPT_FISHRSON, 101), 0);
end

procedure FishrSon01
begin
	float_msg(self_obj, message_str(SCRIPT_FISHRSON, 102), 0);
end

procedure FishrSon02
begin
	known := 1;
	gsay_reply(645, 103);
	call FishrSon02a;
end

procedure FishrSon02a
begin
	giq_option(4, 645, 104, FishrSon06, 50);
	giq_option(4, 645, 105, FishrSon07, 50);
	giq_option(4, 645, 106, FishrSon08, 50);
	giq_option(4, 645, 107, FishrSon10, 50);
	giq_option(-3, 645, 108, FishrSon09, 50);
end

procedure FishrSon03
begin
	known := 1;
	gsay_reply(645, 109);
	giq_option(4, 645, 110, FishrSon05, 50);
	call FishrSon02a;
end

procedure FishrSon04
begin
	gsay_reply(645, 111);
	giq_option(4, 645, 110, FishrSon05, 50);
	call FishrSon02a;
end

procedure FishrSon05
begin
	gsay_reply(645, 112);
	giq_option(0, 634, 106, FishrSon05a, 50);
end

procedure FishrSon05a
begin
	gsay_reply(645, 113);
	giq_option(4, 645, 104, FishrSon06, 50);
	giq_option(4, 645, 105, FishrSon07, 50);
	giq_option(4, 645, 106, FishrSon08, 50);
	giq_option(4, 645, 114, FishrSon12, 50);
	giq_option(4, 645, 115, FishrSon13, 50);
end

procedure FishrSon06
begin
	gsay_reply(645, 116);
	giq_option(4, 645, 117, FishrSon14, 50);
	giq_option(4, 645, 104, FishrSon06, 50);
	giq_option(4, 645, 105, FishrSon07, 50);
	giq_option(4, 645, 106, FishrSon08, 50);
	giq_option(4, 645, 114, FishrSon12, 50);
end

procedure FishrSon07
begin
	gsay_message(645, 118, 50);
end

procedure FishrSon08
begin
	gsay_reply(645, 119);
	giq_option(4, 645, 110, FishrSon05, 50);
	giq_option(4, 645, 104, FishrSon06, 50);
	giq_option(4, 645, 105, FishrSon07, 50);
	giq_option(4, 645, 106, FishrSon08, 50);
	giq_option(4, 645, 120, FishrSon15, 50);
end

procedure FishrSon09
begin
	gsay_message(645, 121, 50);
end

procedure FishrSon10
begin
	gsay_reply(645, 122);
	giq_option(4, 645, 123, FishrSon16, 49);
	giq_option(4, 645, 124, FishrSon16, 49);
	giq_option(4, 645, 125, FishrSon16, 49);
end

procedure FishrSon11
begin
	gsay_reply(645, 126);
	giq_option(0, 634, 106, FishrSon11a, 49);
end

procedure FishrSon11a
begin
	gsay_message(645, 127, 49);
end

procedure FishrSon12
begin
	gsay_reply(645, 128);
	giq_option(4, 645, 110, FishrSon05, 50);
	giq_option(4, 645, 104, FishrSon06, 50);
	giq_option(4, 645, 105, FishrSon07, 50);
	giq_option(4, 645, 106, FishrSon08, 50);
end

procedure FishrSon13
begin
	gsay_reply(645, 129);
	giq_option(4, 645, 110, FishrSon05, 50);
	giq_option(4, 645, 104, FishrSon06, 50);
	giq_option(4, 645, 105, FishrSon07, 50);
	giq_option(4, 645, 106, FishrSon08, 50);
	giq_option(4, 645, 130, FishrSon17, 50);
end

procedure FishrSon14
begin
	gsay_message(645, 131, 50);
end

procedure FishrSon15
begin
	gsay_reply(645, 132);
	giq_option(4, 645, 110, FishrSon05, 50);
	giq_option(4, 645, 104, FishrSon06, 50);
	giq_option(4, 645, 105, FishrSon07, 50);
	giq_option(4, 645, 133, FishrSon18, 50);
	giq_option(4, 645, 134, FishrSon19, 50);
end

procedure FishrSon16
begin
	gsay_message(645, 135, 49);
end

procedure FishrSon17
begin
	gsay_reply(645, 136);
	giq_option(4, 645, 137, FishrSon20, 50);
	if (global_var(WORLDMAPLIST_BROTHERHOOD) > 0) then begin
		giq_option(4, 645, 138, FishrSon21, 50);
	end
end

procedure FishrSon18
begin
	gsay_reply(645, 139);
	giq_option(4, 645, 110, FishrSon05, 50);
	giq_option(4, 645, 104, FishrSon06, 50);
	giq_option(4, 645, 105, FishrSon07, 50);
	giq_option(4, 645, 134, FishrSon18, 50);
end

procedure FishrSon19
begin
	gsay_message(645, 140, 50);
end

procedure FishrSon20
begin
	gsay_message(645, 141, 49);
end

procedure FishrSon21
begin
	gsay_message(645, 142, 50);
end

procedure flee_dude
begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	variable LVar2 := 0;
	while(LVar1 < 5) do begin
		if (tile_distance(tile_num(dude_obj), tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
			LVar0 := tile_num_in_direction(tile_num(self_obj), LVar1, 3);
			LVar2 := tile_distance(tile_num(dude_obj), LVar0);
		end
		LVar1 := LVar1 + 1;
	end
	animate_move_obj_to_tile(self_obj, LVar0, 1);
end


