/*

	Encounter - Son of the Fisher

*/

#include "..\headers\define.h"

#define NAME                    SCRIPT_FISHRSON
//#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;

procedure FishrSon00;
procedure FishrSon01;
procedure FishrSon02;
procedure FishrSon02a;
procedure FishrSon03;
procedure FishrSon04;
procedure FishrSon05;
procedure FishrSon05a;
procedure FishrSon06;
procedure FishrSon07;
procedure FishrSon08;
procedure FishrSon09;
procedure FishrSon10;
procedure FishrSon11;
procedure FishrSon11a;
procedure FishrSon12;
procedure FishrSon13;
procedure FishrSon14;
procedure FishrSon15;
procedure FishrSon16;
procedure FishrSon17;
procedure FishrSon18;
procedure FishrSon19;
procedure FishrSon20;
procedure FishrSon21;

import variable dude_enemy;

variable initial :=  0;
variable known;

procedure start begin
	if not(initial) then begin
		set_self_team(TEAM_SHADY_SANDS );
		set_self_ai( AI_LITTLE_KIDS );
		dude_enemy := global_var( GVAR_AGGRO_FLAG_RND_ENC_unsure );
		initial :=  1;
	end
end

procedure critter_p_proc begin
	if (dude_enemy and (tile_distance_objs(dude_obj, self_obj) < 8)) then begin
		call flee_dude;
	end
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		dude_enemy := 1;
		set_global_var( GVAR_AGGRO_FLAG_RND_ENC_unsure, 1 );
	end
end

procedure destroy_p_proc begin
	inc_good_critter
	inc_childkiller
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_FISHRSON, 100));
end

procedure pickup_p_proc
begin
	dude_enemy := 1;
	set_global_var( GVAR_AGGRO_FLAG_RND_ENC_unsure, 1 );
end

procedure talk_p_proc
begin
	variable LVar0 := 0;
	dude_look_at_critter;
	get_reaction
	if (dude_enemy) then begin
		LVar0 := random(1, 3);
		if (LVar0 == 1) then begin
			LVar0 := 103;
		end
		if (LVar0 == 2) then begin
			LVar0 := 106;
		end
		if (LVar0 == 3) then begin
			LVar0 := 107;
		end
		float_msg(self_obj, message_str(SCRIPT_ENEMY, LVar0), 0);
	end
	else begin
		if (has_rep_childkiller or (local_var(1) < 2) or (check_general_rep < -30)) then begin
			call FishrSon00;
		end
		else begin

			if (dude_is_armed) then begin
				call FishrSon01;
			end
			else begin
				start_gdialog(645, self_obj, 4, -1, -1);
				gsay_start;
				if (known or (check_general_rep < 30)) then begin
					call FishrSon04;
				end
				else begin
					call FishrSon02;
				end
				gsay_end;
				end_dialogue;
			end
		end
	end
end

procedure FishrSon00
begin
	float_msg(self_obj, message_str(SCRIPT_FISHRSON, 101), 0);
end

procedure FishrSon01
begin
	float_msg(self_obj, message_str(SCRIPT_FISHRSON, 102), 0);
end

procedure FishrSon02
begin
	known := 1;
	gsay_reply(645, 103);
	call FishrSon02a;
end

procedure FishrSon02a
begin
	NOption( 104, FishrSon06, 4 );
	NOption( 105, FishrSon07, 4 );
	NOption( 106, FishrSon08, 4 );
	NOption( 107, FishrSon10, 4 );
	NOption( 108, FishrSon09, -3 );
end

procedure FishrSon03
begin
	known := 1;
	gsay_reply(645, 109);
	NOption( 110, FishrSon05, 4 );
	call FishrSon02a;
end

procedure FishrSon04
begin
	gsay_reply(645, 111);
	NOption( 110, FishrSon05, 4 );
	call FishrSon02a;
end

procedure FishrSon05 begin
	gsay_reply(645, 112);
	giq_option(0, 634, 106, FishrSon05a, 50);
end

procedure FishrSon05a
begin
	gsay_reply(645, 113);
	NOption( 104, FishrSon06, 4 );
	NOption( 105, FishrSon07, 4 );
	NOption( 106, FishrSon08, 4 );
	NOption( 114, FishrSon12, 4 );
	NOption( 115, FishrSon13, 4 );
end

procedure FishrSon06
begin
	gsay_reply(645, 116);
	NOption( 117, FishrSon14, 4 );
	NOption( 104, FishrSon06, 4 );
	NOption( 105, FishrSon07, 4 );
	NOption( 106, FishrSon08, 4 );
	NOption( 114, FishrSon12, 4 );
end

procedure FishrSon07
begin
	gsay_message(645, 118, 50);
end

procedure FishrSon08
begin
	gsay_reply(645, 119);
	NOption( 110, FishrSon05, 4 );
	NOption( 104, FishrSon06, 4 );
	NOption( 105, FishrSon07, 4 );
	NOption( 106, FishrSon08, 4 );
	NOption( 120, FishrSon15, 4 );
end

procedure FishrSon09
begin
	gsay_message(645, 121, 50);
end

procedure FishrSon10
begin
	gsay_reply(645, 122);
	GOption( 123, FishrSon16, 4 );
	GOption( 124, FishrSon16, 4 );
	GOption( 125, FishrSon16, 4 );
end

procedure FishrSon11
begin
	gsay_reply(645, 126);
	GOption( 106, FishrSon11a, 0 );
end

procedure FishrSon11a
begin
	gsay_message(645, 127, 49);
end

procedure FishrSon12
begin
	gsay_reply(645, 128);
	NOption( 110, FishrSon05, 4 );
	NOption( 104, FishrSon06, 4 );
	NOption( 105, FishrSon07, 4 );
	NOption( 106, FishrSon08, 4 );
end

procedure FishrSon13
begin
	gsay_reply(645, 129);
	NOption( 110, FishrSon05, 4 );
	NOption( 104, FishrSon06, 4 );
	NOption( 105, FishrSon07, 4 );
	NOption( 106, FishrSon08, 4 );
	NOption( 130, FishrSon17, 4 );
end

procedure FishrSon14
begin
	gsay_message(645, 131, 50);
end

procedure FishrSon15
begin
	gsay_reply(645, 132);
	NOption( 110, FishrSon05, 4 );
	NOption( 104, FishrSon06, 4 );
	NOption( 105, FishrSon07, 4 );
	NOption( 133, FishrSon18, 4 );
	NOption( 134, FishrSon19, 4 );
end

procedure FishrSon16
begin
	gsay_message(645, 135, 49);
end

procedure FishrSon17
begin
	gsay_reply(645, 136);
	NOption( 137, FishrSon20, 4 );
	if (global_var( GVAR_WORLDMAPLIST_BROTHERHOOD ) > 0) then begin
		NOption( 138, FishrSon21, 4 );
	end
end

procedure FishrSon18
begin
	gsay_reply(645, 139);
	NOption( 110, FishrSon05, 4 );
	NOption( 104, FishrSon06, 4 );
	NOption( 105, FishrSon07, 4 );
	NOption( 134, FishrSon18, 4 );
end

procedure FishrSon19
begin
	gsay_message(645, 140, 50);
end

procedure FishrSon20
begin
	gsay_message(645, 141, 49);
end

procedure FishrSon21
begin
	gsay_message(645, 142, 50);
end



