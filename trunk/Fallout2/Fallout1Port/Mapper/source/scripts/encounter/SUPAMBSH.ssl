/*

	Super Mutant Nightkin

*/

#include "..\headers\define.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure critter_p_proc;//    script_action == 12
procedure destroy_p_proc;//    script_action == 18

variable start_init;
variable crit_init;
variable Item;



procedure start
begin
	
	
	if (not(start_init)) then begin
		set_self_team(43);
		set_self_ai( AI_SUPER_MUTANT_SGT );
		start_init := 1;
	end
	else begin
		if (script_action == 12) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
			call critter_p_proc;
		end
		else begin
			if (script_action == 18) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
				call destroy_p_proc;
			end
		end
	end

	debug("Nightkin pid: " + obj_pid(self_obj));
end

procedure critter_p_proc
begin
	if (not(crit_init)) then begin
		attack(dude_obj);
		crit_init := 1;
	end
end

procedure destroy_p_proc
begin

	if (source_obj == dude_obj) then begin
		if (((global_var( GVAR_BAD_MONSTER ) + global_var( GVAR_GOOD_MONSTER )) >= 25) and ((global_var( GVAR_GOOD_MONSTER ) > (2 * global_var( GVAR_BAD_MONSTER ))) or (global_var( GVAR_BERSERKER_REPUTATION ) == 1))) then begin
			set_global_var(BERSERKER_REPUTATION, 1);
			set_global_var( GVAR_CHAMPION_REPUTATION, 0 );
		end
		if (((global_var( GVAR_BAD_MONSTER ) + global_var( GVAR_GOOD_MONSTER )) >= 25) and ((global_var( GVAR_BAD_MONSTER ) > (3 * global_var( GVAR_GOOD_MONSTER ))) or (global_var( GVAR_CHAMPION_REPUTATION ) == 1))) then begin
			set_global_var( GVAR_CHAMPION_REPUTATION, 1 );
			set_global_var(BERSERKER_REPUTATION, 0);
		end
		set_global_var( GVAR_BAD_MONSTER, global_var( GVAR_BAD_MONSTER ) + 1 );// THIS MONSTER WAS A BAD GUY. INCREASE BadGuysKilled COUNTER
		if ((global_var( GVAR_BAD_MONSTER ) % 6) == 0) then begin
			set_global_var( GVAR_PLAYER_REPUTATION, global_var( GVAR_PLAYER_REPUTATION ) + 1 );
		end
	end
end



