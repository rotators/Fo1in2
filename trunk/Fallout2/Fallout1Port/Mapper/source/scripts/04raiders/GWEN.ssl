#include "..\headers\define.h"
#include "..\headers\command.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure Critter_Action;//    script_action == 12    (critter_p_proc)
procedure damage_p_proc;//    script_action == 14
procedure description_p_proc;
procedure destroy_p_proc;//    script_action == 18
procedure talk_p_proc;//    script_action == 11
procedure look_at_p_proc;

procedure gwen00;
procedure gwen01;
procedure gwen02;
procedure gwen03;
procedure gwen04;
procedure gwen05;
procedure gwen06;
procedure gwen07;
procedure gwen08;
procedure gwen10;
procedure gwenend;
procedure combat;

procedure BigDownReact;
procedure BigUpReact;
procedure BottomReact;
procedure DownReact;
procedure DownReactLevel;
procedure get_reaction;
procedure Goodbyes;
procedure LevelToReact;
procedure ReactToLevel;
procedure TopReact;
procedure UpReact;
procedure UpReactLevel;
procedure PickDeadBodyType;
variable DeathType := 56;
variable exit_line;
variable tmp_hostile;
variable Only_Once := 1;
variable rndz;

procedure start
begin
	if global_var(SHADY_SANDS_WAS_INVADED) then begin
		if (cur_map_index == MAP_RAIDERS) then begin //  RAIDERS - KHANS
			if (local_var(6) != 1) then begin
				set_local_var(6, 1);
				call PickDeadBodyType;
				kill_critter(self_obj, DeathType);
			end
		end
	end
	else begin
		fixt_critter_healing

		if Only_Once then begin
			Only_Once := 0;
			critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 6);
			critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET, 20);
			debug_msg("GWEN init.");
		end
		if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
			call look_at_p_proc;
		end
		else begin
			if (script_action == 3) then begin//DETAILED ON-CLICK DESCRIPTION (Binoculars icon) - description_p_proc
				call description_p_proc;
			end
			else begin
				if (script_action == 11) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
					call talk_p_proc;
				end
				else begin
					if (script_action == 4) then begin//<---caught stealing! (pickup_p_proc)
						tmp_hostile := 1;
					end
					else begin
						if (script_action == 12) then begin//<-- Critter_Action - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
							call Critter_Action;
						end
						else begin

						end
					end
				end
			end
		end
	end
end

procedure gwen00
begin
	set_local_var(7, 1);
	gsay_reply(141, 101);
	giq_option(4, 141, message_str(SCRIPT_GWEN, 102) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_GWEN, 103), gwen01, 50);
	giq_option(7, 141, 104, gwen02, 50);
	giq_option(-3, 141, 105, gwen03, 50);
	if (get_critter_stat(dude_obj, STAT_gender) == 0) then begin
		giq_option(4, 141, 106, gwen07, 50);
	end
	set_local_var(7, 1);
end

procedure gwen01
begin
	gsay_reply(141, 107);
	giq_option(4, 141, 108, gwen04, 50);
	giq_option(4, 141, 109, gwen08, 50);
	giq_option(4, 141, 110, gwen05, 50);
	giq_option(4, 141, 111, gwen06, 50);
end

procedure gwen02
begin
	gsay_message(141, 112, 50);
end

procedure gwen03
begin
	gsay_message(141, 113, 50);
end

procedure gwen04
begin
	gsay_reply(141, 114);
	giq_option(4, 141, 115, gwenend, 50);
	giq_option(4, 141, 116, combat, 50);
	giq_option(4, 141, 117, combat, 50);
end

procedure gwen05
begin
	gsay_message(141, 118, 50);
	call combat;
end

procedure gwen06
begin
	gsay_message(141, 119, 50);
	call combat;
end

procedure gwen07
begin
	gsay_message(141, 120, 50);
	call combat;
end

procedure gwen08
begin
	gsay_message(141, 121, 50);
	call combat;
end

procedure gwen10
begin
	gsay_message(141, 122, 50);
end

procedure gwenend
begin
end

procedure talk_p_proc
begin
	anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
	if (global_var(MISTAKEN_ID) == 1) then begin//Raiders think you are Garl's father
		float_msg(self_obj, message_str(SCRIPT_GENRAIDR, random(102, 106)), 8);
	end
	else begin
		set_local_var(3, 1);
		call get_reaction;
		start_gdialog(141, self_obj, 4, -1, -1);
		gsay_start;
		if (local_var(4) == 5) then begin
			call gwen10;
		end
		else begin
			set_local_var(4, local_var(4) + 1);
			call gwen00;
		end
		gsay_end;
		end_dialogue;
	end
end

procedure combat
begin
	if (global_var(MISTAKEN_ID) == 1) then begin//Raiders think you are Garl's father
		critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM, 87);
	end
	tmp_hostile := 1;
end

procedure Critter_Action
begin
	if (global_var(TANDI_HIRELING_STATUS) == 2) then begin
		set_global_var(ENEMY_RAIDERS, 1);//ENEMY_RAIDERS
	end
	else begin
		if (global_var(MISTAKEN_ID)) then begin//Raiders think you are Garl's father
			variable LVar0 := 0;
			rndz := random(0, 500);
			set_global_var(ENEMY_RAIDERS, 0);
			if ((tile_distance_objs(self_obj, dude_obj) < 5) and (rndz == 0)) then begin
				LVar0 := tile_num_in_direction(tile_num(self_obj), random(0, 5), 3);
				if ((tile_distance(tile_num(self_obj), LVar0) > 2) and (rndz == 0)) then begin
					if (rndz == 0) then begin
						float_msg(self_obj, message_str(SCRIPT_GENRAIDR, random(102, 106)), 8);
					end
					animate_move_obj_to_tile(self_obj, LVar0, 0);
				end
			end
		end
		else begin
			if global_var(TANDI_ESCAPE) then begin
				set_global_var(ENEMY_RAIDERS, 1);//ENEMY_RAIDERS
			end
			if (obj_can_see_obj(self_obj, dude_obj)) then begin
				if (global_var(RAID_LOOTING)) then begin//  "RAID_LOOTING" (are you stealing from them)
					set_global_var(ENEMY_RAIDERS, 1);//ENEMY_RAIDERS
				end
			end
			if (map_var(2) == 1) then begin
				set_global_var(ENEMY_RAIDERS, 1);//ENEMY_RAIDERS
			end
		end
	end
	if (global_var(ENEMY_RAIDERS) and obj_can_see_obj(self_obj, dude_obj)) then begin
		tmp_hostile := 1;
	end
	if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
		tmp_hostile := 0;
	end
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		set_global_var(ENEMY_RAIDERS, 1);//ENEMY_RAIDERS
		attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
	end
end

procedure damage_p_proc
begin
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		if (global_var(MISTAKEN_ID) == 0) then begin//PC was (is?) not mistaken for Garl's father
			set_global_var(ENEMY_RAIDERS, 1);//ENEMY_RAIDERS
		end
	end
end

procedure description_p_proc
begin
	if local_var(7) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_GWEN, 200));
	end
end

procedure look_at_p_proc
begin
	script_overrides;
	if not(local_var(7)) then begin
		display_msg(message_str(SCRIPT_GWEN, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_GWEN, 200));
	end
end

procedure destroy_p_proc
begin
	set_global_var(TOTAL_RAIDERS, (global_var(TOTAL_RAIDERS) - 1));// Number of raiders left
	if source_obj > 0 then begin  SrcObj := 0;  SrcIsParty := 0;  SrcObj := obj_pid(source_obj);  if party_member_obj(SrcObj) then begin  SrcIsParty := 1;  end  end    if (source_obj == dude_obj) or (SrcIsParty == 1) then begin
		set_global_var(ENEMY_RAIDERS, 1);//ENEMY_RAIDERS
		set_global_var(GARLS_FRIEND, 0);//GARLS_FRIEND
	end

	inc_evil_critter
	fixt_destroy_armor
end

procedure get_reaction
begin
	if (local_var(2) == 0) then begin
		set_local_var(0, 50);
		set_local_var(1, 2);
		set_local_var(2, 1);
		set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, STAT_ch)) - 25);
		set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
		if (has_trait(0, dude_obj, 39)) then begin
			if (global_var(PLAYER_REPUTATION_GENERAL) > 0) then begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		else begin
			if (local_var(3) == 1) then begin
				set_local_var(0, local_var(0) - global_var(PLAYER_REPUTATION_GENERAL));
			end
			else begin
				set_local_var(0, local_var(0) + global_var(PLAYER_REPUTATION_GENERAL));
			end
		end
		if (global_var(CHILDKILLER_REPUTATION) >= global_var(CHILDKILLER_NUM_KILLS)) then begin
			set_local_var(0, local_var(0) - 30);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_BAD_MONSTERS_KILLED) > (3 * global_var(NUM_GOOD_MONSTERS_KILLED))) or (global_var(CHAMPION_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) + 20);
		end
		if (((global_var(NUM_BAD_MONSTERS_KILLED) + global_var(NUM_GOOD_MONSTERS_KILLED)) >= 25) and ((global_var(NUM_GOOD_MONSTERS_KILLED) > (2 * global_var(NUM_BAD_MONSTERS_KILLED))) or (global_var(BERSERKER_REPUTATION) == 1))) then begin
			set_local_var(0, local_var(0) - 20);
		end
		call ReactToLevel;
	end
end

procedure ReactToLevel
begin
	if (local_var(0) <= 25) then begin
		set_local_var(1, 1);
	end
	else begin
		if (local_var(0) <= 75) then begin
			set_local_var(1, 2);
		end
		else begin
			set_local_var(1, 3);
		end
	end
end

procedure LevelToReact
begin
	if (local_var(1) == 1) then begin
		set_local_var(0, random(1, 25));
	end
	else begin
		if (local_var(1) == 2) then begin
			set_local_var(0, random(26, 75));
		end
		else begin
			set_local_var(0, random(76, 100));
		end
	end
end

procedure UpReact
begin
	set_local_var(0, local_var(0) + 10);
	call ReactToLevel;
end

procedure DownReact
begin
	set_local_var(0, local_var(0) - 10);
	call ReactToLevel;
end

procedure BottomReact
begin
	set_local_var(1, 1);
	set_local_var(0, 1);
end

procedure TopReact
begin
	set_local_var(0, 100);
	set_local_var(1, 3);
end

procedure BigUpReact
begin
	set_local_var(0, local_var(0) + 25);
	call ReactToLevel;
end

procedure BigDownReact
begin
	set_local_var(0, local_var(0) - 25);
	call ReactToLevel;
end

procedure UpReactLevel
begin
	set_local_var(1, local_var(1) + 1);
	if (local_var(1) > 3) then begin
		set_local_var(1, 3);
	end
	call LevelToReact;
end

procedure DownReactLevel
begin
	set_local_var(1, local_var(1) - 1);
	if (local_var(1) < 1) then begin
		set_local_var(1, 1);
	end
	call LevelToReact;
end

procedure Goodbyes
begin
	exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end

procedure PickDeadBodyType
begin
	pick_dead_body_type
end
