#include "..\headers\define.h"

procedure start;
procedure do_stuff;
procedure do_use_stuff;
procedure do_skill;
procedure see_stuff;
procedure examine;

variable unlocked;
variable open;
variable test;

import variable Use_Fridge;


procedure start
begin
	if (script_action == 3) then begin//DETAILED ON-CLICK DESCRIPTION (Binoculars icon) - description_p_proc
		script_overrides;
		call examine;
	end
	else begin
		if (script_action == 21) then begin//MOUSE-OVER DESCRIPTION -- look_at_p_proc - (usually brief length. hovered mouse over object, haven't clicked on it.)
			script_overrides;
			call see_stuff;
		end
		else begin
			if (script_action == 6) then begin//use_p_proc - Use, Activate, or Manipulate the Object or Critter or Item
				call do_use_stuff;
			end
			else begin
				if (script_action == 4) then begin//<----caught stealing!
					call do_stuff;
				end
				else begin
					if (script_action == 8) then begin//<-- use_skill_on_p_proc
						if (action_being_used == SKILL_LOCKPICK) then begin//-- LOCKPICK
							script_overrides;
							call do_skill;
						end
						else begin
							display_msg(message_str(SCRIPT_DEMODOOR, 106));
						end
					end
					else begin
						if (script_action == 22) then begin//<-- timed_event_p_proc -- called by ADD_TIMER_EVENT commands. "fixed_param==#" in this procedure is the number of the event in question (i.e. Add_Timer_Event dude,5,1 would be fixed_param 1) -- can also be "timeforwhat"
							Use_Fridge := 0;
						end
					end
				end
			end
		end
	end
end

procedure do_stuff
begin
	Use_Fridge := 1;
	if (unlocked == 0) then begin
		script_overrides;
	end
	add_timer_event(self_obj, 5, 1);
end

procedure do_use_stuff
begin
	if (unlocked != 0) then begin
		if (open) then begin
			open := 0;
		end
		else begin
			Use_Fridge := Use_Fridge + 1;
			open := 1;
		end
	end
	else begin
		script_overrides;
		display_msg(message_str(SCRIPT_DEMODOOR, 105));
	end
end

procedure do_skill
begin
	Use_Fridge := Use_Fridge + 1;
	if (unlocked == 0) then begin
		test := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 0);
		if (is_success(test)) then begin
			display_msg(message_str(SCRIPT_DEMODOOR, 100));
			unlocked := 1;
		end
		else begin
			display_msg(message_str(SCRIPT_DEMODOOR, 101));
		end
	end
	else begin
		display_msg(message_str(SCRIPT_DEMODOOR, 107));
	end
end

procedure see_stuff
begin
	display_msg(message_str(SCRIPT_DEMODOOR, 108));
end

procedure examine
begin
	if (not(unlocked)) then begin
		display_msg(message_str(SCRIPT_DEMODOOR, 102));
	end
	else begin
		if (open) then begin
			display_msg(message_str(SCRIPT_DEMODOOR, 103));
		end
		else begin
			display_msg(message_str(SCRIPT_DEMODOOR, 104));
		end
	end
end

