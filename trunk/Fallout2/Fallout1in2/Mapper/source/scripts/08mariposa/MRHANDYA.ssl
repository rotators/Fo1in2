#include "..\headers\define.h"
#include "..\headers\command.h"

procedure start;
procedure critter_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure Repair_Attempt;
import variable valid_target;

variable tmp_hostile;
variable initial :=  0;
///////////////////////////////////////////////////////////////////
//	For two-armed brainbots in	Military Base, Vats level 2
///////////////////////////////////////////////////////////////////

procedure start
begin


	if (global_var( GVAR_DESTROY_VATS_1 ) == 2) then begin
		set_self_team( TEAM_85 );
	end
	if not(initial) then begin
		initial :=  1;
		set_self_team(TEAM_NECROPOLIS_MUTANT );
		set_self_ai( AI_ROBOTS );
	end
	if (script_action == critter_proc) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
		call critter_p_proc;
	end
	else begin
		if (script_action == description_proc) then begin//DETAILED ON-CLICK DESCRIPTION (Binoculars icon) - description_p_proc
			call description_p_proc;
		end
		else begin
			if (script_action == use_skill_on_proc) then begin//<-- use_skill_on_p_proc
				call use_skill_on_p_proc;
			end
		end
	end
end

procedure critter_p_proc
begin
	if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if (global_var( GVAR_DESTROY_VATS_3 ) != 0) then begin
		if ((critter_state(self_obj) bwand 64) == 0) then begin
			critter_injure( self_obj, DAM_BLIND );//    DAM_BLIND         64
		end
	end
	if (global_var( GVAR_ROBCTRL_MOVEMENT_HOWMUCH ) != 0) then begin
		if ((critter_state(self_obj) bwand 4) == 0) then begin
			critter_injure( self_obj, DAM_CRIP_LEG_LEFT );//    DAM_CRIP_LEG_LEFT      4
		end
	end
	if (global_var( GVAR_ROBCTRL_MOVEMENT_HOWMUCH ) == 2) then begin
		if ((critter_state(self_obj) bwand 8) == 0) then begin
			critter_injure( self_obj, DAM_CRIP_LEG_RIGHT );//    DAM_CRIP_LEG_RIGHT     8
		end
	end
	if (global_var( GVAR_VATS_ALERT ) == 1) then begin
		if (global_var( GVAR_DESTROY_VATS_3 ) == 0) then begin
			if (global_var( GVAR_DESTROY_VATS_1 ) == 0) then begin
				if (self_can_see_dude) then begin
					tmp_hostile := 1;
				end
			end
			else begin
				if (global_var( GVAR_DESTROY_VATS_1 ) == 1) then begin
					if (obj_can_see_obj(self_obj, valid_target)) then begin
						attack( valid_target );
					end
				end
				else begin
					if (global_var( GVAR_DESTROY_VATS_1 ) == 2) then begin
						if (obj_can_see_obj(self_obj, valid_target)) then begin
							attack( valid_target );
						end
					end
					else begin
						if (global_var( GVAR_DESTROY_VATS_1 ) == 3) then begin
							if (self_can_see_dude) then begin
								tmp_hostile := 1;
							end
						end
					end
				end
			end
		end
		if (global_var( GVAR_ROBCTRL_MOVEMENT_HOWMUCH ) != 2) then begin
			self_walk_to_tile( tile_num_in_direction(self_tile, random(0, 5), random(1, 3)) );
		end
	end
end

procedure description_p_proc
begin
	script_overrides;
	if (local_var(0)) then begin
		display_msg(message_str(SCRIPT_MRHANDYA, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_MRHANDYA, 101));
	end
end

procedure use_skill_on_p_proc
begin
	if (action_being_used == SKILL_REPAIR) then begin//-- REPAIR
		if (local_var(0) == 0) then begin
			call Repair_Attempt;
		end
	end
end

procedure Repair_Attempt
begin
	variable LVar0 := 0;
	game_time_advance(game_ticks(1200));
	LVar0 := roll_vs_skill(dude_obj, SKILL_REPAIR, 0);
	if (not(local_var(1)) and is_success(LVar0)) then begin
		display_msg(message_str(SCRIPT_MRHANDYA, 102));
		set_local_var(0, 1);
	end
	else begin
		display_msg(message_str(SCRIPT_MRHANDYA, 103));
		set_local_var(1, 1);
	end
end
