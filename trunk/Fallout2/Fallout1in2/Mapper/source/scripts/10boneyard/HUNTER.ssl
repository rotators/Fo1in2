/*

	Boneyard - The Bounty Hunter

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_HUNTER
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
import variable removal_ptr;

procedure Hunter01;
procedure Hunter02;
procedure Hunter03;
procedure Hunter04;
procedure Hunter05;
procedure Hunter06;

variable tmp_hostile;
variable initial :=  0;
variable my_script_mode;
variable pre_fight;

#define LVAR_DumbDude      (4)
#define LVAR_BadJoke       (5)

procedure start begin
	if not(initial) then begin
		initial :=  1;
		set_self_team( TEAM_BOUNTY_HUNTER );
		set_self_ai( AI_BERZERKER );
		if (cur_map_index != MAP_LAFOLLWR) then begin
			call Hunter05;
			tmp_hostile := 1;
			attack(dude_obj);
			my_script_mode := 1;
		end
		else if bounty_hunter_killed then begin
			move_to(self_obj, 7000, 0);
			removal_ptr := self_obj;
		end
	end
end

procedure critter_p_proc begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	else begin

		if (self_can_see_dude and not(my_script_mode) and not(pre_fight) and has_rep_childkiller) then begin
			call Hunter05;
			pre_fight := 1;
		end

	end
end

procedure destroy_p_proc begin
	variable removal_ptr := 0;
	if (global_var( GVAR_HUNTER_RESPAWNS ) == 0) or (global_var( GVAR_FIXT_BUGFIXES_ONLY ) == 1) then begin
		set_hunter_killed;
	end
	inc_good_critter
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_HUNTER, 100));
end

procedure pickup_p_proc begin
	tmp_hostile := 1;
end

procedure talk_p_proc begin
	dude_look_at_self;
	if (local_var(LVAR_DumbDude)) then begin
		script_overrides;
		float_msg(self_obj, message_str(SCRIPT_HUNTER, 126), 0);
		tmp_hostile := 1;
	end
	else begin
		start_dialog_at_node(Hunter01);
	end
end

procedure Hunter01 begin
	gsay_reply( SCRIPT_HUNTER, 101 );
	giq_option( 4, SCRIPT_HUNTER, 102, Hunter02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUNTER, 103, Hunter03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUNTER, 104, Hunter04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUNTER, 105, Hunter04, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_HUNTER, 124, Hunter06, NEUTRAL_REACTION );
end

procedure Hunter02 begin
	if (not(local_var(LVAR_BadJoke))) then begin
		gsay_message( SCRIPT_HUNTER, 106, 50 );
		set_local_var(LVAR_BadJoke, 1);
	end
	else begin
		gsay_message( SCRIPT_HUNTER, 107, 50 );
		tmp_hostile := 1;
	end
end

procedure Hunter03 begin
	gsay_message( SCRIPT_HUNTER, 108, 50 );
end

procedure Hunter04 begin
	gsay_message( SCRIPT_HUNTER, 109, 50 );
end

procedure Hunter05 begin
	float_msg(self_obj, message_str(SCRIPT_HUNTER, 110) + (global_var( GVAR_CHILDKILLER_REPUTATION ) * 500) + message_str(SCRIPT_HUNTER, 200), random(7, 9));
	tmp_hostile := 1;
end

procedure Hunter06 begin
	gsay_message( SCRIPT_HUNTER, 125, 50 );
	set_local_var(LVAR_DumbDude, 1);
end
