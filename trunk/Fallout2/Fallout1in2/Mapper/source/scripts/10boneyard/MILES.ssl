/*

	Boneyard - Miles the chemist

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\maps\laadytum.h"
#include "..\headers\boneyard.h"

#define NAME                    SCRIPT_MILES
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;

procedure Miles01;
procedure Miles02;
procedure Miles03;
procedure Miles04;
procedure Miles05;
procedure Miles06;
procedure Miles07;
procedure Miles08;
procedure Miles09;
procedure Miles11;
procedure Miles12;
procedure Miles13;
procedure Miles14;
procedure Miles15;
procedure Miles16;
procedure Miles17;
procedure Miles17a;
procedure Miles18;
procedure Miles19;
procedure Miles22;
procedure Miles22a;
procedure Miles23;
procedure Miles24;
procedure Miles25;
procedure Miles27;
procedure Miles28;
procedure Miles28a;
procedure Miles29;
procedure MilesEnd;

procedure NodeMoreHPA1;
procedure NodeMoreHPA2;
procedure NodeMoreHPA2a;
procedure NodeMoreHPA3;

variable Only_Once := 1;
variable DisplayMessage := 100;

#define LVAR_Here_Before       		(4)
#define LVAR_Miles_Status       		(5)
#define LVAR_Home_Tile              (6)
#define LVAR_Home_Rotation          (7)

procedure Start begin
	if Only_Once then begin
		if (get_blades_attacking or get_blades_attacking_wait) then begin
			set_self_team(TEAM_PLAYER);
		end
		else begin
			set_self_team(TEAM_LA_ADYTOWNER);
		end
		set_self_ai(AI_PEASANT);
		Only_Once := 0;
	end
end

procedure map_enter_p_proc begin
   if map_first_run then begin
	   set_local_var(LVAR_Home_Tile, self_tile);
      set_local_var(LVAR_Home_Rotation, self_cur_rot);
      self_caps_adjust( random(500, 750) );
   end
   else begin
      critter_attempt_placement(self_obj,local_var(LVAR_Home_Tile), self_elevation);
      self_rotate(local_var(LVAR_Home_Rotation));
   end
end

procedure timed_event_p_proc begin
end

procedure look_at_p_proc begin
	script_overrides;
	if (local_var(LVAR_Here_Before) == 1) then begin
		display_msg(message_str(SCRIPT_MILES, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_MILES, 101));
	end
end

procedure description_p_proc begin
	script_overrides;
	if (local_var(LVAR_Here_Before) == 1) then begin
		display_msg(message_str(SCRIPT_MILES, 100));
	end
	else begin
		display_msg(message_str(SCRIPT_MILES, 101));
	end
end

procedure talk_p_proc begin
	dude_look_at_self;
	if (global_var( GVAR_ENEMY_ADYTUM ) == 1) then begin
		float_msg( self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), FLOAT_MSG_RED );
	end
	else if ((local_var(LVAR_Here_Before) == 1) and (dude_iq < 4)) then begin
		float_msg( self_obj, message_str(SCRIPT_MILES, 152), FLOAT_MSG_NORMAL );
	end
	else if (local_var(LVAR_Miles_Status) == 2) then begin
	   if (not(fo1in2_unlimited_hpa_disabled) and dude_item_count(PID_POWERED_ARMOR)) then begin
   		start_dialog_at_node(NodeMoreHPA1);
	   end
	   else
		   float_msg( self_obj, message_str(SCRIPT_MILES, 152), FLOAT_MSG_NORMAL );
	end
	else begin
		get_reaction
		start_gdialog(249, self_obj, -1, -1, -1);
		gsay_start;
		if (local_var(LVAR_Here_Before) == 0) then begin
			call Miles01;
		end
		else if get_quest_farm_inactive then begin
			DisplayMessage := 118;
			call Miles04;
		end
		else if get_quest_farm_active then begin
			call Miles13;
		end
		else if get_given_parts_to_smitty_yet then begin
			call Miles18;
		end
		else if get_parts_fixed then begin
			call Miles19;
		end
		else if get_offer_upgrading_item then begin
			if (local_var(LVAR_Miles_Status) == 0) then begin
				if (dude_item_count( PID_POWERED_ARMOR )) then begin
					call Miles22;
				end
				else begin
					call Miles22a;
				end
			end
			else if (local_var(LVAR_Miles_Status) == 9305) then begin
				if (dude_item_count( PID_POWERED_ARMOR )) then begin
					call Miles24;
				end
				else begin
					call Miles29;
				end
			end
			else begin
				if (dude_item_count( PID_POWERED_ARMOR )) then begin
					call Miles28;
				end
				else begin
					call Miles29;
				end
			end
		end
		gsay_end;
		end_dialogue;
	end
end

procedure damage_p_proc begin
	if source_obj == dude_obj then begin
		set_global_var( GVAR_ENEMY_ADYTUM, 1 );
		set_self_team(TEAM_LA_ADYTOWNER);
	end
end

procedure destroy_p_proc begin
	if source_obj == dude_obj then begin
		inc_good_critter
		set_global_var( GVAR_ENEMY_ADYTUM, 1 );
		set_self_team(TEAM_LA_ADYTOWNER);
	end
end

procedure critter_p_proc begin
	if (self_can_see_dude) then begin
		if (global_var( GVAR_ENEMY_ADYTUM ) == 1) then begin
			attack(dude_obj);
		end
	end
end

procedure pickup_p_proc begin
	set_global_var( GVAR_ENEMY_ADYTUM, 1 );
end

procedure Miles01 begin
	gsay_reply( SCRIPT_MILES, 102 );
	NOption( 103, Miles02, 4 );
	NOption( 104, Miles03, 4 );
	NOption( 105, Miles09, -3 );

	if debug_mode and (dude_item_count( PID_POWERED_ARMOR )) then
		NOption("*** CHEAT *** Just upgrade my damn power armor!", Miles28, 4 );
end

procedure Miles02
begin
	gsay_message( SCRIPT_MILES, 106, 50 );
end

procedure Miles03
begin
	DisplayMessage := 107;
	call Miles04;
end

procedure Miles04 begin
	set_local_var(LVAR_Here_Before, 1);
	gsay_reply( SCRIPT_MILES, DisplayMessage );
	gsay_option( SCRIPT_MILES, 108, Miles05, 50 );
	gsay_option( SCRIPT_MILES, 109, Miles06, 50 );
	gsay_option( SCRIPT_MILES, 110, Miles07, 50 );
	gsay_option( SCRIPT_MILES, 111, Miles08, 50 );
end

procedure Miles05
begin
	gsay_reply( SCRIPT_MILES, 112 );
	gsay_option( SCRIPT_MILES, 113, Miles11, 50 );
end

procedure Miles06
begin
	DisplayMessage := 114;
	call Miles04;
end

procedure Miles07
begin
	DisplayMessage := 115;
	call Miles04;
end

procedure Miles08
begin
	gsay_message( SCRIPT_MILES, 116, 50 );
end

procedure Miles09
begin
	set_local_var(LVAR_Here_Before, 1);
	gsay_message( SCRIPT_MILES, 117, 50 );
end

procedure Miles11
begin
	gsay_reply( SCRIPT_MILES, 119 );
	gsay_option( SCRIPT_MILES, 120, Miles12, 50 );
	gsay_option( SCRIPT_MILES, 121, MilesEnd, 50 );
end

procedure Miles12 begin
	gsay_message( SCRIPT_MILES, 122, 50 );
	set_quest_farm_active;
end

procedure Miles13 begin
	gsay_reply( SCRIPT_MILES, 123 );
	//if (dude_item_count( PID_FARM_PARTS )) then begin
	if party_has_item(PID_FARM_PARTS) then begin
		gsay_option( SCRIPT_MILES, 124, Miles15, 50 );
	end
	else begin
		gsay_option( SCRIPT_MILES, 125, Miles14, 50 );
	end
end

procedure Miles14
begin
	gsay_message( SCRIPT_MILES, 126, 50 );
end

procedure Miles15 begin
	gsay_reply( SCRIPT_MILES, 127 );
	set_give_parts_to_smitty;
	gsay_option( SCRIPT_MILES, 128, Miles16, 50 );
	gsay_option( SCRIPT_MILES, 129, MilesEnd, 50 );
end

procedure Miles16
begin
	gsay_reply( SCRIPT_MILES, 130 );
	gsay_option( SCRIPT_MILES, 131, Miles17, 50 );
	gsay_option( SCRIPT_MILES, 132, Miles17a, 50 );
end

procedure Miles17 begin
	variable LVar0 := 0;
	gsay_message( SCRIPT_MILES, 133, 50 );

	party_remove_item(PID_FARM_PARTS)
	//LVar0 := dude_item( PID_FARM_PARTS );
	//rm_obj_from_inven(dude_obj, LVar0);
	//destroy_object(LVar0);

	dude_caps_adjust( 125 );
	LVar0 := create_object( PID_STIMPAK, 0, 0 );
	add_mult_objs_to_inven(dude_obj, LVar0, 3);

	set_offer_upgrading_item;
	gsay_message( SCRIPT_MILES, 137, 50 );
end

procedure Miles17a begin
	variable Item := 0;
	UpReactLevel
	gsay_message( SCRIPT_MILES, 133, 50 );

	party_remove_item(PID_FARM_PARTS)
	//LVar0 := dude_item( PID_FARM_PARTS );
	//rm_obj_from_inven(dude_obj, LVar0);
	//destroy_object(LVar0);

	dude_caps_adjust( 150 );
	Item := create_object( PID_STIMPAK, 0, 0 );
	add_mult_objs_to_inven(dude_obj, Item, 4);
	set_offer_upgrading_item;
	gsay_message( SCRIPT_MILES, 137, 50 );
end

procedure Miles18 begin
	gsay_reply( SCRIPT_MILES, 134 );
	gsay_option( SCRIPT_MILES, 128, Miles16, 50 );
	gsay_option( SCRIPT_MILES, 129, MilesEnd, 50 );
end

procedure Miles19 begin
	variable LVar0 := 0;
	gsay_message( SCRIPT_MILES, 135, 50 );
	gsay_message( SCRIPT_MILES, 136, 50 );
	LVar0 := dude_item( PID_FARM_PARTS );
	rm_obj_from_inven(dude_obj, LVar0);
	destroy_object(LVar0);
	dude_caps_adjust( 250 );
	LVar0 := create_object( PID_STIMPAK, 0, 0 );
	add_mult_objs_to_inven(dude_obj, LVar0, 6);
	set_offer_upgrading_item;
	gsay_message( SCRIPT_MILES, 137, 50 );
end

procedure Miles22 begin
	gsay_reply( SCRIPT_MILES, 138 );
	set_local_var(LVAR_Miles_Status, 9305);
	set_global_var( GVAR_CHEMISTRY_BOOK, 1 );
	gsay_option( SCRIPT_MILES, 139, MilesEnd, 50 );
	gsay_option( SCRIPT_MILES, 140, Miles23, 50 );
end

procedure Miles22a begin
	gsay_message( SCRIPT_MILES, 153, 50 );
end

procedure Miles23 begin
	gsay_message( SCRIPT_MILES, 141, 50 );
end

procedure Miles24 begin
	gsay_reply( SCRIPT_MILES, 142 );
	if (dude_item_count( PID_CHEMISTRY_MANUAL )) then begin
		gsay_option( SCRIPT_MILES, 143, Miles25, 50 );
	end
	else begin
		gsay_option( SCRIPT_MILES, 144, MilesEnd, 50 );
	end
end

procedure Miles25 begin
	variable LVar0 := 0;
	gsay_reply( SCRIPT_MILES, 145 );
	LVar0 := dude_item( PID_CHEMISTRY_MANUAL );
	rm_obj_from_inven(dude_obj, LVar0);
	add_obj_to_inven(self_obj, LVar0);
	set_local_var(LVAR_Miles_Status, 9306);
	gsay_option( SCRIPT_MILES, 146, Miles28, 50 );
	gsay_option( SCRIPT_MILES, 147, Miles27, 50 );
end

procedure Miles27 begin
	gsay_message( SCRIPT_MILES, 148, 50 );
end

procedure Miles28 begin
	gsay_message( SCRIPT_MILES, 149, 50 );

	gfade_out(1);
		game_time_advance(game_ticks(1 * 60 * 60 * 24));// 1 day for bonding to occur
		game_time_advance(game_ticks(60 * 60 * 6));// 6 hours to read the books and perform pre-bonding tasks
	gfade_in(1);

	call Miles28a;
end

procedure Miles28a begin
variable Item;

	gsay_message( SCRIPT_MILES, 150, 50 );

   Item:=dude_item( PID_POWERED_ARMOR );
   rm_obj_from_inven(dude_obj, Item);

   Item:=create_object(PID_HARDENED_POWER_ARMOR,0,0);
   add_mult_objs_to_inven(dude_obj,Item,1);

	set_local_var(LVAR_Miles_Status, 2);
end

procedure Miles29 begin
	gsay_message( SCRIPT_MILES, 151, 50 );
end

procedure MilesEnd begin
end

procedure NodeMoreHPA1 begin
   Reply(2000);
   if (dude_caps >= 1000) then
      NOption(2010,NodeMoreHPA2,004);
   else
      NOption(2020,NodeMoreHPA3,004);
   NOption(2030,MilesEnd,004);
end

procedure NodeMoreHPA2 begin
   Reply(2100);
   NOption(2110,NodeMoreHPA2a,004);
   NOption(2120,Miles27,004);
end

procedure NodeMoreHPA2a begin
   dude_caps_adjust(1000);
   call Miles28;
end

procedure NodeMoreHPA3 begin
   NMessage(2200);
end
