/*

	Hub - Jacob, the arms dealer

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\maps\huboldtn.h"
#include "..\headers\sfall\main.h"

#define NAME                    SCRIPT_HUBJAKE
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;

procedure Jake01;
procedure Jake02;
procedure Jake03;
procedure Jake04;
procedure Jake05;
procedure Jake06;
procedure Jake07;
procedure Jake08;
procedure Jake09;
procedure Jake10;
procedure Jake11;
procedure Jake12;
procedure Jake13;
procedure Jake14;
procedure Jake15;
procedure Jake16;
procedure JakeEnd;
procedure Barter;
procedure Get_Stuff;
procedure Put_Stuff;

variable tmp_hostile;
variable Only_Once := 1;

variable killed := 0;

import variable Jake_Desk_Ptr;

#define LVAR_Here_Before      (4)
#define LVAR_Hostile          (5)
#define LVAR_Restock_Time     (6)
#define LVAR_Caps_Amount      (7)
#define LVAR_CheckedSelection (8)
#define LVAR_GeigerCounter    (9)

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_LA_GUN_RUNNERS );
		set_self_ai( AI_MERCHANT );
	end
end

procedure combat begin
	tmp_hostile := 1;
	set_local_var(LVAR_Hostile, 1);
end

procedure critter_p_proc begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc begin
	variable LVar0 := 0;
	dude_look_at_self;
	gdialog_set_barter_mod(-15);
	call Get_Stuff;
	get_reaction

	if ((((GAME_TIME_IN_DAYS) - local_var(LVAR_Restock_Time)) >= 1) or (local_var(LVAR_Restock_Time) == 0)) then begin
		set_local_var(LVAR_Restock_Time, GAME_TIME_IN_DAYS);
		set_local_var(LVAR_Caps_Amount, 2000 + random(0, 1000));
		self_caps_adjust( local_var(LVAR_Caps_Amount) );
	end
	else begin
		self_caps_adjust( local_var(LVAR_Caps_Amount) );
	end

	if (local_var(LVAR_Hostile) == 1) then begin
		call combat;
	end
	else begin
		if (global_var(GVAR_ENEMY_HUB) == 1) then begin
			start_dialog_at_node(Jake10);
		end
		else if (local_var(LVAR_Here_Before) == 0) then begin
			set_local_var(LVAR_Here_Before, 1);
			start_dialog_at_node(Jake01);
		end
		else if bad_critter_reaction then begin
			start_dialog_at_node(Jake10);
		end
		else begin
			start_dialog_at_node(Jake09);
		end
	end

	set_local_var(LVAR_Caps_Amount, self_caps);
	self_caps_adjust( -1 * local_var(LVAR_Caps_Amount) );
	call Put_Stuff;
end

procedure destroy_p_proc begin
	inc_good_critter
	move_obj_inven_to_obj(Jake_Desk_Ptr, self_obj);
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_HUBJAKE, 100));
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_HUB, 1 );
	end
end

procedure Jake01 begin
	gsay_reply( SCRIPT_HUBJAKE, 101 );
	giq_option( 4, SCRIPT_HUBJAKE, 102, Barter, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 103, Jake02, NEUTRAL_REACTION );
	if (global_var( GVAR_QUEST_VAULT13_4_WATERCHIP ) != 2) then begin
		giq_option( 4, SCRIPT_HUBJAKE, 104, Jake03, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_HUBJAKE, 105, Jake04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 106, Jake13, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_HUBJAKE, 107, Barter, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_HUBJAKE, 108, Jake13, NEUTRAL_REACTION );
end

procedure Jake02 begin
   // Add one Geiger Counter if there is none right now (dialog consistency)
   if (self_item_count( PID_GEIGER_COUNTER ) == 0) and (local_var(LVAR_GeigerCounter) == 0) then begin
      set_local_var(LVAR_GeigerCounter,1);
      give_pid_qty(self_obj, PID_GEIGER_COUNTER, 1)
   end

	gsay_reply( SCRIPT_HUBJAKE, 109 );
	giq_option( 4, SCRIPT_HUBJAKE, 110, Barter, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 111, Jake05, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 112, Jake06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 113, Jake13, NEUTRAL_REACTION );
end

procedure Jake03 begin
	gsay_reply( SCRIPT_HUBJAKE, 114 );
	giq_option( 4, SCRIPT_HUBJAKE, 115, Barter, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 116, Jake02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 117, Jake04, NEUTRAL_REACTION );
end

procedure Jake04 begin
   set_local_var(LVAR_Here_Before,2);

	gsay_message( SCRIPT_HUBJAKE, 118, 50 );
	gsay_reply( SCRIPT_HUBJAKE, 162 );
	giq_option( 4, SCRIPT_HUBJAKE, 119, Barter, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 120, Jake02, NEUTRAL_REACTION );
	if (global_var( GVAR_QUEST_VAULT13_4_WATERCHIP ) != 2) then begin
		giq_option( 4, SCRIPT_HUBJAKE, 121, Jake03, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_HUBJAKE, 122, Jake13, NEUTRAL_REACTION );
end

procedure Jake05 begin
	gsay_reply( SCRIPT_HUBJAKE, 123 );
	giq_option( 4, SCRIPT_HUBJAKE, 124, Barter, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 125, Jake06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 126, Jake13, NEUTRAL_REACTION );
end

procedure Jake06 begin
	gsay_reply( SCRIPT_HUBJAKE, 127 );
	giq_option( 4, SCRIPT_HUBJAKE, 128, Barter, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 129, Jake07, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 130, Jake08, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 131, Jake14, BAD_REACTION );
end

procedure Jake07 begin
	gsay_reply( SCRIPT_HUBJAKE, 132 );
	giq_option( 4, SCRIPT_HUBJAKE, 133, Barter, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 134, Jake08, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 135, Jake12, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 136, Jake04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 137, Jake13, NEUTRAL_REACTION );
end

procedure Jake08 begin
	gsay_reply( SCRIPT_HUBJAKE, 138 );
	giq_option( 4, SCRIPT_HUBJAKE, 139, Barter, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 140, Jake07, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 141, Jake14, BAD_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 142, Jake13, NEUTRAL_REACTION );
end

procedure Jake09 begin
	if (dude_is_male) then begin
		gsay_reply( SCRIPT_HUBJAKE, 163 );
	end
	else begin
		gsay_reply( SCRIPT_HUBJAKE, 164 );
	end
	giq_option( -3, SCRIPT_HUBJAKE, 144, Barter, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_HUBJAKE, 145, Jake13, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 146, Barter, NEUTRAL_REACTION );

	if (local_var(LVAR_Here_Before) < 2) then begin
   	if (global_var( GVAR_QUEST_VAULT13_4_WATERCHIP ) != 2) then begin
   		giq_option( 4, SCRIPT_HUBJAKE, 104, Jake03, NEUTRAL_REACTION );
   	end
   	giq_option( 4, SCRIPT_HUBJAKE, 105, Jake04, NEUTRAL_REACTION );
   end

	if (local_var(LVAR_CheckedSelection) > 0) then
	   giq_option( 4, SCRIPT_HUBJAKE, 165, Jake16, NEUTRAL_REACTION );
	else
      giq_option( 4, SCRIPT_HUBJAKE, 103, Jake02, NEUTRAL_REACTION );

	giq_option( 4, SCRIPT_HUBJAKE, 147, Jake13, NEUTRAL_REACTION );
end

procedure Jake10 begin
	gsay_reply( SCRIPT_HUBJAKE, 148 );
	giq_option( -3, SCRIPT_HUBJAKE, 149, Barter, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_HUBJAKE, 150, Jake13, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 151, Barter, NEUTRAL_REACTION );

	if (local_var(LVAR_Here_Before) < 2) then begin
   	if (global_var( GVAR_QUEST_VAULT13_4_WATERCHIP ) != 2) then begin
   		giq_option( 4, SCRIPT_HUBJAKE, 104, Jake03, NEUTRAL_REACTION );
   	end
   	giq_option( 4, SCRIPT_HUBJAKE, 105, Jake04, NEUTRAL_REACTION );
   end

	if (local_var(LVAR_CheckedSelection) > 0) then
	   giq_option( 4, SCRIPT_HUBJAKE, 165, Jake16, NEUTRAL_REACTION );
	else
      giq_option( 4, SCRIPT_HUBJAKE, 103, Jake02, NEUTRAL_REACTION );

	giq_option( 4, SCRIPT_HUBJAKE, 152, Jake15, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 153, Jake13, NEUTRAL_REACTION );
end

procedure Jake11 begin
	float_msg(self_obj, message_str(SCRIPT_HUBJAKE, 154), 2);
	call combat;
end

procedure Jake12 begin
	set_global_var( GVAR_VANCE_KNOWS_PLAYER, 1 );
	gsay_reply( SCRIPT_HUBJAKE, 155 );
	giq_option( 4, SCRIPT_HUBJAKE, 156, Jake08, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HUBJAKE, 157, Jake13, NEUTRAL_REACTION );
end

procedure Jake13 begin
end

procedure Jake14 begin
	BottomReact
end

procedure Jake15 begin
	BottomReact
	call combat;
end

procedure Jake16 begin
	if (global_var( GVAR_WORLDMAPLIST_BROTHERHOOD ) == 0) then
		set_global_var( GVAR_WORLDMAPLIST_BROTHERHOOD, 1 );
   mark_on_map(AREA_BROTHERHOOD)

	if (global_var( GVAR_WORLDMAPLIST_BONEYARD ) == 0) then
		set_global_var( GVAR_WORLDMAPLIST_BONEYARD, 1 );
   mark_on_map(AREA_BONEYARD)

	gsay_message( SCRIPT_HUBJAKE, 166, 50 );
end

procedure JakeEnd begin
end

procedure Barter begin
   set_local_var(LVAR_CheckedSelection,1);

	gsay_message( SCRIPT_HUBJAKE, 158, 50 );
	gdialog_mod_barter(-15);
	gsay_reply( SCRIPT_HUBJAKE, 159 );
	giq_option( 4, SCRIPT_HUBJAKE, 160, JakeEnd, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_HUBJAKE, 161, JakeEnd, NEUTRAL_REACTION );
end

procedure Get_Stuff begin
   get_barter_inven(Jake_Desk_Ptr);
end

procedure Put_Stuff begin
   put_barter_inven(Jake_Desk_Ptr);
end
