/*

	Hub - Hightower / door guard

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_HTWRGRGE
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;

procedure George01;
procedure George01a;
procedure George01b;
procedure George02;
procedure George02a;
procedure George03;
procedure George04;
procedure George05;
procedure George06;
procedure George07;
procedure George08;
procedure GeorgeEnd;

variable tmp_hostile;
variable Only_Once := 1;
variable lastTraverse;
variable currentLocation;
variable hereBefore;
variable visible := 1;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		set_map_var(3, 0);
		if (global_var( GVAR_KILL_MERCHANT ) == 5) then begin
			if not(is_loading_game) then begin    set_self_invisible;    end
			visible := 0;
			set_map_var(3, 1);
		end
		set_self_team( TEAM_42 );
		set_self_ai( AI_GUARD_SADISTIC );
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (visible == 0) then begin
		script_overrides;
	end
	else begin
		if (tmp_hostile) then begin
			tmp_hostile := 0;
			attack(dude_obj);
		end
		if (map_var(5) == 1) then begin
			if ((self_can_hear_dude) or (self_can_see_dude)) then begin
				call combat;
			end
		end
		else begin
			if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
				if ((self_can_hear_dude) or (self_can_see_dude)) then begin
					dialogue_system_enter;
				end
				else begin
					if ((global_var( GVAR_KILL_MERCHANT ) == 1) or (global_var( GVAR_STEAL_NECKLACE ) == 1)) then begin
						set_map_var(3, 1);
						if (((game_time / 10) - lastTraverse) >= 20) then begin
							lastTraverse := game_time / 10;
							if (currentLocation == 0) then begin
								currentLocation := 1;
								self_walk_to_tile( 19516 );
							end
							else begin
								currentLocation := 0;
								self_walk_to_tile( 22529 );
							end
						end
					end
					else begin
						if (self_tile != 22529) then begin
							self_walk_to_tile( 22529 );
						end
					end
				end
			end
			else begin
				if (self_tile != 22529) then begin
					self_walk_to_tile( 22529 );
				end
				if (map_var(2) == 1) then begin
					dialogue_system_enter;
				end
			end
		end
	end
end

procedure pickup_p_proc
begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_self;
	get_reaction
	if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
		float_msg( self_obj, message_str(SCRIPT_HTWRGRGE, 118), FLOAT_MSG_RED );
		call combat;
	end
	else begin
		if (global_var( GVAR_ENEMY_HUB ) == 1) then begin
			float_msg( self_obj, message_str(SCRIPT_HTWRGRGE, 120), FLOAT_MSG_RED );
			call combat;
		end
		else begin
			if (map_var(2) == 1) then begin
				set_map_var(2, 0);
				call George08;
			end
			else begin
				if (hereBefore == 0) then begin
					hereBefore := 1;
					start_gdialog(870, self_obj, 4, -1, -1);
					gsay_start;
					call George01;
					gsay_end;
					end_dialogue;
				end
				else begin
					call George07;
				end
			end
		end
	end
end

procedure destroy_p_proc begin
	set_map_var(4, 1);
	inc_good_critter
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_HTWRGRGE, 100));
end

procedure damage_p_proc
begin
	set_map_var(5, 1);
end

procedure George01
begin
	gsay_reply( SCRIPT_HTWRGRGE, 101 );
	giq_option( 4, SCRIPT_HTWRGRGE, 103, George01a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HTWRGRGE, 104, George01b, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HTWRGRGE, 105, George06, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_HTWRGRGE, 102, George06, NEUTRAL_REACTION );
end

procedure George01a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -10))) then begin
		call George03;
	end
	else begin
		call George02;
	end
end

procedure George01b
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 10))) then begin
		call George05;
	end
	else begin
		call George02;
	end
end

procedure George02
begin
	gsay_reply( SCRIPT_HTWRGRGE, 106 );
	giq_option( 4, SCRIPT_HTWRGRGE, 107, George02a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HTWRGRGE, 108, George06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HTWRGRGE, 109, George03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_HTWRGRGE, 110, GeorgeEnd, NEUTRAL_REACTION );
end

procedure George02a
begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
		call George03;
	end
	else begin
		call George06;
	end
end

procedure George03
begin
	set_map_var(3, 1);
	gsay_message( SCRIPT_HTWRGRGE, 111, 50 );
end

procedure George04
begin
	gsay_message( SCRIPT_HTWRGRGE, 112, 51 );
end

procedure George05
begin
	set_map_var(3, 1);
	gsay_message( SCRIPT_HTWRGRGE, 113, 50 );
end

procedure George06
begin
	gsay_message( SCRIPT_HTWRGRGE, 114, 51 );
end

procedure George07
begin
	float_msg( self_obj, message_str(SCRIPT_HTWRGRGE, random(114, 117)), FLOAT_MSG_RED );
end

procedure George08
begin
	float_msg( self_obj, message_str(SCRIPT_HTWRGRGE, 119), FLOAT_MSG_RED );
end

procedure GeorgeEnd
begin
end
