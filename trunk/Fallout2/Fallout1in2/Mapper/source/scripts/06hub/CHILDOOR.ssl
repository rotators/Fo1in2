/*

   Hub - door to the CoC storage room, water merchants map.

*/

#include "..\headers\define.h"
#include "..\headers\command.h"

#define NAME                    	SCRIPT_DOOR

procedure start;
procedure damage_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure map_update_p_proc;
procedure use_p_proc;
procedure description_p_proc;


procedure start begin
end

procedure damage_p_proc begin
	if (weapon_dmg_type(target_obj) == DMG_explosion) then begin
		if not(is_loading_game) then begin    set_self_invisible;    end
		set_local_var(1, 1);
		set_map_var(4, 1);
	end
	else begin
		display_msg(mstr(193));
	end
end

procedure use_skill_on_p_proc begin
	variable LVar0 := 0;
	if (local_var(0) == 0) then begin
		if (action_being_used == SKILL_LOCKPICK) then begin
			script_overrides;
			if (map_var(5) == 0) then begin
				if (dude_is_sneaking != 1) then begin
					set_map_var(4, 1);
				end
				else begin
					LVar0 := roll_vs_skill(dude_obj, SKILL_SNEAK, 0);
					if (is_success(LVar0) != 1) then begin
						set_map_var(4, 1);
					end
					else begin
						LVar0 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 0);
						if (is_success(LVar0)) then begin
							set_local_var(0, 1);
							display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
						end
						else begin
							display_msg(message_str(SCRIPT_DOOR, 103));//{103}{}{You were not able to pick the lock.}
						end
					end
				end
			end
			else begin
				LVar0 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 0);
				if (is_success(LVar0)) then begin
					set_local_var(0, 1);
					display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
				end
				else begin
					display_msg(message_str(SCRIPT_DOOR, 103));//{103}{}{You were not able to pick the lock.}
				end
			end
		end
	end
	else begin
		display_msg(message_str(SCRIPT_DOOR, 109));//{109}{}{The door is already unlocked.}
	end
end

procedure use_obj_on_p_proc begin
	variable LVar0 := 0;
	variable LVar1 := 0;
	LVar0 := obj_being_used_with;
	if (obj_pid(LVar0) == PID_LOCKPICKS) then begin
		script_overrides;
		if (map_var(5) == 0) then begin
			if (dude_is_sneaking != 1) then begin
				set_map_var(4, 1);
			end
			else begin
				LVar1 := roll_vs_skill(dude_obj, SKILL_SNEAK, 0);
				if (is_success(LVar1) != 1) then begin
					set_map_var(4, 1);
				end
				else begin
					LVar1 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 20);
					if (is_success(LVar1)) then begin
						set_local_var(0, 1);
						display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
					end
					else if (is_critical(LVar1)) then begin
						rm_obj_from_inven(dude_obj, LVar0);
						destroy_object(LVar0);
						display_msg(message_str(SCRIPT_DOOR, 101));//{101}{}{You broke your lockpicks!}
					end
				end
			end
		end
		else begin
			LVar1 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 20);
			if (is_success(LVar1)) then begin
				set_local_var(0, 1);
				display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
			end
		   else if (is_critical(LVar1)) then begin
				rm_obj_from_inven(dude_obj, LVar0);
				destroy_object(LVar0);
				display_msg(message_str(SCRIPT_DOOR, 101));//{101}{}{You broke your lockpicks!}
			end
		end
	end
	else begin
		display_msg(message_str(SCRIPT_DOOR, 103));//{103}{}{You were not able to pick the lock.}
	end
end

procedure map_update_p_proc begin
	if (local_var(0) == 0) then begin
		obj_lock(self_obj);
	end
	else begin
		obj_unlock(self_obj);
	end
end

procedure use_p_proc begin
	variable LVar0 := 0;
	if (local_var(0) == 0) then begin
		obj_lock(self_obj);
	end
	else begin
		if (map_var(5) == 0) then begin
			if (dude_is_sneaking != 1) then begin
				set_map_var(4, 1);
			end
			else begin
				LVar0 := roll_vs_skill(dude_obj, SKILL_SNEAK, 0);
				if (is_success(LVar0)) then begin
					obj_unlock(self_obj);
				end
				else begin
					set_map_var(4, 1);
				end
			end
		end
		else begin
			obj_unlock(self_obj);
		end
	end
	if ((local_var(0) == 0) and (source_obj == dude_obj)) then begin
		script_overrides;
		display_msg(message_str(SCRIPT_DOOR, 104));//{104}{}{The door is locked.}
	end
end

procedure description_p_proc begin
	if (local_var(0) == 0) then begin
		display_msg(message_str(SCRIPT_DOOR, 104));//{104}{}{The door is locked.}
	end
end


