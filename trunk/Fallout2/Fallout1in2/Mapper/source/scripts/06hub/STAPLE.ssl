/*

	Hub - Mrs. Stapleton

*/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\maps\hubdwntn.h"
#include "..\headers\sfall\main.h"

#define NAME                    SCRIPT_STAPLE
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure look_at_p_proc;
procedure combat;

procedure Staple00;
procedure Staple01;
procedure Staple02;
procedure Staple03;
procedure Staple04;
procedure Staple05;
procedure Staple06;
procedure Staple06a;
procedure Staple06b;
procedure Staple06c;
procedure Staple07;
procedure Staple08;
procedure Staple09;
procedure Staple10;
procedure Staple11;
procedure Staple12;
procedure Staple13;
procedure Staple14;
procedure Staple15;
procedure Staple15a;
procedure Staple16;
procedure Staple17;
procedure StapleEnd;

procedure Node1000;
procedure Node1100;
procedure Node1200;

import variable Staple_Box_Ptr;

procedure Get_Stuff;
procedure Put_Stuff;

#define LVAR_Here_Before      (4)
#define LVAR_GivenHolodisk    (5)

#define LVAR_Give_Hintbook    (7)

variable tmp_hostile;
variable Only_Once := 1;

#define barter_mod_initial       (30)    // vanilla: -40

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		set_self_team( TEAM_70 );
		set_self_ai( AI_MERCHANT );
	end
end

procedure combat begin
	attack(dude_obj);
	tmp_hostile := 1;
end

procedure critter_p_proc begin
	if (tmp_hostile) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
end

procedure pickup_p_proc begin
	if source_obj == dude_obj then begin
		script_overrides;
		float_msg( self_obj, message_str(SCRIPT_RAZLO, 308), FLOAT_MSG_RED );
		BigDownReact
	end
end

procedure talk_p_proc begin
	dude_look_at_self;
	call Get_Stuff;
	get_reaction
	gdialog_set_barter_mod(barter_mod_initial);

	if (local_var(LVAR_Here_Before) == 0) then begin
		set_local_var(LVAR_Here_Before, 1);
		start_dialog_at_node(Staple00);
	end
	else if (local_var(6) == 1) then begin
		call Staple13;
	end
	else begin
		start_dialog_at_node(Staple01);
	end
	call Put_Stuff;
end

procedure destroy_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_HUB, 1 );
	end
	move_obj_inven_to_obj(Staple_Box_Ptr, self_obj);
	inc_good_critter
end

procedure damage_p_proc begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_HUB, 1 );
	end
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(message_str(SCRIPT_STAPLE, 100));
end

procedure Staple00 begin
	gsay_reply( SCRIPT_STAPLE, 102 );
	call Staple02;
end

procedure Staple01 begin
   if (local_var(LVAR_Give_Hintbook) == 0) and is_story_finished then begin
      set_local_var(LVAR_Give_Hintbook,1);
      call Node1000;
   end
   else begin
   	Reply(103);
   	call Staple02;
	end
end

procedure Staple02 begin
	giq_option( 4, SCRIPT_STAPLE, 104, Staple03, NEUTRAL_REACTION );
	if ((global_var( GVAR_QUEST_VAULT13_4_WATERCHIP ) != 2) and (local_var(LVAR_GivenHolodisk) == 0)) then begin
		giq_option( 4, SCRIPT_STAPLE, 105, Staple04, NEUTRAL_REACTION );
	end
	if (global_var( GVAR_CHEMISTRY_BOOK ) == 1) then begin
		giq_option( 4, SCRIPT_STAPLE, 130, Staple15, NEUTRAL_REACTION );
	end
	giq_option( 4, SCRIPT_STAPLE, 106, StapleEnd, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_STAPLE, 125, Staple14, NEUTRAL_REACTION );
end

procedure Staple03 begin
	gsay_message( SCRIPT_STAPLE, 107, 50 );
	gdialog_mod_barter(barter_mod_initial);
	gsay_reply( SCRIPT_STAPLE, 127 );
	giq_option( 4, SCRIPT_STAPLE, 128, StapleEnd, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_STAPLE, 129, StapleEnd, NEUTRAL_REACTION );
end

procedure Staple04 begin
	gsay_reply( SCRIPT_STAPLE, 108 );
	giq_option( 4, SCRIPT_STAPLE, 109, Staple05, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_STAPLE, 110, Staple06, NEUTRAL_REACTION );
end

procedure Staple05 begin
	gsay_reply( SCRIPT_STAPLE, 111 );
	giq_option( 4, SCRIPT_STAPLE, 112, Staple06, NEUTRAL_REACTION );
end

procedure Staple06 begin
	gsay_reply( SCRIPT_STAPLE, 113 );
	giq_option( 4, SCRIPT_STAPLE, 114, Staple06a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_STAPLE, 115, Staple06b, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_STAPLE, 116, Staple06c, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_STAPLE, 117, StapleEnd, NEUTRAL_REACTION );
end

procedure Staple06a begin
	if (dude_caps >= 750) then begin
		call Staple09;
	end
	else begin
		call Staple07;
	end
end

procedure Staple06b begin
	if (is_success(do_check(dude_obj, STAT_ch, 0)) or is_success(roll_vs_skill(dude_obj, SKILL_BARTER, 0))) then begin
		if (dude_caps >= 500) then begin
			call Staple10;
		end
		else begin
			call Staple07;
		end
	end
	else begin
		call Staple07;
	end
end

procedure Staple06c begin
	if (is_success(do_check(dude_obj, STAT_st, 0))) then begin
		call Staple11;
	end
	else begin
		call Staple08;
	end
end

procedure Staple07 begin
	gsay_message( SCRIPT_STAPLE, 118, 50 );
end

procedure Staple08 begin
	set_local_var(6, 1);
	gsay_message( SCRIPT_STAPLE, 119, 51 );
end

procedure Staple09 begin
	dude_caps_adjust( -750 );
	gsay_message( SCRIPT_STAPLE, 120, 50 );
	call Staple12;
end

procedure Staple10 begin
	dude_caps_adjust( -500 );
	gsay_message( SCRIPT_STAPLE, 121, 50 );
	call Staple12;
end

procedure Staple11 begin
	set_local_var(6, 1);
	gsay_message( SCRIPT_STAPLE, 122, 51 );
	call Staple12;
end

procedure Staple12 begin
	if local_var(LVAR_GivenHolodisk) != 1 then begin
		variable disk := 0;

		disk := create_object(PID_VAULT_RECORDS_HOLODISK, 0,0);
		add_obj_to_inven(dude_obj, disk);

		set_local_var(LVAR_GivenHolodisk, 1);
	end
	gsay_message( SCRIPT_STAPLE, 123, 50 );
end

procedure Staple13 begin
	float_msg( self_obj, message_str(SCRIPT_STAPLE, 124), FLOAT_MSG_RED );
end

procedure Staple14 begin
	gsay_message( SCRIPT_STAPLE, 126, 50 );
end

procedure Staple15 begin
	gsay_reply( SCRIPT_STAPLE, 131 );
	giq_option( 4, SCRIPT_STAPLE, 114, Staple15a, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_STAPLE, 117, StapleEnd, NEUTRAL_REACTION );
end

procedure Staple15a begin
	if (dude_caps >= 750) then begin
		call Staple16;
	end
	else begin
		call Staple17;
	end
end

procedure Staple16 begin
	variable item := 0;
	dude_caps_adjust( -750 );
	set_global_var( GVAR_CHEMISTRY_BOOK, 2 );
	item := create_object( PID_CHEMISTRY_MANUAL, 0, 0 );
	add_obj_to_inven(dude_obj, item);
	gsay_message( SCRIPT_STAPLE, 132, 50 );
end

procedure Staple17 begin
	gsay_message( SCRIPT_STAPLE, 133, 50 );
end

procedure StapleEnd begin
end

procedure Get_Stuff begin
   get_barter_inven(Staple_Box_Ptr);
end

procedure Put_Stuff begin
   put_barter_inven(Staple_Box_Ptr);
end

procedure Node1000 begin
   Reply(1000);
   NOption(1010,Node1100,001);
end

procedure Node1100 begin
	variable item := 0;
	item := create_object( PID_FALLOUT_2_HINTBOOK, 0, 0 );
	add_obj_to_inven(dude_obj, item);

   Reply(1100);
   NOption(1110,StapleEnd,004);
   NLowOption(1111,StapleEnd);
end

procedure Node1200 begin
   Reply(1200);
end
