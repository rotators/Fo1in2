/*

   The Glow weapons locker script

      !CUT CONTENT - UNUSED!

*/

#include "..\headers\define.h"
#include "..\headers\glow.h"

#define NAME                    	SCRIPT_GLO4WEAP

#include "..\headers\command.h"

/* Standard Script Procedures */
procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;

procedure Traps;
procedure Sciences;
procedure Picklocks;
procedure Using_Door;

variable Shocked;

procedure start begin
	if glow_weapons_unlocked then begin
		set_local_var(1, 1);
	end
end

procedure look_at_p_proc begin
	script_overrides;
	display_msg(mstr(100));
end

procedure description_p_proc begin
	script_overrides;
	display_msg(mstr(100));
end

procedure use_p_proc begin
	if not(glow_weapons_unlocked) then begin
		set_glow_weapons_locked;
	end
	call Using_Door;
end

procedure use_skill_on_p_proc begin
	if not(glow_weapons_unlocked) then begin
		set_glow_weapons_locked;
	end
	if (action_being_used == SKILL_LOCKPICK) then begin
		call Picklocks;
	end
	else if (action_being_used == SKILL_TRAPS) then begin
		call Traps;
	end
	else if (action_being_used == SKILL_SCIENCE) then begin
		call Sciences;
	end
	else begin
		display_msg(mstr(101));
	end
end

procedure use_obj_on_p_proc begin
	if not(glow_weapons_unlocked) then begin
		set_glow_weapons_locked;
	end
	if (obj_pid(obj_being_used_with) == PID_RED_PASS_KEY) then begin
		if (local_var(1) == 0) then begin
			script_overrides;
			Shocked := random(3, 7);
			critter_dmg( dude_obj, Shocked, DMG_normal_dam );
			display_msg(mstr(102) + Shocked + mstr(103));
			set_local_var(0, local_var(0) + 1);
		end
		else if (local_var(2) == 0) then begin
			script_overrides;
			set_local_var(2, 1);
			display_msg(mstr(104));
		end
	end
	else begin
		display_msg(mstr(105));
	end
end

procedure Traps begin
	if (local_var(1) == 0) then begin
		if (is_success(roll_vs_skill(dude_obj, SKILL_TRAPS, 0))) then begin
			set_local_var(1, 1);
			display_msg(mstr(113));
		end
		else begin
			set_local_var(0, 5);
			Shocked := random(2, local_var(0));
			critter_dmg( dude_obj, Shocked, DMG_normal_dam );
			display_msg(mstr(114) + Shocked + mstr(115));
			set_local_var(0, local_var(0) + 1);
		end
	end
	else begin
		display_msg(mstr(116));
	end
end

procedure Sciences begin
	if (local_var(1) == 0) then begin
		if (is_success(roll_vs_skill(dude_obj, SKILL_SCIENCE, 0))) then begin
			set_local_var(1, 1);
			display_msg(mstr(117));
		end
		else begin
			set_local_var(0, 5);
			Shocked := random(2, local_var(0));
			critter_dmg( dude_obj, Shocked, DMG_normal_dam );
			display_msg(mstr(118) + Shocked + mstr(119));
			set_local_var(0, local_var(0) + 1);
		end
	end
	else begin
		display_msg(mstr(120));
	end
end

procedure Picklocks begin
	if (local_var(1) == 0) then begin
		if (local_var(0) > 2) then begin
			Shocked := random(2, local_var(0));
			critter_dmg( dude_obj, Shocked, DMG_normal_dam );
			display_msg(mstr(121) + Shocked + mstr(122));
			set_local_var(0, local_var(0) + 1);
		end
		else begin
			set_local_var(0, local_var(0) + 1);
			display_msg(mstr(123));
		end
	end
	else begin
		if (is_success(roll_vs_skill(dude_obj, SKILL_LOCKPICK, 0))) then begin
			set_local_var(2, 1);
			display_msg(mstr(124));
		end
		else begin
			display_msg(mstr(125));
		end
	end
end

procedure Using_Door begin
	if (local_var(1) == 0) then begin
		script_overrides;
		if (local_var(0) > 2) then begin
			Shocked := random(2, local_var(0));
			critter_dmg( dude_obj, Shocked, DMG_normal_dam );
			display_msg(mstr(106) + Shocked + mstr(107));
			set_local_var(0, local_var(0) + 1);
		end
		else begin
			set_local_var(0, local_var(0) + 1);
			display_msg(mstr(108));
		end
	end
	else if (local_var(2) == 0) then begin
		script_overrides;
		display_msg(mstr(109));
		if (is_success(do_check(dude_obj, STAT_pe, 0))) then begin
			display_msg(mstr(110));
		end
		else begin
			if (is_success(roll_vs_skill(dude_obj, SKILL_TRAPS, 0))) then begin
				display_msg(mstr(111));
			end
			else begin
				display_msg(mstr(112));
			end
		end
	end
end


