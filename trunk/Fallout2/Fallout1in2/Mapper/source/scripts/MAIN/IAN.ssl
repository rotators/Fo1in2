/*

	Ian - Party Member, Shady Sands

*/

#include "..\headers\define.h"

#define NAME                    SCRIPT_IAN
#define TOWN_REP_VAR            (GVAR_TOWN_REP_SHADYSANDS)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

#define PARTY_NODE_X                         Node1000
#define set_default_party_follow             set_follow_close
#define def_weapon_use_msg                   mstr(173)
#define def_wait_msg                         mstr(145)
#define def_nowait_msg                       mstr(203)
#define def_end_msg                          mstr(144)
#define def_gear_msg                         mstr(2000)

procedure start;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure description_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure use_obj_on_p_proc;
procedure push_p_proc;

procedure join_party;
procedure hire_Ian;
procedure rejoin_party;

procedure Ian01;
procedure Ian02;
procedure Ian03;
procedure Ian04;
procedure Ian05;
procedure Ian06;
procedure Ian07;
procedure Ian08;
procedure Ian09;
procedure Ian10;
procedure Ian11;
procedure Ian12;
procedure Ian12a;
procedure Ian13;
procedure Ian14;
procedure Ian15;
procedure Ian16;
procedure Ian17;
procedure Ian17a;
procedure Ian18;
procedure Ian19;
procedure Ian20;
procedure Ian21;

procedure Node999;
procedure Node1000;
procedure Node1001;
procedure Node1002;
procedure Node1003;
procedure Node1004;
procedure Node1005;
procedure Node1006;
procedure Node1007;
procedure Node1008;
procedure Node1009;
procedure Node1010;
procedure Node1100;

procedure ask_places;
procedure map_commentary;
procedure IanTactics;
procedure IanClose;
procedure IanModerate;
procedure IanFar;
procedure IanCombatTactics;
procedure IanSniper;
procedure IanNearCombat;
procedure IanFreeCombat;

procedure IanHolsterWeapon;
procedure IanRemoveArmor;

variable tmp_hostile;
variable item;
variable line151flag;
variable line152flag;
variable line153flag;
variable line154flag;
variable line155flag;
variable line162flag;
variable line163flag;
variable line164flag;
variable line165flag;
variable line166flag;
variable line167flag;
variable line170flag;
variable line172flag;

variable AskAgain := 0;

#define LVAR_WAITING                      (10)
#define LVAR_FOLLOW_DISTANCE              (11)
#define LVAR_TEAM                         (12)

procedure PickDeadBodyType;
variable DeathType := 56;

#define float_ian(x)                      float_msg(self_obj, message_str(NAME, x), FLOAT_MSG_NORMAL)
#define ian_joins_party                   party_add_self;                                                   	\
                                          add_timer_event(self_obj,game_ticks(1),EVENT_FLOAT_JOIN);				\
                                          set_self_team(TEAM_PLAYER)
#define ian_hired                         (global_var(GVAR_IAN_HIRELING_STATUS) > 1)
#define dude_has_free_slot_for_ian        ((dude_at_max_party_size == false) and (Ian_In_Party == false) or unlimited_party_members)
#define EVENT_FLOAT_JOIN                  (2)

procedure Node998 begin
end
procedure Node999 begin
end

procedure start begin
end

procedure push_p_proc begin
   if (Ian_In_Party == false) then begin
      script_overrides;
   end
   else begin
      if (random(0,1) == 1) then
         float_ian(random(310,313));
   end
end

procedure timed_event_p_proc begin
	if (fixed_param == EVENT_FLOAT_JOIN) then begin
		float_msg(self_obj, mstr(2520), FLOAT_MSG_NORMAL);
	end
end

procedure critter_p_proc begin
   if (Ian_In_Party) then begin
      party_member_follow_dude
   end
   else begin
   	set_self_abandon_party;
   end

	if (self_can_see_dude) and global_var(GVAR_ENEMY_SHADY_SANDS) then begin
		tmp_hostile := 1;
   end

	if (tmp_hostile) then begin
		tmp_hostile := 0;
		set_self_abandon_party;
		attack(dude_obj);
	end
	else begin
		call map_commentary;
	end
end

procedure description_p_proc begin
	variable PerceptionRoll := 0;
	PerceptionRoll := do_check(dude_obj, STAT_pe, 1);
	if is_success(PerceptionRoll) or dude_awareness then begin
		script_overrides;
		display_msg(message_str(SCRIPT_IAN, 130));
	end
end

procedure destroy_p_proc begin
	set_global_var( GVAR_IAN_HIRELING_STATUS, 3 );
	inc_good_critter
end

procedure look_at_p_proc begin
	script_overrides;
	// If not in party and haven't had introductions, display "short stocky man" description
	if (global_var( GVAR_IAN_HIRELING_STATUS ) == 0) then begin
		display_msg(message_str(SCRIPT_IAN, 100));
	end
	// if have had introductions or was in party but was asked to leave, display "Ian"
	else if ((global_var( GVAR_IAN_HIRELING_STATUS ) == 1) or (global_var( GVAR_IAN_HIRELING_STATUS ) == 3)) then begin
		display_msg(message_str(SCRIPT_IAN, 113));
	end
	//debug("IAN AI: " + self_ai);
end

procedure map_enter_p_proc begin
	if CUR_MAP_SHADYW then begin
		if (map_first_run) then begin
			set_self_team(TEAM_SHADY_SANDS);
		end
	end
	if shady_invaded and not(Ian_In_Party) then begin
		if CUR_AREA_SHADY_SANDS then begin
			if (local_var(7) != 1) then begin
				set_local_var(7, 1);
				call PickDeadBodyType;
				kill_critter(self_obj, DeathType);
			end
		end
	end
end

procedure pickup_p_proc begin
	if (global_var( GVAR_IAN_HIRELING_STATUS ) < 2) then begin
		tmp_hostile := 1;
	end
	else begin
		script_overrides;
	end
end

procedure talk_p_proc begin
	dude_look_at_self;

	get_reaction

	start_gdialog(235, self_obj, 4, -1, -1);
	if (Ian_In_Party or party_is_waiting) then begin
		gdialog_set_barter_mod(255);
	end

	gsay_start;

	if (global_var( GVAR_ENEMY_SHADY_SANDS ) and (global_var( GVAR_IAN_HIRELING_STATUS ) != 2)) then begin
		call Ian14;
	end
	else if (global_var( GVAR_IAN_HIRELING_STATUS ) == 0) then begin
		call Ian02;
	end
	else if ((Ian_In_Party) or (party_is_waiting)) then begin
	   call Node1000;
		//call Ian15;
	end
	else if (global_var( GVAR_IAN_HIRELING_STATUS ) == 3) then begin
		call Ian21;
	end
	else begin
		call Ian12;
	end

	gsay_end;
	end_dialogue;

	if (Ian_In_Party and (global_var(GVAR_IAN_JOINS_GIVE_EXP) == 0)) then begin
		set_global_var(GVAR_IAN_JOINS_GIVE_EXP, 1);
		display_msg(message_str(SCRIPT_IAN, 169));
		give_exp_points(EXP_HIRED_IAN);
	end

end

procedure use_obj_on_p_proc begin

	// TODO: Investigate this
	if (Ian_In_Party) then begin
		item := obj_pid(obj_being_used_with);
		if ((item != 40) and (item != 71) and (item != 81) and (item != 103) and (item != 144)) then begin
			script_overrides;
			if (obj_item_subtype( obj_being_used_with ) != item_type_weapon) then begin
				rm_obj_from_inven(dude_obj, obj_being_used_with);
				add_obj_to_inven(self_obj, obj_being_used_with);
			end
			else begin
				if ((item == 4) or (item == 8) or (item == 18) or (item == 120) or (item == 22) or (item == 9) or (item == 16) or (item == 24) or (item == 241) or (item == 116) or (item == 236) or (item == 234) or (item == 235) or (item == 21)) then begin
					rm_obj_from_inven(dude_obj, obj_being_used_with);
					add_obj_to_inven(self_obj, obj_being_used_with);
					float_msg( self_obj, message_str(SCRIPT_GENCHAT, 215), FLOAT_MSG_NORMAL );
				end
				else begin
					float_msg( self_obj, message_str(SCRIPT_MODREACT, 109), FLOAT_MSG_GREEN );
				end
			end
		end
	end

end

procedure join_party begin
	if dude_has_free_slot_for_ian then begin
		set_global_var( GVAR_IAN_HIRELING_STATUS, 2 );
		set_global_var( GVAR_DESTROY_VATS_5, 4 );
		set_global_var( GVAR_IAN_DUDE_LAST_LEVEL, dude_level );

		ian_joins_party;
		Reply(150);
	end
	else begin
		Reply(2500);
		NOption(2510,Node999,004);
	end
end

procedure rejoin_party begin
	if dude_has_free_slot_for_ian then begin
		set_global_var( GVAR_IAN_HIRELING_STATUS, 2 );
		set_global_var( GVAR_DESTROY_VATS_5, 4 );

		end_party_waiting;
		Reply(150);
	end
	else begin
		Reply(2500);
		NOption(2510,Node999,004);
	end
end

procedure hire_Ian begin
	dude_caps_adjust( -100 );
	call join_party;
end

procedure Ian01 begin
	gsay_message( SCRIPT_IAN, 101, 51 );
end

procedure Ian02 begin
	gsay_reply( SCRIPT_IAN, 102 );
	giq_option( 4, SCRIPT_IAN, 103, Ian03, BAD_REACTION );
	giq_option( 4, SCRIPT_IAN, message_str(SCRIPT_IAN, 104) + dude_name + message_str(SCRIPT_IAN, 105), Ian04, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_IAN, 106, Ian05, NEUTRAL_REACTION );
end

procedure Ian03 begin
	gsay_message( SCRIPT_IAN, 107, 51 );
end

procedure Ian04 begin
	gsay_reply( SCRIPT_IAN, 108 );
	set_global_var( GVAR_IAN_HIRELING_STATUS, 1 );
	giq_option( 4, SCRIPT_IAN, 109, Ian06, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_IAN, 110, Ian07, NEUTRAL_REACTION );
end

procedure Ian05 begin
	gsay_message( SCRIPT_IAN, 111, 50 );
end

procedure Ian06 begin
	gsay_reply( SCRIPT_IAN, 112 );
	giq_option( 4, SCRIPT_IAN, 114, Ian18, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_IAN, 115, Ian13, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_IAN, 149, Ian17, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_IAN, 116, Ian08, NEUTRAL_REACTION );
end

procedure Ian07 begin
   if (AskAgain == 0) then
      Reply(117);
   else
      Reply(2601);

   giq_option( 4, SCRIPT_IAN, 118, Ian09, NEUTRAL_REACTION );
   giq_option( 4, SCRIPT_IAN, 119, Ian08, NEUTRAL_REACTION );

   if ian_hired then begin
   	giq_option( 4, SCRIPT_IAN, 133, Ian11, NEUTRAL_REACTION );
   	giq_option( 4, SCRIPT_IAN, 134, Ian09, NEUTRAL_REACTION );
   	giq_option( 4, SCRIPT_IAN, 136, Ian10, NEUTRAL_REACTION );
   	NOption(2015,Node999,001);
   end
end

procedure Ian08 begin
	gsay_reply( SCRIPT_IAN, 120 );
	giq_option( 4, SCRIPT_IAN, 121, Ian10, NEUTRAL_REACTION );
	giq_option( 5, SCRIPT_IAN, 122, Ian11, NEUTRAL_REACTION );
end

procedure Ian09 begin
	gsay_reply( SCRIPT_IAN, 123 );

   if ian_hired then begin
      AskAgain := 1;
      NOption(2600,Ian07,001);
   end
   else
	   giq_option( 4, SCRIPT_MODREACT, 104, Node999, NEUTRAL_REACTION );
end

procedure Ian10 begin
	gsay_reply( SCRIPT_IAN, 125 );
	giq_option( 4, SCRIPT_IAN, 126, Ian09, NEUTRAL_REACTION );

	if ian_hired then
	   NOption(2015,Node999,001);
	else
	   giq_option( 4, SCRIPT_MODREACT, 101, Node999, NEUTRAL_REACTION );
end

procedure Ian11 begin
	gsay_reply( SCRIPT_IAN, 128 );
   if ian_hired then begin
      AskAgain := 1;
      NOption(2600,Ian07,001);
   end
   else begin
	   giq_option( 4, SCRIPT_IAN, 129, Ian07, NEUTRAL_REACTION );
	   giq_option( 4, SCRIPT_MODREACT, 101, Node999, NEUTRAL_REACTION );
	end
end

procedure Ian12 begin
	gsay_reply( SCRIPT_IAN, message_str(SCRIPT_IAN, 131) + dude_name + message_str(SCRIPT_IAN, 132) );
	call Ian12a;
end

procedure Ian12a begin
	giq_option( 4, SCRIPT_IAN, 133, Ian11, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_IAN, 134, Ian09, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_IAN, 135, Ian07, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_IAN, 136, Ian10, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_IAN, 137, Ian13, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_IAN, 149, Ian17, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_IAN, 138, Node999, NEUTRAL_REACTION );
end

procedure Ian13 begin
	// Some Fallout 1 stuff. We have to use mark_on_map to make it work in Fo2
	// Keeping the Fo1 variables anyway, because they might be needed elswhere.
	//if (not(global_var(WORLDMAPLIST_THE_HUB))) then begin
		set_global_var( GVAR_WORLDMAPLIST_THE_HUB, 1 );
		mark_on_map(AREA_HUB)
	//end
	//if (not(global_var(WORLDMAPLIST_JUNKTOWN))) then begin
		set_global_var( GVAR_WORLDMAPLIST_JUNKTOWN, 1 );
		mark_on_map(AREA_JUNKTOWN)
	//end

	gsay_reply( SCRIPT_IAN, 139 );
   if Ian_In_Party then begin
		giq_option( 4, SCRIPT_IAN, 140, Node1000, NEUTRAL_REACTION );
	end
	else begin
		giq_option( 4, SCRIPT_IAN, 140, Ian12, NEUTRAL_REACTION );
	end

	/*if (Ian_In_Party) then begin
		giq_option( 4, SCRIPT_IAN, 140, Ian15, NEUTRAL_REACTION );
	end
	else begin
		giq_option( 4, SCRIPT_IAN, 140, Ian12, NEUTRAL_REACTION );
	end*/
end

procedure Ian14 begin
	tmp_hostile := 1;
	gsay_message( SCRIPT_IAN, 141, 51 );
end

// Primary dialog node:
procedure Ian15 begin
	gsay_reply( SCRIPT_IAN, message_str(SCRIPT_IAN, 142) + dude_name + message_str(SCRIPT_IAN, 143) );
	giq_option( 4, SCRIPT_IAN, 145, Ian16, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_IAN, 146, Ian13, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_IAN, 173, Ian20, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_IAN, 2000, IanCombatTactics, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_TYCHO, 159, IanTactics, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_IAN, 144, Node999, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_CARVLEAD, 139, Node999, NEUTRAL_REACTION );
end

procedure Ian16 begin
	set_global_var( GVAR_IAN_HIRELING_STATUS, 3 );
	set_party_waiting;
	gsay_message( SCRIPT_IAN, 147, 50 );
end

procedure Ian17 begin
	if (local_var(LVAR_reaction_level) == 1) then begin
		gsay_message( SCRIPT_IAN, 148, 51 );
	end
	else begin
		if (local_var(LVAR_reaction_level) == 2) then begin

			// If dude's party is too big, decline:
			if dude_has_free_slot_for_ian then begin
				gsay_reply( SCRIPT_IAN, 156 );
				if (dude_caps >= 100) then begin
					giq_option( 4, SCRIPT_IAN, 157, hire_Ian, GOOD_REACTION );
				end
				giq_option( 6, SCRIPT_IAN, 159, Ian17a, NEUTRAL_REACTION );
				giq_option( 4, SCRIPT_IAN, 158, Node999, NEUTRAL_REACTION );
			end
			else begin
				gsay_message( SCRIPT_IAN, 2501, 51 );
				NOption(2510,Node999,004);
			end

		end
		else begin
			call join_party;
		end
	end
end

procedure Ian17a begin
	if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 20))) then begin
		gsay_reply( SCRIPT_IAN, 160 );
		giq_option( 4, SCRIPT_MODREACT, 106, join_party, GOOD_REACTION );
	end
	else begin
		DownReact
		gsay_message( SCRIPT_IAN, 161, 51 );
	end
end

procedure Ian18 begin
	gsay_reply( SCRIPT_IAN, 124 );
	UpReact
	giq_option( 4, SCRIPT_MODREACT, 106, Ian19, NEUTRAL_REACTION );
end

procedure Ian19 begin
	gsay_reply( SCRIPT_IAN, 127 );
	call Ian12a;
end

procedure Ian20 begin
	gsay_message( SCRIPT_IAN, 174, 50 );
	call Ian15;
end

procedure Ian21 begin
	gsay_reply( SCRIPT_IAN, 202 );
	giq_option( 4, SCRIPT_IAN, 203, rejoin_party, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_IAN, 204, Node999, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_GENCHAT, 196, rejoin_party, NEUTRAL_REACTION );
end

procedure map_commentary begin
	if (CUR_MAP_JUNKKILL) then begin
		if (tile_distance(self_tile, 27883) < 4) then begin
			if (not(line151flag)) then begin
				float_msg( self_obj, message_str(SCRIPT_IAN, 151), FLOAT_MSG_NORMAL );
				line151flag := 1;
			end
		end
	end
	else if (CUR_MAP_JUNKCSNO) then begin
		if (tile_distance(self_tile, 27919) < 4) then begin
			if (not(line152flag)) then begin
				float_msg( self_obj, message_str(SCRIPT_IAN, 152), FLOAT_MSG_NORMAL );
				line152flag := 1;
			end
		end
	end
	else if (CUR_MAP_HALLDED) then begin
		if (not(line153flag)) then begin
			float_msg( self_obj, message_str(SCRIPT_IAN, 153), FLOAT_MSG_NORMAL );
			line153flag := 1;
		end
	end
	else if (CUR_MAP_GLOWENT) then begin
		if (not(line154flag)) then begin
			float_msg( self_obj, message_str(SCRIPT_IAN, 154), FLOAT_MSG_NORMAL );
			if (global_var( GVAR_KATJA_HIRELING_STATUS ) == 2) then begin
				float_msg( Katja_ptr, message_str(SCRIPT_KATJA, 185), FLOAT_MSG_PURPLE );
			end
			line154flag := 1;
		end
	end
	else if (CUR_MAP_MBENT) then begin
		if (not(line155flag)) then begin
			float_msg( self_obj, message_str(SCRIPT_IAN, 155), FLOAT_MSG_NORMAL );
			line155flag := 1;
		end
	end
	else if (CUR_MAP_HUBDWNTN) and (self_elevation == 0) then begin
		if (tile_distance(self_tile, 24890) < 4) then begin
			if (not(line162flag)) then begin
				float_msg( self_obj, message_str(SCRIPT_IAN, 162), FLOAT_MSG_NORMAL );
				line162flag := 1;
			end
		end
		else if (tile_distance(self_tile, 14116) < 4) then begin
			if (not(line165flag)) then begin
				float_msg( self_obj, message_str(SCRIPT_IAN, 165), FLOAT_MSG_NORMAL );
				line165flag := 1;
			end
		end
		else if (tile_distance(self_tile, 18464) < 4) then begin
			if (not(line166flag)) then begin
				float_msg( self_obj, message_str(SCRIPT_IAN, 166), FLOAT_MSG_NORMAL );
				line166flag := 1;
			end
		end
		else if (tile_distance(self_tile, 21730) < 4) then begin
			if (not(line167flag)) then begin
				float_msg( self_obj, message_str(SCRIPT_IAN, 167), FLOAT_MSG_NORMAL );
				line167flag := 1;
			end
		end
	end
	else if (CUR_MAP_HUBOLDTN) then begin //  THE HUB - OLDTOWN
		if (tile_distance(self_tile, 16082) < 4) then begin
			if (line163flag == 0) then begin
				float_msg( self_obj, message_str(SCRIPT_IAN, 163), FLOAT_MSG_NORMAL );
				line163flag := 1;
			end
		end
	end
	else if (CUR_MAP_HUBWATER) then begin //  THE HUB - WATER MERCHANTS
		if (tile_distance(self_tile, 22497) < 4) then begin
			if (line164flag == 0) then begin
				float_msg( self_obj, message_str(SCRIPT_IAN, 164), FLOAT_MSG_NORMAL );
				line164flag := 1;
			end
		end
	end
	else if (CUR_MAP_VAULT13) then begin //  VAULT 13 - INSIDE
		if (line170flag == 0) then begin
			float_msg( self_obj, message_str(SCRIPT_IAN, 170), FLOAT_MSG_NORMAL );
			line170flag := 1;
		end
	end
end

procedure IanTactics begin
	gsay_reply( SCRIPT_TYCHO, 160 );

	if (local_var(LVAR_FOLLOW_DISTANCE) != FOLLOW_DISTANCE_CLOSE) then
		giq_option( 4, SCRIPT_TYCHO, message_str(SCRIPT_TYCHO, 161), IanClose, NEUTRAL_REACTION );

	if (local_var(LVAR_FOLLOW_DISTANCE) != FOLLOW_DISTANCE_MEDIUM) then
		giq_option( 4, SCRIPT_TYCHO, message_str(SCRIPT_TYCHO, 162), IanModerate, NEUTRAL_REACTION );

	if (local_var(LVAR_FOLLOW_DISTANCE) != FOLLOW_DISTANCE_FAR) then
		giq_option( 4, SCRIPT_TYCHO, message_str(SCRIPT_TYCHO, 163), IanFar, NEUTRAL_REACTION );
end

procedure IanClose begin
	set_follow_close;

	/*set_local_var(4, 0);
	set_local_var(5, 0);
	set_local_var(6, 0);
	set_global_var( GVAR_DESTROY_VATS_5, 2 );*/
	gsay_message( SCRIPT_IAN, 201, 50 );
	call Ian15;
end

procedure IanModerate begin
	set_follow_medium;

	/*set_local_var(4, 0);
	set_local_var(5, 0);
	set_local_var(6, 0);
	set_global_var( GVAR_DESTROY_VATS_5, 4 );*/

	gsay_message( SCRIPT_IAN, 201, 50 );
	call Ian15;
end

procedure IanFar begin
	set_follow_far;

	/*set_local_var(4, 0);
	set_local_var(5, 0);
	set_local_var(6, 0);
	set_global_var( GVAR_DESTROY_VATS_5, 6 );*/
	gsay_message( SCRIPT_IAN, 201, 50 );
	call Ian15;
end

procedure IanCombatTactics begin
	gsay_reply( SCRIPT_IAN, 2001 );

	if (self_is_armed) then
		giq_option( 4, SCRIPT_IAN, 2010, IanHolsterWeapon, GOOD_REACTION );

	if (self_wearing_armor) then
		giq_option( 4, SCRIPT_IAN, 2011, IanRemoveArmor, GOOD_REACTION );

	giq_option( 4, SCRIPT_IAN, 2012, IanSniper, GOOD_REACTION );
	giq_option( 4, SCRIPT_IAN, 2013, IanNearCombat, GOOD_REACTION );
	giq_option( 4, SCRIPT_IAN, 2014, IanFreeCombat, GOOD_REACTION );
	giq_option( 4, SCRIPT_IAN, 2015, Ian15, GOOD_REACTION );
end

procedure IanHolsterWeapon begin
	inven_unwield(self_obj);
   Reply(201);
	call IanCombatTactics;
end

procedure IanRemoveArmor begin
	remove_armor(self_obj)
   Reply(201);
	call IanCombatTactics;
end

procedure IanSniper begin
	gsay_message( SCRIPT_IAN, 2100, 49 );
	//set_self_ai( AI_PARTY_IAN_AGGRESSIVE );
	call IanCombatTactics;
end

procedure IanNearCombat begin
	gsay_message( SCRIPT_IAN, 2100, 49 );
	//set_self_ai( AI_PARTY_IAN_BERSERK );
	call IanCombatTactics;
end

procedure IanFreeCombat begin
	gsay_message( SCRIPT_IAN, 2100, 49 );
	//set_self_ai( AI_IAN );
	call IanCombatTactics;
end

procedure PickDeadBodyType begin
	pick_dead_body_type
end

// party stuff
procedure Node1000 begin
   if party_is_waiting then begin
      Reply(202);
   end
   else begin
      Reply(mstr(142) + dude_name + mstr(143));
   end

   NOption(110,ask_places,004);
   if not(CUR_AREA_HUB) and not(CUR_AREA_JUNKTOWN) and (not(junktown_visible_on_map) or not(hub_visible_on_map)) then
	   giq_option( 4, SCRIPT_IAN, 146, Ian13, NEUTRAL_REACTION );

   party_member_default_options;
end

procedure ask_places begin
   if CUR_AREA_SHADY_SANDS then begin
      call Ian07;
   end
   else begin
      if CUR_AREA_JUNKTOWN then begin
         if is_killian_alive then
            gsay_message( SCRIPT_IAN, 2610, 49 );
         else if not(is_killian_alive) and is_gizmo_alive then
            gsay_message( SCRIPT_IAN, 2612, 49 );
         else
            gsay_message( SCRIPT_IAN, 2611, 49 );
      end
      else if CUR_AREA_HUB then
         gsay_message( SCRIPT_IAN, 2620, 49 );
      else if CUR_AREA_RAIDERS then begin
         if (get_raiders_alive < 16) then
            gsay_message( SCRIPT_IAN, 2631, 49 );
         else
            gsay_message( SCRIPT_IAN, 2630, 49 );
      end
      else if CUR_AREA_NECROPOLIS then
         gsay_message( SCRIPT_IAN, 2640, 49 );
      else
         gsay_message( SCRIPT_IAN, 2650, 49 );

      call Node1000;
   end
end

procedure Node1001 begin
   // heal yourself
   obj_heal(self_obj)
   global_temp := 0;
   if (party_healed_max) then begin
      Reply(300);
   end else if (party_healed_good) then begin
      Reply(301);
   end else if (party_healed_hurt) then begin
      Reply(302);
   end else begin
      Reply(303);
   end

   party_member_default_options;
end
procedure Node1002 begin
   set_global_var( GVAR_IAN_HIRELING_STATUS, 3 );

   // wait here
   set_party_waiting;
   Reply(147);
   party_member_default_options;
end
procedure Node1003 begin
   // put your weapon away
   inven_unwield(self_obj);
   Reply(201);
   party_member_default_options;
end
procedure Node1004 begin
   // follow close
   set_follow_close;
   Reply(201);
   party_member_default_options;
end
procedure Node1005 begin
   // follow medium
   set_follow_medium;
   Reply(201);
   party_member_default_options;
end
procedure Node1006 begin
   // follow far
   set_follow_far;
   Reply(201);
   party_member_default_options;
end
procedure Node1007 begin
   // distance
   Reply(201);
   party_member_def_follow_options;
end
procedure Node1008 begin
   // gear
   Reply(2001);
   party_member_def_gear_options;
end
procedure Node1009 begin
   // remove armor
   remove_armor(self_obj)
   Reply(201);
   party_member_default_options;
end
procedure Node1010 begin
   // weapons that can be used
   Reply(174);
   party_member_default_options;
end
procedure Node1100 begin
   // join me
   if (dude_charisma <= 1) then begin
      set_self_abandon_party;
      Reply(2500);
      NOption(g_mstr(10007),Node999,001);
   end else if (dude_at_max_party_size) and not(unlimited_party_members) then begin
      set_self_abandon_party;
      Reply(2500);
      NOption(g_mstr(10007),Node999,001);
   end else begin
      set_global_var( GVAR_IAN_HIRELING_STATUS, 2 );
      end_party_waiting;
      Reply(150);
      party_member_default_options;
   end
end
