/*

	? Farmer ?

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_GRNFARM
//#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure timed_event_p_proc;
procedure damage_p_proc;
procedure combat;

procedure Farmer00;
procedure Farmer01;

variable tmp_hostile;
variable Only_Once := 1;
variable Sleeping;
variable home_tile;
variable sleep_tile;
variable in_timed_event;

procedure start begin
	if Only_Once then begin
		Only_Once := 0;
		set_self_team(TEAM_HUB_FARMER );
		set_self_ai( AI_HUB_PEASANTS );
		home_tile := 22939;
		sleep_tile := 27725;
	end
end

procedure combat
begin
	tmp_hostile := 1;
end

procedure critter_p_proc
begin
	if (tmp_hostile and self_can_see_dude) then begin
		tmp_hostile := 0;
		attack(dude_obj);
	end
	if ((game_time_hour >= 600) and (game_time_hour < 1800)) then begin
		if (Sleeping == 1) then begin
			reg_anim_clear( self_obj );
			Sleeping := 0;
			if ((self_tile != home_tile) and ((game_time_hour - 600) > 10)) then begin
				move_to(self_obj, home_tile, self_elevation);
			end
		end
		else begin
			if ((tile_distance(home_tile, self_tile) > 8) and not(anim_busy(self_obj))) then begin
				self_walk_to_tile( home_tile );
			end
			else begin
				if (not(in_timed_event)) then begin
					in_timed_event := 1;
					add_timer_event(self_obj, game_ticks(random(20, 30)), 1);
				end
			end
		end
	end
	else begin
		if (Sleeping == 0) then begin
			reg_anim_clear( self_obj );
			Sleeping := 1;
			if ((self_tile != sleep_tile) and ((game_time_hour - 1800) > 10) or ((600 - game_time_hour) > 0)) then begin
				move_to(self_obj, sleep_tile, self_elevation);
			end
		end
		else begin
			if ((self_tile != sleep_tile) and not(anim_busy(self_obj))) then begin
				self_walk_to_tile( sleep_tile );
			end
		end
	end
end

procedure pickup_p_proc
begin
	if (source_obj == dude_obj) then begin
		tmp_hostile := 1;
	end
end

procedure talk_p_proc
begin
	dude_look_at_self;
	get_reaction
	if ((game_time_hour >= 600) and (game_time_hour < 1800)) then begin
		call Farmer00;
	end
	else begin
		call Farmer01;
	end
end

procedure destroy_p_proc
begin
	rm_timer_event(self_obj);

	inc_good_critter
	rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
	script_overrides;
	display_msg(message_str(SCRIPT_HGENFARM, 100));
end

procedure timed_event_p_proc
begin
	if (fixed_param == 1) then begin
		in_timed_event := 0;
		if ((game_time_hour >= 600) and (game_time_hour < 1800)) then begin
			self_walk_to_tile( tile_num_in_direction(home_tile, random(0, 5), random(1, 8)) );
		end
	end
end

procedure damage_p_proc
begin
	if (source_obj == dude_obj) then begin
		set_global_var( GVAR_ENEMY_HUB, 1 );
	end
end

procedure Farmer00
begin
	variable LVar0 := 0;
	if (global_var( GVAR_DOGMEAT_HIRELING_STATUS ) == 1) then begin
		LVar0 := random(101, 109);
		if (LVar0 == 108) then begin
			LVar0 := 109;
		end
		float_msg(self_obj, message_str(SCRIPT_HGENFARM, LVar0), 3);
	end
	else begin
		float_msg(self_obj, message_str(SCRIPT_HGENFARM, random(101, 108)), 3);
	end
end

procedure Farmer01
begin
	float_msg(self_obj, message_str(SCRIPT_HGENFARM, random(110, 114)), 3);
end
