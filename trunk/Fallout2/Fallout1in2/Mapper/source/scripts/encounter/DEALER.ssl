/*

	Special encounter - car dealer

*/

/* Include Files */
#include "..\headers\define.h"
//#include "..\headers\necropolis.h"

#define NAME                    SCRIPT_DEALER
//#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "..\headers\command.h"
#include "..\headers\modreact.h"

/* Standard Script Procedures */
procedure start;
procedure destroy_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;

procedure Dealer00;
procedure Dealer01;
procedure Dealer02;
procedure Dealer03;
procedure Dealer04;
procedure Dealer05;
procedure Dealer06;
procedure Dealer07;
procedure Dealer08;
procedure DealerEnd;

variable initial :=  0;
variable said_hi;

procedure start begin
	if (initial == 0) then begin
		variable LVar0;
		LVar0 := create_object( PID_BOTTLE_CAPS, 0, 0 );
		add_mult_objs_to_inven(self_obj, LVar0, random(50, 100));
		set_self_team( TEAM_24 );
		set_global_var( GVAR_WATER_THIEF_2, 0 );
		initial :=  1;
   end
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure talk_p_proc
begin
	dude_look_at_self;
	if (global_var( GVAR_WATER_THIEF_2 ) == 1) then begin
		float_msg(self_obj, message_str(SCRIPT_DEALER, random(127, 130)), 0);
	end
	else begin
		start_gdialog(657, self_obj, 4, -1, -1);
		gsay_start;
		call Dealer00;
		gsay_end;
		end_dialogue;
	end
end

procedure critter_p_proc
begin
	if (not(said_hi) and (tile_distance_objs(self_obj, dude_obj) <= 6)) then begin
		float_msg(self_obj, message_str(SCRIPT_DEALER, 131), 0);
		said_hi := 1;
	end
end

procedure Dealer00
begin
	set_global_var( GVAR_WATER_THIEF_2, 1 );
	gsay_reply( SCRIPT_DEALER, 100 );
	giq_option( 4, SCRIPT_DEALER, 101, Dealer02, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_DEALER, 102, DealerEnd, NEUTRAL_REACTION );
	giq_option( -3, SCRIPT_DEALER, 103, Dealer01, NEUTRAL_REACTION );
end

procedure Dealer01
begin
	gsay_message( SCRIPT_DEALER, 104, 50 );
end

procedure Dealer02
begin
	if (dude_is_male) then begin
		gsay_reply( SCRIPT_DEALER, 105 );
	end
	else begin
		gsay_reply( SCRIPT_DEALER, 106 );
	end
	giq_option( 4, SCRIPT_DEALER, 107, Dealer03, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_DEALER, 108, DealerEnd, NEUTRAL_REACTION );
end

procedure Dealer03
begin
	gsay_reply( SCRIPT_DEALER, 109 );
	giq_option( 4, SCRIPT_DEALER, 110, Dealer04, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_DEALER, 111, Dealer08, BAD_REACTION );
	giq_option( 4, SCRIPT_DEALER, 112, DealerEnd, NEUTRAL_REACTION );
end

procedure Dealer04
begin
	if (dude_is_male) then begin
		gsay_reply( SCRIPT_DEALER, 113 );
	end
	else begin
		gsay_reply( SCRIPT_DEALER, 114 );
	end
	giq_option( 4, SCRIPT_DEALER, 115, Dealer05, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_DEALER, 116, Dealer08, BAD_REACTION );
	giq_option( 4, SCRIPT_DEALER, 112, DealerEnd, NEUTRAL_REACTION );
end

procedure Dealer05
begin
	gsay_reply( SCRIPT_DEALER, 117 );
	giq_option( 4, SCRIPT_DEALER, 118, Dealer06, NEUTRAL_REACTION );
	giq_option( 4, SCRIPT_DEALER, 119, Dealer08, BAD_REACTION );
	giq_option( 4, SCRIPT_DEALER, 120, DealerEnd, NEUTRAL_REACTION );
end

procedure Dealer06
begin
	gsay_reply( SCRIPT_DEALER, 121 );
	giq_option( 4, SCRIPT_DEALER, 122, Dealer07, GOOD_REACTION );
	giq_option( 4, SCRIPT_DEALER, 123, Dealer08, BAD_REACTION );
	giq_option( 4, SCRIPT_DEALER, 124, DealerEnd, NEUTRAL_REACTION );
end

procedure Dealer07
begin
	gsay_message( SCRIPT_DEALER, 125, 49 );
end

procedure Dealer08
begin
	gsay_message( SCRIPT_DEALER, 126, 51 );
end

procedure DealerEnd
begin
end
