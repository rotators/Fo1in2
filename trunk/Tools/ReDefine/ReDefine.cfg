#
# ReDefine configuration
#

# [ReDefine]
#
# HeadersDir = <path>
# ScriptsDir = <path>
#
[ReDefine]
HeadersDir = ../../Fallout2/Fallout1Port/Mapper/source/scripts/HEADERS
ScriptsDir = ../../Fallout2/Fallout1Port/Mapper/source/scripts

# [Defines]
# Assigns names to defines types
#
# <type> = <path> <prefix> (group)
#
#   type     name for given value type
#   path     path to file containing interesting defines (relative to [ReDefine]->ScriptsDir)
#   prefix   required prefix for interesting defines
#   group    optional; allows to group multiple types under single name
#
[Defines]
AI = AIPACKET.H AI
ANIM = ANIMCOMD.H ANIM
AREA = MAPS.H AREA
CRITTER_PID = CRITRPID.H PID - ANY_PID
DMG = define.h DMG
FID = ARTFID.H FID
ITEM_PID = ITEMPID.H PID - ANY_PID
MAP = MAPS.H MAP
METARULE = define.h METARULE
OBJECT = define.h OBJECT
PCSTAT = define.h PCSTAT
PERK = define.h PERK
REACTION = define.h - REACTION
SCENERY_PID = SCENEPID.H PID - ANY_PID
SID = scripts.h SCRIPT
SKILL = define.h SKILL
STAT = define.h STAT
TEAM = TEAMS.H TEAM
# needs to be in two separate files, as they share same prefix
TRAIT_TYPE = fo1.h TRAIT
TRAIT = define.h TRAIT

# [Defines:TYPE]
# Creates program-specific defines
#
# <value> = <name>
#

# Do not complain or change SID 0/-1
[Defines:SID]
0 = 0
-1 = -1

# [VariableAssign]
# Replace all occurences of variable_name := NUMBER
#
# <name> = <type>
#
#   name   variable name
#   type   name for given value type
#
[VariableAssign]
Critter_script = SID
Critter_type = CRITTER_PID

# [VariableEquals]
# Replace all occurences of variable_name == NUMBER
#
# <name> = <type>
#
#   name   variable name
#   type   name for given value type
#
[VariableEquals]
Critter_script = SID
Critter_type = CRITTER_PID
cur_map_index = MAP

# [VariableNotEquals]
# Replace all occurences of variable_name != NUMBER
#
# <name> = <type>
#
#   name   variable name
#   type   name for given value type
#
[VariableNotEquals]
Critter_script = SID
Critter_type = CRITTER_PID
cur_map_index = MAP

# [VariableLower]
# Replace all occurences of variable_name < NUMBER
#
# <name> = <type>
#
#   name   variable name
#   type   name for given value type
#
[VariableLower]
cur_map_index = MAP

# [VariableGreater]
# Replace all occurences of variable_name > NUMBER
#
# <name> = <type>
#
#   name   variable name
#   type   name for given value type
#
[VariableGreater]
cur_map_index = MAP

# [VariableGuess]
#
# VariableGuess = <types list>
#
[VariableGuess]
VariableGuess = SCENERY_PID

# [Function]
# Replaces all occurences of function_name(..., NUMBER, ...)
#
# <name> = <types list>
#
#   name         function name
#   types list   aguments types; if given argument shouldn't be checked/changed, use ? or ??? virtual types
#
[Function]
art_change_fid_num = ? FID
create_object = ANY_PID ? ?
create_object_sid  = ANY_PID ? ? SID
critter_add_trait = ? TRAIT_TYPE ?dynamic? ?dynamic?
critter_skill_level = ? SKILL
critter_dmg = ? ? DMG
critter_mod_skill = ? SKILL ?
get_critter_stat = ? STAT
get_pc_stat = PCSTAT
giq_option = ? SID ? ? REACTION
has_skill = ? SKILL
has_trait = TRAIT_TYPE ? ?dynamic?
kill_critter = ? ANIM
kill_critter_type = CRITTER_PID ?
load_map = MAP ?
message_str = SID ?
metarule = METARULE ?
obj_carrying_pid_obj = ? ITEM_PID
obj_is_carrying_obj_pid = ? ITEM_PID
roll_vs_skill = ? SKILL ?
set_critter_stat = ? STAT ?
using_skill = ? SKILL

# [FunctionEquals]
# Replaces all occurences of function_name(...) == NUMBER
#
# <name> = <type>
#
#   name         function name
#   type   name for given value type
#
[FunctionEquals]
obj_pid = ANY_PID

# [FunctionNotEquals]
# Replaces all occurences of function_name(...) != NUMBER
#
# <name> = <type>
#
#   name         function name
#   type   name for given value type
#
[FunctionNotEquals]
obj_pid = ANY_PID

# [Raw]
# Replaces all occurences of raw text
#
# <from> = <to>
#
#   from   text to search
#   to     replacement
#
[Raw]
SKILL_CONVERSANT = SKILL_SPEECH
STAT_max_hit_points = STAT_max_hp

[Script:CritterAddTrait] 
# handle critter_add_trait() mess; order is important here
Perk = RunBefore IfFunction:critter_add_trait IfArgumentIs:1,TRAIT_PERK DoArgumentSetType:2,PERK
Object = RunBefore IfFunction:critter_add_trait IfArgumentIs:1,TRAIT_OBJECT DoArgumentSetType:2,OBJECT
Trait = RunBefore IfFunction:critter_add_trait IfArgumentIs:1,TRAIT_TRAIT DoArgumentSetType:2,TRAIT
AI = RunBefore IfFunction:critter_add_trait IfArgumentIs:1,TRAIT_OBJECT IfArgumentIs:2,OBJECT_AI_PACKET DoArgumentSetType:3,AI
Team = RunBefore IfFunction:critter_add_trait IfArgumentIs:1,TRAIT_OBJECT IfArgumentIs:2,OBJECT_TEAM_NUM DoArgumentSetType:3,TEAM

[Script:HasTrait]
# handle has_trait() mess
Perk = RunBefore IfFunction:has_trait IfArgumentIs:0,TRAIT_PERK DoArgumentSetType:2,PERK
Object = RunBefore IfFunction:has_trait IfArgumentIs:0,TRAIT_OBJECT DoArgumentSetType:2,OBJECT
Trait = RunBefore IfFunction:has_trait IfArgumentIs:0,TRAIT_TRAIT DoArgumentSetType:2,TRAIT

[Script:Metarule]
SignalEndGame = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_SIGNAL_END_GAME DoVariable:signal_end_game #13
MapFirstRun = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_TEST_FIRSTRUN DoVariable:map_first_run #14
Elevator = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_ELEVATOR DoNameSet:elevator DoArgumentsErase:0 #15
PartyMemberCount = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_PARTY_COUNT DoNameSet:party_member_count DoArgumentsErase:0 #16
TownKnown = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_AREA_KNOWN DoNameSet:town_known DoArgumentsErase:0 #17
DrugInfluence = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_WHO_ON_DRUGS DoNameSet:drug_influence DoArgumentsErase:0 #18
MapIsKnown = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_MAP_KNOWN DoNameSet:map_is_known DoArgumentsErase:0 #19
IsLoadingGame = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_IS_LOADGAME DoVariable:is_loading_game #22
CarCurrentTown = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_CAR_CURRENT_TOWN DoVariable:car_current_town #30
CarGiveToParty = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_GIVE_CAR_TO_PARTY DoVariable:car_give_to_party #31
CarGiveGas = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_GIVE_CAR_GAS DoNameSet:car_give_gas DoArgumentsErase:0 #32
IsSkillTagged = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_SKILL_CHECK_TAG DoNameSet:is_skill_tagged DoArgumentsErase:0 #40
ObjDropEverything = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_DROP_ALL_INVEN DoNameSet:obj_drop_everything DoArgumentsErase:0 #42
InvenUnwield = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_INVEN_UNWIELD_WHO DoNameSet:inven_unwield DoArgumentsErase:0 #43
WorldmapXpos = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_GET_WORLDMAP_XPOS DoVariable:worldmap_xpos #44
WorldmapYpos = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_GET_WORLDMAP_YPOS DoVariable:worldmap_ypos #45
CurTown = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_CURRENT_TOWN DoVariable:cur_town #46
LanguageFilterIsOn = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_LANGUAGE_FILTER DoVariable:language_filter_is_on #47
ViolenceFilterSetting = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_VIOLENCE_FILTER DoVariable:violence_filter_setting #48
WeaponDmgType = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_W_DAMAGE_TYPE DoNameSet:weapon_dmg_type DoArgumentsErase:0 #49
CritterCanBarter = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_CRITTER_BARTERS DoNameSet:critter_can_barter DoArgumentsErase:0 #50
CritterKillType = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_CRITTER_KILL_TYPE DoNameSet:critter_kill_type DoArgumentsErase:0 #51
SetCarCarryAmount = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_SET_CAR_CARRY_AMOUNT DoNameSet:set_car_carry_amount DoArgumentsErase:0
CarCarryAmount = RunAfter IfFunction:metarule IfArgumentIs:0,METARULE_GET_CAR_CARRY_AMOUNT DoVariable:car_carry_amount DoArgumentsErase:0
#
Detect = RunAfter IfFunction:metarule IfNotEdited DoLogCurrentLine
Detect2 = RunAfter IfFunction:metarule2 IfNotEdited DoLogCurrentLine
Detect3 = RunAfter IfFunction:metarule3 IfNotEdited DoLogCurrentLine

[Script:SfallFunc]
Detect0 = RunAfter IfFunction:sfall_func0 IfNotEdited DoLogCurrentLine
Detect1 = RunAfter IfFunction:sfall_func1 IfNotEdited DoLogCurrentLine
Detect2 = RunAfter IfFunction:sfall_func2 IfNotEdited DoLogCurrentLine
Detect3 = RunAfter IfFunction:sfall_func3 IfNotEdited DoLogCurrentLine
Detect4 = RunAfter IfFunction:sfall_func4 IfNotEdited DoLogCurrentLine
Detect5 = RunAfter IfFunction:sfall_func5 IfNotEdited DoLogCurrentLine
Detect6 = RunAfter IfFunction:sfall_func6 IfNotEdited DoLogCurrentLine

[Script:Minimize]
# create_object_sid( ..., -1 ) -> create_object( ... )
CreateObject = RunAfter IfFunction:create_object_sid IfArgumentValue:3,-1 DoNameSet:create_object DoArgumentsResize:3

# BROKEN
#[Script:Minimize:XOption]
#G  = RunAfter IfFunction:giq_option IfArgumentIs:4,GOOD_REACTION IfFileDefined:NAME DoNameSet:GOption DoArgumentsResize:4 DoArgumentsMoveBack:0 DoArgumentsErase:0
#N  = RunAfter IfFunction:giq_option IfArgumentIs:4,NEUTRAL_REACTION IfFileDefined:NAME DoNameSet:NOption DoArgumentsResize:4 DoArgumentsMoveBack:0 DoArgumentsErase:0
#B  = RunAfter IfFunction:giq_option IfArgumentIs:4,BAD_REACTION IfFileDefined:NAME DoNameSet:BOption DoArgumentsResize:4 DoArgumentsMoveBack:0 DoArgumentsErase:0
# XOption() -> XLOption() not included
#Detect = RunAfter IfFunction:giq_Option IfNotEdited DoLogCurrentLine:DEBUG
#Detect = RunAfter IfFunction:giQ_option IfNotEdited DoLogCurrentLine:DEBUG
#Detect = RunAfter IfFunction:giQ_Option IfNotEdited DoLogCurrentLine:DEBUG

[Script:Minimize:DudeGender]
# dude_is_male/dude_is_female
DudeIsMale = RunAfter IfFunction:get_critter_stat IfArgumentValue:0,dude_obj IfArgumentIs:1,STAT_gender IfOperatorName:Equals IfOperatorValue:0 DoVariable:dude_is_male DoOperatorClear
DudeIsFemale:EQ = RunAfter IfFunction:get_critter_stat IfArgumentValue:0,dude_obj IfArgumentIs:1,STAT_gender IfOperatorName:Equals IfOperatorValue:1 DoVariable:dude_is_female DoOperatorClear
DudeIsFemale:GT = RunAfter IfFunction:get_critter_stat IfArgumentValue:0,dude_obj IfArgumentIs:1,STAT_gender IfOperatorName:Greater IfOperatorValue:0 DoVariable:dude_is_female DoOperatorClear
DudeIsFemale:NE = RunAfter IfFunction:get_critter_stat IfArgumentValue:0,dude_obj IfArgumentIs:1,STAT_gender IfOperatorName:NotEquals IfOperatorValue:0 DoVariable:dude_is_female DoOperatorClear
#
Detect = RunAfter IfFunction:get_critter_stat IfArgumentValue:0,dude_obj IfArgumentIs:1,STAT_gender IfOperator IfNotEdited DoLogCurrentLine

[Script:Minimize:SelfGender]
# self_is_male/self_is_female
SelfIsMale = RunAfter IfFunction:get_critter_stat IfArgumentValue:0,self_obj IfArgumentIs:1,STAT_gender IfOperatorName:Equals IfOperatorValue:0 DoVariable:self_is_male DoOperatorClear
SelfIsFemale = RunAfter IfFunction:get_critter_stat IfArgumentValue:0,self_obj IfArgumentIs:1,STAT_gender IfOperatorName:Equals IfOperatorValue:1 DoVariable:self_is_female DoOperatorClear
#
Detect = RunAfter IfFunction:get_critter_stat IfArgumentValue:0,self_obj IfArgumentIs:1,STAT_gender IfOperator IfNotEdited DoLogCurrentLine
