#
# NOTE
# Configuration is processed in same order as it's written, which means
# [ReDefine] and [Defines] must be the first two sections in file, exactly in that order.
#

# [ReDefine]
# ScriptsDir = <path>
[ReDefine]
ScriptsDir = ../../Fallout2/Fallout1Port/Mapper/source/scripts

# [Defines]
# Assigns names to defines types
#
# <type> = <path> <prefix> (group)
#
#   type            name for given value type
#   path            path to file containing interesting defines (relative to [ReDefine]->ScriptsDir)
#   prefix          required prefix for interesting defines
#   virtual group   optional; allows to group multiple types under single name
#
# NOTE
# Type SID is (currently) hardcoded; values < 1 will not be replaced
[Defines]
ANIM = HEADERS/ANIMCOMD.H ANIM
AREA = HEADERS/MAPS.H AREA
CRITTER_PID = HEADERS/CRITRPID.H PID ANY_PID
FID = HEADERS/ARTFID.H FID
ITEM_PID = HEADERS/ITEMPID.H PID ANY_PID
MAP = HEADERS/MAPS.H MAP
PCSTAT = HEADERS/define.h PCSTAT
SCENERY_PID = HEADERS/SCENEPID.H PID ANY_PID
SID = HEADERS/scripts.h SCRIPT
SKILL = HEADERS/define.h SKILL
STAT = HEADERS/define.h STAT

# [VariableAssign]
# Replace all occurences of variable_name := NUMBER
#
# <name> = <type>
#
#   name   variable name
#   type   name for given value type
[VariableAssign]
Critter_script = SID
Critter_type = CRITTER_PID

# [VariableEquals]
# Replace all occurences of variable_name == NUMBER
#
# <name> = <type>
#
#   name   variable name
#   type   name for given value type
[VariableEquals]
Critter_script = SID
Critter_type = CRITTER_PID
cur_map_index = MAP

# [VariableNotEquals]
# Replace all occurences of variable_name != NUMBER
#
# <name> = <type>
#
#   name   variable name
#   type   name for given value type
[VariableNotEquals]
Critter_script = SID
Critter_type = CRITTER_PID
cur_map_index = MAP

# [VariableLower]
# Replace all occurences of variable_name < NUMBER
#
# <name> = <type>
#
#   name   variable name
#   type   name for given value type
[VariableLower]
cur_map_index = MAP

# [VariableGreater]
# Replace all occurences of variable_name > NUMBER
#
# <name> = <type>
#
#   name   variable name
#   type   name for given value type
[VariableGreater]
cur_map_index = MAP

# [VariableGuess]
# VariableGuess = <types list>
[VariableGuess]
VariableGuess = SCENERY_PID

# [Function]
# Replaces all occurences of function_name(..., NUMBER, ...)
#
# <name> = <types list>
#
#   name         function name
#   types list   aguments types; if given argument shouldn't be checked/changed, use ? virtual type
[Function]
art_change_fid_num = ? FID
create_object = ANY_PID ? ?
create_object_sid  = ANY_PID ? ? SID
critter_skill_level = ? SKILL
critter_mod_skill = ? SKILL ?
get_critter_stat = ? STAT
get_pc_stat = PCSTAT
has_skill = ? SKILL
kill_critter = ? ANIM
kill_critter_type = CRITTER_PID ?
load_map = MAP ?
message_str = SID ?
obj_carrying_pid_obj = ? ITEM_PID
obj_is_carrying_obj_pid = ? ITEM_PID
roll_vs_skill = ? SKILL ?
using_skill = ? SKILL

# [FunctionEquals]
# Replaces all occurences of function_name(...) == NUMBER
#
# <name> = <type>
#
#   name         function name
#   type   name for given value type
[FunctionEquals]
obj_pid = ANY_PID

# [FunctionNotEquals]
# Replaces all occurences of function_name(...) != NUMBER
#
# <name> = <type>
#
#   name         function name
#   type   name for given value type
[FunctionNotEquals]
obj_pid = ANY_PID

# [Raw]
# Replaces all occurences of raw text
#
# <from> = <to>
#
#   from   text to search
#   to     replacement
[Raw]
SKILL_CONVERSANT = SKILL_SPEECH
STAT_max_hit_points = STAT_max_hp
