/*******************************************************************************
        Name:
        Location:
        Description: Maps template script

            Created: by sFall Script Editor
            Updated:

*******************************************************************************/

/* Include Files */
#include "..\headers\define.h"
#include "..\headers\command.h"

#include "..\headers\updatmap.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;


/* Defines */
#define NAME                  SCRIPT_MAP_


/*****************************************************************
   Local Variables which are saved.
   All Local Variables need to be prepended by LVAR_
*****************************************************************/


/*******************************************************************
   Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_)
*******************************************************************/


/*******************************************************************
   Local variables which do not need to be saved between map changes.
*******************************************************************/


/*******************************************************************
*                           PROCEDURES                             *
*******************************************************************/
procedure start begin

end

procedure map_enter_p_proc begin

   Lighting;
   display_msg({string message});
   if not(is_loading_game) then begin
       if map_first_run then display_mstr({int msg_num});
       else display_mstr({int msg_num});
   end

   Check_Create_Car({int HexNum}, {int MapElevation})

end

procedure map_update_p_proc begin

   Lighting;

end

procedure map_exit_p_proc begin

end
