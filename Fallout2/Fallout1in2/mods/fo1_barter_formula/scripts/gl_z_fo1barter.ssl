/*

   Imitates Fo1's barter price formula.

*/

/* Include Files */
#include "define.h"
#include "sfall/sfall.h"
#include "command.h"

procedure start;
procedure get_highest_barter_in_party;
procedure barterprice_handler;

procedure start begin
   if game_loaded then begin
      register_hook_proc(HOOK_BARTERPRICE, barterprice_handler);
   end
end

procedure get_highest_barter_in_party begin
   variable who, max;
   foreach (who in party_member_list_critters) begin
      if (has_skill(who, SKILL_BARTER) > max) then begin
         max := has_skill(who, SKILL_BARTER);
      end
   end
   return max;
end

procedure barterprice_handler begin
   variable
      dude := get_sfall_arg,
      trader := get_sfall_arg,
      defPrice := get_sfall_arg,  // unused
      npcTable := get_sfall_arg,  // unused
      itemCaps := get_sfall_arg,
      basePrice := get_sfall_arg,
      dudeTable := get_sfall_arg, // unused
      soldPrice := get_sfall_arg, // unused
      offerBtn := get_sfall_arg,  // unused
      partyMem := get_sfall_arg,
      dude_barter,
      master_trader := 100,
      trader_barter,
      barter_diff,
      base_price_goods,
      final_price;

   if not(partyMem) then begin
      dude_barter := get_highest_barter_in_party;
      trader_barter := has_skill(trader, SKILL_BARTER);
      if (dude_perk(PERK_master_trader)) then master_trader := 125;
      barter_diff := gdialog_get_barter_mod + dude_barter - trader_barter + master_trader;

      //debug("barter_diff: " + barter_diff);

      if (barter_diff < 10) then barter_diff := 10;
      else if (barter_diff > 300) then barter_diff := 300;

      base_price_goods := basePrice - itemCaps;
      final_price := itemCaps + (base_price_goods * 100) / barter_diff;

      set_sfall_arg(2, final_price);
      set_sfall_return(final_price);
   end
end
