#include "define.h"
#include "command.h"
#include "modreact.h"

procedure start;    variable SrcObj := 0;    variable SrcIsParty := 0;
procedure talk_p_proc;
procedure go_inside;
procedure weapon_check;
procedure destroy_p_proc;

procedure PeasantD00;
procedure PeasantD01;
procedure PeasantD02;
procedure PeasantD03;
procedure PeasantD04;

export variable smartass;
export variable smartass2;
import variable dog_is_angry;
import variable growling;

variable Holding_Weapon;
variable initial := 0

procedure start
begin


   if (not(initial)) then begin
      smartass := 0;
      smartass2 := 0;
      initial := 1;
   end
   else begin
      if (script_action == talk_proc) then begin//<--- talk_p_proc (Face icon), can also call "do_dialogue" or "do_dialog"
         call talk_p_proc;
      end
      else begin
         if (script_action == destroy_proc) then begin//destroy_p_proc - Object or Critter has been killed or otherwise eradicated. Fall down go boom.
            call destroy_p_proc;
         end
         else begin
            if ((script_action == look_at_proc) or (script_action == description_proc)) then begin// 21 is look_at, 3 is description (Binoculars)   //NEED TO FIX THIS, DUPLICATE DESCRIPTIONS IS BULLSHIT. --Sduibek
               script_overrides;
               display_msg(message_str(SCRIPT_PEASANTD, 100));
            end
            else begin
               if (script_action == critter_proc) then begin//<-- critter_p_proc - (can also be "Critter_Action") - do they see you, should they wander, should they attack you, etc..
                  if (smartass2) then begin
                     call PeasantD00;
                  end
                  if (not(dog_is_angry)) then begin
                     call go_inside;
                  end
               end
            end
         end
      end
   end
end



procedure talk_p_proc
begin
   dude_look_at_self;
   call weapon_check;
   if (global_var(GVAR_DOGMEAT_HIRELING_STATUS)) then begin
      call PeasantD02;
   end
   else begin
      if (not(dog_is_angry)) then begin
         call PeasantD04;
      end
      else begin
         if (Holding_Weapon) then begin
            call PeasantD01;
         end
         else begin
            call PeasantD03;
         end
      end
   end
end

procedure go_inside
begin
   self_walk_to_tile(15484);
end

procedure weapon_check
begin

   if (dude_is_armed) then begin
      Holding_Weapon := 1;
   end
   else begin
      Holding_Weapon := 0;
   end
end

procedure PeasantD00
begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   LVar0 := random(1, 3);
   if (LVar0 == 1) then begin
      LVar1 := message_str(SCRIPT_PEASANTD, 101);
   end
   else begin
      if (LVar0 == 2) then begin
         LVar1 := message_str(SCRIPT_PEASANTD, 102);
      end
      else begin
         LVar1 := message_str(SCRIPT_PEASANTD, 103);
      end
   end
   float_msg(self_obj, LVar1, FLOAT_MSG_NORMAL);
   smartass2 := 0;
end

procedure PeasantD01
begin
   float_msg(self_obj, message_str(SCRIPT_PEASANTD, 104), FLOAT_MSG_NORMAL);
end

procedure PeasantD02
begin
   float_msg(self_obj, message_str(SCRIPT_PEASANTD, 105), FLOAT_MSG_NORMAL);
end

procedure PeasantD03
begin
   float_msg(self_obj, message_str(SCRIPT_PEASANTD, 106), FLOAT_MSG_NORMAL);
   smartass := 1;
end

procedure PeasantD04
begin
   float_msg(self_obj, message_str(SCRIPT_PEASANTD, 107), FLOAT_MSG_NORMAL);
end

procedure destroy_p_proc begin
   inc_good_critter
end
