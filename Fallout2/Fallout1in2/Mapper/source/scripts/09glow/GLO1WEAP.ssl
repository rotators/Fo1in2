#include "define.h"

#define NAME                    SCRIPT_GLO1WEAP

#include "command.h"

procedure start;
procedure timed_event_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;

procedure roll_critical;
procedure roll_pry_destroy_crowbar;

#define mstr_door(x)             message_str(SCRIPT_DOOR, x)

#define float_dude(x)             float_msg(dude_obj, mstr(x), FLOAT_COLOR_NORMAL)

#define EVENT_OPEN_DOOR    (1)

#define LVAR_Door_Open     (0)

#define Crowbar_Strain     (2)
#define Crowbar_Bonus      (-2)

variable stats_combined := 0;
variable crowbar := 0;

procedure start begin
   if (local_var(LVAR_Door_Open) == 0) then
      obj_lock(self_obj);
   else
      obj_unlock(self_obj);
end

procedure timed_event_p_proc begin
   if (fixed_param == EVENT_OPEN_DOOR) then begin
      set_local_var(LVAR_Door_Open, 1);
      reg_anim_clear(self_obj);
      obj_unlock(self_obj);
      obj_open(self_obj);

      float_dude(104);

      if (crowbar > 0) then
         display_msg(mstr(102));
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure use_p_proc begin
   stats_combined := dude_strength + dude_agility + dude_luck;

   if ((dude_strength < (8 - crowbar)) and (stats_combined < (18 - crowbar))) and (local_var(LVAR_Door_Open) == 0) then begin
      script_overrides;
      if (crowbar > 0) then
         display_msg(mstr(101) + " " + mstr(103));
      else
         display_msg(mstr(101));
   end
   else if (local_var(LVAR_Door_Open) == 0) then begin
      add_timer_event(self_obj, 2, EVENT_OPEN_DOOR);
   end
end

procedure use_obj_on_p_proc begin
variable object;
variable pry_success;
variable pry_strain;
variable pry_destroy_crowbar;
   object := obj_pid(obj_being_used_with);

   if (object == PID_CROWBAR) then begin
      // crowbar destroy runs always, discouraging high STR characters from spamming it
      pry_destroy_crowbar = roll_pry_destroy_crowbar();
      if pry_destroy_crowbar then begin
         variable crowbar = get_item(source_obj, PID_CROWBAR);
         rm_obj_from_inven(source_obj, crowbar);
         destroy_object(crowbar);
         if (source_obj == dude_obj) then display_msg(mstr_door(620));
         else display_msg(obj_name(source_obj) + mstr_door(621));
         return;
      end

      // failure: damage
      pry_strain = roll_critical();
      if pry_strain then begin
         critter_dmg(source_obj, Crowbar_Strain, (DMG_normal_dam BWOR DMG_BYPASS_ARMOR));
         if (source_obj == dude_obj) then begin
            if (Crowbar_Strain == 1) then begin
               display_msg(mstr_door(177));
            end
            else begin
               display_msg(mstr_door(178) + Crowbar_Strain + mstr_door(179));
            end
         end
         else begin
            if source_is_dude then begin
               if (Crowbar_Strain == 1) then begin
                  display_msg(obj_name(source_obj) + mstr_door(182));
               end
               else begin
                  display_msg(obj_name(source_obj) + mstr_door(183) + Crowbar_Strain + mstr_door(184));
               end
            end
            else begin
               if (Crowbar_Strain == 1) then begin
                  display_msg(obj_name(source_obj) + mstr_door(186));
               end
               else begin
                  display_msg(obj_name(source_obj) + mstr_door(187) + Crowbar_Strain + mstr_door(188));
               end
            end
         end
      end
      else begin
         crowbar := 2;
         call use_p_proc;
      end
   end
end

procedure damage_p_proc begin
   script_overrides;

   if (weapon_dmg_type(target_obj) == DMG_explosion) then
      display_msg(message_str(SCRIPT_DOOR, 193));
end

/***************************************************************************
   This procedure is used should the player try to pry the door open using a
   crowbar or some similar instrument.
***************************************************************************/
// Unbiased critical, used for prying with Crowbar.
procedure roll_critical begin
   variable rnd = random(1, 20);
   if rnd == 20 then return true;
   return false;
end

// Sturdier doors and high strength provide more chance to mangle the crowbar
// Any STR char + wood door = 1% chance to destroy
// 5 STR char + metal door = 10% chance to destroy
// 10 STR char + metal door = 20% chance to destroy
procedure roll_pry_destroy_crowbar begin
   variable rnd = random(1, 100);
   variable str = get_strength(source_obj);
   // Base Crowbar_Bonus = 0 (wood door). For metal doors, default is -2
   variable penalty = str * Crowbar_Bonus;
   if rnd + penalty <= 1 then return true;
   return false;
end
