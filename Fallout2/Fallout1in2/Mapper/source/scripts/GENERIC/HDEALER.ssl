/*

   ? - Gambling dude

*/

/* Include Files */
#include "define.h"
#include "area/junktown.h"

#define NAME                    SCRIPT_FALCON1
//#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat;
procedure critter_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;

procedure Dealer00;
procedure Dealer01;
procedure Dealer02;
procedure Dealer03;
procedure Dealer04;
procedure Dealer05;
procedure Dealer06;
procedure Dealer07;
procedure CheckMoney00;
procedure CheckMoney01;
procedure CheckMoney02;
procedure CheckMoney03;
procedure DealerEnd;
procedure GetOdds;

variable tmp_hostile;
variable Bet;
variable Only_Once := 1;

procedure start begin
   if Only_Once then begin
      if CUR_MAP_JUNKCSNO then begin
         set_self_team(TEAM_JUNKTOWNER);
      end
         set_self_ai(AI_MERCHANT);
      Only_Once := 0;
   end
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if CUR_MAP_JUNKCSNO then begin
      if (quest_capture_gizmo_completed or not(is_gizmo_alive)) then begin
         destroy_object(self_obj);
      end
   end
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      call flee_dude;
   end
   if CUR_MAP_JUNKCSNO and REP_ENEMY_JUNKTOWN_CITIZENS then begin
      if (self_can_see_dude) then begin
         call flee_dude;
      end
   end
end

procedure map_enter_p_proc begin
   if CUR_MAP_JUNKCSNO then begin
      if (quest_capture_gizmo_completed or not(is_gizmo_alive)) then begin
         destroy_object(self_obj);
      end
   end
end

procedure pickup_p_proc begin
   if source_is_dude then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   dude_look_at_self;
   if (not(CUR_MAP_JUNKCSNO and REP_ENEMY_JUNKTOWN_CITIZENS)) then begin
      get_reaction
      start_dialog_at_node(Dealer00);
   end
end

procedure destroy_p_proc begin
   if source_is_dude then begin
      if (CUR_MAP_JUNKENT or CUR_MAP_JUNKCSNO or CUR_MAP_JUNKKILL) then begin
         set_global_var(GVAR_DUDE_ENEMY_JUNK_CITIZEN, 1);
         set_global_var(GVAR_ENEMY_JUNKTOWN, 1);
      end
      inc_good_critter
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(168));
end

procedure Dealer00 begin
   variable LVar0 := 0;
   LVar0 := mstr(173) + mstr(202) + dude_caps + mstr(203);
   Reply(LVar0);
   NOption(174, CheckMoney00, 4);
   NOption(175, CheckMoney01, 4);
   NOption(176, CheckMoney02, 4);
   NOption(177, CheckMoney03, 4);
   NOption(178, DealerEnd, 4);
   NLowOption(179, Dealer01);
end

procedure Dealer01 begin
   Reply(mstr(180) + mstr(181));
end

procedure Dealer02 begin
   Reply(mstr(182) + mstr(204));
   dude_caps_adjust(Bet * -1);
   call Dealer07;
end

procedure Dealer03 begin
   Reply(mstr(183) + mstr(204));
   call Dealer07;
end

procedure Dealer04 begin
   Reply(mstr(184) + mstr(204));
   dude_caps_adjust(Bet);
   call Dealer07;
end

procedure Dealer05 begin
   Reply(mstr(185) + mstr(204));
   dude_caps_adjust(Bet * 2);
   call Dealer07;
end

procedure Dealer06 begin
   if (dude_is_male) then begin
      NMessage(186);
   end
   else begin
      NMessage(187);
   end
   call Dealer00;
end

procedure Dealer07 begin
   NOption(114, Dealer00, 4);
   NOption(178, DealerEnd, 4);
end

procedure CheckMoney00 begin
   Bet := 5;
   if (dude_caps < Bet) then begin
      call Dealer06;
   end
   else begin
      call GetOdds;
   end
end

procedure CheckMoney01 begin
   Bet := 15;
   if (dude_caps < Bet) then begin
      call Dealer06;
   end
   else begin
      call GetOdds;
   end
end

procedure CheckMoney02 begin
   Bet := 25;
   if (dude_caps < Bet) then begin
      call Dealer06;
   end
   else begin
      call GetOdds;
   end
end

procedure CheckMoney03 begin
   Bet := 50;
   if (dude_caps < Bet) then begin
      call Dealer06;
   end
   else begin
      call GetOdds;
   end
end

procedure DealerEnd begin
end

procedure GetOdds begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   LVar0 := random(1, 36) - 10;
   LVar1 := roll_vs_skill(dude_obj, SKILL_GAMBLING, -15);
   if (is_critical(LVar1)) then begin
      if (is_success(LVar1)) then begin
         LVar0 := LVar0 + 10;
      end
      else begin
         LVar0 := LVar0 - 5;
      end
   end
   else begin
      if (is_success(LVar1)) then begin
         LVar0 := LVar0 + 5;
      end
   end
   if (do_check(dude_obj, STAT_lu, 0)) then begin
      LVar0 := LVar0 + 5;
   end
   if (LVar0 < 10) then begin
      call Dealer02;
   end
   else begin
      if (LVar0 < 20) then begin
         call Dealer03;
      end
      else begin
         if (LVar0 < 30) then begin
            call Dealer04;
         end
         else begin
            call Dealer05;
         end
      end
   end
end
