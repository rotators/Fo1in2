#include "define.h"

#define NAME                    SCRIPT_BRAHMIN

#include "command.h"

procedure start;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure push_p_proc;

variable critter_tile;
variable initial := 0;
variable temp_hostile := 0;

#define EVENT_WALK            (1)
#define EVENT_FLOAT           (2)
#define EVENT_POOP            (3)

#define EVENT_STAND_UP 4

#define float(x)                           float_msg(self_obj, mstr(x), FLOAT_COLOR_NORMAL)

procedure start begin
   if not(initial) then begin
      initial := 1;
      set_self_ai(AI_COW);
      set_self_team(TEAM_4);
   end
end

procedure map_enter_p_proc begin
   if (shady_invaded and CUR_AREA_SHADY_SANDS) or (hub_invaded and CUR_AREA_HUB) then begin
      invasion_kill_critter;
   end

   flush_add_timer_event_sec(self_obj, random(15, 90), EVENT_WALK);
   flush_add_timer_event_sec(self_obj, random(5, 15), EVENT_FLOAT);
   flush_add_timer_event_sec(self_obj, random(0, 300), EVENT_POOP);
end

procedure push_p_proc begin
   if (obj_in_party(source_obj)) then begin
      if (stat_success(source_obj, STAT_st, 0)) then begin
         if ((critter_state(self_obj) bwand DAM_KNOCKED_DOWN) == FALSE) then begin
            reg_anim_clear(self_obj);
            reg_anim_begin();
               reg_anim_animate(self_obj, ANIM_hit_from_front, -1);
               reg_anim_animate(self_obj, ANIM_fall_back, 5);
               reg_anim_animate(self_obj, ANIM_fall_back_sf, -1);
            reg_anim_end();
            critter_injure(self_obj, DAM_KNOCKED_DOWN);
            add_timer_event(self_obj, game_ticks(Random(10, 30)), EVENT_STAND_UP);
            debug_msg("ZCBRAHMN : ahh Cow TIPPED you get + 10 Hick Experience Points.");
         end
      end
   end
end

procedure critter_p_proc begin
   if (temp_hostile) then begin
      temp_hostile := 0;
      attack(dude_obj);
   end
end

procedure description_p_proc begin
   display_msg(message_str(SCRIPT_BRAHMIN, 100));
end

procedure timed_event_p_proc begin
variable temp_poo;

   if (fixed_param == EVENT_WALK) then begin
      if ((critter_state(self_obj) bwand DAM_KNOCKED_DOWN) == FALSE) then begin
         self_walk_to_tile(tile_num_in_direction(self_tile, random(0, 5), 3));
      end
      flush_add_timer_event_sec(self_obj, random(45, 90), EVENT_WALK);
   end
   else if (fixed_param == EVENT_FLOAT) then begin
      float(random(201, 205));
      flush_add_timer_event_sec(self_obj, random(30, 45), EVENT_FLOAT);
   end
   else if (fixed_param == EVENT_POOP) then begin
      if (random(1, 3) == 1) then begin
         float(206);
         debug("BRAHMIN IS POOING !!! hehehehe");
         temp_poo := create_object_sid(random(PID_SMALL_GOO_1, PID_SMALL_GOO_3), 0, 0, SCRIPT_ZIBRAPOO);
         move_to(temp_poo, tile_num_in_direction(self_tile, self_inv_rot, 1), 0);
      end
      flush_add_timer_event_sec(self_obj, random(120, 300), EVENT_POOP);
   end
   else if (fixed_param == EVENT_STAND_UP) then begin
      reg_anim_clear(self_obj);
      reg_anim_begin();
      reg_anim_animate_reverse(self_obj, ANIM_fall_back, -1);
      reg_anim_end();
      critter_uninjure(self_obj, DAM_KNOCKED_DOWN);
   end
end

procedure use_obj_on_p_proc begin
   variable Item := 0;
   if ((obj_pid(obj_being_used_with) == PID_BEER) or (obj_pid(obj_being_used_with) == PID_BOOZE)) then begin
      script_overrides;
      Item := obj_being_used_with;
      rm_obj_from_inven(source_obj, obj_being_used_with);
      destroy_object(Item);
      play_sfx("MABROMAQ");

      reg_anim_clear(self_obj);
      reg_anim_begin();
      reg_anim_animate(self_obj, ANIM_hit_from_front, -1);
      reg_anim_animate(self_obj, ANIM_fall_back, 5);
      reg_anim_animate(self_obj, ANIM_fall_back_sf, -1);
      reg_anim_end();

      critter_injure(self_obj, DAM_KNOCKED_DOWN);
      critter_injure(dude_obj, DAM_CRIP_LEG_LEFT);
      critter_injure(dude_obj, DAM_CRIP_LEG_RIGHT);
   end
end

procedure use_skill_on_p_proc begin
   if (action_being_used == SKILL_SCIENCE) then begin
      script_overrides;
      display_msg(message_str(SCRIPT_BRAHMIN, 101));
   end
   else if (action_being_used == SKILL_STEAL) then begin
      script_overrides;
      display_msg(gen_mstr(211));
      script_overrides;
   end
end

procedure damage_p_proc begin
   if obj_in_party(source_obj) then begin
      if CUR_AREA_HUB or CUR_MAP_HUBMIS0 then
         set_global_var(GVAR_ENEMY_HUB, 1);
      else if CUR_AREA_JUNKTOWN then
         set_global_var(GVAR_ENEMY_JUNKTOWN, 1);
      else if CUR_AREA_SHADY_SANDS then
         set_global_var(GVAR_ENEMY_SHADY_SANDS, 1);

      party_remove(self_obj);
      set_self_team(TEAM_4);
      temp_hostile := 1;
   end
end

procedure destroy_p_proc begin
   if (source_obj == dude_obj) then begin
      if CUR_AREA_HUB or CUR_MAP_HUBMIS0 then
         set_global_var(GVAR_ENEMY_HUB, 1);
      else if CUR_AREA_JUNKTOWN then
         set_global_var(GVAR_ENEMY_JUNKTOWN, 1);
      else if CUR_AREA_SHADY_SANDS then
         set_global_var(GVAR_ENEMY_SHADY_SANDS, 1);
   end
end
