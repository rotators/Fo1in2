/*

   Dog used in Shady Sands and Adytum

*/

#include "define.h"

#define NAME                    SCRIPT_DOG2

#include "command.h"

procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure talk_p_proc;
procedure use_skill_on_p_proc;
procedure push_p_proc;

variable rndx;
variable rndy;
variable critter_tile;
variable Only_Once := 1;
variable tmp_hostile := 0;

procedure push_p_proc begin
end

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_ai(AI_DOG);
      if CUR_AREA_SHADY_SANDS then begin
         set_self_team(TEAM_SHADY_SANDS);
      end
      else if CUR_MAP_LAADYTUM then begin
         set_self_team(TEAM_LA_REGULATORS);
      end
      else begin
         set_self_team(TEAM_DOGS);
      end
   end
end

procedure map_enter_p_proc begin
   if shady_invaded and (CUR_AREA_SHADY_SANDS or CUR_MAP_RAIDERS) then begin
      invasion_kill_critter;
   end
end


procedure talk_p_proc begin
   /*dude_look_at_self;
   if random(0, 1) then begin
      float_msg(self_obj, message_str(SCRIPT_ALLDOGS, 102), FLOAT_MSG_SEQUENTIAL);
   end
   else begin
      float_msg(self_obj, message_str(SCRIPT_ALLDOGS, 117), FLOAT_MSG_SEQUENTIAL);
   end*/
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      rndy := random(1, 20);
      if (rndy == 1) then begin
         rndx := random(0, 5);
         critter_tile := tile_num_in_direction(self_tile, rndx, 1);
         self_walk_to_tile(critter_tile);
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      party_remove(self_obj);
      if CUR_AREA_SHADY_SANDS then
         set_self_team(TEAM_SHADY_SANDS);
      else
         set_self_team(TEAM_DOGS);
      tmp_hostile := 1;
   end
end

procedure use_skill_on_p_proc begin
   if (action_being_used == SKILL_STEAL) then begin
      script_overrides;
      display_msg(gen_mstr(211));
   end
end
