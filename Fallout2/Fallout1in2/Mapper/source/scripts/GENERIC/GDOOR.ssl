#include "define.h"
#include "command.h"

#define NAME                     SCRIPT_DOOR

procedure start;
procedure use_p_proc;
procedure use_skill_on_p_proc;
procedure description_p_proc;
procedure use_obj_on_p_proc;
procedure map_update_p_proc;
procedure damage_p_proc;

import variable Cur_Door_Ptr;

procedure start begin
end

procedure description_p_proc begin
   if (local_var(0) == 0) then begin
      display_msg(message_str(SCRIPT_DOOR, 104));//{104}{}{The door is locked.}
   end
end

procedure use_p_proc begin
   if (local_var(0) == 0) then begin
      obj_lock(self_obj);
   end
   else begin
      obj_unlock(self_obj);
   end
   if ((local_var(0) == 0) and (source_obj == dude_obj)) then begin
      script_overrides;
      display_msg(message_str(SCRIPT_DOOR, 104));//{104}{}{The door is locked.}
   end
   else begin
      set_map_var(6, 1);
   end
end

procedure use_skill_on_p_proc
begin
   variable LVar0 := 0;
   if (local_var(0) == 0) then begin
      if (action_being_used == SKILL_LOCKPICK) then begin
         script_overrides;
         LVar0 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 0);
         if (is_success(LVar0)) then begin
            set_local_var(0, 1);
            display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
            give_xp(EXP_LOCKPICK_NORMAL);
         end
         else begin
            if (is_critical(LVar0)) then begin
               jam_lock(self_obj);
               display_msg(message_str(SCRIPT_DOOR, 110));//{110}{}{The lock is beyond your ability to pick.}
            end
            else begin
               display_msg(message_str(SCRIPT_DOOR, 103));//{103}{}{You were not able to pick the lock.}
            end
         end
      end
   end
   else begin
      display_msg(message_str(SCRIPT_DOOR, 109));//{109}{}{The door is already unlocked.}
   end
end

procedure use_obj_on_p_proc
begin
   variable Item := 0;
   variable Skill := 0;
   Item := obj_being_used_with;
   Skill := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 20);
   if ((obj_pid(Item) == PID_LOCKPICKS or obj_pid(Item) == PID_EXP_LOCKPICK_SET) and (local_var(0) == 0)) then begin
      script_overrides;
      
      if (obj_pid(Item) == PID_EXP_LOCKPICK_SET) then
         Skill := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 25);
      
      if (is_success(Skill)) then begin
         set_local_var(0, 1);
         display_msg(message_str(SCRIPT_DOOR, 100));//{100}{}{You unlock the door.}
         give_xp(EXP_LOCKPICK_NORMAL);
      end
      else begin
         if (is_critical(Skill)) then begin
            rm_obj_from_inven(dude_obj, Item);
            destroy_object(Item);
            display_msg(message_str(SCRIPT_DOOR, 101));//{101}{}{You broke your lockpicks!}
         end
         else begin
            display_msg(message_str(SCRIPT_DOOR, 103));//{103}{}{You were not able to pick the lock.}
         end
      end
   end
end

procedure map_update_p_proc
begin
   if (local_var(0) == 0) then begin
      obj_lock(self_obj);
   end
   else begin
      obj_unlock(self_obj);
   end
end

procedure damage_p_proc begin
   if (weapon_dmg_type(target_obj) == DMG_explosion) then begin

      if not(is_loading_game) then set_self_invisible;
      set_local_var(1, 1);
      set_map_var(6, 1);

   end
   else begin
       display_msg(mstr(193));
   end
end
