/*

   Generic Mantis from encounters

*/

#include "define.h"
#include "command.h"
#include "sfall/sfall.h"

procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure timed_event_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;

variable tmp_hostile;
variable initial := 0;

variable critArray;
variable attack_target;
variable obj;

procedure start begin
   if not(initial) then begin
      initial := 1;
      set_self_team(TEAM_MASTER_LAIR);
      set_self_ai(AI_DOG);
      if (local_var(0) == 0) then begin
         set_local_var(0, self_tile);
      end
      add_timer_event(self_obj, game_ticks(random(1, 5)), 1);
   end
end

procedure critter_p_proc begin
   if (attack_target != 0) then begin
      attack(attack_target);
   end
   else if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else if (self_can_see_dude) then begin
      tmp_hostile := 1;
      attack(dude_obj);
   end
end

procedure destroy_p_proc begin
   inc_evil_critter
end

procedure timed_event_p_proc begin
   self_walk_to_tile(tile_num_in_direction(local_var(0), random(0, 5), random(1, 3)));
   add_timer_event(self_obj, game_ticks(random(1, 5)), 0);

   if not(combat_is_initialized) then begin
      critArray := list_as_array(LIST_CRITTERS);
      foreach (obj in critArray) begin
         if (get_team(obj) != self_team) then begin
            if obj_can_see_obj(self_obj, obj) then begin
               attack_target := obj;
               break;
            end
         end
      end
   end
end

procedure use_obj_on_p_proc begin
   if ((obj_pid(obj_being_used_with) == PID_BEER) or (obj_pid(obj_being_used_with) == PID_NUKA_COLA)) then begin
      script_overrides;
      rm_obj_from_inven(source_obj, obj_being_used_with);
      destroy_object(obj_being_used_with);
      critter_dmg(self_obj, (self_cur_hp + random(1, 6) + random(1, 6)), DMG_explosion);
   end
end

procedure use_skill_on_p_proc begin
end

procedure damage_p_proc begin
   if obj_in_party(source_obj) then begin
      tmp_hostile := 1;
   end
end
