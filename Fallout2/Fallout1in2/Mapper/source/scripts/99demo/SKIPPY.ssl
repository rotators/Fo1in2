/*

   Scrapheap - Skippy, fools gang member

*/

/* Include Files */
#include "define.h"
#include "scrapheap.h"
#include "maps/junkdemo.h"

#define NAME                    SCRIPT_SKIPPY
#define TOWN_REP_VAR            (GVAR_TOWN_REP_SCRAPHEAP)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure talk_p_proc;
procedure critter_p_proc;

procedure Skippy00;
procedure Skippy01;
procedure Skippy02;
procedure Skippy03;
procedure Skippy04;
procedure Skippy04a;
procedure Skippy05;
procedure Skippy06;
procedure Skippy07;
procedure Skippy08;
procedure Skippy09;
procedure Skippy10;
procedure Skippy11;

procedure SkippyEnd;
procedure SkippyCombat;
procedure get_cutters;

import variable Skippy_talk;

import variable Phrax_Pointer;
import variable Rock_Pointer;

#define LVAR_Known   (4)

variable initial := 0;
variable GVar1;
variable Item;
variable GVar5 := 1;
variable GVar6;
variable GVar7 := 50;
variable GVar8 := 2;
variable GVar11;
variable GVar12;

procedure start begin
   if DUDE_IS_FOOL then begin
      set_self_team(TEAM_PLAYER);
   end
   else begin
      set_self_team(TEAM_DEMO_FOOLS);
   end
   I_Am_A_Fool := 1;
end

procedure map_enter_p_proc begin
   if map_first_run then begin
      Item := create_object(PID_MULTI_TOOL, 0, 0);
      add_obj_to_inven(self_obj, Item);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   if (local_var(LVAR_Known)) then begin
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(101));
   end
   if (self_item_count(obj_pid(Item))) then begin
      display_msg(mstr(102));
   end
end

procedure description_p_proc begin
   script_overrides;
   if (local_var(LVAR_Known)) then begin
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(101));
   end
   if self_item_count(PID_MULTI_TOOL) then begin
      display_msg(mstr(102));
   end
end

procedure pickup_p_proc begin
   call Skippy10;
end

procedure timed_event_p_proc begin
   call Start_War;
end

procedure destroy_p_proc begin
   dec_fools_counter;
end

procedure talk_p_proc begin
   dude_look_at_self;
   start_gdialog(413, self_obj, 4, -1, -1);
   gsay_start;
   if DUDE_IS_CRYPT then begin
      call Skippy07;
   end
   else if DUDE_IS_FOOL then begin
      call Skippy08;
   end
   else if self_item_count(PID_MULTI_TOOL) then begin
      call Skippy00;
   end
   else begin
      call Skippy09;
   end
   gsay_end;
   end_dialogue;
end

procedure Skippy00 begin
   set_local_var(LVAR_Known, 1);
   Reply(105);
   NOption(106, Skippy01, 4);
   NOption(107, Skippy06, 4);
   NOption(108, Skippy04, 4);
end

procedure Skippy01 begin
   Reply(109);
   NOption(110, Skippy02, 4);
   NOption(111, Skippy03, 4);
end

procedure Skippy02 begin
   Reply(112);
   NOption(104, SkippyCombat, 4);
end

procedure Skippy03 begin
   Reply(113);
   NOption(114, Skippy04, 4);
end

procedure Skippy04 begin
   Reply(115);
   NOption(116, Skippy04a, 4);
end

procedure Skippy04a begin
   if (is_success(do_check(dude_obj, STAT_ch, 0))) then begin
      call Skippy05;
   end
   else begin
      call Skippy06;
   end
end

procedure Skippy05 begin
   Reply(117);
   NOption(104, get_cutters, 1);
end

procedure Skippy06 begin
   Reply(118);
   NOption(104, SkippyCombat, 1);
end

procedure Skippy07 begin
   Reply(119);
   NOption(104, SkippyEnd, 1);
end

procedure Skippy08 begin
   Reply(120);
   NOption(104, SkippyEnd, 1);
end

procedure Skippy09 begin
   Reply(121);
   NOption(104, SkippyEnd, 1);
end

procedure Skippy10 begin
   float_msg(0, mstr(122), FLOAT_MSG_NORMAL);
   call SkippyCombat;
end

procedure Skippy11 begin
   float_msg(0, mstr(125), FLOAT_MSG_NORMAL);
   self_walk_to_tile(tile_num_in_direction(dude_tile, 0, 1));
   GVar1 := 1;
end

procedure critter_p_proc begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   LVar0 := (self_obj == Fool_Pointer) or (self_obj == Crypt_Pointer) or (self_obj == Phrax_Pointer) or (self_obj == Rock_Pointer);
   if (GVar5 and Crypt_Taunt) then begin
      Crypt_Taunt := 0;
      if (random(1, 5) == 1) then begin
         float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(100, 113)), FLOAT_MSG_SEQUENTIAL);
      end
   end
   else if (GVar6 and Fool_Taunt) then begin
      Fool_Taunt := 0;
      if (random(1, 5) == 1) then begin
         float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(200, 218)), FLOAT_MSG_SEQUENTIAL);
      end
   end
   else if (get_demo_gangwar_active and (self_tile != 20725)) then begin
      self_walk_to_tile(20725);
   end
   else if (self_tile == 20725) then begin
      add_timer_event(self_obj, game_ticks(2), 1);
   end
   else if (map_var(MVAR_Broken_Gen) and (self_tile != 27504)) then begin
      if ((self_obj == Phrax_Pointer) and (GVar12 == 0)) then begin
         GVar12 := 1;
         float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, 300), FLOAT_MSG_RED);
      end
      set_demo_gangwar_completed;
      self_walk_to_tile(27504);
   end
   else if ((self_tile == 27504) and get_demo_gangwar_completed) then begin
      if not(is_loading_game) then set_self_invisible;
      if (GVar5) then begin
         dec_fools_counter;
      end
      else begin
         dec_crypt_counter;
      end
   end
   else if (GVar1) then begin
      GVar1 := 0;
      attack(dude_obj);
   end
   else if (not(LVar0)) then begin
      if (random(0, 21) == 1) then begin
         LVar1 := tile_num_in_direction(self_tile, random(0, 5), 2);
         self_walk_to_tile(LVar1);
      end
   end
end

procedure SkippyEnd begin
end

procedure SkippyCombat begin
   GVar1 := 1;
end

procedure get_cutters begin
   Item := self_item(PID_MULTI_TOOL);
   if (Item > 0) then begin
      rm_obj_from_inven(self_obj, Item);
      add_obj_to_inven(dude_obj, Item);
   end
end
