/*

   Scrapheap - Phrax

*/

/* Include Files */
#include "define.h"
#include "scrapheap.h"
#include "maps/junkdemo.h"

#define NAME                    SCRIPT_PHRAX
#define TOWN_REP_VAR            (GVAR_TOWN_REP_SCRAPHEAP)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;

procedure phrax00;
procedure phrax01;
procedure phrax02;
procedure phrax03;
procedure phrax04;
procedure phrax05;
procedure phrax06;
procedure phrax07;
procedure phraxend;
procedure combat;

#define LVAR_Once_Fool        (4)
#define LVAR_Once_Fridge      (5)
#define LVAR_Once_Generator   (6)

import variable Phrax_Pointer;
import variable Rock_Pointer;
import variable Fridge_ptr;

#define EVENT_WAR          (1)
#define EVENT_FRIDGE       (2)
#define EVENT_GENERATOR    (3)

variable tmp_hostile;
variable Can_See;
variable Only_Once := 1;
variable Do_Once := 1;
variable This_Once;

procedure start begin
   if (Do_Once) then begin
      I_Am_A_Crypt := 1;
      Phrax_Pointer := self_obj;
      Do_Once := 0;
   end
   if (DUDE_IS_CRYPT and ((map_var(MVAR_Use_Fridge) < 2) or (map_var(MVAR_Use_Generator) < 2))) then begin
      set_self_team(TEAM_PLAYER);
   end
   else begin
      set_self_team(TEAM_DEMO_CRYPTS);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure talk_p_proc begin
   script_overrides;
   if DUDE_IS_FOOL then begin
      call phrax06;
   end
   else if DUDE_IS_CRYPT then begin
      call phrax05;
   end
   else if (map_var(MVAR_Use_Generator)) then begin
      call phrax04;
   end
   else if (map_var(MVAR_Use_Fridge) and Can_See) then begin
      Can_See := 1;
      start_gdialog(402, self_obj, 4, -1, -1);
      gsay_start;
      call phrax00;
      gsay_end;
      end_dialogue;
   end
   else begin
      call phrax07;
   end
end

procedure critter_p_proc begin
   if (self_can_see_dude and not(global_var(GVAR_QUEST_DEMO_GANG_WAR))) then begin
      if (DUDE_IS_FOOL and (local_var(LVAR_Once_Fool) == 0)) then begin
         set_local_var(LVAR_Once_Fool, 1);
         dialogue_system_enter;
      end
   end
   else begin
      variable LVar0 := 0;
      variable LVar1 := 0;
      LVar0 := (self_obj == Fool_Pointer) or (self_obj == Crypt_Pointer) or (self_obj == Phrax_Pointer) or (self_obj == Rock_Pointer);
      if (I_Am_A_Fool and Crypt_Taunt) then begin
         Crypt_Taunt := 0;
         if (random(1, 5) == 1) then begin
            float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(100, 113)), FLOAT_MSG_SEQUENTIAL);
         end
      end
      else begin
         if (I_Am_A_Crypt and Fool_Taunt) then begin
            Fool_Taunt := 0;
            if (random(1, 5) == 1) then begin
               float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(200, 218)), FLOAT_MSG_SEQUENTIAL);
            end
         end
         else if (global_var(GVAR_QUEST_DEMO_GANG_WAR) == 1 and (self_tile != 20725)) then begin
            self_walk_to_tile(20725);
         end
         else if (self_tile == 20725) then begin
            add_timer_event(self_obj, game_ticks(2), 1);
         end
         else if (map_var(MVAR_Broken_Gen) and (self_tile != 27504)) then begin
            if ((self_obj == Phrax_Pointer) and (This_Once == 0)) then begin
               This_Once := 1;
               float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, 300), FLOAT_MSG_DARK_GREY);
            end
            set_demo_gangwar_completed;
            self_walk_to_tile(27504);
         end
         else if ((self_tile == 27504) and get_demo_gangwar_completed) then begin
            if not(is_loading_game) then set_self_invisible;
            if (I_Am_A_Fool) then begin
               dec_fools_counter;
            end
            else begin
               dec_crypt_counter;
            end
         end
         else begin
            if (tmp_hostile) then begin
               attack(dude_obj);
            end
            else if (not(LVar0)) then begin
               if (random(0, 21) == 1) then begin
                  LVar1 := tile_num_in_direction(self_tile, random(0, 5), 2);
                  self_walk_to_tile(LVar1);
               end
            end
         end
      end
   end
end

procedure timed_event_p_proc begin
   if (fixed_param == EVENT_WAR) then begin
      call Start_War;
   end

   if (/*self_can_see_dude and*/ not(global_var(GVAR_QUEST_DEMO_GANG_WAR))) then begin
      if (fixed_param == EVENT_FRIDGE) then begin
         if (is_success(do_check(self_obj, STAT_pe, 0))) then begin
            if (local_var(LVAR_Once_Fridge) == 0) then begin
               if (Fridge_ptr != 0) then begin
                  if not(obj_is_locked(Fridge_ptr)) then obj_lock(Fridge_ptr);
               end
               Can_See := 1;
               set_local_var(LVAR_Once_Fridge, 1);
               dialogue_system_enter;
            end
            else if (is_success(do_check(self_obj, STAT_pe, 3))) then begin
               attack(dude_obj);
            end
         end
         else begin
            set_map_var(MVAR_Use_Fridge, 0);
         end
      end
      else if (fixed_param == EVENT_GENERATOR) then begin
         if (is_success(do_check(self_obj, STAT_pe, 0))) then begin
            if (local_var(LVAR_Once_Generator) == 0) then begin
               Can_See := 1;
               set_local_var(LVAR_Once_Generator, 1);
               dialogue_system_enter;
            end
            else if (is_success(do_check(self_obj, STAT_pe, 3))) then begin
               attack(dude_obj);
            end
         end
         else begin
            set_map_var(MVAR_Use_Generator, 0);
         end
      end
   end
end

procedure destroy_p_proc begin
   dec_crypt_counter;
end

procedure phrax00 begin
   Reply(101);
   if (dude_iq >= 4) then begin
      NOption(102, phrax02, 4);
   end
   if (dude_iq >= 4) then begin
      NOption(103, phrax01, 4);
   end
end

procedure phrax01 begin
   Reply(104);
   if (dude_iq >= 4) then begin
      NOption(105, combat, 4);
   end
end

procedure phrax02 begin
   Reply(106);
   if (dude_iq >= 4) then begin
      NOption(107, phrax03, 4);
   end
   if (dude_iq >= 4) then begin
      NOption(108, phraxend, 4);
   end
end

procedure phrax03 begin
   Reply(109);
   NOption(114, phraxend, 4);
end

procedure phrax04 begin
   float_msg(self_obj, mstr(110), FLOAT_MSG_NORMAL);
end

procedure phrax05 begin
   float_msg(self_obj, mstr(111), FLOAT_MSG_NORMAL);
end

procedure phrax06 begin
   float_msg(self_obj, mstr(112), FLOAT_MSG_NORMAL);
end

procedure phrax07 begin
   float_msg(self_obj, mstr(113), FLOAT_MSG_NORMAL);
end

procedure phraxend begin
end

procedure combat begin
   tmp_hostile := 1;
end
