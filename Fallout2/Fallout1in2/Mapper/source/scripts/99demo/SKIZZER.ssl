/*

   Scrapheap - Skizzer, at the entrance

*/

/* Include Files */
#include "define.h"
#include "scrapheap.h"
#include "maps/junkdemo.h"

#define NAME                    SCRIPT_SKIZZER
#define TOWN_REP_VAR            (GVAR_TOWN_REP_SCRAPHEAP)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;

procedure skizzer00;
procedure skizzer01;
procedure skizzer02;
procedure skizzer03;
procedure skizzerend;
procedure skizzercombat;

import variable Phrax_Pointer;
import variable Rock_Pointer;

variable HEREBEFORE;
variable tmp_hostile;

variable known;
variable init_teams := 0;
variable said00;
variable said01;
variable said02;
variable said03;

variable badguy;
variable This_Once;

procedure start begin
   if (self_can_see_dude) then begin
      if DUDE_IS_CRYPT then begin
         call skizzer00;
      end
      else begin
         if DUDE_IS_FOOL then begin
            call skizzer01;
         end
      end
   end
   if (not(init_teams)) then begin
      init_teams := 1;
      I_Am_A_Crypt := 1;
   end
   if DUDE_IS_CRYPT then begin
      set_self_team(TEAM_PLAYER);
   end
   else begin
      set_self_team(TEAM_DEMO_CRYPTS);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   if (known == 1) then begin
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(101));
   end
end

procedure description_p_proc begin
   script_overrides;
   if (known == 1) then begin
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(101));
   end
end

procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure talk_p_proc begin
   if (said02 == 0) then begin
      call skizzer02;
   end
   else begin
      call skizzer03;
   end
end

procedure timed_event_p_proc begin
   call Start_War;
end

procedure destroy_p_proc begin
   dec_crypt_counter;
end

procedure skizzer00 begin
   if (said00 == 0) then begin
      float_msg(self_obj, mstr(102), FLOAT_MSG_NORMAL);
      said00 := 1;
   end
end

procedure skizzer01 begin
   if (said01 == 0) then begin
      float_msg(self_obj, mstr(103), FLOAT_MSG_NORMAL);
      said01 := 1;
   end
end

procedure skizzer02 begin
   if (said02 == 0) then begin
      float_msg(self_obj, mstr(104), FLOAT_MSG_NORMAL);
      said02 := 1;
   end
end

procedure skizzer03 begin
   if (said03 == 0) then begin
      float_msg(self_obj, mstr(106), FLOAT_MSG_NORMAL);
      said03 := 1;
   end
   else begin
      display_msg(mstr(109));
   end
end

procedure skizzercombat begin
   tmp_hostile := 1;
end

procedure skizzerend begin
end

procedure critter_p_proc begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   LVar0 := (self_obj == Fool_Pointer) or (self_obj == Crypt_Pointer) or (self_obj == Phrax_Pointer) or (self_obj == Rock_Pointer);
   if (I_Am_A_Fool and Crypt_Taunt) then begin
      Crypt_Taunt := 0;
      if (random(1, 5) == 1) then begin
         float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(100, 113)), FLOAT_MSG_SEQUENTIAL);
      end
   end
   else if (I_Am_A_Crypt and Fool_Taunt) then begin
      Fool_Taunt := 0;
      if (random(1, 5) == 1) then begin
         float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, random(200, 218)), FLOAT_MSG_SEQUENTIAL);
      end
   end
   else if (get_demo_gangwar_active and (self_tile != 20725)) then begin
      self_walk_to_tile(20725);
   end
   else if (self_tile == 20725) then begin
      add_timer_event(self_obj, game_ticks(2), 1);
   end
   else if (map_var(MVAR_Broken_Gen) and (self_tile != 27504)) then begin
      if ((self_obj == Phrax_Pointer) and (This_Once == 0)) then begin
         This_Once := 1;
         float_msg(self_obj, message_str(SCRIPT_JUNKDEMO, 300), FLOAT_MSG_RED);
      end
      set_demo_gangwar_completed;
      self_walk_to_tile(27504);
   end
   else if ((self_tile == 27504) and get_demo_gangwar_completed) then begin
      if not(is_loading_game) then set_self_invisible;
      if (I_Am_A_Fool) then begin
         dec_fools_counter;
      end
      else begin
         dec_crypt_counter;
      end
   end
   else begin
      if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
         tmp_hostile := 0;
         attack(dude_obj);
      end
      else if (not(LVar0)) then begin
         if (random(0, 21) == 1) then begin
            LVar1 := tile_num_in_direction(self_tile, random(0, 5), 2);
            self_walk_to_tile(LVar1);
         end
      end
   end
end
