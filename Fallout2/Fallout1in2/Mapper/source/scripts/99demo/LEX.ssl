/*

   Scrapheap - Lex, at the entrance

*/

/* Include Files */
#include "define.h"
#include "scrapheap.h"
#include "maps/junkdemo.h"

#define NAME                    SCRIPT_LEX
#define TOWN_REP_VAR            (GVAR_TOWN_REP_SCRAPHEAP)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure talk_p_proc;

procedure Lex00;
procedure Lex01;
procedure Lex02;
procedure Lex03;
procedure Lex04;
procedure Lex05;
procedure Lex06;
procedure Lex07;
procedure Lex08;
procedure Lex09;
procedure Lex10;
procedure Lex11;
procedure Lex12;
procedure Lex13;
procedure Lex14;
procedure Lex15;
procedure Lex16;
procedure Lex17;
procedure Lex18;
procedure Lex19;
procedure Lex20;
procedure Lex21;
procedure LexEnd;
procedure LexCombat;
procedure LexJoins;
procedure follow_player;

procedure CheatEnd1;
procedure CheatEnd2;

#define LVAR_Known      (4)
#define LVAR_Following  (5)

variable tmp_hostile;
variable initial := 0;

procedure start begin
   if not(initial) then begin
      initial := 1;
      set_self_team(TEAM_DEMO_PEASANT);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   if (local_var(LVAR_Known)) then begin
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(101));
   end
end

procedure description_p_proc begin
   script_overrides;
   if (local_var(LVAR_Known)) then begin
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(101));
   end
end

procedure pickup_p_proc begin
   attack(dude_obj);
end

procedure critter_p_proc begin
   if (self_can_see_dude and not(local_var(LVAR_Known)) and (tile_distance_objs(self_obj, dude_obj) < 12)) then begin
      dialogue_system_enter;
   end
   if (tmp_hostile) then begin// This must come FIRST as an if/then/else before "attack dude" type code, otherwise it runs too soon and can override other attack calls
      attack(dude_obj);
      tmp_hostile := 0;
   end
end

procedure talk_p_proc begin
   dude_look_at_self;
   start_gdialog(411, self_obj, 4, -1, -1);
   gsay_start;
   if not(local_var(LVAR_Known)) then begin
      call Lex00;
   end
   else if (map_var(MVAR_Broken_Gen)) then begin
      call Lex09;
   end
   else if get_demo_gangwar_active then begin
      call Lex12;
   end
   else begin
      if (DUDE_IS_FOOL or DUDE_IS_CRYPT) then begin
         call Lex14;
      end
      else begin
         call Lex17;
      end
   end
   gsay_end;
   end_dialogue;
end

procedure Lex00 begin
   set_local_var(LVAR_Known, 1);
   Reply(104);
   NOption(105, Lex01, 4);
   NOption(106, Lex07, 4);
   if debug_mode then begin
      NOption("*** DEBUG: Gang Ending", CheatEnd1, 4);
      NOption("*** DEBUG: Generator Ending", CheatEnd2, 4);
   end
end

procedure CheatEnd1 begin
   set_map_var(MVAR_Fool_Counter, 0);
   set_map_var(MVAR_Crypt_Counter, 0);
end

procedure CheatEnd2 begin
   set_map_var(MVAR_Broken_Gen, 1);
end

procedure Lex01 begin
   set_knows_crypts;
   Reply(107);
   NOption(108, Lex02, 4);
   NOption(109, LexEnd, 4);
end

procedure Lex02 begin
   Reply(110);
   NOption(111, Lex03, 4);
end

procedure Lex03 begin
   // GVAR not used anywhere else
   //set_global_var(GVAR_GANG_2_GVAR, 1);
   set_knows_fools;
   Reply(112);
   NOption(113, Lex04, 4);
end

procedure Lex04 begin
   Reply(114);
   NOption(115, Lex05, 4);
end

procedure Lex05 begin
   Reply(116);
   NOption(117, Lex06, 4);
end

procedure Lex06 begin
   Reply(118);
   NOption(119, LexEnd, 4);
   NOption(120, Lex17, 4);
end

procedure Lex07 begin
   Reply(121);
   NOption(122, Lex08, 4);
end

procedure Lex08 begin
   Reply(123);
   NOption(124, LexEnd, 4);
   NOption(120, Lex17, 4);
end

procedure Lex09 begin
   set_global_var(GVAR_QUEST_DEMO_FIX_POWER, 1);
   Reply(125);
   NOption(126, Lex10, 4);
   NOption(127, Lex11, 4);
end

procedure Lex10 begin
   Reply(128);
   NOption(103, LexEnd, 1);
end

procedure Lex11 begin
   Reply(129);
   NOption(103, LexEnd, 1);
end

procedure Lex12 begin
   Reply(130);
   NOption(131, Lex13, 4);
   NOption(132, LexEnd, 4);
end

procedure Lex13 begin
   Reply(133);
   NOption(134, LexJoins, 4);
   NOption(135, LexEnd, 4);
end

procedure Lex14 begin
   Reply(136);
   NOption(137, Lex15, 4);
   NOption(138, Lex16, 4);
   NOption(139, LexEnd, 4);
end

procedure Lex15 begin
   NMessage(140);
   call LexCombat;
end

procedure Lex16 begin
   Reply(141);
   NOption(142, LexEnd, 4);
   NOption(120, Lex17, 4);
end

procedure Lex17 begin
   Reply(143);
   if KNOWS_POWER then
      NOption(144, Lex19, 4);
   if KNOWS_CRYPTS then
      NOption(145, Lex20, 4);
   if KNOWS_FOOLS then
      NOption(146, Lex21, 4);
   NOption(147, Lex18, 4);
   NOption(148, LexEnd, 4);
end

procedure Lex18 begin
   Reply(149);
   if KNOWS_POWER then
      NOption(144, Lex19, 4);
   if KNOWS_CRYPTS then
      NOption(145, Lex20, 4);
   if KNOWS_FOOLS then
      NOption(146, Lex21, 4);
   NOption(148, LexEnd, 4);
end

procedure Lex19 begin
   // GVARs that are nowhere else used
   //set_global_var(GVAR_KILLIAN_WARES_MERGED, 1);
   //set_global_var(GVAR_GANG_2_GVAR, 1);
   Reply(150);
   if KNOWS_CRYPTS then
      NOption(145, Lex20, 4);
   if KNOWS_FOOLS then
      NOption(146, Lex21, 4);
   NOption(147, Lex18, 4);
   NOption(148, LexEnd, 4);
end

procedure Lex20 begin
   Reply(151);
   if KNOWS_POWER then
      NOption(144, Lex19, 4);
   if KNOWS_FOOLS then
      NOption(146, Lex21, 4);
   NOption(147, Lex18, 4);
   NOption(148, LexEnd, 4);
end

procedure Lex21 begin
   set_knows_power;
   Reply(152);
   if KNOWS_POWER then
      NOption(144, Lex19, 4);
   if KNOWS_CRYPTS then
      NOption(145, Lex20, 4);
   NOption(147, Lex18, 4);
   NOption(148, LexEnd, 4);
end

procedure LexEnd begin
end

procedure LexCombat begin
   tmp_hostile := 1;
end

procedure LexJoins begin
   set_self_team(TEAM_PLAYER);
   set_local_var(LVAR_Following, 1);
end

procedure follow_player begin
   if (tile_distance_objs(dude_obj, self_obj) > 3) then begin
      self_walk_to_tile(tile_num_in_direction(dude_tile, 1, 1));
   end
end
