/*

   Scrapheap - Phil, near the dog

*/

/* Include Files */
#include "define.h"
#include "scrapheap.h"
#include "maps/junkdemo.h"

#define NAME                    SCRIPT_DEMOPHIL
#define TOWN_REP_VAR            (GVAR_TOWN_REP_SCRAPHEAP)

#include "command.h"
#include "modreact.h"

procedure start;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure run_away;
procedure go_forward;

procedure Phil00;
procedure Phil01;
procedure Phil02;
procedure Phil03;
procedure Phil04;
procedure Phil05;
procedure Phil06;
procedure Phil07;
procedure Phil08;
procedure Phil09;
procedure PhilEnd;

#define LVAR_Known      (4)

variable tmp_hostile;

variable initial := 0;
variable GVar0;
variable GVar1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6;
variable GVar7;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;

import variable Phil_approaches;
import variable growling;
import variable smartass;
import variable smartass2;

procedure start begin
   if not(initial) then begin
      set_self_team(TEAM_RADSCORPIONS);
      add_timer_event(self_obj, game_ticks(10), 1);
      initial := 1;
   end
end

procedure look_at_p_proc begin
   script_overrides;
   if (local_var(LVAR_Known)) then begin
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(101));
   end
end

procedure description_p_proc begin
   script_overrides;
   if (local_var(LVAR_Known)) then begin
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(101));
   end
end

procedure critter_p_proc begin
   if (growling) then begin
      call run_away;
   end
   if (smartass) then begin
      add_timer_event(self_obj, game_ticks(2), 2);
      smartass := 0;
   end
   if (not(map_var(MVAR_Dog_Is_Angry))) then begin
      self_walk_to_tile(15686);
   end
end

procedure pickup_p_proc begin
   attack(dude_obj);
end

procedure timed_event_p_proc begin
   if (fixed_param == 2) then begin
      float_msg(self_obj, mstr(102), FLOAT_MSG_NORMAL);
   end
   else if (map_var(MVAR_Dog_Is_Angry)) then begin
      call go_forward;
   end
end

procedure talk_p_proc begin
   dude_look_at_self;
   if (global_var(GVAR_DEMODOG_HIRELING_STATUS)) then begin
      call Phil01;
   end
   else if (not(map_var(MVAR_Dog_Is_Angry))) then begin
      call Phil09;
   end
   else if (dude_is_armed) then begin
      call Phil00;
   end
   else begin
      if not(local_var(LVAR_Known)) then begin
         start_gdialog(376, self_obj, 4, -1, -1);
         gsay_start;
         call Phil02;
         gsay_end;
         end_dialogue;
      end
      else begin
         call Phil08;
      end
   end
end

procedure run_away begin
   self_run_to_tile(16892);
   growling := 0;
   add_timer_event(self_obj, game_ticks(random(10, 30)), 1);
end

procedure go_forward begin
   Phil_approaches := 1;
   self_walk_to_tile(16886);
end

procedure Phil00 begin
   float_msg(self_obj, mstr(103), FLOAT_MSG_NORMAL);
end

procedure Phil01 begin
   float_msg(self_obj, mstr(104), FLOAT_MSG_NORMAL);
end

procedure Phil02 begin
   variable LVar0 := 0;
   set_local_var(LVAR_Known, 1);
   if (dude_is_male) then begin
      LVar0 := mstr(105);
   end
   else begin
      LVar0 := mstr(106);
   end
   gsay_reply(SCRIPT_DEMOPHIL, LVar0 + mstr(107));
   NOption(108, Phil04, 4);
   NOption(109, PhilEnd, 4);
   NOption(110, Phil05, 6);
   NLowOption(111, Phil03);
end

procedure Phil03 begin
   gsay_message(SCRIPT_DEMOPHIL, 112, NEUTRAL_REACTION);
end

procedure Phil04 begin
   gsay_reply(SCRIPT_DEMOPHIL, 113);
   NOption(114, PhilEnd, 4);
   NOption(115, Phil05, 4);
end

procedure Phil05 begin
   gsay_reply(SCRIPT_DEMOPHIL, 116);
   NOption(117, PhilEnd, 4);
   NOption(118, Phil06, 5);
   NOption(119, Phil07, 6);
end

procedure Phil06 begin
   gsay_message(SCRIPT_DEMOPHIL, 120, NEUTRAL_REACTION);
   gsay_reply(SCRIPT_DEMOPHIL, 121);
   Goodbyes;
   NOption(122, Phil07, 7);
   giq_option(4, SCRIPT_MODREACT, exit_line, PhilEnd, NEUTRAL_REACTION);
end

procedure Phil07 begin
   gsay_message(SCRIPT_DEMOPHIL, 123, NEUTRAL_REACTION);
   gsay_reply(SCRIPT_DEMOPHIL, 124);
   NOption(125, PhilEnd, 4);
end

procedure Phil08 begin
   float_msg(self_obj, mstr(126), FLOAT_MSG_NORMAL);
end

procedure Phil09 begin
   float_msg(self_obj, mstr(127), FLOAT_MSG_NORMAL);
end

procedure PhilEnd begin
end

procedure destroy_p_proc begin
end
