/*

   Cathedral - Morpheus, leading robed guy

*/

/* Include Files */
#include "define.h"
//#include "necropolis.h"

#define NAME                    SCRIPT_MORPH
#define TOWN_REP_VAR            (GVAR_TOWN_REP_CATHEDRAL)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure damage_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;

procedure morphend;
procedure morphcbt;
procedure morph02;
procedure morph02a;
procedure morph02_1;
procedure morph02_2;
procedure morph02_3;
procedure morph03;
procedure morph03_1;
procedure morph03_2;
procedure morph04;
procedure morph04a;
procedure morph05;
procedure morph06;
procedure morph07;
procedure morph07_1;
procedure morph08;
procedure morph09;
procedure morph10;
procedure morph10_1;
procedure morph11;
procedure morph12;
procedure morph13;
procedure morph14;
procedure morph15;
procedure morph16;
procedure morph17;
procedure morph18;
procedure morph18_1;
procedure morph18_2;
procedure morph19;
procedure morph20;
procedure morph21;
procedure morph23;
procedure morph24;
procedure morph26;
procedure morph27;
procedure morph27_1;
procedure morph28;
procedure morph29;
procedure morph30;
procedure morph31;
procedure morph32;
procedure morph33;
procedure morph33_1;
procedure morph34;
procedure morph35;
procedure morph36;
procedure morph37;
procedure morph38;
procedure morph39;
procedure morph39_1;
procedure morph40;
procedure morph41;
procedure morph42;
procedure morph42a;
procedure morph42a_1;
procedure morph42b;
procedure morph42c;
procedure morph45;
procedure morph46;
procedure morph47;
procedure morph48;
procedure morph49;
procedure morph50;
procedure morph51;
procedure morph52;
procedure morph53;
procedure morph54;
procedure morph55;
procedure morph56;
procedure morph57;
procedure morph58;
procedure morph59;
procedure morph60;
procedure morph61;
procedure morph62;
procedure morph63;
procedure morph64;
procedure morph65;
procedure morphx;
procedure morphx2;
procedure morphx4;
procedure morph66;
procedure morph05a;
procedure morph08a;
procedure morph32a;
procedure morph39a;
procedure morph05b;

import variable Master_Ptr;
import variable Morpheus_Ptr;

variable MALE;
variable ONTHEJOB;
variable DESTROYED;
variable LIED;
variable ONCEBEFORE;
variable TRESPASS;
variable Signal_wait;
variable deliver_player;
variable Only_Once := 1;

#define float(x, y)                    float_msg(self_obj, mstr(x), y)

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      if (CUR_MAP_CHILDRN2) then
         set_self_team(TEAM_CATHEDRAL);
      else
         set_self_team(TEAM_MASTER_LAIR);
      set_self_ai(AI_COC_MORPHEUS);
   end
   Morpheus_Ptr := self_obj;
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure timed_event_p_proc begin
   if (fixed_param == 1) then begin
      if (self_can_see_dude) then
         dialogue_system_enter;
      else
         Signal_wait := 0;
   end
   else if ((fixed_param == 2) and not(combat_is_initialized)) then begin
      if not(is_loading_game) then set_self_invisible;
   end
end

procedure pickup_p_proc begin
   set_local_var(5, 2);
end

procedure critter_p_proc begin
   if (global_var(GVAR_MORPHEUS_DELIVERS_PLAYER) == 200) then begin
      destroy_object(self_obj);
   end

   if (global_var(GVAR_MORPHEUS_DELIVERS_PLAYER) == 3) then begin
      if not(is_loading_game) then set_self_invisible;
   end

   if (global_var(GVAR_MORPHEUS_DELIVERS_PLAYER) == 1) then begin
      set_global_var(GVAR_MORPHEUS_DELIVERS_PLAYER, 2);
      add_timer_event(Master_Ptr, game_ticks(5), 1);
      add_timer_event(self_obj, game_ticks(5), 2);
      dialogue_system_enter;
   end

   if (local_var(5) == 2) then begin
      set_local_var(5, 1);
      attack(dude_obj);
   end

   if (self_tile == 23457) then begin
      if not(is_loading_game) then set_self_invisible;
   end
end

procedure talk_p_proc begin
   set_tma_data(NAME, 1000, -1, -1, TMA_MSG_DONTKNOW_START, TMA_MSG_DONTKNOW_END);

   dude_look_at_self;
   get_reaction
   MALE := dude_is_male;

   if (local_var(5) != 0) then begin
      float_msg(self_obj, gen_mstr(172), FLOAT_MSG_RED);
      call morphcbt;
   end
   else if (global_var(GVAR_MORPHEUS_DELIVERS_PLAYER) == 2) then begin
      call morph66;
      self_walk_to_tile(23457);
   end
   else if (Signal_wait) then begin
      Signal_wait := 0;
      start_gdialog(53, self_obj, 4, 2, 8);
      gsay_start;
      call morph04a;
      gsay_end;
      end_dialogue;
   end
   else if (CUR_MAP_CHILDRN1) then begin
      start_gdialog(53, self_obj, 4, 2, 8);
      gsay_start;
      call morph28;
      gsay_end;
      end_dialogue;
   end
   else if (global_var(GVAR_MORPHEUS_DELIVERS_PLAYER) == 3) then begin
      float_msg(self_obj, gen_mstr(171), FLOAT_MSG_RED);
   end
   else begin
      start_gdialog(53, self_obj, 4, 2, 8);
      gsay_start;
      call morph02;
      gsay_end;
      end_dialogue;
   end
end

procedure morphend begin
end

procedure morphcbt begin
   set_local_var(5, 2);
end

procedure morph02 begin
   Reply(101);
   NOption(102, morph02_1, 4);
   NOption(103, morph02_3, 5);
   NOption(mstr(104) + dude_name + mstr(105), morph27, 4);
   BOption(106, morph06, 4);
   NLowOption(107, morph02a);
end

procedure morph02a begin
   BMessage(108);
   call morphcbt;
end

procedure morph02_1 begin
   if dude_wearing_coc_robe then begin
      call morph02_2;
   end
   else begin
      call morph06;
   end
end

procedure morph02_2 begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call morph03;
   end
   else begin
      call morph06;
   end
end

procedure morph02_3 begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call morph07;
   end
   else begin
      call morph26;
   end
end

procedure morph03 begin
   Reply(109);
   NOption(110, morph03_1, 4);
   NOption(111, morph03_2, 5);
   NOption(112, morph23, 4);
   BOption(113, morph24, 4);
   NOption(114, morph06, 4);
end

procedure morph03_1 begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call morph04;
   end
   else begin
      call morph05;
   end
end

procedure morph03_2 begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
      call morph04;
   end
   else begin
      call morph05;
   end
end

procedure morph04 begin
   NMessage(115);
   call morphx;
end

procedure morph04a begin
   set_local_var(5, 2);
   BMessage(116);
   //float(116, FLOAT_MSG_LIGHT_RED);
   //call morphcbt;
end

procedure morph05 begin
   Reply(117);
   BOption(118, morph05a, 4);
   NOption(119, morph05b, 4);
   BOption(120, morph06, 4);
end

procedure morph06 begin
   BMessage(121);
   call morphcbt;
end

procedure morph07 begin
   Reply(122);
   NOption(123, morph08, 4);
   NOption(124, morph16, 4);
   NOption(125, morph07_1, 6);
end

procedure morph07_1 begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call morph20;
   end
   else begin
      call morph21;
   end
end

procedure morph08 begin
   Reply(126);
   NOption(127, morph08a, 5);
   NOption(128, morph12, 4);
   NOption(129, morph14, 5);
end

procedure morph09 begin
   Reply(130);
   NOption(131, morph10, 5);
   NOption(132, morph10, 5);
   BOption(133, morph06, 4);
   BOption(134, morph11, 4);
end

procedure morph10 begin
   Reply(135);
   BOption(136, morph11, 4);
   NOption(137, morph12, 4);
   NOption(138, morph10_1, 4);
end

procedure morph10_1 begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      set_local_var(1, 2);
      call morph13;
   end
   else begin
      call morph11;
   end
end

procedure morph11 begin
   BMessage(139);
   call morphcbt;
end

procedure morph12 begin
   Reply(140);
   NOption(141, morphx2, 4);
   BOption(142, morphcbt, 4);
end

procedure morph13 begin
   NMessage(143);
   call morphx2;
end

procedure morph14 begin
   Reply(144);
   NOption(145, morph12, 4);
   BOption(146, morph11, 4);
   BOption(147, morph15, 4);
end

procedure morph15 begin
   BMessage(148);
   call morphcbt;
end

procedure morph16 begin
   Reply(149);
   NOption(150, morph17, 4);
   NOption(151, morph17, 4);
end

procedure morph17 begin
   Reply(152);
   NOption(153, morph18, 4);
   NOption(154, morph18, 4);
end

procedure morph18 begin
   Reply(155);
   NOption(156, morph18_1, 4);
   NOption(157, morph18_2, 4);
end

procedure morph18_1 begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -5))) then begin
      call morph19;
   end
   else begin
      call morph15;
   end
end

procedure morph18_2 begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -15))) then begin
      call morph12;
   end
   else begin
      call morph15;
   end
end

procedure morph19 begin
   Reply(158);
   BOption(159, morphcbt, 4);
   NOption(160, morphx2, 4);
end

procedure morph20 begin
   BMessage(161);
   call morphcbt;
end

procedure morph21 begin
   Reply(162);
   NOption(163, morph08, 4);
   NOption(164, morph16, 4);
end

procedure morph23 begin
   Reply(165);
   NOption(166, morph12, 4);
   NOption(167, morph16, 4);
   BOption(168, morph11, 4);
   BOption(169, morph15, 4);
end

procedure morph24 begin
   Reply(170);
   BOption(171, morphcbt, 4);
   BOption(172, morphcbt, 7);
   BOption(173, morphcbt, 4);
end

procedure morph26 begin
   Reply(174);
   NOption(175, morph12, 4);
   NOption(176, morph16, 5);
   BOption(177, morph11, 4);
   BOption(178, morph15, 4);
end

procedure morph27 begin
   Reply(179);
   NOption(180, morph02_1, 4);
   NOption(181, morph27_1, 4);
end

procedure morph27_1 begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
      call morph07;
   end
   else begin
      call morph06;
   end
end

procedure morph28 begin
   Reply(182);
   NOption(183, morph29, 5);
   NOption(184, morphend, 4);
   NLowOption(185, morph42c);
end

procedure morph29 begin
   Reply(186);
   NOption(187, morph30, 4);
   NOption(188, morphend, 4);
end

procedure morph30 begin
   gsay_reply(0, 0);
   NOption(189, morph31, 4);
   NOption(190, morphend, 4);
   NOption(191, morph42a, 4);
end

procedure morph31 begin
   Reply(192);
   NOption(193, morph32, 4);
   NOption(194, morph39, 4);
end

procedure morph32 begin
   Reply(195);
   BOption(196, morph32a, 4);
   NOption(197, morph38, 4);
end

procedure morph33 begin
   Reply(198);
   NOption(199, morph34, 4);
   NOption(200, morph33_1, 4);
end

procedure morph33_1 begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -5))) then begin
      call morph35;
   end
   else begin
      call morph37;
   end
end

procedure morph34 begin
   NMessage(201);
   call morphx4;
end

procedure morph35 begin
   Reply(202);
   NOption(203, morph36, 4);
   NOption(204, morphend, 4);
end

procedure morph36 begin
   NMessage(205);
   call morph30;
end

procedure morph37 begin
   GMessage(206);
   call morphx4;
end

procedure morph38 begin
   Reply(207);
   NOption(208, morph36, 4);
   NOption(209, morphend, 4);
end

procedure morph39 begin
   Reply(210);
   BOption(211, morph39a, 4);
   NOption(212, morph39_1, 4);
end

procedure morph39_1 begin
end

procedure morph40 begin
   NMessage(213);
   call morph30;
end

procedure morph41 begin
   Reply(214);
   NOption(215, morph30, 4);
   NOption(216, morphend, 4);
end

procedure morph42 begin
   Reply(217);
   NOption(218, morph36, 4);
   NOption(219, morphend, 4);
end

procedure morph42a begin
   Reply(220);
   NOption(221, morph42a_1, 4);
end

procedure morph42a_1 begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call morph42b;
   end
   else begin
      call morph42c;
   end
end

procedure morph42b begin
   NMessage(222);
   call morphx2;
end

procedure morph42c begin
   NMessage(223);
   call morphx4;
end

procedure morph45 begin
   NMessage(224);
end

procedure morph46 begin
   NMessage(225);
end

procedure morph47 begin
   NMessage(226);
end

procedure morph48 begin
   NMessage(227);
end

procedure morph49 begin
   NMessage(228);
end

procedure morph50 begin
   NMessage(229);
end

procedure morph51 begin
   NMessage(230);
end

procedure morph52 begin
   NMessage(231);
end

procedure morph53 begin
   NMessage(232);
end

procedure morph54 begin
   NMessage(233);
end

procedure morph55 begin
   NMessage(234);
end

procedure morph56 begin
   NMessage(235);
end

procedure morph57 begin
   NMessage(236);
end

procedure morph58 begin
   NMessage(237);
end

procedure morph59 begin
   NMessage(238);
end

procedure morph60 begin
   NMessage(239);
end

procedure morph61 begin
   NMessage(240);
end

procedure morph62 begin
   NMessage(241);
end

procedure morph63 begin
   NMessage(242);
end

procedure morph64 begin
   NMessage(243);
end

procedure morph65 begin
   NMessage(244);
end

procedure morphx begin
   Signal_wait := 1;
   add_timer_event(self_obj, game_ticks(15), 1);
end

procedure morphx2 begin
   deliver_player := 1;
   set_global_var(GVAR_MORPHEUS_DELIVERS_PLAYER, 100);
   set_global_var(GVAR_PREVENT_REVULSION_DAMAGE, 1);
   load_map(MAP_MSTRLR34, 12);
end

procedure morphx4 begin
end

procedure morph66 begin
   float(245, FLOAT_MSG_RED);
end

procedure morph05a begin
   DownReact
   call morph06;
end

procedure morph08a begin
   DownReact
   call morph09;
end

procedure morph32a begin
   DownReact
   call morph33;
end

procedure morph39a begin
   DownReact
   call morph33;
end

procedure morph05b begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call morph07;
   end
   else begin
      call morph26;
   end
end

procedure damage_p_proc begin
   set_local_var(5, 1);
end

procedure destroy_p_proc begin
   Morpheus_Ptr := 0;

   set_global_var(GVAR_MORPHEUS_DELIVERS_PLAYER, 200);
   give_xp_msg(EXP_KILLED_MORPHEUS, mstr(500));
   inc_inv_evil_crit
end
