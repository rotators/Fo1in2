/*

   Cathedral - Mad Doctor?

*/

/* Include Files */
#include "define.h"
#include "necropolis.h"

#define NAME                    SCRIPT_DOCWU
#define TOWN_REP_VAR            (GVAR_TOWN_REP_CATHEDRAL)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure timed_event_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure social_skills;

procedure DocWu00;
procedure DocWu01;
procedure DocWu02;
procedure DocWu03;
procedure DocWu04;
procedure DocWu05;
procedure DocWu06;
procedure DocWu06a;
procedure DocWu07;
procedure DocWu08;
procedure DocWu09;
procedure DocWu10;
procedure DocWu10a;
procedure DocWu10b;
procedure DocWu10c;
procedure DocWu11;
procedure DocWu12;
procedure DocWu13;
procedure DocWu14;
procedure DocWu15;
procedure DocWu16;
procedure DocWu17;
procedure DocWu17a;
procedure DocWu17b;
procedure DocWu18;
procedure DocWu19;
procedure DocWu19a;
procedure DocWu19b;
procedure DocWu20;
procedure DocWu20a;
procedure DocWu20b;
procedure DocWu21;
procedure DocWu21a;
procedure DocWu22;
procedure DocWu23;
procedure DocWu24;
procedure DocWu24a;
procedure DocWu24b;
procedure DocWuOpts1;
procedure DocWuOpts2;
procedure DocWuOpts3;
procedure DocWuOpts4;
procedure DocWuOpts5;
procedure DocWuOpts5a;
procedure DocWuEnd;

variable healing;
variable Only_Once := 1;
variable tmp_hostile;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_CATHEDRAL);
      set_self_ai(AI_CHILDREN_TRUE);
   end
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
end

procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure timed_event_p_proc begin
   if (fixed_param == 1) then begin
      if ((healing == 1) or (healing == 3)) then
         float_msg(dude_obj, mstr(138), FLOAT_MSG_RED);
      else if (healing == 2) then
         float_msg(dude_obj, mstr(152), FLOAT_MSG_RED);
      else  if (healing == 4) then
         float_msg(dude_obj, mstr(175), FLOAT_MSG_RED);
      else if (healing == 5) then
         float_msg(self_obj, mstr(150), FLOAT_MSG_YELLOW);
      else if (healing == 6) then
         float_msg(self_obj, mstr(178), FLOAT_MSG_YELLOW);
      add_timer_event(self_obj, game_ticks(3), 2);
   end
   else if (fixed_param == 2) then begin
      if (healing < 4) then
         float_msg(self_obj, mstr(139), FLOAT_MSG_YELLOW);
      else if (healing == 4) then
         float_msg(self_obj, mstr(176), FLOAT_MSG_YELLOW);
      add_timer_event(self_obj, game_ticks(3), 3);
   end
   else if (fixed_param == 3) then begin
      if (healing == 1) then begin
         if (dude_is_male) then
            float_msg(self_obj, mstr(140), FLOAT_MSG_YELLOW);
         else
            float_msg(self_obj, mstr(141), FLOAT_MSG_YELLOW);
      end
      else if (healing == 2) then begin
         float_msg(self_obj, mstr(153), FLOAT_MSG_YELLOW);
      end
      else if (healing == 3) then begin
         if (dude_is_male) then
            float_msg(self_obj, mstr(167), FLOAT_MSG_YELLOW);
         else
            float_msg(self_obj, mstr(168), FLOAT_MSG_YELLOW);
      end
   end
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_COC);

   dude_look_at_self;
   get_reaction

   healing := 0;
   if (local_var(5) == 1) then begin
      start_dialog_at_node(DocWu00);
   end
   else if (local_var(6) == 1) then begin
      start_dialog_at_node(DocWu01);
   end
   else if (local_var(7) == 1) then begin
      start_dialog_at_node(DocWu02);
   end
   else begin
      start_dialog_at_node(DocWu03);
   end

   if (healing) then begin
      use_obj(dude_obj);
      add_timer_event(self_obj, game_ticks(2), 1);
   end
end

procedure destroy_p_proc begin
   inc_inv_evil_crit
end

procedure social_skills begin
   get_reaction
   dialogue_system_enter;
end

procedure DocWu00 begin
   variable LVar0 := 0;
   set_local_var(4, 1);
   set_local_var(5, 1);
   if (dude_is_male) then begin
      Reply(mstr(102));
   end
   else begin
      Reply(mstr(103));
   end
   NOption(106, DocWu04, 7);
   call DocWuOpts1;
   NOption(109, DocWu07, 4);
   call DocWuOpts2;
   NOption(111, DocWu09, 4);
   call DocWuOpts3;
end

procedure DocWu01 begin
   set_local_var(6, 1);
   Reply(113);
   NOption(114, DocWu11, 7);
   call DocWuOpts1;
   NOption(115, DocWu12, 4);
   call DocWuOpts2;
   NOption(116, DocWu09, 4);
   call DocWuOpts3;
end

procedure DocWu02 begin
   set_local_var(7, 1);
   Reply(117);
   NOption(118, DocWu13, 7);
   call DocWuOpts1;
   NOption(119, DocWu12, 4);
   call DocWuOpts2;
   NOption(120, DocWu14, 4);
   call DocWuOpts3;
end

procedure DocWu03 begin
   set_local_var(5, 0);
   set_local_var(6, 0);
   set_local_var(7, 0);
   Reply(121);
   NOption(122, DocWu15, 7);
   call DocWuOpts1;
   NOption(123, DocWu12, 4);
   call DocWuOpts2;
   NOption(124, DocWu14, 4);
   call DocWuOpts3;
end

procedure DocWu04 begin
   Reply(125);
   NOption(126, DocWu16, 7);
   call DocWuOpts4;
end

procedure DocWu05 begin
   Reply(130);
   NOption(101, DocWuEnd, 1);
end

procedure DocWu06 begin
   Reply(131);
   NOption(100, DocWu06a, 1);
end

procedure DocWu06a begin
   healing := 1;
end

procedure DocWu07 begin
   Reply(142);
   call DocWuOpts4;
end

procedure DocWu08 begin
   Reply(143);
   NOption(101, DocWuEnd, 1);
end

procedure DocWu09 begin
   Reply(144);
   NOption(145, DocWu06, 4);
   NOption(146, DocWu23, 4);
   NOption(147, DocWu24, 4);
end

procedure DocWu10 begin
   Reply(148);
   NOption(100, DocWu10a, 1);
end

procedure DocWu10a begin
   Reply(151);
   NOption(100, DocWu10c, 1);
end

procedure DocWu10b begin
   healing := 5;
end

procedure DocWu10c begin
   healing := 2;
end

procedure DocWu11 begin
   Reply(154);
   call DocWuOpts4;
end

procedure DocWu12 begin
   Reply(155);
   call DocWuOpts4;
end

procedure DocWu13 begin
   Reply(156);
   call DocWuOpts4;
end

procedure DocWu14 begin
   Reply(157);
   NOption(158, DocWu06, 4);
   NOption(159, DocWu23, 4);
   NOption(160, DocWu24, 4);
end

procedure DocWu15 begin
   Reply(161);
   NOption(162, DocWu06, 4);
   NOption(163, DocWu23, 4);
   NOption(160, DocWu24, 4);
end

procedure DocWu16 begin
   Reply(164);
   NOption(162, DocWu06, 4);
   NOption(163, DocWu23, 4);
   NOption(160, DocWu24, 4);
end

procedure DocWu17 begin
   Reply(165);
   NOption(100, DocWu17a, 1);
end

procedure DocWu17a begin
   Reply(166);
   NOption(100, DocWu17b, 1);
end

procedure DocWu17b begin
   healing := 3;
end

procedure DocWu18 begin
   Reply(169);
   NOption(101, DocWuEnd, 1);
end

procedure DocWu19 begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   LVar1 := dude_max_hp;
   LVar0 := dude_cur_hp;
   if (LVar0 == LVar1) then begin
      Reply(170);
      NOption(101, DocWuEnd, 1);
   end
   else begin
      if (LVar0 > (LVar1 / 2)) then begin
         call DocWu19a;
      end
      else begin
         call DocWu19b;
      end
   end
end

procedure DocWu19a begin
   Reply(171);
   NOption(127, DocWu06, 4);
   NOption(173, DocWu23, 4);
end

procedure DocWu19b begin
   Reply(171);
   NOption(127, DocWu06, 4);
   NOption(173, DocWu18, 4);
end

procedure DocWu20 begin
   Reply(174);
   NOption(100, DocWu20a, 1);
end

procedure DocWu20a begin
   Reply(137);
   NOption(100, DocWu20b, 1);
end

procedure DocWu20b begin
   healing := 4;
end

procedure DocWu21 begin
   Reply(177);
   NOption(100, DocWu21a, 1);
end

procedure DocWu21a begin
   healing := 6;
end

procedure DocWu22 begin
   Reply(179);
   NOption(101, DocWuEnd, 1);
end

procedure DocWu23 begin
   Reply(180);
   NOption(101, DocWuEnd, 1);
end

procedure DocWu24 begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   LVar1 := dude_max_hp;
   LVar0 := dude_cur_hp;
   if (LVar0 == LVar1) then begin
      Reply(170);
      NOption(101, DocWuEnd, 1);
   end
   else begin
      if (LVar0 > (LVar1 / 2)) then begin
         call DocWu24a;
      end
      else begin
         call DocWu24b;
      end
   end
end

procedure DocWu24a begin
   Reply(181);
   NOption(127, DocWu17, 4);
   NOption(173, DocWu23, 4);
end

procedure DocWu24b begin
   Reply(182);
   NOption(183, DocWu06, 4);
   NOption(173, DocWu23, 4);
end

procedure DocWuOpts1 begin
   NOption(107, DocWu05, 4);
   NOption(108, DocWu06, 4);
end

procedure DocWuOpts2 begin
   NOption(110, DocWu08, 4);
end

procedure DocWuOpts3 begin
   NLowOption(112, DocWu10);
   NLowOption(184, DocWuEnd);
end

procedure DocWuOpts4 begin
   NOption(127, DocWu17, 4);
   NOption(128, DocWu18, 4);
   NOption(129, DocWu19, 4);
end

procedure DocWuOpts5 begin
   Reply(132);
   NOption(133, DocWuOpts5a, 7);
   NOption(134, DocWu21, 4);
   NOption(135, DocWu22, 4);
   NOption(136, DocWuOpts5a, 4);
end

procedure DocWuOpts5a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call DocWu20;
   end
   else begin
      call DocWu21;
   end
end

procedure DocWuEnd begin
end

