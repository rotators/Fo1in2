/*

   Cathedral - secret door to Master's Lair

*/

/* Include Files */
#include "define.h"

#define NAME                    SCRIPT_DOOR

#include "command.h"

/* Standard Script Procedures */
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure map_update_p_proc;
procedure map_enter_p_proc;
procedure damage_p_proc;

import variable J_Door_Ptr;

variable cantopen;

procedure start begin
end

procedure timed_event_p_proc begin
   if (not(combat_is_initialized)) then begin
      obj_close(self_obj);
   end
end

procedure use_p_proc begin
   cantopen := 0;
   if source_obj == dude_obj then begin
      cantopen := 1;
      if (dude_tile == 27913) then begin
         cantopen := 0;
      end
      else if (dude_tile == 28113) then begin
         cantopen := 0;
      end
      else if (dude_tile == 28313) then begin
         cantopen := 0;
      end
   end
   if ((local_var(0) == 0) and cantopen) then begin
      script_overrides;
      display_msg(mstr(104));//{104}{}{The door is locked.}
   end
   add_timer_event(self_obj, game_ticks(20), 1);
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(201));//{201}{}{You notice some irregularities in the wall.}
end

procedure use_obj_on_p_proc begin
   variable Item := 0;
   variable Skill := 0;

   Item := obj_being_used_with;
   Skill := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 20);
   if (obj_pid(Item) == PID_LOCKPICKS or obj_pid(Item) == PID_EXP_LOCKPICK_SET) then begin
      script_overrides;
      display_msg(mstr(200));//{200}{}{There is no lock on this door to pick.}
   end
end

procedure use_skill_on_p_proc begin
   script_overrides;
   display_msg(mstr(200));//{200}{}{There is no lock on this door to pick.}
end

procedure map_update_p_proc begin
   J_Door_Ptr := self_obj;
end

procedure map_enter_p_proc begin
   J_Door_Ptr := self_obj;
end

procedure damage_p_proc begin
   if (weapon_dmg_type(target_obj) == DMG_explosion) then begin
      if not(is_loading_game) then begin
         set_self_invisible;
      end
      set_local_var(1, 1);
      rm_timer_event(self_obj);
   end
   else begin
      display_msg(mstr(193));
   end
end
