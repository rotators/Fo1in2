/*

   Cathedral - Dumar, cut content

*/

/* Include Files */
#include "define.h"
//#include "necropolis.h"

#define NAME                    SCRIPT_DUMAR
#define TOWN_REP_VAR            (GVAR_TOWN_REP_CATHEDRAL)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure dumar00;
procedure dumar01;
procedure dumar02;
procedure dumar03;
procedure dumar04;
procedure dumar05;
procedure dumar06;
procedure dumar07;
procedure dumarend;

variable rndx;
variable HEREBEFORE;
variable mad;

procedure start begin
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(100);
end

procedure description_p_proc begin
   script_overrides;
   display_msg(100);
end

procedure talk_p_proc begin
   dude_look_at_self;

   if (mad == 1) then begin
      attack(dude_obj);
   end
   else begin
      start_dialog(self_obj, 4);
      gsay_start;
      if (HEREBEFORE) then begin
         call dumar05;
      end
      else begin
         HEREBEFORE := 1;
         call dumar00;
      end
      gsay_end;
      end_dialogue;
   end
end

procedure dumar00 begin
   sayReply(0, mstr(101));
   if (-dude_iq >= -3) then begin
      sayOption(mstr(102), dumar04);
   end
   if (dude_iq >= 6) then begin
      sayOption(mstr(103), dumar03);
   end
   if (dude_iq >= 4) then begin
      sayOption(mstr(104), dumar06);
   end
   if (dude_iq >= 4) then begin
      sayOption(mstr(105), dumar07);
   end
   if (dude_iq >= 4) then begin
      sayOption(mstr(105), dumar00);
   end
   if (dude_iq >= 5) then begin
      sayOption(mstr(107), dumar05);
   end
   if (dude_iq >= 6) then begin
      sayOption(mstr(108), dumar02);
   end
end

procedure dumar01 begin
   sayMessage(0, mstr(109));
   call dumarend;
end

procedure dumar02 begin
   sayMessage(0, mstr(110));
   call dumarend;
end

procedure dumar03 begin
   sayMessage(0, mstr(111));
   call dumarend;
end

procedure dumar04 begin
   sayMessage(0, mstr(112));
   call dumarend;
end

procedure dumar05 begin
   sayMessage(0, mstr(113));
   call dumarend;
end

procedure dumar06 begin
   sayMessage(0, mstr(114));
   mad := 1;
   call dumarend;
end

procedure dumar07 begin
   sayMessage(0, mstr(115));
   call dumarend;
end

procedure dumarend begin
end


procedure destroy_p_proc begin
   inc_neutral_critter
end


procedure damage_p_proc begin
   display_msg(mstr(116));
end
