/*

   Cathedral - Brainwashed children

*/

/* Include Files */
#include "define.h"
//#include "maps/v13ent.h"

#define NAME                    SCRIPT_GIDEON
#define TOWN_REP_VAR            (GVAR_TOWN_REP_CATHEDRAL)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure combat_p_proc;

procedure gideon00;
procedure gideon01;
procedure gideon01a;
procedure gideon02;
procedure gideon02a;
procedure gideon03;
procedure gideon04;
procedure gideon04a;
procedure gideon04b;
procedure gideon04c;
procedure gideon05;
procedure gideon05a;
procedure gideon05b;
procedure gideon06;
procedure gideon06a;
procedure gideon07;
procedure gideon07a;
procedure gideon07b;
procedure gideon07c;
procedure gideon08;
procedure gideon09;
procedure gideon09a;
procedure gideon09b;
procedure gideon09c;
procedure gideon10;
procedure gideon11;
procedure gideon12;
procedure gideon12a;
procedure gideon12b;
procedure gideon13;
procedure gideon13a;
procedure gideonnull;
procedure dialog_end;

#define LVAR_Herebefore       (4)

import variable contpan;
import variable Psy_Field_Ptr;

variable tmp_hostile;
variable Only_Once := 1;
variable temp;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_50);
      set_self_ai(AI_BRAINWASHED_CHILDREN);
   end
end

procedure combat begin
   use_obj(contpan);
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   set_tma_data(tma_source_generic, TMA_MSG_MBASE, -1, -1, 997, 999);

   dude_look_at_self;
   if (local_var(LVAR_Herebefore) == 0) then
      start_dialog_at_node(gideon00);
   else
      start_dialog_at_node(gideon01);
   set_local_var(LVAR_Herebefore, 1);
end

procedure destroy_p_proc begin
   inc_inv_evil_crit
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure combat_p_proc begin
end

procedure gideon00 begin
   Reply(101);
   ROption(102, gideon03, 8);
   ROption(103, gideon02, 4);
   ROption(104, gideon07, 4);
   if (has_rep_berserker) then begin
      ROption(105, gideon07, 4);
   end
   RLowOption(106, gideon08);
end

procedure gideon01 begin
   Reply(107);
   ROption(108, gideon04, 8);
   ROption(109, dialog_end, 4);
   ROption(112, gideon01a, 4);
end

procedure gideon01a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
      call gideon03;
   end
   else begin
      call gideon08;
   end
end

procedure gideon02 begin
   Reply(113);
   ROption(114, dialog_end, 4);
   ROption(112, gideon02a, 4);
   RLowOption(115, gideon08);
end

procedure gideon02a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
      call gideon09;
   end
   else begin
      call gideon08;
   end
end

procedure gideon03 begin
   Reply(116);
   ROption(108, gideon04, 8);
   ROption(117, gideon04, 4);
   ROption(118, dialog_end, 4);
end

procedure gideon04 begin
   Reply(119);
   ROption(120, gideon05, 8);
   ROption(121, gideon04a, 4);
   ROption(122, gideon04b, 4);
   ROption(124, dialog_end, 4);
end

procedure gideon04a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -30))) then begin
      call gideon05;
   end
   else begin
      call gideon08;
   end
end

procedure gideon04b begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -30))) then begin
      call gideon03;
   end
   else begin
      call gideon11;
   end
end

procedure gideon04c begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -30))) then begin
      call gideon07;
   end
   else begin
      call gideon08;
   end
end

procedure gideon05 begin
   Reply(125);
   ROption(126, gideon06, 8);
   ROption(127, gideon05a, 4);
   if (has_rep_berserker) then begin
      ROption(128, gideon05b, 4);
   end
   ROption(129, dialog_end, 4);
end

procedure gideon05a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
      call gideon07;
   end
   else begin
      call gideon11;
   end
end

procedure gideon05b begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
      call gideon10;
   end
   else begin
      call gideon06;
   end
end

procedure gideon06 begin
   Reply(130);
   ROption(131, gideonnull, 8);
   if (has_rep_berserker) then begin
      ROption(132, combat, 4);
   end
   ROption(133, gideon06a, 4);
   ROption(134, dialog_end, 4);
end

procedure gideon06a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -30))) then begin
      call gideonnull;
   end
   else begin
      call gideon08;
   end
end

procedure gideon07 begin
   Reply(135);
   if (has_rep_berserker) then begin
      ROption(136, gideon07b, 4);
   end
   ROption(137, gideon07c, 4);
   ROption(138, dialog_end, 4);
end

procedure gideon07a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -30))) then begin
      call gideon10;
   end
   else begin
      call gideon08;
   end
end

procedure gideon07b begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
      call gideon10;
   end
   else begin
      call gideon11;
   end
end

procedure gideon07c begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -30))) then begin
      call gideon06;
   end
   else begin
      call gideon10;
   end
end

procedure gideon08 begin
   gsay_message(NAME, 139, RND_REACTION);
   call dialog_end;
end

procedure gideon09 begin
   Reply(107);
   ROption(141, gideon09a, 4);
   ROption(127, gideon09b, 4);
   ROption(124, dialog_end, 4);
end

procedure gideon09a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -30))) then begin
      call gideon04;
   end
   else begin
      call gideon08;
   end
end

procedure gideon09b begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
      call gideon07;
   end
   else begin
      call gideon11;
   end
end

procedure gideon09c begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -30))) then begin
      call gideon10;
   end
   else begin
      call gideon08;
   end
end

procedure gideon10 begin
   gsay_message(NAME, 143, RND_REACTION);
   call combat;
end

procedure gideon11 begin
   gsay_message(NAME, 144, RND_REACTION);
   call dialog_end;
end

procedure gideon12 begin
   Reply(145);
   ROption(146, gideon06, 8);
   ROption(147, gideon12a, 4);
   ROption(148, gideon13, 4);
   if (has_rep_berserker) then begin
      ROption(136, gideon12a, 4);
   end
   ROption(150, dialog_end, 4);
end

procedure gideon12a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call gideon13;
   end
   else begin
      call gideon07;
   end
end

procedure gideon12b begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call gideon10;
   end
   else begin
      call gideon08;
   end
end

procedure gideon13 begin
   Reply(130);
   ROption(131, gideonnull, 8);
   if (has_rep_berserker) then begin
      ROption(132, combat, 4);
   end
   ROption(133, gideon13a, 4);
   ROption(151, gideon07, 4);
   ROption(134, dialog_end, 4);
end

procedure gideon13a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -30))) then begin
      call gideonnull;
   end
   else begin
      call gideon08;
   end
end

procedure gideonnull begin
   if (local_var(5) == 0) then begin
      set_local_var(5, 1);
      use_obj(contpan);
      use_obj(dude_obj);
      add_obj_to_inven(dude_obj, create_object(PID_PSYCHIC_NULLIFIER, 0, 0));
      temp := 1000;
      give_xp_msg(temp, mstr(502));
      add_timer_event(self_obj, game_ticks(10), 1);
   end
end

procedure dialog_end begin
end
