/*

   Cathedral - Viola

*/

/* Include Files */
#include "define.h"
//#include "maps/v13ent.h"

#define NAME                    SCRIPT_VIOLA
#define TOWN_REP_VAR            (GVAR_TOWN_REP_CATHEDRAL)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;

procedure viola00;
procedure viola01;
procedure viola02;
procedure viola03;
procedure viola04;
procedure viola05;
procedure viola05a;
procedure viola06;
procedure viola06a;
procedure viola07;
procedure viola07a;
procedure viola08;
procedure viola08a;
procedure viola09;
procedure viola10;
procedure viola11;
procedure viola12;
procedure viola13;
procedure viola14;
procedure viola15;
procedure viola16;
procedure viola17;
procedure viola18;
procedure viola19;
procedure viola20;
procedure viola21;
procedure viola22;
procedure viola23;
procedure viola24;
procedure viola25;
procedure viola26;
procedure viola27;
procedure viola28;
procedure viola29;
procedure viola30;
procedure viola31;
procedure viola32;
procedure viola33;
procedure viola34;
procedure viola35;
procedure viola36;
procedure viola37;
procedure viola38;
procedure viola39;
procedure viola40;
procedure viola41;
procedure viola42;
procedure viola43;
procedure viola44;
procedure viola45;
procedure viola46;
procedure viola47;
procedure viola48;
procedure viola49;
procedure viola50;
procedure viola51;
procedure viola52;
procedure viola53;
procedure viola53a;
procedure viola54;
procedure viola55;
procedure viola56;
procedure viola57;
procedure viola58;
procedure viola59;
procedure viola60;
procedure viola61;
procedure viola62;
procedure viola63;
procedure viola64;
procedure viola65;
procedure viola66;
procedure viola67;
procedure viola68;
procedure viola69;
procedure viola70;
procedure viola71;
procedure viola72;
procedure viola73;
procedure viola74;
procedure viola75;
procedure viola76;
procedure violadone;
procedure violaend;
procedure violacombat;

variable tmp_hostile;
variable LASHERKNOWN;
variable Only_Once := 1;
variable TALKEDTOLAURA;
variable LAURAWARNING;

procedure start begin
   if Only_Once then begin
      set_self_team(TEAM_CATHEDRAL);
      set_self_ai(AI_CHILDREN_TRUE);
      Only_Once := 0;
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
end

procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure destroy_p_proc begin
   if (source_obj == dude_obj) then begin
      inc_inv_evil_crit
   end
end

procedure talk_p_proc begin
   dude_look_at_self;

   start_dialog(self_obj, 4);
   gsay_start;
   if ((local_var(4) == 1) and (dude_iq < 4)) then begin
      BMessage(143);
   end
   else begin
      if ((global_var(GVAR_CATHEDRAL_ENEMY) == 1) and not(dude_wearing_coc_robe)) then begin
         call viola00;
      end
      else begin
         if (TALKEDTOLAURA == 1) then begin
            if (LAURAWARNING == 0) then begin
               call viola01;
            end
            else begin
               call viola02;
            end
         end
         else if (dude_is_armed) then begin
            call viola03;
         end
         else if ((local_var(4) == 1) and (LAURAWARNING == 0)) then begin
            call viola04;
         end
         else if not(dude_is_armed) then begin
            if dude_wearing_coc_robe then begin
               call viola05;
            end
            else if (has_rep_champion) then begin
               call viola06;
            end
            else if (has_rep_childkiller and (has_rep_berserker)) then begin
               call viola07;
            end
            else begin
               call viola08;
            end
         end
      end
   end
   set_local_var(4, 1);
   gsay_end;
   end_dialogue;
end

procedure viola00 begin
   if (dude_is_male) then begin
      Reply(101);
   end
   else begin
      Reply(102);
   end
   NOption(103, viola09, 7);
   NOption(104, viola10, 7);
   NOption(105, viola11, 4);
   if (global_var(GVAR_ALCOHOL_ADDICT) == 1) then begin
      NOption(106, viola12, 4);
   end
   NOption(107, violacombat, 4);
   NLowOption(299, violaend);
   NLowOption(108, violacombat);
end

procedure viola01 begin
   LAURAWARNING := 1;
   Reply(109);
   NOption(110, viola13, 7);
   NOption(111, viola14, 4);
   NOption(112, viola15, 4);
   if (has_rep_berserker) then begin
      NOption(113, violacombat, 4);
   end
   NLowOption(114, violaend);
end

procedure viola02 begin
   NMessage(115);
end

procedure viola03 begin
   debug("msg!!");
   NMessage(116);
end

procedure viola04 begin
   Reply(117);
   NOption(118, viola15, 7);
   NOption(119, viola16, 4);
   NOption(120, viola17, 4);
   if (global_var(GVAR_ALCOHOL_ADDICT) == 1) then begin
      NOption(121, viola18, 4);
   end
   if (has_rep_berserker) then begin
      NOption(122, viola19, 4);
   end
   NLowOption(299, violaend);
end

procedure viola05 begin
   Reply(123);
   NOption(124, viola05a, 7);
   NOption(125, viola46, 4);
   NOption(126, viola47, 4);
   NOption(127, viola48, 4);
   if (has_rep_berserker) then begin
      NOption(128, viola49, 4);
   end
end

procedure viola05a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call viola44;
   end
   else begin
      call viola45;
   end
end

procedure viola06 begin
   if (dude_is_male) then begin
      Reply(129);
   end
   else begin
      Reply(130);
   end
   NOption(131, viola06a, 7);
   NOption(132, viola52, 4);
   NOption(133, viola47, 4);
   NOption(134, viola48, 4);
   if (has_rep_berserker) then begin
      NOption(135, viola49, 4);
   end
end

procedure viola06a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call viola50;
   end
   else begin
      call viola51;
   end
end

procedure viola07 begin
   if (dude_is_male) then begin
      Reply(136);
   end
   else begin
      Reply(137);
   end
   NOption(138, viola07a, 7);
   NOption(139, viola52, 4);
   NOption(140, viola47, 4);
   NOption(141, viola48, 4);
   if (has_rep_berserker) then begin
      NOption(142, viola49, 4);
   end
end

procedure viola07a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call viola50;
   end
   else begin
      call viola51;
   end
end

procedure viola08 begin
   Reply(143);
   NOption(144, viola08a, 7);
   NOption(145, viola55, 4);
   if (has_rep_berserker) then begin
      NOption(146, viola40, 4);
   end
   NLowOption(299, violaend);
end

procedure viola08a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call viola53;
   end
   else begin
      call viola54;
   end
end

procedure viola09 begin
   NMessage(147);
end

procedure viola10 begin
   NMessage(148);
end

procedure viola11 begin
   NMessage(149);
end

procedure viola12 begin
   NMessage(150);
end

procedure viola13 begin
   Reply(151);
   NOption(152, viola20, 7);
   NOption(153, viola21, 4);
   NOption(154, viola22, 4);
   if (has_rep_berserker) then begin
      NOption(155, viola23, 4);
   end
end

procedure viola14
begin
   Reply(156);
   NOption(157, viola16, 7);
   NOption(158, viola21, 4);
   NOption(159, viola22, 4);
   if (has_rep_berserker) then begin
      NOption(160, viola23, 4);
   end
end

procedure viola15
begin
   NMessage(161);
end

procedure viola16
begin
   NMessage(162);
end

procedure viola17
begin
   NMessage(163);
end

procedure viola18
begin
   NMessage(164);
end

procedure viola19
begin
   NMessage(165);
end

procedure viola20
begin
   Reply(166);
   NOption(167, viola24, 7);
   NOption(168, viola24, 4);
   NOption(169, viola25, 4);
   NOption(170, viola26, 4);
   NOption(171, viola27, 4);
end

procedure viola21
begin
   NMessage(172);
end

procedure viola22
begin
   Reply(173);
   NOption(174, viola41, 7);
   NOption(175, viola21, 4);
   NOption(176, viola42, 4);
   if (has_rep_berserker) then begin
      NOption(177, viola43, 4);
   end
end

procedure viola23
begin
   NMessage(178);
end

procedure viola24
begin
   Reply(179);
   NOption(180, viola28, 7);
   NOption(181, viola29, 7);
   NOption(182, viola30, 4);
   NOption(183, viola31, 4);
end

procedure viola25
begin
   Reply(184);
   NOption(185, viola31, 7);
   NOption(186, viola32, 4);
   NOption(187, viola33, 4);
   if (has_rep_berserker) then begin
      NOption(188, viola34, 4);
   end
end

procedure viola26
begin
   Reply(189);
   NOption(190, viola35, 7);
   NOption(191, viola32, 4);
   NOption(192, viola36, 4);
   if (has_rep_berserker) then begin
      NOption(193, viola37, 4);
   end
end

procedure viola27
begin
   Reply(194);
   NOption(195, viola29, 7);
   NOption(196, viola38, 4);
   NOption(197, viola39, 4);
   if (has_rep_berserker) then begin
      NOption(198, viola40, 4);
   end
end

procedure viola28
begin
   NMessage(199);
end

procedure viola29
begin
   NMessage(200);
end

procedure viola30
begin
   NMessage(201);
end

procedure viola31
begin
   NMessage(202);
end

procedure viola32
begin
   NMessage(203);
end

procedure viola33
begin
   NMessage(204);
end

procedure viola34
begin
   NMessage(205);
end

procedure viola35
begin
   NMessage(206);
end

procedure viola36
begin
   NMessage(207);
end

procedure viola37
begin
   NMessage(208);
end

procedure viola38
begin
   NMessage(209);
end

procedure viola39
begin
   NMessage(210);
end

procedure viola40
begin
   NMessage(211);
end

procedure viola41
begin
   Reply(212);
   NOption(213, viola28, 7);
   NOption(214, viola29, 7);
   NOption(215, viola32, 4);
   NOption(216, viola30, 4);
   NOption(217, viola31, 4);
   if (has_rep_berserker) then begin
      NOption(218, viola43, 4);
   end
end

procedure viola42
begin
   Reply(219);
   NOption(220, viola28, 7);
   NOption(221, viola29, 7);
   NOption(222, viola32, 4);
   NOption(223, viola30, 4);
   NOption(224, viola31, 4);
   if (has_rep_berserker) then begin
      NOption(225, viola43, 4);
   end
end

procedure viola43
begin
   NMessage(226);
end

procedure viola44
begin
   Reply(227);
   NOption(228, viola56, 7);
   NOption(229, viola16, 4);
   NOption(230, viola57, 4);
   if (has_rep_berserker) then begin
      NOption(231, viola49, 4);
   end
end

procedure viola45
begin
   NMessage(232);
end

procedure viola46
begin
   NMessage(233);
end

procedure viola47
begin
   Reply(234);
   NOption(235, viola58, 7);
   NOption(236, viola59, 7);
   NOption(237, viola60, 4);
   NOption(238, viola61, 4);
   NOption(239, viola62, 4);
end

procedure viola48
begin
   Reply(240);
   NOption(241, viola63, 7);
   NOption(242, viola64, 7);
   NOption(243, viola65, 4);
   NOption(244, viola66, 4);
   NOption(245, viola67, 4);
end

procedure viola49
begin
   NMessage(246);
end

procedure viola50
begin
   Reply(247);
   NOption(248, viola68, 7);
   NOption(249, viola69, 7);
   NOption(250, viola70, 7);
   NOption(251, viola49, 7);
   NOption(252, viola16, 7);
end

procedure viola51
begin
   NMessage(253);
end

procedure viola52
begin
   Reply(254);
   NOption(255, viola71, 7);
   NOption(256, viola72, 7);
   NOption(257, viola73, 4);
   NOption(258, viola74, 4);
   if (has_rep_berserker) then begin
      NOption(259, viola75, 4);
   end
end

procedure viola53
begin
   Reply(260);
   NOption(261, viola53a, 7);
   NOption(262, viola52, 4);
   NOption(263, viola47, 4);
   NOption(264, viola48, 4);
   NOption(265, viola49, 4);
end

procedure viola53a
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call viola50;
   end
   else begin
      call viola51;
   end
end

procedure viola54
begin
   NMessage(266);
end

procedure viola55
begin
   NMessage(267);
end

procedure viola56
begin
   NMessage(268);
end

procedure viola57
begin
   NMessage(269);
end

procedure viola58
begin
   NMessage(270);
end

procedure viola59
begin
   NMessage(271);
end

procedure viola60
begin
   NMessage(272);
end

procedure viola61
begin
   if (dude_is_male) then begin
      NMessage(273);
   end
   else begin
      NMessage(274);
   end
end

procedure viola62
begin
   if (dude_is_male) then begin
      NMessage(275);
   end
   else begin
      NMessage(276);
   end
end

procedure viola63
begin
   NMessage(277);
end

procedure viola64
begin
   Reply(278);
   NOption(279, viola63, 7);
   NOption(280, viola76, 7);
   NOption(281, viola65, 4);
   NOption(282, viola66, 4);
   NOption(283, viola67, 4);
end

procedure viola65
begin
   NMessage(284);
end

procedure viola66
begin
   NMessage(285);
end

procedure viola67
begin
   if (dude_is_male) then begin
      NMessage(286);
   end
   else begin
      NMessage(287);
   end
end

procedure viola68
begin
   NMessage(288);
end

procedure viola69
begin
   NMessage(289);
end

procedure viola70 begin
   if (dude_is_male) then begin
      NMessage(302);
   end
   else begin
      NMessage(303);
   end
end

procedure viola71 begin
   if (dude_is_male) then begin
      NMessage(304);
   end
   else begin
      NMessage(305);
   end
end

procedure viola72 begin
   if (dude_is_male) then begin
      NMessage(306);
   end
   else begin
      NMessage(307);
   end
end

procedure viola73 begin
   if (dude_is_male) then begin
      NMessage(300);
   end
   else begin
      NMessage(301);
   end
end

procedure viola74 begin
   NMessage(294);
end

procedure viola75 begin
   if (dude_is_male) then begin
      NMessage(295);
   end
   else begin
      NMessage(296);
   end
end

procedure viola76 begin
   NMessage(297);
end

procedure violadone begin
   NOption(298, violaend, 1);
end

procedure violaend begin
end

procedure violacombat begin
   set_global_var(GVAR_CATHEDRAL_ENEMY, 1);
   tmp_hostile := 1;
end
