/*

   Vault 13 - Yes, the Vault.

*/

#include "define.h"
#include "updatmap.h"
#include "command.h"
#include "maps/vault13.h"

procedure start;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure map_update_p_proc;

procedure Make_Critter;
procedure add_vsuits;

export variable armory_access;
export variable getting_ration;
export variable Officer_ptr;
export variable recipient;
export variable removal_ptr;
export variable revolting;
export variable SecDoor_ptr;
export variable traitor;
export variable VaultBox_ptr;
export variable WtrGrd_ptr;
export variable WtrThief_ptr;

variable gear;
variable kind := 0;
variable id := 0;
variable script := 0;
variable Critter := 0;
variable rndx := 0;

procedure start begin
end

procedure map_enter_p_proc begin
   set_light_level(100);
   if (map_first_run) then begin
      set_global_var(GVAR_QUEST_VAULT13_7_LEARN_AT_LIBRARY, 1);
   end

   if (v13_invaded) then
      set_map_var(MVAR_INVADED, 1);

   if (map_first_run) then begin
      if fo1in2_armor_vsuit_enabled then
         call add_vsuits;

      if (dude_is_male) then
         Officer_ptr := create_object_sid(PID_GUARD_1, 22093, 2, SCRIPT_OFFICER);
      else
         Officer_ptr := create_object_sid(PID_GUARD_2, 22093, 2, SCRIPT_OFFICER);

      gear := create_object(PID_10MM_PISTOL, 0, 0);
      add_obj_to_inven(Officer_ptr, gear);
      wield_obj_critter(Officer_ptr, gear);

      gear := create_object(PID_10MM_JHP, 0, 0);
      add_obj_to_inven(Officer_ptr, gear);

      gear := create_object(PID_STIMPAK, 0, 0);
      add_obj_to_inven(Officer_ptr, gear);
      critter_attempt_placement(Officer_ptr, 22093, 2);
      obj_rotate(Officer_ptr, 2);

      // TODO: Ugh, rewrite this.
      if fixt_enabled then begin
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 15077, 0);
         obj_rotate(Critter, 3);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 15875, 0);
         obj_rotate(Critter, 0);
         kind := 2;
         call Make_Critter;
         critter_attempt_placement(Critter, 14102, 0);
         obj_rotate(Critter, 2);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 15110, 0);
         obj_rotate(Critter, 1);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 15508, 0);
         obj_rotate(Critter, 4);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 17506, 1);
         obj_rotate(Critter, 0);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 17301, 1);
         obj_rotate(Critter, 2);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 22701, 1);
         obj_rotate(Critter, 5);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 19889, 1);
         obj_rotate(Critter, 1);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 22925, 1);
         obj_rotate(Critter, 0);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 19718, 1);
         obj_rotate(Critter, 1);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 20507, 1);
         obj_rotate(Critter, 3);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 17933, 2);
         obj_rotate(Critter, 5);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 18536, 2);
         obj_rotate(Critter, 4);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 21534, 2);
         obj_rotate(Critter, 2);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 20345, 2);
         obj_rotate(Critter, 5);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 17525, 2);
         obj_rotate(Critter, 4);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 18329, 2);
         obj_rotate(Critter, 0);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 19318, 2);
         obj_rotate(Critter, 1);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 21319, 2);
         obj_rotate(Critter, 5);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 17906, 2);
         obj_rotate(Critter, 0);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 17502, 2);
         obj_rotate(Critter, 3);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 17696, 2);
         obj_rotate(Critter, 5);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 17700, 2);
         obj_rotate(Critter, 5);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 17693, 2);
         obj_rotate(Critter, 2);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 18292, 2);
         obj_rotate(Critter, 5);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 19295, 2);
         obj_rotate(Critter, 3);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 18890, 2);
         obj_rotate(Critter, 0);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 21886, 2);
         obj_rotate(Critter, 2);
         kind := 2;
         call Make_Critter;
         critter_attempt_placement(Critter, 22691, 2);
         obj_rotate(Critter, 1);
         kind := 2;
         call Make_Critter;
         critter_attempt_placement(Critter, 22487, 2);
         obj_rotate(Critter, 3);
         kind := 2;
         call Make_Critter;
         critter_attempt_placement(Critter, 23892, 2);
         obj_rotate(Critter, 2);
         kind := 2;
         call Make_Critter;
         critter_attempt_placement(Critter, 24492, 2);
         obj_rotate(Critter, 5);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 25484, 2);
         obj_rotate(Critter, 0);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 25669, 2);
         obj_rotate(Critter, 1);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 26073, 2);
         obj_rotate(Critter, 3);
         kind := 0;
         call Make_Critter;
         critter_attempt_placement(Critter, 27078, 2);
         obj_rotate(Critter, 5);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 27269, 2);
         obj_rotate(Critter, 0);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 24079, 2);
         obj_rotate(Critter, 5);
         kind := 1;
         call Make_Critter;
         critter_attempt_placement(Critter, 21668, 2);
         obj_rotate(Critter, 0);
         kind := 2;
         call Make_Critter;
         critter_attempt_placement(Critter, 21860, 2);
         obj_rotate(Critter, 2);
      end
   end

   armory_access := map_var(MVAR_armory_access);
   revolting := map_var(MVAR_revolting);
   traitor := map_var(MVAR_traitor);

   set_global_var(GVAR_LOAD_MAP_INDEX, 0);
end

procedure map_update_p_proc begin
   set_light_level(100);
   if (removal_ptr != 0) then begin
      destroy_object(removal_ptr);
      removal_ptr := 0;
   end
end

procedure map_exit_p_proc begin
   if (global_var(GVAR_QUEST_VAULT13_5_WTR_THIEF) == 2) then begin
      if (WtrThief_ptr) then
         destroy_object(WtrThief_ptr);
   end
   set_map_var(MVAR_armory_access, armory_access);
   set_map_var(MVAR_revolting, revolting);
   set_map_var(MVAR_traitor, traitor);
end

procedure Make_Critter begin
   if not(kind) then begin// DWELLERS DWELLERS
      rndx := random(0, 5);
      if rndx == 0 then
         id := PID_VAULT_DWELLER_MALE;//   white male
      else if rndx == 1 then
         id := PID_VAULT_DWELLER_FEMALE;//   white female
      else if rndx == 2 then
         id := PID_VAULT_DWELLER_BLACK;//  black male
      else if rndx == 3 then
         id := PID_VAULT_DWELLER_MALE2;//  white male
      else if rndx == 4 then
         id := PID_VAULT_DWELLER_REDHEAD;//  redhead female
      else
         id := PID_VAULT_DWELLER_2;//   white male
   end
   else begin// TECHNICIANS TECHNICIANS
      if kind == 1 then begin
         rndx := random(0, 3);
         if rndx == 0 then
            id := PID_TECHNICIAN_2;//  white female
         else if rndx == 1 then
            id := PID_TECHNICIAN_1;//  black male
         else if rndx == 2 then
            id := PID_TECHNICIAN_4;//  redhead female
         else
            id := PID_TECHNICIAN_3;//  white male
      end
      else begin// GUARDS GUARDS GUARDS
         rndx := random(0, 3);
         if rndx == 0 then
            id := PID_GUARD_1;//  white female
         else if rndx == 1 then
            id := PID_GUARD_2;//  white male
         else if rndx == 2 then
            id := PID_GUARD_3;//  black male
         else
            id := PID_GUARD_8;// redhead female
      end
   end

   if random(0, 1) then
      script := SCRIPT_GENVAULT;
   else
      script := SCRIPT_VALTCTZN;
   Critter := create_object_sid(id, 0, 0, script);
end

procedure add_vsuits begin
   variable
      i, Item,
      locker_a := tile_contains_pid_obj(20499, 2, PID_LOCKER_CLEAN_LEFT),
      locker_b := tile_contains_pid_obj(20497, 2, PID_LOCKER_CLEAN_LEFT),
      locker_c := tile_contains_pid_obj(20897, 2, PID_LOCKER_CLEAN_RIGHT),
      lockers := [locker_a, locker_b, locker_c];

   foreach (i in lockers) begin
      Item := create_object(PID_V13_VSUIT, 0, 0);
      if (i != 0) then
         add_mult_objs_to_inven(i, Item, random(1, 5));
   end
end
