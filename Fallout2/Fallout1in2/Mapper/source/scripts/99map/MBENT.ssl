#include "define.h"
#include "command.h"
#include "updatmap.h"

#include "brotherhood.h"

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;

export variable Team9_Count := 4;
export variable radio_trick;
export variable ignoring_dude;
export variable removal_ptr;
export variable know_door_code;
export variable comptroller_status;

variable party_elevation;
variable dude_start_hex;

procedure radio_kludge;

procedure start begin
end

procedure map_enter_p_proc begin
   // Failsafe in case the wrong map loads after cutscene:
   if military_base_destroyed then
      load_map(MAP_MBDEAD, 0);

   Lighting;
   set_global_var(GVAR_WORLDMAPLIST_MILITARYBASE, 2);
   set_scout_quest_completed;

   if (map_first_run) then begin
      display_msg(message_str(SCRIPT_SHADYWST, 109));
   end

   // I have no idea why this is here -Lexx
   //radio_trick := map_var(0);
   //know_door_code := map_var(1);

   if (global_var(GVAR_LOAD_MAP_INDEX) == 0) then begin
      override_map_start(133, 111, 0, 5);
   end

   set_global_var(GVAR_LOAD_MAP_INDEX, 0);
end

procedure map_update_p_proc begin
   // Failsafe in case the wrong map loads after cutscene:
   if military_base_destroyed then
      load_map(MAP_MBDEAD, 0);

   Lighting;

   if (removal_ptr != 0) then begin
      destroy_object(removal_ptr);
      removal_ptr := 0;
   end
end

procedure map_exit_p_proc begin
   // Failsafe to get the car:
   if vats_destruction_started and not(military_base_destroyed) then begin
      //set_world_map_pos(175,105);
      if get_car_in_cur_map then begin
         set_car_worldmap;
         car_give_to_party;
      end
   end

   // I have no idea why this is here -Lexx
   //set_map_var(0, radio_trick);
end

procedure radio_kludge begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   LVar0 := dude_item_count(PID_RADIO);
   if (LVar0 > 0) then begin
      LVar1 := dude_item(PID_RADIO);
      LVar1 := destroy_mult_objs(LVar1, LVar0);
      LVar1 := create_object_sid(PID_RADIO, 0, 0, SCRIPT_RADIO);
      add_mult_objs_to_inven(dude_obj, LVar1, LVar0);
   end
end
