/*

   Hub - Far Go Caravan

*/

/* Include Files */
#include "define.h"
#include "maps/hubdwntn.h"

#define NAME                    SCRIPT_FGTCARVN
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "command.h"
#include "modreact.h"
#include "caravan.h"

/* Standard Script Procedures */

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure RecalcDate;
procedure RecalcDateString;
procedure damage_p_proc;

procedure FGTDriver00;
procedure FGTDriver01;
procedure FGTDriver02;
procedure FGTDriver03;
procedure FGTDriver04;
procedure FGTDriver04a;
procedure FGTDriver05;
procedure FGTDriver06;
procedure FGTDriver07;
procedure FGTDriver08;
procedure FGTDriver10;
procedure FGTDriver10a;
procedure FGTDriver11;
procedure FGTDriver12;
procedure FGTDriver13;
procedure FGTDriver14;
procedure FGTDriver15;
procedure FGTDriver17;
procedure FGTDriver18;
procedure FGTDriver19;
procedure FGTDriver20;
procedure FGTDriver21a;
procedure FGTDriver21b;
procedure FGTDriver21c;
procedure FGTDriver27;
procedure FGTDriver28;
procedure FGTDriver29;
procedure FGTDriver30;
procedure FGTDriver31;
procedure FGTDriver32;
procedure FGTDriver33;
procedure FGTDriver34;
procedure FGTDriver35;
procedure FGTDriver37;
procedure FGTDriver38;
procedure FGTDriver39;
procedure FGTDriver40;
procedure FGTDriver41;
procedure FGTDriver42;
procedure FGTDriverEnd;

procedure start_caravan;

variable tmp_hostile;
variable Only_Once := 1;
variable DayString := "None";
variable Roll_Encounter;

#define CURRENT_CARAVAN             (GVAR_FARGO_CARAVAN)
#define CARAVAN_START_SETTINGS      set_global_var(CURRENT_CARAVAN, HUB_CARAVAN_ON_CARAVAN);                      \
                                    set_global_var(GVAR_CARAVAN_START, CARAVAN_HUB);                           \
                                    set_caravan_style_fargo;                                                   \
                                    set_caravan_status(CARAVAN_STATUS_ON_JOB);                                 \
                                    set_caravan_encounters(1); /* FarGo Traders only have 1 encounter max!*/   \
                                    set_caravan_masters(1);                                                    \
                                    set_caravan_drivers(0); /* Fo1 has no wagon drivers!*/                     \
                                    set_caravan_guards(2);                                                     \
                                    set_caravan_carts(2);                                                      \
                                    set_caravan_brahmin(caravan_total_carts);

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_HUB_FAR_GO_TRADERS);
      set_self_ai(AI_MERCHANT);
   end
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
end

procedure pickup_p_proc begin
   call FGTDriver10;
end

procedure talk_p_proc begin
   variable LVar0 := 0;

   set_tma_data_generic(TMA_MSG_HUBDWNTN);

   dude_look_at_self;
   get_reaction

   if (local_var(10) == 1) then begin
      if (local_var(7) < (GAME_TIME_IN_YEARS)) then begin
         set_local_var(10, 0);
      end
      else if ((local_var(6) < get_month) or (local_var(6) == 12) and (get_month == 1) and ((local_var(6) != 1) or (get_month != 12))) then begin
         set_local_var(10, 0);
      end
      else if ((local_var(5) < get_day) and ((local_var(6) != 1) or (get_month != 12))) then begin
         set_local_var(10, 0);
      end
   end

   call RecalcDate;
   LVar0 := local_var(5);
   if (local_var(8) > 0) then begin
      call FGTDriver14;
   end
   else if (map_var(MVAR_FGT_NO_DEAL) == 1) then begin
      call FGTDriver15;
   end
   else if (global_var(GVAR_FARGO_JOB) == 3) then begin
      BottomReact
      start_dialog_at_node(FGTDriver37);
   end
   else if (global_var(GVAR_FARGO_JOB) == 5) then begin
      start_dialog_at_node(FGTDriver19);
   end
   else if (global_var(GVAR_FARGO_JOB) == 4) then begin
      TopReact
      start_dialog_at_node(FGTDriver27);
   end
   else if (map_var(MVAR_FGT_WILL_GIVE_JOB) == 0) then begin
      call FGTDriver00;
   end
   else if ((map_var(MVAR_FGT_WILL_GIVE_JOB) == 1) and (local_var(10) == 0)) then begin
      if (local_var(9) == 0) then begin
         start_dialog_at_node(FGTDriver01);
      end
      else begin
         start_dialog_at_node(FGTDriver03);
      end
   end
   else if ((local_var(10) == 1) and (LVar0 == get_day)) then begin
      start_dialog_at_node(FGTDriver28);
   end
   else if ((local_var(10) == 1) and (LVar0 != get_day)) then begin
      start_dialog_at_node(FGTDriver29);
   end
   set_local_var(4, 1);
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure look_at_p_proc
begin
   script_overrides;
   display_msg(mstr(100));
end

procedure RecalcDate begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   variable LVar2 := 0;
   LVar0 := get_day;
   if ((LVar0 >= 1) and (LVar0 <= 8)) then begin
      LVar0 := 8;
      LVar1 := get_month;
      LVar2 := GAME_TIME_IN_YEARS;
   end
   else if ((LVar0 > 8) and (LVar0 <= 18)) then begin
      LVar0 := 18;
      LVar1 := get_month;
      LVar2 := GAME_TIME_IN_YEARS;
   end
   else if ((LVar0 > 18) and (LVar0 <= 28)) then begin
      LVar0 := 28;
      LVar1 := get_month;
      LVar2 := GAME_TIME_IN_YEARS;
   end
   else if (LVar0 > 28) then begin
      LVar0 := 8;
      LVar1 := get_month;
      if (LVar1 == 12) then begin
         LVar1 := 1;
         LVar2 := (GAME_TIME_IN_YEARS) + 1;
      end
      else begin
         LVar1 := LVar1 + 1;
         LVar2 := GAME_TIME_IN_YEARS;
      end
   end
   set_local_var(5, LVar0);
   set_local_var(6, LVar1);
   set_local_var(7, LVar2);
end

procedure RecalcDateString begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   call RecalcDate;
   LVar0 := local_var(6);
   LVar1 := local_var(5);
   if (LVar0 == 1) then begin
      DayString := mstr(204);
   end
   else if (LVar0 == 2) then begin
      DayString := mstr(205);
   end
   else if (LVar0 == 3) then begin
      DayString := mstr(206);
   end
   else if (LVar0 == 4) then begin
      DayString := mstr(207);
   end
   else if (LVar0 == 5) then begin
      DayString := mstr(208);
   end
   else if (LVar0 == 6) then begin
      DayString := mstr(209);
   end
   else if (LVar0 == 7) then begin
      DayString := mstr(210);
   end
   else if (LVar0 == 8) then begin
      DayString := mstr(211);
   end
   else if (LVar0 == 9) then begin
      DayString := mstr(212);
   end
   else if (LVar0 == 10) then begin
      DayString := mstr(213);
   end
   else if (LVar0 == 11) then begin
      DayString := mstr(214);
   end
   else if (LVar0 == 12) then begin
      DayString := mstr(215);
   end

   if (LVar1 == 8) then begin
      DayString := DayString + mstr(197);
   end
   else if (LVar1 == 18) then begin
      DayString := DayString + mstr(198);
   end
   else if (LVar1 == 28) then begin
      DayString := DayString + mstr(199);
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_HUB, 1);
   end
end

procedure FGTDriver00 begin
   if (local_var(4) == 0) then begin
      float_msg(self_obj, mstr(101), FLOAT_MSG_RED);
      set_local_var(4, 1);
   end
   else begin
      float_msg(self_obj, mstr(102), FLOAT_MSG_RED);
   end
end

procedure FGTDriver01 begin
   if (global_var(GVAR_WORLDMAPLIST_JUNKTOWN) == 0) then
      set_global_var(GVAR_WORLDMAPLIST_JUNKTOWN, 1);
      mark_on_map(AREA_JUNKTOWN)

   if (global_var(GVAR_WORLDMAPLIST_BONEYARD) == 0) then
      set_global_var(GVAR_WORLDMAPLIST_BONEYARD, 1);
      mark_on_map(AREA_BONEYARD)

   if (global_var(GVAR_WORLDMAPLIST_BROTHERHOOD) == 0) then
      set_global_var(GVAR_WORLDMAPLIST_BROTHERHOOD, 1);
      mark_on_map(AREA_BROTHERHOOD)

   if not(boneyard_invaded) then begin
      Reply(103);
   end
   else begin
      Reply(300);
   end
   NOption(104, FGTDriver02, 4);
   NLowOption(105, FGTDriver02);
end

procedure FGTDriver02 begin
   variable LVar0 := 0;
   call RecalcDateString;
   LVar0 := local_var(5);
   if (LVar0 == get_day) then
      Reply(mstr(106) + mstr(107));
   else
      Reply(mstr(106) + mstr(108) + DayString + mstr(111));
   call FGTDriver04;
end

procedure FGTDriver03 begin
   variable LVar0 := 0;
   if (local_var(1) != 1) then begin
      call RecalcDateString;
      LVar0 := local_var(5);
      if (LVar0 == get_day) then begin
         Reply(mstr(107));
      end
      else begin
         Reply(mstr(108) + DayString + mstr(111));
      end
      call FGTDriver04;
   end
   else begin
      Reply(112);
      call FGTDriver04;
   end
end

procedure FGTDriver04 begin
   NOption(113, FGTDriver04a, 4);
   NOption(114, FGTDriver05, 4);
   NOption(115, FGTDriver06, 4);
   NLowOption(116, FGTDriver07);
   NLowOption(117, FGTDriver07);
end

procedure FGTDriver04a begin
   variable LVar0 := 0;
   set_local_var(10, 1);
   call RecalcDate;
   LVar0 := local_var(5);
   if (LVar0 == get_day) then begin
      call FGTDriver17;
   end
   else begin
      call FGTDriver18;
   end
end

procedure FGTDriver05 begin
   set_local_var(10, 0);
   NMessage(118);
end

procedure FGTDriver06 begin
   set_local_var(10, 0);
   NMessage(120);
end

procedure FGTDriver07 begin
   NMessage(121);
end

procedure FGTDriver08 begin
   NMessage(123);
end

procedure FGTDriver10 begin
   if (local_var(8) == 0) then begin
      set_local_var(8, 1);
      set_map_var(MVAR_FGT_NO_DEAL, 1);
      set_map_var(MVAR_FGT_DISCOUNT, 0);
      Reply(125);
      NOption(126, FGTDriver08, 4);
      NOption(127, FGTDriver10a, 4);
      BOption(128, FGTDriver31, 4);
      BLowOption(130, FGTDriver31);
   end
   else begin
      BMessage(131);
      call combat;
   end
end

procedure FGTDriver10a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 20)) == 1) then begin
      call FGTDriver11;
   end
   else begin
      call FGTDriver12;
   end
end

procedure FGTDriver11 begin
   set_map_var(MVAR_FGT_WILL_GIVE_JOB, 0);
   set_map_var(MVAR_FGT_NO_DEAL, 1);
   set_map_var(MVAR_FGT_DISCOUNT, 0);
   NMessage(132);
end

procedure FGTDriver12 begin
   BMessage(133);
   call combat;
end

procedure FGTDriver13 begin
   float_msg(self_obj, mstr(137), FLOAT_MSG_RED);
end

procedure FGTDriver14 begin
   if (local_var(8) > 0) then begin
      float_msg(self_obj, mstr(138), FLOAT_MSG_RED);
   end
   else begin
      float_msg(self_obj, mstr(139), FLOAT_MSG_RED);
      call FGTDriver31;
   end
end

procedure FGTDriver15 begin
   variable LVar0 := 0;
   LVar0 := random(1, 4);
   if (LVar0 == 1) then begin
      float_msg(self_obj, mstr(140), FLOAT_MSG_RED);
   end
   else if (LVar0 == 2) then begin
      float_msg(self_obj, mstr(141), FLOAT_MSG_RED);
   end
   else if (LVar0 == 3) then begin
      float_msg(self_obj, mstr(142), FLOAT_MSG_RED);
   end
   else if (LVar0 == 4) then begin
      float_msg(self_obj, mstr(143), FLOAT_MSG_RED);
   end
end

procedure FGTDriver17 begin
   Reply(145);
   call FGTDriver33;
   call FGTDriver20;
end

procedure FGTDriver18 begin
   call RecalcDateString;
   Reply(mstr(146) + DayString + mstr(153));
   NOption(154, FGTDriver30, 4);
   NOption(155, FGTDriver34, 4);
end

procedure FGTDriver19 begin
   set_map_var(MVAR_FGT_NO_DEAL, 1);
   set_map_var(MVAR_FGT_DISCOUNT, 0);
   set_global_var(GVAR_FARGO_JOB, 6);
   BMessage(156);
end

procedure FGTDriver20 begin
   NOption(157, FGTDriver21a, 4);
   if not(boneyard_invaded) then begin
      NOption(158, FGTDriver21b, 4);
   end
   NOption(152, FGTDriver21c, 4);
   NOption(159, FGTDriver34, 4);
end

// Junktown
procedure FGTDriver21a begin
   variable LVar0 := 0;
   set_global_var(GVAR_FARGO_TRADERS_STATUS, 1);

   LVar0 := random(1, 7);
   if (LVar0 == 1) then begin
      NMessage(160);
   end
   else if (LVar0 == 2) then begin
      NMessage(161);
   end
   else if (LVar0 == 3) then begin
      NMessage(162);
   end
   else if (LVar0 == 4) then begin
      NMessage(163);
   end
   else if (LVar0 == 5) then begin
      NMessage(167);
   end
   else if (LVar0 == 6) then begin
      NMessage(168);
   end
   else if (LVar0 == 7) then begin
      NMessage(169);
   end

   CARAVAN_START_SETTINGS
   set_caravan_end(CARAVAN_JUNKTOWN);

   LVar0 := do_check(dude_obj, STAT_lu, -4);
   if (is_success(LVar0)) then begin
      game_time_advance(TRAVEL_TIME_HUB_JNK + (random(60, 600)*ONE_GAME_MINUTE));

      set_global_var(GVAR_FARGO_TRADERS_STATUS, 2);
      set_global_var(GVAR_CVAN_DRIVER, 1);
      set_global_var(GVAR_CVAN_GUARD, 2);
      load_map(MAP_JUNKENT, 1);
   end
   else begin
      //load_map(MAP_MNTCRVN1, 3);
      call start_caravan;
   end
end

// Boneyard
procedure FGTDriver21b begin
   variable LVar0 := 0;
   set_global_var(GVAR_FARGO_TRADERS_STATUS, 1);

   LVar0 := random(1, 7);
   if (LVar0 == 1) then begin
      NMessage(160);
   end
   else if (LVar0 == 2) then begin
      NMessage(161);
   end
   else if (LVar0 == 3) then begin
      NMessage(162);
   end
   else if (LVar0 == 4) then begin
      NMessage(163);
   end
   else if (LVar0 == 5) then begin
      NMessage(164);
   end
   else if (LVar0 == 6) then begin
      NMessage(165);
   end
   else if (LVar0 == 7) then begin
      NMessage(166);
   end

   CARAVAN_START_SETTINGS
   set_caravan_end(CARAVAN_BONEYARD);

   LVar0 := do_check(dude_obj, STAT_lu, -4);
   if (is_success(LVar0)) then begin
      game_time_advance(TRAVEL_TIME_HUB_ADY + (random(60, 600)*ONE_GAME_MINUTE));

      set_global_var(GVAR_FARGO_TRADERS_STATUS, 2);
      set_global_var(GVAR_CVAN_DRIVER, 1);
      set_global_var(GVAR_CVAN_GUARD, 2);
      load_map(MAP_LAADYTUM, 1);
   end
   else begin
      //load_map(MAP_DESCRVN1, 3);
      call start_caravan;
   end
end

// Brotherhood
procedure FGTDriver21c begin
   variable LVar0 := 0;
   set_global_var(GVAR_FARGO_TRADERS_STATUS, 1);

   LVar0 := random(1, 8);
   if (LVar0 == 1) then begin
      NMessage(160);
   end
   else if (LVar0 == 2) then begin
      NMessage(161);
   end
   else if (LVar0 == 3) then begin
      NMessage(162);
   end
   else if (LVar0 == 4) then begin
      NMessage(163);
   end
   else if (LVar0 == 5) then begin
      NMessage(216);
   end
   else if (LVar0 == 6) then begin
      NMessage(217);
   end
   else if (LVar0 == 7) then begin
      NMessage(218);
   end
   else if (LVar0 == 8) then begin
      NMessage(219);
   end

   CARAVAN_START_SETTINGS
   set_caravan_end(CARAVAN_BOS);

   LVar0 := do_check(dude_obj, STAT_lu, -4);
   if (is_success(LVar0)) then begin
      game_time_advance(TRAVEL_TIME_HUB_BOS + (random(60, 600)*ONE_GAME_MINUTE));

      set_global_var(GVAR_FARGO_TRADERS_STATUS, 2);
      set_global_var(GVAR_CVAN_DRIVER, 1);
      set_global_var(GVAR_CVAN_GUARD, 2);
      load_map(MAP_BROHDENT, 1);
   end
   else begin
      //Roll_Encounter := random(0, 100);
      //if (Roll_Encounter < 25) then
      //   set_caravan_encounters(2);
      call start_caravan;
   end
end

procedure start_caravan begin
   variable Caravan_Carts;
   variable Caravan_Guards;

   if (caravan_end == CARAVAN_JUNKTOWN) then begin
      load_map(MAP_MNTCRVN1, 1);
   end
   else if (caravan_end == CARAVAN_BOS) then begin
      load_map(MAP_MNTCRVN2, 1);
   end
   else if (caravan_end == CARAVAN_BONEYARD) then begin
      load_map(MAP_DESCRVN1, 1);
   end
end

procedure FGTDriver27 begin
   Reply(185);
   NOption(186, FGTDriver04a, 4);
   NOption(187, FGTDriver05, 4);
   NOption(188, FGTDriver06, 4);
   NLowOption(189, FGTDriver07);
   NLowOption(190, FGTDriver07);
end

procedure FGTDriver28 begin
   Reply(191);
   NOption(192, FGTDriver17, 4);
   NOption(193, FGTDriver35, 4);
   NLowOption(194, FGTDriver07);
end

procedure FGTDriver29 begin
   variable LVar0 := 0;
   call RecalcDateString;
   LVar0 := local_var(5);
   NMessage(mstr(196) + DayString + mstr(203) + mstr(195));
end

procedure FGTDriver30 begin
   set_local_var(10, 1);
end

procedure FGTDriver31 begin
   call combat;
end

procedure FGTDriver32 begin
end

procedure FGTDriver33 begin
   variable LVar0 := 0;
   set_local_var(10, 0);
   set_global_var(GVAR_FARGO_JOB, 1);
   LVar0 := local_var(9);
   set_local_var(9, LVar0 + 1);
end

procedure FGTDriver34 begin
   set_local_var(10, 0);
end

procedure FGTDriver35 begin
end

procedure FGTDriver37 begin
   set_map_var(MVAR_FGT_NO_DEAL, 1);
   set_map_var(MVAR_FGT_DISCOUNT, 0);
   set_global_var(GVAR_FARGO_JOB, 6);
   Reply(170);
   NOption(171, FGTDriver38, 4);
   NOption(172, FGTDriverEnd, 4);
   NOption(173, FGTDriver39, 4);
   NLowOption(174, FGTDriver40);
   NLowOption(175, FGTDriverEnd);
end

procedure FGTDriver38 begin
   Reply(177);
   NOption(178, FGTDriverEnd, 4);
   BOption(179, combat, 4);
   NOption(180, FGTDriver41, 4);
   NOption(181, FGTDriver42, 4);
end

procedure FGTDriver39 begin
   NMessage(176);
end

procedure FGTDriver40 begin
   NMessage(182);
end

procedure FGTDriver41 begin
   NMessage(183);
end

procedure FGTDriver42 begin
   set_map_var(MVAR_FGT_NO_DEAL, 0);
   set_map_var(MVAR_FGT_DISCOUNT, 1);
   set_global_var(GVAR_FARGO_JOB, 1);
   NMessage(184);
end

procedure FGTDriverEnd begin
end
