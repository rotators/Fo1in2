/*

   Hub - Keri from the Crimson Caravan

*/

/* Include Files */
#include "define.h"
#include "maps/hubdwntn.h"

#define NAME                    SCRIPT_KERI
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "command.h"
#include "modreact.h"
#include "caravan.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure timed_event_p_proc;
procedure damage_p_proc;

procedure Keri00;
procedure Keri01;
procedure Keri02;
procedure Keri03;
procedure Keri04;
procedure Keri04a;
procedure Keri04b;
procedure Keri05;
procedure Keri06;
procedure Keri07;
procedure Keri08;
procedure Keri09;
procedure Keri10;
procedure Keri10a;
procedure Keri11;
procedure Keri12;
procedure Keri13;
procedure Keri14;
procedure Keri15;
procedure Keri16;
procedure Keri17;
procedure Keri18;
procedure Keri19;
procedure Keri20;
procedure Keri21a;
procedure Keri21b;
procedure Keri21c;
procedure Keri21d;
procedure Keri27;
procedure Keri28;
procedure Keri29;
procedure Keri30;
procedure Keri33;
procedure Keri34;
procedure Keri35;
procedure Keri36;
procedure Keri37;
procedure Keri38;
procedure Keri39;
procedure KeriEnd;

procedure KeriCombat;
procedure Jailed;
procedure RecalcDate;
procedure RecalcDateString;
procedure SendAroundHouse;
procedure combat;

procedure start_caravan;

variable tmp_hostile;
variable Only_Once := 1;
variable days;
variable DayString := "None";
variable SetDayNight;
variable Destination;
variable LastMove;

variable Roll_Encounter;
variable Caravan_Encounters;

#define CURRENT_CARAVAN             (GVAR_CRIMSON_CARAVAN)
#define CARAVAN_START_SETTINGS      set_global_var(CURRENT_CARAVAN, HUB_CARAVAN_ON_CARAVAN);          \
                                    set_global_var(GVAR_CARAVAN_START, CARAVAN_HUB);                  \
                                    set_caravan_style_crimson;                                     \
                                    set_caravan_status(CARAVAN_STATUS_ON_JOB);                     \
                                    set_caravan_encounters(1); /* Default : only 1 encounter max!*/ \
                                    set_caravan_masters(1);                                        \
                                    set_caravan_drivers(0); /* Fo1 has no wagon drivers!*/         \
                                    set_caravan_guards(2);                                         \
                                    set_caravan_carts(2);                                          \
                                    set_caravan_brahmin(caravan_total_carts);

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_HUB_CRIMSON_CARAVANS);
      set_self_ai(AI_MERCHANT);
      LastMove := 12127;
   end
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   variable LVar0 := 0;
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   if (SetDayNight == 0) then begin
      add_timer_event(self_obj, game_ticks(random(3, 8)), 1);
      SetDayNight := 1;
   end
   LVar0 := self_tile;
   if (LVar0 == 12126) then begin
      if (anim_busy(self_obj) == 0) then begin
         if (self_cur_rot != 0) then begin
            self_rotate(0);
         end
      end
   end
   else if (LVar0 == 11927) then begin
      if (anim_busy(self_obj) == 0) then begin
         if (self_cur_rot != 5) then begin
            self_rotate(5);
         end
      end
   end
   else if (LVar0 == 12127) then begin
      if (anim_busy(self_obj) == 0) then begin
         if (self_cur_rot != 2) then begin
            self_rotate(2);
         end
      end
   end
end

procedure pickup_p_proc begin
   if (local_var(5) == 0) then begin
      dialogue_system_enter;
   end
   else begin
      call Keri10;
   end
end

procedure talk_p_proc begin
   variable LVar0 := 0;

   set_tma_data_generic(TMA_MSG_HUBDWNTN);

   dude_look_at_self;
   get_reaction

   if (local_var(13) == 1) then begin
      if (local_var(11) < (GAME_TIME_IN_YEARS)) then begin
         set_local_var(13, 0);
      end
      else if ((local_var(10) < get_month) or (local_var(10) == 12) and (get_month == 1) and ((local_var(10) != 1) or (get_month != 12))) then begin
         set_local_var(13, 0);
      end
      else if ((local_var(9) < get_day) and ((local_var(10) != 1) or (get_month != 12))) then begin
         set_local_var(13, 0);
      end
   end

   call RecalcDate;
   LVar0 := local_var(9);

   if ((map_var(MVAR_CC_HOSTILE) == 1) and (map_var(MVAR_CC_HAS_BEEN_KILLED) == 0)) then begin
      call Keri13;
   end
   else if (local_var(5) == 1) then begin
      call Keri14;
   end
   else if (map_var(25) == 1) then begin
      call Keri15;
   end
   else if (global_var(GVAR_CC_JOB) == 5) then begin
      set_global_var(GVAR_CC_JOB, 6);
      set_map_var(25, 1);
      BottomReact
      call Keri19;
   end
   else if (global_var(GVAR_CC_JOB) == 3) then begin
      set_global_var(GVAR_CC_JOB, 6);
      set_map_var(25, 1);
      BottomReact
      start_dialog_at_node(Keri35);
   end
   else if (map_var(26) == 0) then begin
      call Keri00;
   end
   else if (global_var(GVAR_CC_JOB) == 4) then begin
      start_dialog_at_node(Keri27);
   end
   else if ((map_var(26) == 1) and (local_var(13) == 0)) then begin
      if (local_var(4) == 0) then
         start_dialog_at_node(Keri01);
      else
         start_dialog_at_node(Keri03);
   end
   else if ((local_var(13) == 1) and (LVar0 == get_day)) then begin
      start_dialog_at_node(Keri28);
   end
   else if ((local_var(13) == 1) and (LVar0 != get_day)) then begin
      start_dialog_at_node(Keri29);
   end
end

procedure destroy_p_proc begin
   set_map_var(MVAR_CC_HAS_BEEN_KILLED, 1);
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure timed_event_p_proc begin
   call SendAroundHouse;
end

procedure damage_p_proc begin
   if obj_in_party(source_obj) then begin
      set_global_var(GVAR_ENEMY_HUB, 1);
   end
end

procedure Keri00 begin
   if (local_var(7) == 0) then begin
      set_local_var(7, 1);
      float_msg(self_obj, mstr(101), FLOAT_MSG_RED);
   end
   else begin
      float_msg(self_obj, mstr(102), FLOAT_MSG_RED);
   end
end

procedure Keri01 begin
   if (global_var(GVAR_WORLDMAPLIST_JUNKTOWN) == 0) then
      set_global_var(GVAR_WORLDMAPLIST_JUNKTOWN, 1);
   mark_on_map(AREA_JUNKTOWN)

   if (global_var(GVAR_WORLDMAPLIST_BROTHERHOOD) == 0) then
      set_global_var(GVAR_WORLDMAPLIST_BROTHERHOOD, 1);
   mark_on_map(AREA_BROTHERHOOD)

   if (global_var(GVAR_WORLDMAPLIST_NECROPOLIS) == 0) then
      set_global_var(GVAR_WORLDMAPLIST_NECROPOLIS, 1);
   mark_on_map(AREA_NECROPOLIS)

   if (global_var(GVAR_WORLDMAPLIST_BONEYARD) == 0) then
      set_global_var(GVAR_WORLDMAPLIST_BONEYARD, 1);
   mark_on_map(AREA_BONEYARD)

   if (dude_is_female) then begin
      if (not(boneyard_invaded) and not(necropolis_invaded)) then begin
         Reply(103);
      end
      else if (not(boneyard_invaded) and necropolis_invaded) then begin
         Reply(304);
      end
      else if (boneyard_invaded and not(necropolis_invaded)) then begin
         Reply(302);
      end
      else begin
         Reply(300);
      end
   end
   else begin
      if (not(boneyard_invaded) and not(necropolis_invaded)) then begin
         Reply(104);
      end
      else if (not(boneyard_invaded) and necropolis_invaded) then begin
         Reply(305);
      end
      else if (boneyard_invaded and not(necropolis_invaded)) then begin
         Reply(303);
      end
      else begin
         Reply(301);
      end
   end
   NOption(105, Keri02, 4);
   NLowOption(106, Keri02);
end

procedure Keri02 begin
   variable LVar0 := 0;
   call RecalcDateString;
   LVar0 := local_var(9);
   if (LVar0 == get_day) then begin
      Reply(mstr(107) + mstr(108));
   end
   else begin
      Reply(mstr(107) + mstr(109) + DayString + mstr(112));
   end
   call Keri04;
end

procedure Keri03 begin
   variable LVar0 := 0;
   if (local_var(1) != 1) then begin
      call RecalcDateString;
      LVar0 := local_var(9);
      if (LVar0 == get_day) then begin
         Reply(mstr(113));
      end
      else begin
         Reply(mstr(114) + DayString + mstr(117));
      end
      call Keri04;
   end
   else begin
      Reply(118);
      call Keri04;
   end
end

procedure Keri04 begin
   NOption(119, Keri04a, 4);
   NOption(120, Keri05, 4);
   if ((dude_is_male) and (local_var(14) == 0)) then begin
      NOption(121, Keri04b, 4);
   end
   NOption(122, Keri06, 4);
   NLowOption(123, Keri07);
end

procedure Keri04a begin
   variable LVar0 := 0;
   set_local_var(13, 1);
   call RecalcDate;
   LVar0 := local_var(9);
   if (LVar0 == get_day) then begin
      call Keri17;
   end
   else begin
      call Keri18;
   end
end

procedure Keri04b begin
   variable LVar0 := 0;
   if (has_rep_berserker) then begin
      call Keri08;
   end
   else begin
      LVar0 := dude_charisma;
      if (LVar0 <= 6) then begin
         call Keri16;
      end
      else if (is_success(do_check(dude_obj, STAT_ch, 0))) then begin
         call Keri09;
      end
      else begin
         call Keri16;
      end
   end
end

procedure Keri05 begin
   set_local_var(13, 0);
   NMessage(124);
end

procedure Keri06 begin
   set_local_var(13, 0);
   NMessage(126);
end

procedure Keri07 begin
   NMessage(127);
end

procedure Keri08 begin
   variable Item := 0;
   set_local_var(14, 1);
   NMessage(130);

   //game_time_advance(game_ticks(60 * 60 * 2)); // Fo1 vanilla sex time advance
   gfade_out(ONE_GAME_SECOND);
   do_default_sex;
   gfade_IN(ONE_GAME_SECOND);

   Item := create_object(PID_MENTATS, 0, 0);
   add_obj_to_inven(dude_obj, Item);
   Item := create_object(PID_BUFFOUT, 0, 0);
   add_obj_to_inven(dude_obj, Item);
   Item := create_object(PID_PSYCHO, 0, 0);
   add_obj_to_inven(dude_obj, Item);

   display_msg(mstr(229));
   NMessage(131);
   NMessage(132);
end

procedure Keri09 begin
   variable Item := 0;
   set_local_var(14, 1);
   NMessage(133);
   gfade_out(1);
   game_time_advance(game_ticks(60 * 60 * 2));
   gfade_in(1);

   Item := create_object(PID_MENTATS, 0, 0);
   add_obj_to_inven(dude_obj, Item);
   Item := create_object(PID_BUFFOUT, 0, 0);
   add_obj_to_inven(dude_obj, Item);
   Item := create_object(PID_PSYCHO, 0, 0);
   add_obj_to_inven(dude_obj, Item);

   display_msg(mstr(229));
   NMessage(131);
   NMessage(132);
end

procedure Keri10 begin
   if (local_var(5) == 0) then begin
      set_local_var(5, 1);
      set_map_var(25, 1);
      Reply(136);
      NOption(137, Keri10a, 4);
      BOption(138, KeriCombat, 4);
      BOption(139, KeriCombat, 4);
      BLowOption(141, KeriCombat);
   end
   else begin
      if (dude_is_male) then begin
         float_msg(self_obj, mstr(143), FLOAT_MSG_RED);
      end
      else begin
         float_msg(self_obj, mstr(142), FLOAT_MSG_RED);
      end
      call KeriCombat;
   end
end

procedure Keri10a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
      call Keri11;
   end
   else begin
      call Keri12;
   end
end

procedure Keri11 begin
   NMessage(144);
end

procedure Keri12 begin
   Reply(145);
   call KeriCombat;
end

procedure Keri13 begin
   float_msg(self_obj, mstr(148), FLOAT_MSG_RED);
   call KeriCombat;
end

procedure Keri14 begin
   float_msg(self_obj, mstr(random(149, 150)), FLOAT_MSG_RED);
   call KeriCombat;
end

procedure Keri15 begin
   if (local_var(6) != 3) then begin
      float_msg(self_obj, mstr(151 + local_var(6)), FLOAT_MSG_RED);
      set_local_var(6, local_var(6) + 1);
   end
   else begin
      float_msg(self_obj, mstr(154), FLOAT_MSG_RED);
   end
end

procedure Keri16 begin
   NMessage(155);
end

procedure Keri17 begin
   Reply(156);
   call Keri33;
   call Keri20;
end

procedure Keri18 begin
   call RecalcDateString;
   Reply(mstr(157) + DayString + mstr(158));
   NOption(159, Keri30, 4);
   NOption(160, Keri34, 4);
end

procedure Keri19 begin
   if (dude_is_female) then begin
      float_msg(self_obj, mstr(161), FLOAT_MSG_RED);
   end
   else begin
      float_msg(self_obj, mstr(162), FLOAT_MSG_RED);
   end
end

procedure Keri20 begin
   NOption(163, Keri21a, 4);
   NOption(164, Keri21b, 4);
   if not(necropolis_invaded) then begin
      NOption(165, Keri21c, 4);
   end
   if not(boneyard_invaded) then begin
      NOption(166, Keri21d, 4);
   end
   NOption(167, Keri34, 4);
end

// Brotherhood of Steel:
procedure Keri21a begin
   variable LVar0 := 0;
   set_global_var(GVAR_CRIMSON_CARAVANS_STATUS, 1);
   LVar0 := random(1, 8);
   if (LVar0 == 1) then begin
      NMessage(168);
   end
   else if (LVar0 == 2) then begin
      NMessage(169);
   end
   else if (LVar0 == 3) then begin
      NMessage(170);
   end
   else if (LVar0 == 4) then begin
      NMessage(171);
   end
   else if (LVar0 == 5) then begin
      NMessage(172);
   end
   else if (LVar0 == 6) then begin
      NMessage(173);
   end
   else if (LVar0 == 7) then begin
      NMessage(174);
   end
   else if (LVar0 == 8) then begin
      NMessage(175);
   end
   //load_map(MAP_MNTCRVN2, 3);

   // New Fo2:
   CARAVAN_START_SETTINGS
   set_caravan_end(CARAVAN_BOS);
   call start_caravan;
end

// Junktown:
procedure Keri21b begin
   variable LVar0 := 0;
   set_global_var(GVAR_CRIMSON_CARAVANS_STATUS, 1);
   LVar0 := random(1, 7);
   if (LVar0 == 1) then begin
      NMessage(168);
   end
   else if (LVar0 == 2) then begin
      NMessage(169);
   end
   else if (LVar0 == 3) then begin
      NMessage(170);
   end
   else if (LVar0 == 4) then begin
      NMessage(171);
   end
   else if (LVar0 == 5) then begin
      NMessage(176);
   end
   else if (LVar0 == 6) then begin
      NMessage(177);
   end
   else if (LVar0 == 7) then begin
      NMessage(178);
   end
   //load_map(MAP_MNTCRVN1, 3);

   // New Fo2:
   CARAVAN_START_SETTINGS
   set_caravan_end(CARAVAN_JUNKTOWN);
   call start_caravan;
end

// Necropolis:
procedure Keri21c begin
   variable LVar0 := 0;
   set_global_var(GVAR_CRIMSON_CARAVANS_STATUS, 1);

   LVar0 := random(1, 7);
   if (LVar0 == 1) then begin
      NMessage(168);
   end
   else if (LVar0 == 2) then begin
      NMessage(169);
   end
   else if (LVar0 == 3) then begin
      NMessage(170);
   end
   else if (LVar0 == 4) then begin
      NMessage(171);
   end
   else if (LVar0 == 5) then begin
      NMessage(179);
   end
   else if (LVar0 == 6) then begin
      NMessage(180);
   end
   else if (LVar0 == 7) then begin
      NMessage(181);
   end
   //load_map(MAP_DESCRVN2, 3);

   // New Fo2:
   CARAVAN_START_SETTINGS
   //   set_caravan_guards(3);
   //   set_caravan_carts(random(3,3));
   //   set_caravan_brahmin(caravan_total_carts);
   set_caravan_end(CARAVAN_NECROPOLIS);
   call start_caravan;
end

// Boneyard:
procedure Keri21d begin
   variable LVar0 := 0;
   set_global_var(GVAR_CRIMSON_CARAVANS_STATUS, 1);
   LVar0 := random(1, 7);
   if (LVar0 == 1) then begin
      NMessage(168);
   end
   else if (LVar0 == 2) then begin
      NMessage(169);
   end
   else if (LVar0 == 3) then begin
      NMessage(170);
   end
   else if (LVar0 == 4) then begin
      NMessage(171);
   end
   else if (LVar0 == 5) then begin
      NMessage(182);
   end
   else if (LVar0 == 6) then begin
      NMessage(183);
   end
   else if (LVar0 == 7) then begin
      NMessage(184);
   end
   //load_map(MAP_DESCRVN1, 3);

   // New Fo2:
   CARAVAN_START_SETTINGS
   set_caravan_end(CARAVAN_BONEYARD);
   call start_caravan;
end

procedure start_caravan begin
   if (caravan_end == CARAVAN_NECROPOLIS) then begin
      Roll_Encounter := random(0, 100);
      if (Roll_Encounter < 25) then begin
         Caravan_Encounters := random(1, 4);
         set_caravan_encounters(Caravan_Encounters);
      end
      else if (Roll_Encounter < 50) then begin
         Caravan_Encounters := random(1, 3);
         set_caravan_encounters(Caravan_Encounters);
      end
      else if (Roll_Encounter < 75) then begin
         Caravan_Encounters := random(1, 2);
         set_caravan_encounters(Caravan_Encounters);
      end
      load_map(MAP_DESCRVN2, 1);
   end
   else if (caravan_end == CARAVAN_JUNKTOWN) then begin
      set_caravan_encounters(1); // Short way, only 1 encounter max!
      load_map(MAP_MNTCRVN1, 1);
   end
   else if (caravan_end == CARAVAN_BOS) then begin
      //Roll_Encounter := random(0,100);
      //if (Roll_Encounter < 50) then begin
         Caravan_Encounters := random(1, 3);
         set_caravan_encounters(Caravan_Encounters);
      //end
      load_map(MAP_MNTCRVN2, 1);
   end
   else if (caravan_end == CARAVAN_BONEYARD) then begin
      set_caravan_encounters(1); // Short way, only 1 encounter max!
      load_map(MAP_DESCRVN1, 1);
   end
end

procedure Keri27 begin
   Reply(198);
   NOption(199, Keri04a, 4);
   NOption(200, Keri05, 4);
   NOption(201, Keri06, 4);
   NLowOption(202, Keri07);
   NLowOption(203, Keri07);
end

procedure Keri28 begin
   Reply(204);
   NOption(205, Keri17, 4);
   NOption(206, KeriEnd, 4);
   NLowOption(207, Keri07);
end

procedure Keri29 begin
   variable LVar0 := 0;
   call RecalcDateString;
   LVar0 := local_var(9);
   NMessage(mstr(209) + DayString + mstr(212));
end

procedure Keri30 begin
   set_local_var(13, 1);
end

procedure Keri33 begin
   variable LVar0 := 0;
   set_local_var(13, 0);
   set_global_var(GVAR_CC_JOB, 1);
   LVar0 := local_var(4);
   set_local_var(4, (LVar0 + 1));
end

procedure Keri34 begin
   set_local_var(13, 0);
end

procedure Keri35 begin
   Reply(185);
   BOption(186, KeriCombat, 4);
   NOption(187, Keri36, 4);
   NOption(188, KeriEnd, 4);
   NLowOption(189, KeriEnd);
   NLowOption(190, KeriEnd);
end

procedure Keri36 begin
   Reply(191);
   NOption(192, Keri37, 4);
   NOption(193, Keri38, 4);
   NOption(194, Keri39, 4);
end

procedure Keri37 begin
   NMessage(195);
end

procedure Keri38 begin
   NMessage(196);
end

procedure Keri39 begin
   NMessage(197);
end

procedure KeriEnd begin
end

procedure KeriCombat begin
   set_map_var(MVAR_CC_HOSTILE, 1);
   set_map_var(25, 1);
   call combat;
end

procedure Jailed begin
   set_map_var(25, 1);
   gfade_out(1);
   move_to(dude_obj, 21867, 0);
   gfade_in(1);
end

procedure RecalcDate begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   variable LVar2 := 0;

   LVar0 := get_day;
   if (LVar0 <= 3) then begin
      LVar0 := 3;
      LVar1 := get_month;
      LVar2 := GAME_TIME_IN_YEARS;
   end
   else if ((LVar0 > 3) and (LVar0 <= 17)) then begin
      LVar0 := 17;
      LVar1 := get_month;
      LVar2 := GAME_TIME_IN_YEARS;
   end
   else if (LVar0 > 17) then begin
      LVar0 := 3;
      LVar1 := get_month;
      if (LVar1 == 12) then begin
         LVar1 := 1;
         LVar2 := (GAME_TIME_IN_YEARS) + 1;
      end
      else begin
         LVar1 := LVar1 + 1;
         LVar2 := GAME_TIME_IN_YEARS;
      end
   end
   set_local_var(9, LVar0);
   set_local_var(10, LVar1);
   set_local_var(11, LVar2);
end

procedure RecalcDateString begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   call RecalcDate;
   LVar0 := local_var(10);
   LVar1 := local_var(9);

   if (LVar0 == 1) then begin
      DayString := mstr(217);
   end
   else if (LVar0 == 2) then begin
      DayString := mstr(218);
   end
   else if (LVar0 == 3) then begin
      DayString := mstr(219);
   end
   else if (LVar0 == 4) then begin
      DayString := mstr(220);
   end
   else if (LVar0 == 5) then begin
      DayString := mstr(221);
   end
   else if (LVar0 == 6) then begin
      DayString := mstr(222);
   end
   else if (LVar0 == 7) then begin
      DayString := mstr(223);
   end
   else if (LVar0 == 8) then begin
      DayString := mstr(224);
   end
   else if (LVar0 == 9) then begin
      DayString := mstr(225);
   end
   else if (LVar0 == 10) then begin
      DayString := mstr(226);
   end
   else if (LVar0 == 11) then begin
      DayString := mstr(227);
   end
   else if (LVar0 == 12) then begin
      DayString := mstr(228);
   end

   if (LVar1 == 3) then begin
      DayString := DayString + mstr(210);
   end
   else if (LVar1 == 17) then begin
      DayString := DayString + mstr(211);
   end
end

procedure SendAroundHouse begin
   variable LVar0 := 0;
   Destination := 0;
   LVar0 := random(10, 20);
   while(Destination == 0) do begin
      Destination := random(1, 3);

      if (Destination == 1) then begin
         Destination := 12127;
      end
      else if (Destination == 2) then begin
         Destination := 12126;
      end
      else if (Destination == 3) then begin
         Destination := 11927;
      end
      if (Destination == LastMove) then begin
         Destination := 0;
      end

   end
   LastMove := Destination;
   reg_anim_clear(self_obj);
   reg_anim_begin();
   reg_anim_obj_move_to_tile(self_obj, Destination, -1);
   reg_anim_end();
   rm_timer_event(self_obj);
   add_timer_event(self_obj, game_ticks(LVar0), 1);
end
