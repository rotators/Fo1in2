/*

   Hub - Vance

*/

/* Include Files */
#include "define.h"
#include "sfall/main.h"

#define NAME                    SCRIPT_VANCE
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;

procedure Vance00;
procedure Vance01;
procedure Vance02;
procedure Vance02a;
procedure Vance03;
procedure Vance04;
procedure Vance05;
procedure Vance06;
procedure Vance07;
procedure Vance08;
procedure Vance09;
procedure Vance10;
procedure Vance11;
procedure Vance11a;
procedure Vance12;
procedure Vance13;
procedure Vance14;
procedure Vance15;
procedure Vance16;
procedure VanceEnd;
procedure VanceKnowsPC;
procedure Get_Stuff;
procedure Put_Stuff;
procedure Barter;

import variable Vance_Box_Ptr;


variable tmp_hostile;
variable tmp_box;
variable Only_Once := 1;
variable kickOut;
variable initiateDialogue := 1;
variable killed := 0;

#define LVAR_Here_Before      (4)
#define LVAR_Been_Introduced  (5)
#define LVAR_Barter_Mod       (6)

#ifndef barter_mod_initial
   #define barter_mod_initial          (30) // vanilla : -20
#endif
#ifndef barter_mod_dude_known
   #define barter_mod_dude_known       (30) // vanilla : -20
#endif
#ifndef barter_mod_introduced
   #define barter_mod_introduced       (25) // Knows Vance via Jacob or Lemmy, vanilla : -15
#endif

procedure start begin
   if Only_Once then begin
      set_local_var(LVAR_Barter_Mod, barter_mod_initial);
      set_self_team(TEAM_HUB_VANCE);
      set_self_ai(AI_GUARD);
      //call Put_Stuff;
      Only_Once := 0;
   end
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if ((initiateDialogue == 1) and (tile_distance_objs(self_obj, dude_obj) <= 4)) then begin
         initiateDialogue := 0;
         dialogue_system_enter;
      end
      else begin
         if (kickOut == 1) then begin
            kickOut := 0;
            initiateDialogue := 1;
            gfade_out(1);
            move_to(dude_obj, 16265, 0);
            gfade_in(1);
         end
         if (tile_distance_objs(self_obj, dude_obj) >= 5) then begin
            initiateDialogue := 1;
         end
      end
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      tmp_hostile := 1;
   end
end

procedure look_at_p_proc begin
   if (global_var(GVAR_VANCE_KNOWS_PLAYER) == 1) or (local_var(LVAR_Been_Introduced) == 1) then begin
   end
   else begin
      script_overrides;
      display_msg(mstr(100));
   end
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(119));
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_HUBOLDTN);

   dude_look_at_self;

   if (global_var(GVAR_VANCE_KNOWS_PLAYER) == 1) then begin
      set_enable_barter;
   end
   else begin
      set_disable_barter;
   end

   get_reaction
   call Get_Stuff;

   // TODO: Fixt addition. Clean this up at some point.
   if (global_var(GVAR_VANCE_KNOWS_PLAYER) == 1) then begin// Has the player been introduced to Vance by Lemmy or Jacob? ("HUBJAKE")
      set_local_var(LVAR_Barter_Mod, barter_mod_introduced);
   end
   else if (local_var(LVAR_Been_Introduced) == 1) then begin
      set_local_var(LVAR_Barter_Mod, barter_mod_dude_known);
   end
   else begin
      set_local_var(LVAR_Barter_Mod, barter_mod_initial);
   end
   gdialog_set_barter_mod(local_var(LVAR_Barter_Mod));

   if (global_var(GVAR_ENEMY_HUB) == 1) or (reaction_level == BAD) or (local_var(LVAR_reaction) <= LOW_REACTION) then begin
      start_dialog_at_node(Vance12);
   end
   else begin
      if (global_var(GVAR_VANCE_KNOWS_PLAYER) == 1) or (local_var(LVAR_Been_Introduced) >= 1) then begin // Has the player been introduced to Vance by Lemmy or Jacob? ("HUBJAKE")
         if (local_var(LVAR_Been_Introduced) != 1) then begin
            start_dialog_at_node(VanceKnowsPC);
            set_local_var(LVAR_Been_Introduced, 1);
         end
         else begin
            start_dialog_at_node(Vance06);
         end
      end
      else begin
         if (local_var(1) == 1) then begin
            start_dialog_at_node(Vance11);
            set_local_var(LVAR_Been_Introduced, 1);
         end
         else begin
            if ((local_var(LVAR_Here_Before) == 0) or (global_var(GVAR_VANCE_KNOWS_PLAYER) == 0)) then begin// Has the player been introduced to Vance by Lemmy or Jacob? ("HUBJAKE")
               set_local_var(LVAR_Here_Before, 1);
               start_dialog_at_node(Vance01);
               set_local_var(LVAR_Been_Introduced, 1);
            end
            else begin
               start_dialog_at_node(Vance06);
               set_local_var(LVAR_Been_Introduced, 1);
            end
         end
      end
   end
   call Put_Stuff;
end

procedure VanceKnowsPC begin
   Reply(101);
   BOption(105, Barter, 4);
   NOption(104, Vance03, 4);
   BOption(106, Vance04, 4);
   NLowOption(161, Vance05);
   BLowOption(162, VanceEnd);
end

procedure Vance00 begin
   Reply(mstr(157) + mstr(107));
   NOption(152, Vance16, 4);
   NOption(110, Vance02a, 4);
   NOption(111, Vance04, 4);

end

procedure Vance01 begin
   Reply(153);// was 101
   NOption(103, Vance02, 4);
   NOption(104, Vance03, 4);
   NOption(106, Vance04, 4);
   BLowOption(102, Vance16);
   NLowOption(mstr(154) + dude_name + mstr(155), Vance00);
   BLowOption(mstr(154) + dude_name + mstr(156), Vance00);

end

procedure Vance02 begin
   Reply(107);
   NOption(108, Vance03, 4);
   NOption(109, Vance02a, 4);
   NOption(111, Vance04, 4);
end

procedure Vance02a begin
   if ((is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -30)) == 1) or is_success(do_check(dude_obj, STAT_ch, -3))) then begin
      call Vance05;
   end
   else begin
      call Vance03;
   end
end

procedure Vance03 begin
   Reply(112);
   BOption(113, Vance13, 4);
   NOption(114, Vance14, 4);
end

procedure Vance04 begin
   Reply(115);
   BOption(116, Vance13, 4);
   NOption(117, Vance14, 4);
end

procedure Vance05 begin
   //set_global_var(GVAR_VANCE_KNOWS_PLAYER, 1);
   set_local_var(LVAR_Been_Introduced, 1);
   set_enable_barter;
   call Barter;
end

procedure Vance06 begin
   Reply(120);
   NLowOption(121, Barter);
   NOption(122, Barter, 4);
   NOption(123, Vance07, 4);
   NOption(124, Vance08, 4);
   NOption(125, Vance09, 4);
   NOption(126, Vance15, 4);
end

procedure Vance07 begin
   Reply(127);
   BOption(128, Vance13, 4);
   NOption(129, Vance14, 4);
end

procedure Vance08 begin
   Reply(130);
   BOption(131, Vance13, 4);
   NOption(132, Vance10, 4);
   NOption(133, Vance15, 4);
end

procedure Vance09 begin
   Reply(134);
   NOption(135, Barter, 4);
   BOption(136, Vance07, 4);
   NOption(137, Vance15, 4);
end

procedure Vance10 begin
   Reply(138);
   NOption(139, Barter, 4);
   NOption(140, Vance15, 4);
end

procedure Vance11 begin
   Reply(141);
   BOption(142, Vance13, 4);
   NOption(143, Vance14, 4);
   GOption(144, Vance11a, 4);
end

procedure Vance11a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20)) == 1) then begin
      call Vance02;
   end
   else begin
      call Vance13;
   end
end

procedure Vance12 begin
   Reply(145);
   BOption(148, Vance13, 4);
   NOption(149, Vance14, 4);
   BLowOption(146, Vance13);
   NLowOption(147, Vance14);
end

procedure Vance13 begin
   BottomReact
   call combat;
   float_msg(self_obj, mstr(160), FLOAT_MSG_RED);
end

procedure Vance14 begin
   kickOut := 1;
end

procedure Vance15 begin
end

procedure Vance16 begin
   Reply(158);
   NLowOption(159, VanceEnd);
end

procedure VanceEnd begin
end

procedure Barter begin
   GMessage(118);
   gdialog_mod_barter(local_var(LVAR_Barter_Mod));
   Reply(150);
   NOption(151, VanceEnd, 4);
   NLowOption(152, VanceEnd);
end

procedure destroy_p_proc begin
   inc_good_critter
   move_obj_inven_to_obj(Vance_Box_Ptr, self_obj);
end

procedure Get_Stuff begin
   get_barter_inven(Vance_Box_Ptr);
end

procedure Put_Stuff begin
   put_barter_inven(Vance_Box_Ptr);
end
