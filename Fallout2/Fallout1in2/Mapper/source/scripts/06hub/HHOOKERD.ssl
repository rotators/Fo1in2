/*

   Hub - Hooker D

*/

/* Include Files */
#include "define.h"
//#include "hub.h"

#define NAME                    SCRIPT_HHOOKERA
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure description_p_proc;

variable tmp_hostile;
variable Only_Once := 1;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_HUB_UNDERGROUND);
      set_self_ai(AI_BOUNCER);
   end
end

procedure map_enter_p_proc begin
   variable LVar0 := 0;
   LVar0 := self_item(PID_BOTTLE_CAPS);
   if (LVar0 <= 0) then begin
      variable LVar1 := 0;
      LVar1 := create_object(PID_BOTTLE_CAPS, 0, 0);
      add_mult_objs_to_inven(self_obj, LVar1, random(30, 120));
   end
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(301));
   script_overrides;
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(105));
   script_overrides;
end

procedure combat_p_proc begin
   //tmp_hostile := 1;
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   dude_look_at_self;
   get_reaction
   float_msg(self_obj, mstr(random(135, 149)), FLOAT_MSG_RED);
end

procedure destroy_p_proc begin
   inc_good_critter
end
