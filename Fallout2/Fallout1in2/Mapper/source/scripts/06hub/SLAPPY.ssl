/*

   Hub - Slappy

*/

/* Include Files */
#include "define.h"
#include "maps/huboldtn.h"

#define NAME                    SCRIPT_SLAPPY
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;

procedure Slappy01;
procedure Slappy02;
procedure Slappy03;
procedure Slappy04;
procedure Slappy05;
procedure Slappy06;
procedure Slappy07;
procedure Slappy08;
procedure Slappy09;
procedure Slappy10;
procedure Slappy11;
procedure SlappyEnd;
procedure SlappyClaw;
procedure SlappyClaw2;
procedure SlappyClaw3;

variable tmp_hostile;
variable Only_Once := 1;
variable lastBabble;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_HUB_SKAG);
      set_self_ai(AI_HUB_MUTANTS);
   end
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   if (tile_distance_objs(self_obj, dude_obj) <= 20) then begin
      if (((game_time / 10) - lastBabble) >= 10) then begin
         lastBabble := game_time / 10;
         float_msg(self_obj, mstr(random(101, 107)), FLOAT_MSG_RED);
      end
   end
   if (self_tile == 25131) then begin
      reg_anim_begin();
      reg_anim_obj_move_to_tile(self_obj, 25331, -1);
      reg_anim_end();
   end
   else if (self_tile == 25331) then begin
      reg_anim_begin();
      reg_anim_obj_move_to_tile(self_obj, 25132, -1);
      reg_anim_end();
   end
   else if (self_tile == 25132) then begin
      reg_anim_begin();
      reg_anim_obj_move_to_tile(self_obj, 24932, -1);
      reg_anim_end();
   end
   else if (self_tile == 24932) then begin
      reg_anim_begin();
      reg_anim_obj_move_to_tile(self_obj, 25131, -1);
      reg_anim_end();
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   set_tma_data(NAME, 1000, -1, -1, 101, 108);

   dude_look_at_self;
   get_reaction
   if (global_var(GVAR_MISSING_CARAVANS_STATUS) == 5) then begin
      call Slappy10;
   end
   else begin
      start_dialog_at_node(Slappy01);
   end
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure Slappy01 begin
   Reply(108);
   if (global_var(GVAR_MISSING_CARAVANS_STATUS) == 3) and not(hub_lair_visible_on_map) then begin
      NOption(109, Slappy03, 4);
   end
   if (global_var(GVAR_MISSING_CARAVANS_STATUS) == 2) then begin
      NOption(110, Slappy11, 4);
   end
   NOption(111, Slappy04, 4);
   NOption(112, Slappy05, 4);
   NLowOption(113, Slappy02);
end

procedure Slappy02 begin
   Reply(114);
   NLowOption(115, SlappyEnd);
end

procedure Slappy03 begin
   Reply(116);
   NOption(117, Slappy06, 4);
   NOption(118, Slappy05, 4);
   NOption(119, Slappy09, 4);
end

procedure Slappy04 begin
   Reply(120);
   NOption(121, Slappy08, 4);
   NOption(122, SlappyEnd, 4);
end

procedure Slappy05 begin
   Reply(123);
   NOption(124, SlappyEnd, 4);
end

procedure Slappy06 begin
   Reply(125);
   NOption(126, Slappy07, 4);
   NOption(127, SlappyEnd, 4);
end

procedure Slappy07 begin
   if fo1in2_satellite_loc_disabled then begin
      Reply(128);
      NOption(129, SlappyClaw, 4);
   end
   else if not(hub_lair_visible_on_map) then begin
      Reply(2000);
      NOption(2010, SlappyClaw2, 4);
   end

   NOption(130, SlappyEnd, 4);
end

procedure Slappy08 begin
   Reply(131);
   NOption(132, SlappyEnd, 4);
end

procedure Slappy09 begin
   NMessage(133);
end

procedure Slappy10 begin
   float_msg(self_obj, mstr(134), FLOAT_MSG_RED);
end

procedure Slappy11 begin
   Reply(135);
   NOption(136, SlappyEnd, 4);
end

procedure SlappyEnd begin
end

// Vanilla Fo1, teleport the player:
procedure SlappyClaw begin
   if (map_var(MVAR_Once_DeathClaw) == 0) then begin
      set_map_var(MVAR_Once_DeathClaw, 1);
      give_xp(EXP_FIND_DEATHCLAW);
   end
   load_map(MAP_DETHCLAW, 0);
end

// If the player enabled satellite quest locations, mark the location instead:
procedure SlappyClaw2 begin
   Reply(2100);
   NOption(2110, SlappyClaw3, 001);
end

procedure SlappyClaw3 begin
   gfade_out(1);
   mark_hub_lair_on_map
   game_time_advance(ONE_GAME_MINUTE * random(5, 10));
   gfade_in(1);

   if (map_var(MVAR_Once_DeathClaw) == 0) then begin
      set_map_var(MVAR_Once_DeathClaw, 1);
      give_xp_msg(EXP_FIND_DEATHCLAW, mstr(151));
   end

   GMessage(2200);
end
