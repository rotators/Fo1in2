/*

   Hub - Guido

*/

/* Include Files */
#include "define.h"
//#include "necropolis.h"

#define NAME                    SCRIPT_GUIDO
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure timed_event_p_proc;

procedure Guido00;
procedure Guido01;
procedure Guido02;

import variable Leon_Ptr;
import variable Guido_Ptr;

variable tmp_hostile;
variable Only_Once := 1;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      Guido_Ptr := self_obj;
      set_self_team(TEAM_HUB_FLC);
      set_self_ai(AI_GUARD);
   end
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
end

procedure pickup_p_proc
begin
   if (source_obj == dude_obj) then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc
begin
   dude_look_at_self;
   get_reaction
   if (map_var(16) == 0) then begin
      set_map_var(16, 1);
      call Guido00;
   end
   else begin
      call Guido01;
   end
end

procedure destroy_p_proc begin
   inc_evil_critter
end

procedure look_at_p_proc
begin
   script_overrides;
   display_msg(mstr(100));
end

procedure timed_event_p_proc
begin
   if (fixed_param == 1) then begin
      call Guido02;
   end
end

procedure Guido00
begin
   float_msg(self_obj, mstr(101), FLOAT_MSG_RED);
   float_msg(Leon_Ptr, message_str(SCRIPT_LEON, 105), FLOAT_MSG_GREEN);
   add_timer_event(self_obj, game_ticks(3), 1);
   add_timer_event(Leon_Ptr, game_ticks(3), 1);
end

procedure Guido01
begin
   float_msg(self_obj, mstr(104), FLOAT_MSG_RED);
end

procedure Guido02
begin
   float_msg(self_obj, mstr(102), FLOAT_MSG_RED);
   if (dude_is_male) then begin
      float_msg(Leon_Ptr, message_str(SCRIPT_LEON, 102), FLOAT_MSG_GREEN);
   end
   else begin
      float_msg(Leon_Ptr, message_str(SCRIPT_LEON, 103), FLOAT_MSG_GREEN);
   end
end
