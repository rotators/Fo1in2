/*

   Boneyard - Razor, the leader of the blades

*/

/* Include Files */
#include "define.h"
#include "maps/laadytum.h"
#include "boneyard.h"

#define NAME                    SCRIPT_RAZOR
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;

procedure Razor01;
procedure Razor02;
procedure Razor03;
procedure Razor04;
procedure Razor04a;
procedure Razor05;
procedure Razor06;
procedure Razor07;
procedure Razor08;
procedure Razor09;
procedure Razor10;
procedure Razor11;
procedure Razor12;
procedure Razor13;
procedure Razor14;
procedure Razor15;
procedure Razor16;
procedure Razor17;
procedure Razor18;
procedure Razor19;
procedure Razor20;
procedure Razor21;
procedure Razor22;
procedure Razor22a;
procedure Razor23;
procedure Razor24;
procedure Razor25;
procedure Razor26;
procedure Razor27;
procedure Razor28;
procedure Razor29;
procedure Razor30;
procedure Razor31;
procedure Razor32;
procedure Razor33;
procedure Razor34;
procedure Razor35;
procedure Razor36;
procedure Razor37;
procedure Razor38;
procedure Razor41;
procedure Razor42;
procedure Razor43;
procedure Razor44;
procedure Razor45;
procedure Razor46;
procedure Razor46a;
procedure Razor47;
procedure Razor47a;
procedure Razor48;
procedure RazorFin;
procedure RazorReg;
procedure RazorEnd;
procedure RemoveBlades;
procedure fix00;

procedure Gunrunners00;

import variable RazorPtr;

variable Only_Once := 1;
variable DisplayMessage := 100;

#define LVAR_TalkToZimmerman     (7)

procedure Start begin
   if Only_Once then begin
      set_self_team(TEAM_LA_BLADES);
      set_self_ai(AI_BLADES);
      if (global_var(GVAR_ADYTUM_RAZOR_SOMETHING_1) == 1) then begin
         set_local_var(4, 1);
      end
      Only_Once := 0;
   end
   RazorPtr := self_obj;
end

procedure look_at_p_proc begin
   script_overrides;
   if (local_var(4) == 1) then
      display_msg(mstr(220));
   else
      display_msg(mstr(221));
end

procedure description_p_proc begin
   script_overrides;
   if (local_var(4) == 1) then
      display_msg(mstr(220));
   else
      display_msg(mstr(221));
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_BLADES_LVL3);

   dude_look_at_self;

   if (global_var(GVAR_ENEMY_BLADES) == 1) then begin
      float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), FLOAT_MSG_RED);
   end
   else begin
      if (get_blades_attack_finished and (local_var(6) == 1)) then begin
         float_msg(self_obj, mstr(random(215, 217)), FLOAT_MSG_NORMAL);
      end
      else if ((local_var(4) == 1) and (dude_iq < 4)) then begin
         float_msg(self_obj, mstr(222), FLOAT_MSG_NORMAL);
      end
      else begin
         get_reaction
         start_gdialog(278, self_obj, -1, -1, -1);
         gsay_start;
         if get_blades_attack_finished then begin
            if (global_var(GVAR_ADYTUM_RAZOR_SOMETHING_0) == 1) then begin
               if (global_var(GVAR_ADYTUM_RAZOR_SOMETHING_2) == 1) then begin
                  call Razor45;
               end
               else if (local_var(4) == 0) then begin
                  call Razor42;
               end
               else begin
                  call Razor48;
               end
            end
            else begin
               call RazorFin;
            end
            set_local_var(6, 1);
         end
         else begin

            if get_gunrunners_armed_blades then begin
               call Razor33;
            end
            else if get_gunrunners_armed_dude then begin
               call Razor37;
            end
            else if get_task_kill_razor then begin
               call Razor20;
            end
            else if global_var(GVAR_RECEIVED_HOLODISK_RAZOR) and not(get_gunrunners_armed_dude) then begin
               call Razor26;
            end
            else if get_zimmermann_turned then begin
               call Razor30;
            end
            else if (global_var(GVAR_ADYTUM_RAZOR_SOMETHING_2) == 1) then begin
               call Razor46;
            end
            else if (global_var(GVAR_ZIMMERMAN_STATUS) == 0) then begin
               call Razor01;
            end
            else if (global_var(GVAR_ENEMY_GUN_RUNNERS) == 1) then begin
               call Razor37;
            end
            else begin
               call fix00;
            end

         end
         gsay_end;
         end_dialogue;
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_BLADES, 1);
   end
end

procedure destroy_p_proc begin
   if source_obj == dude_obj then begin
      inc_good_critter
      set_global_var(GVAR_ENEMY_BLADES, 1);
   end
   inc_boneyard_rep(REP_BONUS_RAZOR_DEAD);
   set_razor_killed;
   set_blades_quest_completed;
end

procedure critter_p_proc begin
   if (global_var(GVAR_ADYTUM_RAZOR_SOMETHING_1) == 1) then begin
      set_local_var(4, 1);
   end
   if (local_var(5) == 1) then begin
      attack(dude_obj);
      set_local_var(5, 0);
      set_global_var(GVAR_ENEMY_BLADES, 1);
   end
end

procedure pickup_p_proc begin
   set_global_var(GVAR_ENEMY_BLADES, 1);
end

procedure map_enter_p_proc begin
end

procedure map_update_p_proc begin
   if (RazorPtr == 0) then
      RazorPtr := self_obj;

   if (global_var(GVAR_ADYTUM_RAZOR_SOMETHING_1) == 1) then begin
      set_local_var(4, 1);
   end
end

procedure Razor01 begin
   Reply(100);

   // TODO: Experimental. Don't repeat the whole dialog if the player already went through it.
   // Taking "arm the Blades"-questline as a base for now, because anything else likely requires new dialog.
   if not(get_arming_blades) then begin
      NOption(101, Razor02, 4);
      NOption(102, Razor03, 4);
   end

   NOption(103, RazorEnd, 4);
   NLowOption(104, Razor41);
end

procedure Razor02 begin
   Reply(105);
   NOption(106, Razor03, 1);
   NOption(107, Razor04, 1);
   NOption(mstr(108) + dude_name + ".", Razor05, 1);
   NOption(109, RazorEnd, 1);
   set_local_var(4, 1);
end

procedure Razor03 begin
   Reply(110);
   NOption(111, Razor06, 1);
   NOption(112, Razor07, 1);
   NOption(113, RazorEnd, 1);
end

procedure Razor04 begin
   Reply(114);
   NOption(115, Razor09, 1);
   NOption(116, Razor04a, 1);
   NOption(238, RazorReg, 1);
   NOption(117, RazorEnd, 1);
end

procedure Razor04a begin
   BottomReact
end

procedure Razor05 begin
   Reply(118);
   NOption(119, Razor08, 1);
   NOption(120, Razor08, 1);
   NOption(121, RazorEnd, 1);
end

procedure Razor06 begin
   Reply(122);
   NOption(123, Razor09, 1);
   NOption(124, Razor10, 1);
   NOption(125, Razor19, 1);
   NOption(126, RazorEnd, 1);
end

procedure Razor07 begin
   Reply(127);
   NOption(128, Razor09, 1);
   NOption(129, Razor19, 1);
   NOption(130, Razor19, 1);
end

procedure Razor08 begin
   Reply(131);
   NOption(132, Razor04, 1);
   NOption(133, Razor03, 1);
end

procedure Razor09 begin
   Reply(134);
   NOption(135, Razor11, 1);
   NOption(136, RazorEnd, 1);
   set_arming_blades;
end

procedure Razor10 begin
   Reply(137);
   NOption(138, Razor12, 1);
   NOption(139, Razor14, 1);
   NOption(238, RazorReg, 1);
end

procedure Razor11 begin
   Reply(140);
   NOption(141, Razor18, 1);
   NOption(238, RazorReg, 1);
   NOption(142, RazorEnd, 1);
end

procedure Razor12 begin
   Reply(143);
   NOption(144, Razor13, 1);
   NOption(145, RazorEnd, 1);
end

procedure Razor13 begin
   Reply(146);
   NOption(147, Razor14, 1);
end

procedure Razor14 begin
   Reply(148);
   NOption(149, Razor15, 1);
   NOption(150, Razor09, 1);
end

procedure Razor15 begin
   Reply(151);
   NOption(152, Razor27, 1);
   NOption(153, Razor17, 1);
end

procedure Razor16 begin
variable holodisk;

   Reply(154);
   NOption(155, RazorEnd, 1);
   if not(global_var(GVAR_RECEIVED_HOLODISK_RAZOR)) then begin
      set_global_var(GVAR_RECEIVED_HOLODISK_RAZOR, 1);
   end
   set_map_var(1, 1);

   // TODO: Figure out why this was in obj_dude critter_p_proc ....
   set_global_var(GVAR_RECEIVED_HOLODISK_RAZOR, 2);
   holodisk := create_object_sid(PID_REGULATOR_HOLODISK, 0, 0, SCRIPT_REGDISK);
   add_obj_to_inven(dude_obj, holodisk);
   //set_global_var( GVAR_RAZOR_HOLODISK_POINTER, holodisk );
end

procedure Razor17 begin
   Reply(156);
   NOption(157, RazorEnd, 1);
end

procedure Razor18 begin
   Reply(158);
   NOption(159, RazorEnd, 1);
   set_arming_blades;
end

procedure Razor19 begin
   Reply(160);
   NOption(161, RazorEnd, 1);
end

procedure Razor20 begin
   // TODO: Experimental. Don't repeat the whole dialog if the player already went through it.
   // Taking "arm the Blades"-questline as a base for now, because anything else likely requires new dialog.
   if not(get_arming_blades) then begin
      Reply(162);
      NOption(163, Razor21, 4);
      NOption(164, RazorEnd, 4);
   end
   else begin
      Reply(300);
      NOption(301, Gunrunners00, 4);
      NOption(302, RazorEnd, 4);
      NLowOption(g_grunt, RazorEnd);
   end

   NLowOption(165, Razor41);
end

procedure Razor21 begin
   Reply(166);
   NOption(167, Razor22, 1);
   NOption(168, Razor07, 1);
   NOption(169, RazorEnd, 1);
end

procedure Razor22 begin
   Reply(170);
   NOption(171, Razor22a, 1);
   NOption(172, Razor23, 1);
end

procedure Razor22a begin
   set_local_var(5, 1);
end

procedure Razor23 begin
   Reply(173);
   NOption(174, Razor22a, 1);
   NOption(175, Razor24, 1);
end

procedure Razor24 begin
   Reply(176);
   NOption(177, Razor22a, 1);
   NOption(178, Razor25, 1);
end

procedure Razor25 begin
   Reply(179);
   NOption(180, Razor13, 1);
end

procedure Razor26 begin
   Reply(181);
   NOption(182, Razor29, 4);
   NLowOption(183, Razor41);
end

procedure Razor27 begin
   Reply(184);

   if not(get_arming_blades) then
      NOption(185, Razor28, 1);

   NOption(238, RazorReg, 1);
   NOption(186, RazorEnd, 1);
end

procedure Razor28 begin
   Reply(187);
   NOption(188, Razor16, 1);
   set_arming_blades;
end

procedure Razor29 begin
   NMessage(189);
end

procedure Razor30 begin
   Reply(190);
   NOption(191, Razor31, 4);
   NLowOption(192, Razor41);
end

procedure Razor31 begin
   Reply(193);
   NOption(194, Razor32, 1);
   NOption(195, Razor19, 1);
end

procedure Razor32 begin
   NMessage(196);
   set_arming_blades;
end

procedure Razor33 begin
   if (local_var(LVAR_TalkToZimmerman) == 0) then begin
      Reply(197);
      NOption(198, Razor34, 4);
      NOption(199, Razor35, 4);

      if (global_var(GVAR_ZIMMERMAN_STATUS) != 9003) then
         NOption(201, Razor36, 4);
   end
   else begin
      Reply(400);
      NOption(401, Razor34, 4);
      NOption(402, Razor35, 4);

      if (global_var(GVAR_ZIMMERMAN_STATUS) != 9003) then
         NOption(403, Razor36, 4);
   end
   NLowOption(200, Razor41);
end

procedure Razor34 begin
   gfade_out(1);
      game_time_advance(10 * 60 * 60 * 8);
      set_blades_attacking_alone;
      TopReact
   gfade_in(1);
   NMessage(202);
end

procedure Razor35 begin
   gfade_out(1);
      game_time_advance(ONE_GAME_DAY);
      set_blades_attacking;
      TopReact
   gfade_in(1);
   NMessage(203);
   load_map("laadytum.map", 1);
end

procedure Razor36 begin
   set_local_var(LVAR_TalkToZimmerman, 1);
   NMessage(204);
   set_blades_attacking_wait;
end

procedure Razor37 begin
   inc_boneyard_rep(REP_BONUS_DEATHCLAWS_DEAD);
   if (dude_is_male) then begin
      Reply(mstr(240) + " " + mstr(205));
   end
   else begin
      Reply(mstr(241) + " " + mstr(205));
   end
   NOption(206, RazorEnd, 4);
   NOption(207, RazorEnd, 4);

   if global_var(GVAR_RECEIVED_HOLODISK_RAZOR) then
      NOption(208, Razor38, 4);

   NOption(209, Razor22a, 4);
   NLowOption(210, Razor41);
end

procedure Razor38 begin
   NMessage(211);
end

procedure Razor41 begin
   NMessage(218);
end

procedure Razor42 begin
   Reply(224);
   NOption(225, Razor43, 4);
   NLowOption(226, Razor41);
end

procedure Razor43 begin
   Reply(227);
   NOption(228, Razor44, 1);
end

procedure Razor44 begin
   NMessage(229);
   set_global_var(GVAR_PLAYER_REPUTATION, check_general_rep + 2);
   give_xp(500);
end

procedure Razor45 begin
   NMessage(230);
   set_global_var(GVAR_PLAYER_REPUTATION, check_general_rep + 2);
   give_xp(500);
end

procedure Razor46 begin
   Reply(231);
   NOption(232, Razor46a, 1);
   NOption(233, Razor47, 1);
end

procedure Razor46a begin
   NMessage(215);
end

procedure Razor47 begin
   Reply(234);
   NOption(235, Razor47a, 1);
   NOption(236, RazorEnd, 1);
end

procedure Razor47a begin
   NMessage(215);
   set_arming_blades;
end

procedure Razor48 begin
   NMessage(237);
   set_global_var(GVAR_PLAYER_REPUTATION, check_general_rep + 2);
   give_xp(500);
end

procedure RazorFin begin
   NMessage(223);
end

procedure RazorReg begin
   NMessage(239);
   set_global_var(GVAR_ADYTUM_RAZOR_SOMETHING_2, 1);
end

procedure RazorEnd begin
end

procedure RemoveBlades begin
end

procedure fix00 begin
   NMessage(222);
end

procedure Gunrunners00 begin
   NMessage(187);
end
