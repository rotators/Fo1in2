/*

   Boneyard - Super Mutant invaders, Uthern

*/

/* Include Files */
#include "define.h"
#include "maps/lafollwr.h"

#define NAME                    SCRIPT_UTHERN
//#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;

procedure uthern0;
procedure uthern1;
procedure uthern2;
procedure uthern3;
procedure uthern4;
procedure uthern5;
procedure uthern6;
procedure uthern7;
procedure uthern8;
procedure uthern9;
procedure uthern10;
procedure uthern11;
procedure uthern12;
procedure uthern13;
procedure uthern14;
procedure uthernend;
procedure combat;
procedure to_orfeo;

#define LVAR_Here_Before      (0)
#define LVAR_Initial          (1)

import variable Uthern_ptr;
import variable Orfeo_ptr;

variable tmp_hostile;
variable initial := 0;
variable weaponPtr;

procedure start begin
   if (not(initial)) then begin
      Uthern_ptr := self_obj;
      set_self_team(TEAM_NECROPOLIS_MUTANT);
      set_self_ai(AI_SUPER_MUTANT_SGT);
      self_rotate(2);
      if (local_var(LVAR_Initial) == 0) then begin
         set_local_var(LVAR_Initial, 1);
         weaponPtr := create_object(PID_GATLING_LASER, 0, 0);
         add_obj_to_inven(self_obj, weaponPtr);
         wield_obj_critter(self_obj, weaponPtr);
         add_obj_to_inven(self_obj, create_object(PID_MICRO_FUSION_CELL, 0, 0));
      end
      initial := 1;
   end
end

procedure critter_p_proc begin
   if (global_var(GVAR_ENEMY_FOLL_INVADERS)) then begin
      tmp_hostile := 1;
   end
   if (tmp_hostile and self_can_see_dude) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if (self_can_see_dude and (tile_distance_objs(self_obj, dude_obj) < 6)) then begin
         if (local_var(LVAR_Here_Before) == 0) then begin
            dialogue_system_enter;
         end
      end
   end
end

procedure destroy_p_proc begin
   Uthern_ptr := 0;
   if (source_obj == dude_obj) then begin
      inc_evil_critter
      set_global_var(GVAR_ENEMY_FOLL_INVADERS, 1);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure talk_p_proc begin
   script_overrides;
   dude_look_at_self;
   if (local_var(LVAR_Here_Before)) then begin
      call uthern14;
   end
   else begin
      set_local_var(LVAR_Here_Before, 1);
      start_dialog_at_node(uthern0);
   end
end

procedure uthern0 begin
   Reply(101);
   NLowOption(102, uthern1);
   NOption(103, uthern2, 4);
   NOption(104, combat, 4);
   NOption(105, uthern7, 5);
   NOption(106, uthern13, 8);
end

procedure uthern1 begin
   NMessage(107);
   call combat;
end

procedure uthern2 begin
   Reply(108);
   NOption(109, uthern3, 4);
   NOption(110, combat, 4);
   NOption(111, uthern4, 6);
end

procedure uthern3 begin
   NMessage(112);
   call to_orfeo;
end

procedure uthern4 begin
   Reply(113);
   NOption(114, uthern5, 6);
   NOption(115, uthern6, 6);
   NOption(116, combat, 6);
end

procedure uthern5 begin
   NMessage(117);
   call combat;
end

procedure uthern6 begin
   NMessage(118);
   call combat;
end

procedure uthern7 begin
   Reply(119);
   NOption(120, uthern8, 5);
   NOption(121, uthern12, 5);
   NOption(122, combat, 5);
end

procedure uthern8 begin
   Reply(123);
   NOption(124, uthern9, 5);
   NOption(125, uthern10, 5);
   NOption(126, uthern11, 5);
   NOption(127, combat, 5);
end

procedure uthern9 begin
   NMessage(128);
   call to_orfeo;
end

procedure uthern10 begin
   NMessage(129);
   call combat;
end

procedure uthern11 begin
   NMessage(130);
   call to_orfeo;
end

procedure uthern12 begin
   Reply(131);
   NOption(132, combat, 5);
   NOption(133, combat, 5);
   NOption(134, combat, 5);
end

procedure uthern13 begin
   NMessage(135);
   call to_orfeo;
end

procedure uthern14 begin
   float_msg(self_obj, mstr(136), FLOAT_MSG_NORMAL);
   call to_orfeo;
end

procedure uthernend begin
end

procedure combat begin
   tmp_hostile := 1;
end

procedure to_orfeo begin
   if CUR_MAP_LAFOLLWR then begin
      critter_attempt_placement(dude_obj, 18890, 0);
      dude_rotate(5);
   end
   else
      load_map("lafollwr.map", 11);
end
