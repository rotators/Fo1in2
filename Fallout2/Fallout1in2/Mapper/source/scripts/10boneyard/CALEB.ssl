/*

   Boneyard - Caleb

*/

/* Include Files */
#include "define.h"
#include "maps/laadytum.h"
#include "boneyard.h"

#define NAME                    SCRIPT_CALEB
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure look_at_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;

procedure DialogWeapon;
procedure DialogExit;
procedure Caleb;
procedure CalebExit;
procedure Caleb1;
procedure Caleb2;
procedure Caleb3;
procedure Caleb4;
procedure Caleb5;
procedure Caleb6;
procedure Caleb7;
procedure Caleb8;
procedure Caleb9;
procedure Caleb10;
procedure Caleb11;
procedure Caleb12;
procedure Caleb13;
procedure Dumb;

variable Only_Once := 1;
variable tmp_hostile;
variable DisplayMessage := 100;

procedure Start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_LA_REGULATORS);
      set_self_ai(AI_REGULATORS);
      if (local_var(7) == 0) then begin
         inc_map_var(MVAR_RegulatorCount);
         set_local_var(7, 1);
         set_global_var(GVAR_ADYTUM_CALEB_SOMETHING_0, 1);
      end
   end
end

procedure map_enter_p_proc begin
   if map_first_run then
      self_caps_adjust(random(10, 100));
end

procedure look_at_p_proc begin
   script_overrides;
   if (local_var(4) == 1) then
      display_msg(mstr(100));
   else
      display_msg(mstr(101));
   script_overrides;
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_ADYTUM_LVL3);

   dude_look_at_self;
   if ((global_var(GVAR_ENEMY_ADYTUM) == 1) or (global_var(GVAR_DUDE_ENEMY_REGULATORS) == 1)) then begin
      float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), FLOAT_MSG_RED);
   end
   else begin
      if ((local_var(4) == 1) and (dude_iq < 4)) then begin
         float_msg(self_obj, mstr(127), FLOAT_MSG_NORMAL);
      end
      else begin
         if quest_kill_razor_active and get_razor_killed then begin
            float_msg(self_obj, mstr(147), FLOAT_MSG_NORMAL);
         end
         else begin
            get_reaction
            start_gdialog(255, self_obj, -1, -1, -1);
            gsay_start;
            if (dude_is_armed) then begin
               call DialogWeapon;
            end
            else begin
               if (local_var(4) == 0) then begin
                  if (local_var(1) < 2) then begin
                     DisplayMessage := 102;
                  end
                  else begin
                     DisplayMessage := 103;
                  end
                  call Caleb;
               end
               else if quest_kill_razor_inactive then begin
                  if (local_var(1) < 2) then begin
                     DisplayMessage := 122;
                  end
                  if (dude_is_male) then begin
                     DisplayMessage := 123;
                  end
                  else begin
                     DisplayMessage := 124;
                  end
                  call Caleb;
               end
               else begin
                  DisplayMessage := 141;
                  call Caleb11;
               end
            end
            gsay_end;
            end_dialogue;
         end
      end
   end
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if ((global_var(GVAR_ENEMY_ADYTUM) == 1) or (global_var(GVAR_DUDE_ENEMY_REGULATORS) == 1)) then begin
         attack(dude_obj);
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_DUDE_ENEMY_REGULATORS, 1);
   end
end

procedure destroy_p_proc begin
   dec_map_var(MVAR_RegulatorCount);

   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_DUDE_ENEMY_REGULATORS, 1);
   end
   inc_good_critter
   if (map_var(MVAR_RegulatorCount) == 0) then begin
      terminate_combat;
   end
end

procedure pickup_p_proc begin
   set_global_var(GVAR_DUDE_ENEMY_REGULATORS, 1);
end

procedure DialogWeapon begin
   NMessage(125);
end

procedure DialogExit begin
end

procedure Caleb begin
   Reply(DisplayMessage);
   NOption(105, Caleb1, 4);
   NOption(106, Caleb2, 4);
   NOption(107, Caleb5, 4);
   if (local_var(5) == 1) then
      NOption(108, Caleb6, 4);
   if (local_var(6) == 1) then
      NOption(109, Caleb7, 4);
   if get_gangwar_inactive then
      NOption(110, Caleb8, 4);
   NOption(111, CalebExit, 4);
   NLowOption(126, Dumb);
end

procedure Dumb begin
   set_local_var(4, 1);
   NMessage(127);
end

procedure CalebExit begin
   if (local_var(1) < 2) then
      NMessage(120);
   else
      NMessage(121);
end

procedure Caleb1 begin
   set_local_var(4, 1);
   if (local_var(1) < 2) then begin
      DisplayMessage := 116;
   end
   else begin
      set_local_var(5, 1);
      DisplayMessage := 117;
   end
   call Caleb;
end

procedure Caleb2 begin
   Reply(112);
   NOption(113, Caleb3, 4);
   NOption(114, Caleb4, 4);
   NOption(115, CalebExit, 4);
end

procedure Caleb3 begin
   DisplayMessage := 128;
   call Caleb;
end

procedure Caleb4 begin
   DisplayMessage := 129;
   call Caleb;
end

procedure Caleb5 begin
   NMessage(118);
   set_local_var(6, 1);
   DisplayMessage := 119;
   call Caleb;
end

procedure Caleb6 begin
   NMessage(130);
   DisplayMessage := 131;
   call Caleb;
end

procedure Caleb7 begin
   DisplayMessage := 132;
   call Caleb;
end

procedure Caleb8 begin
   Reply(133);
   NOption(134, Caleb10, 4);
   NOption(135, Caleb9, 4);
   NOption(136, DialogExit, 4);
end

procedure Caleb9 begin
   DisplayMessage := 137;
   call Caleb;
end

procedure Caleb10 begin
   Reply(138);
   NOption(139, Caleb9, 4);
   NOption(140, DialogExit, 4);
end

procedure Caleb11 begin
   Reply(DisplayMessage);
   NOption(142, Caleb12, 4);
   NOption(143, Caleb13, 4);
   NOption(144, DialogExit, 4);
end

procedure Caleb12 begin
   DisplayMessage := 145;
   call Caleb11;
end

procedure Caleb13 begin
   DisplayMessage := 146;
   call Caleb11;
end
