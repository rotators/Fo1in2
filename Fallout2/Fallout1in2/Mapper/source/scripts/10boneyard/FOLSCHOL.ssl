/*

   Boneyard - generic FoA scholar

*/

/* Include Files */
#include "define.h"
//#include "necropolis.h"

#define NAME                    SCRIPT_FOLSCHOL
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure map_enter_p_proc;
procedure push_p_proc;

variable Only_Once := 1;
variable PsstTime;

procedure push_p_proc begin
end

procedure Start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_LA_FOLLOWERS);
      add_timer_event(self_obj, game_ticks(random(3, 5)), 1);
   end
   if script_action == map_enter_proc then begin
      call map_enter_p_proc;
   end
end

procedure map_enter_p_proc begin
   if map_first_run then
      self_caps_adjust(random(1, 10));

   if global_var(GVAR_FOLLOWERS_LEFT) == 0 then begin
      set_global_var(GVAR_FOLLOWERS_LEFT, 24);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure talk_p_proc begin
   dude_look_at_self;
   if (global_var(GVAR_ENEMY_FOLLOWERS) == 1) then begin
      float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), FLOAT_MSG_RED);
   end
   else begin
      if cathedral_destroyed then begin
         float_msg(self_obj, mstr(random(115, 119)), FLOAT_MSG_NORMAL);
      end
      else begin
         float_msg(self_obj, mstr(random(101, 114)), FLOAT_MSG_NORMAL);
      end
   end
end

procedure critter_p_proc begin
   variable LVar0 := 0;
   LVar0 := global_var(GVAR_FOLSCHOL_SOMETHING_0);
   if ((((game_time / 10) - LVar0) >= 10) and (tile_distance_objs(self_obj, dude_obj) <= 4) and (global_var(GVAR_ENEMY_FOLLOWERS) == 0)) then begin
      if cathedral_destroyed then begin
         float_msg(self_obj, mstr(random(115, 119)), FLOAT_MSG_NORMAL);
      end
      else begin
         float_msg(self_obj, mstr(random(101, 114)), FLOAT_MSG_NORMAL);
      end
      LVar0 := game_time / 10;
      set_global_var(GVAR_FOLSCHOL_SOMETHING_0, LVar0);
   end
   else begin
      if (self_can_see_dude) then begin
         if (global_var(GVAR_ENEMY_FOLLOWERS) == 1) then begin
            attack(dude_obj);
         end
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_FOLLOWERS, 1);
   end
end

procedure destroy_p_proc begin
   set_global_var(GVAR_FOLLOWERS_LEFT, (global_var(GVAR_FOLLOWERS_LEFT) - 1));
   rm_timer_event(self_obj);

   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_FOLLOWERS, 1);
   end
   inc_good_critter
   rm_timer_event(self_obj);
end

procedure timed_event_p_proc begin
   self_walk_to_tile(tile_num_in_direction(self_tile, random(0, 5), random(1, 5)));
   add_timer_event(self_obj, game_ticks(random(3, 5)), 1);
end

procedure pickup_p_proc begin
   set_global_var(GVAR_ENEMY_FOLLOWERS, 1);
end
