/*

   Boneyard - FoA guards

*/

/* Include Files */
#include "define.h"
//#include "area/necropolis.h"

#define NAME                    SCRIPT_FOLGUARD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "command.h"
//#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;

procedure guard0;
procedure guard1;
procedure guard2;
procedure guard3;
procedure guard4;
procedure guard5;
procedure guard6;
procedure guard7;
procedure guard8;
procedure guard9;
procedure guard10;
procedure guard11;
procedure guard12;
procedure guard13;
procedure guard14;
procedure guard15;
procedure guard16;
procedure guard16a;
procedure guard17;
procedure guard18;
procedure guard19;
procedure guard20;
procedure guard21;
procedure guard22;
procedure guard23;
procedure combat;
procedure guardend;

variable tmp_hostile;
variable initial := 0;

import variable removal_ptr;

procedure start begin
   if not(initial) then begin
      set_self_team(TEAM_LA_FOLLOWERS);
      if (local_var(0) == 0) then begin
         if (self_is_female) then begin
            set_local_var(0, random(100, 104));
         end
         else begin
            set_local_var(0, random(105, 109));
         end
      end
      if (global_var(GVAR_QUEST_BONEYARD_3_BOMBFOLL) == 2) then begin
         if (random(0, 1)) then begin
            kill_critter(self_obj, ANIM_exploded_to_nothing_sf);
         end
         else begin
            kill_critter(self_obj, ANIM_burned_to_nothing_sf);
         end
      end
      initial := 1;
   end
end

procedure critter_p_proc begin
   if (map_var(1) == 1) then begin
      self_walk_to_tile(tile_num_in_direction(dude_tile, random(0, 5), random(3, 7)));
   end
   else begin
      if ((map_var(1) == 2) and self_can_see_dude) then begin
         tmp_hostile := 1;
      end
   end
   if (global_var(GVAR_QUEST_BONEYARD_3_BOMBFOLL) == 2) then begin
      removal_ptr := self_obj;
   end
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
         if (local_var(1) or global_var(GVAR_ENEMY_FOLLOWERS)) then begin
            tmp_hostile := 1;
         end
      end
   end
end

procedure damage_p_proc begin
   if source_is_dude then begin
      set_local_var(1, 1);
   end
end

procedure destroy_p_proc begin
   inc_good_critter
   if source_is_dude then begin
      set_global_var(GVAR_ENEMY_FOLLOWERS, 1);
   end
end

procedure look_at_p_proc begin
   display_msg(mstr(local_var(0)));
end

procedure talk_p_proc begin
   script_overrides;
   dude_look_at_self;
   if (local_var(1) or global_var(GVAR_ENEMY_FOLLOWERS)) then begin
      float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), FLOAT_MSG_NORMAL);
   end
   else begin
      if (global_var(GVAR_QUEST_BONEYARD_4_FIND_SPY) == 1) then begin
         start_dialog_at_node(guard16);
      end
      else if (global_var(GVAR_QUEST_BONEYARD_4_FIND_SPY) == 2) then begin
         start_dialog_at_node(guard22);
      end
      else begin
         start_dialog_at_node(guard0);
      end
   end
end

procedure guard0 begin
   Reply(110);
   NLowOption(111, guard1);
   NOption(mstr(112) + dude_name + mstr(113), guard4, 4);
   NOption(mstr(114) + dude_name + mstr(115), combat, 4);
   NOption(116, guard11, 6);
end

procedure guard1 begin
   Reply(117);
   NLowOption(mstr(118) + dude_name + mstr(119), combat);
   NLowOption(mstr(120) + dude_name + mstr(121), guard2);
   NLowOption(mstr(122), guard3);
   NLowOption(mstr(123) + dude_name + mstr(124), guard3);
end

procedure guard2 begin
   NMessage(125);
end

procedure guard3 begin
   NMessage(126);
end

procedure guard4 begin
   Reply(127);
   NOption(128, guard5, 4);
   NOption(129, combat, 4);
   NOption(130, guard6, 4);
   NOption(131, guard10, 4);
end

procedure guard5 begin
   NMessage(132);
end

procedure guard6 begin
   Reply(133);
   NOption(134, guard5, 4);
   NOption(135, guard7, 4);
   NOption(136, guard9, 4);
   NOption(137, guard8, 4);
end

procedure guard7 begin
   Reply(138);
   NOption(139, guard5, 4);
   NOption(140, guard8, 4);
end

procedure guard8 begin
   NMessage(141);
end

procedure guard9 begin
   Reply(142);
   NOption(143, guardend, 4);
end

procedure guard10 begin
   Reply(144);
   NOption(145, guard5, 4);
   NOption(146, guard8, 4);
   NOption(147, guard6, 4);
end

procedure guard11 begin
   Reply(148);
   NOption(149, guardend, 6);
   NOption(150, guard12, 6);
   NOption(151, guard15, 6);
end

procedure guard12 begin
   Reply(152);
   NOption(153, guardend, 6);
   NOption(154, guard13, 6);
   NOption(155, guard14, 6);
end

procedure guard13 begin
   Reply(156);
   NOption(157, guardend, 6);
   NOption(158, combat, 6);
end

procedure guard14 begin
   NMessage(159);
end

procedure guard15 begin
   Reply(160);
   NOption(161, guardend, 6);
end

procedure guard16 begin
   Reply(162);
   NOption(163, guard17, 4);
   NOption(164, guard19, 4);
   NOption(165, guard16a, 6);
end

procedure guard16a begin
   if (dude_skill_success(SKILL_SPEECH, -10)) then begin
      call guard20;
   end
   else begin
      call guard21;
   end
end

procedure guard17 begin
   Reply(166);
   NOption(167, guard18, 4);
   NOption(168, guardend, 4);
   NOption(169, combat, 4);
end

procedure guard18 begin
   Reply(170);
   NOption(171, guardend, 4);
end

procedure guard19 begin
   NMessage(172);
   call combat;
end

procedure guard20 begin
   NMessage(173);
end

procedure guard21 begin
   NMessage(174);
   call combat;
end

procedure guard22 begin
   Reply(175);
   NOption(176, guardend, 4);
   if (global_var(GVAR_SLIDE_TRAIN_FOLLOWERS) == 0) then begin
      NOption(177, guard23, 4);
   end
end

procedure guard23 begin
   variable LVar0 := 0;
   LVar0 := 4 * 3600;
   set_global_var(GVAR_SLIDE_TRAIN_FOLLOWERS, 1);
   Reply(178);
   gfade_out(1);
   game_time_advance(game_ticks(LVar0));
   gfade_in(1);
   NOption(179, guardend, 4);
end

procedure combat begin
   tmp_hostile := 1;
end

procedure guardend begin
end
