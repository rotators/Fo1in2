/*

   Boneyard - Generic peasant in Adytown

*/

/* Include Files */
#include "define.h"
#include "maps/laadytum.h"
#include "boneyard.h"

#define NAME                    SCRIPT_ADYTOWNR
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;

procedure FleeDude;

variable Only_Once := 1;

procedure push_p_proc begin
end

procedure Start begin
   if Only_Once then begin
      Only_Once := 0;
      /*if (get_blades_attacking or get_blades_attacking_wait) then begin
         set_self_team(TEAM_PLAYER);
      end
      else begin*/
         set_self_team(TEAM_LA_ADYTOWNER);
      //end
      set_self_ai(AI_PEASANT);
      add_timer_event(self_obj, game_ticks(random(3, 5)), 1);
      if (local_var(4) == 0) then begin
         set_local_var(4, self_tile);
      end
   end
end

procedure map_enter_p_proc begin
   if map_first_run then
      self_caps_adjust(random(1, 10));
end

procedure map_update_p_proc begin
   set_fight_regulators;
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure talk_p_proc begin
   dude_look_at_self;
   if (global_var(GVAR_ENEMY_ADYTUM) == 1) then begin
      float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), FLOAT_MSG_RED);
   end
   else if get_blades_attack_finished then begin
      float_msg(self_obj, mstr(random(113, 119)), FLOAT_MSG_NORMAL);
   end
   else begin
      float_msg(self_obj, mstr(random(101, 112)), FLOAT_MSG_NORMAL);
   end
end

procedure critter_p_proc begin
   variable LVar0 := 0;
   LVar0 := global_var(GVAR_ADYTOWNR_SOMETHING_0);
   if ((((game_time / 10) - LVar0) >= 10) and (tile_distance_objs(self_obj, dude_obj) <= 4) and (global_var(GVAR_ENEMY_ADYTUM) == 0)) then begin
      if get_blades_attack_finished then begin
         float_msg(self_obj, mstr(random(113, 119)), FLOAT_MSG_NORMAL);
      end
      else begin
         float_msg(self_obj, mstr(random(101, 112)), FLOAT_MSG_NORMAL);
      end
      LVar0 := game_time / 10;
      set_global_var(GVAR_ADYTOWNR_SOMETHING_0, LVar0);
   end
   if (self_can_see_dude) then begin
      if (global_var(GVAR_ENEMY_ADYTUM) == 1) then begin
         attack(dude_obj);
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_ADYTUM, 1);
      set_self_team(TEAM_LA_ADYTOWNER);
   end
end

procedure destroy_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_ADYTUM, 1);
   end
   inc_good_critter
end

procedure timed_event_p_proc begin
   variable LVar0 := 0;
   LVar0 := tile_num_in_direction(local_var(4), random(0, 5), random(1, 5));
   self_walk_to_tile(LVar0);
   add_timer_event(self_obj, game_ticks(random(3, 5)), 1);
end

procedure pickup_p_proc begin
   set_global_var(GVAR_ENEMY_ADYTUM, 1);
end

procedure FleeDude begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   variable LVar2 := 0;
   variable LVar3 := 0;
   variable LVar4 := 1;
   LVar0 := random(0, 5);
   LVar1 := LVar0;
   while(LVar4 == 1) do begin
      LVar2 := tile_num_in_direction(self_tile, LVar0, 3);
      if (tile_distance(dude_tile, LVar2) > LVar3) then begin
         LVar3 := tile_distance(dude_tile, LVar2);
      end
      LVar0 := LVar0 + 1;
      if (LVar0 == 5) then begin
         LVar0 := 0;
      end
      if (LVar0 == LVar1) then begin
         LVar4 := 0;
      end
   end
   self_run_to_tile(LVar2);
end
