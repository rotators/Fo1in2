/*

   Boneyard - Guard at the moat bridge.

*/

/* Include Files */
#include "define.h"
//#include "necropolis.h"

#define NAME                    SCRIPT_MOATGRD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BONEYARD)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;

procedure Moat00;
procedure Moat01;
procedure Moat02;
procedure Moat03;
procedure Moat04;
procedure Moat05;
procedure Moat06;
procedure MoatEnd;

procedure MoatCombat;

variable Only_Once := 1;
variable DestTile;

#define LVAR_Home_Tile              (4)
#define LVAR_Home_Rotation          (7)

#define allow_passage_hex     (26299)

#define EVENT_HOSTILE         (1)
#define EVENT_ALLOW_PASSAGE   (2)

procedure Start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_LA_GUN_RUNNERS);
      set_self_ai(AI_GUNRUNNERS);
   end
end

procedure map_enter_p_proc begin
   if map_first_run then begin
      self_caps_adjust(random(2, 20));
      set_local_var(LVAR_Home_Tile, self_tile);
      set_local_var(LVAR_Home_Rotation, self_cur_rot);
   end
   else if (is_loading_game == false) then begin
      DestTile := local_var(LVAR_Home_Tile);
      critter_attempt_placement(self_obj, local_var(LVAR_Home_Tile), self_elevation);
      self_rotate(local_var(LVAR_Home_Rotation));
   end
end

procedure pickup_p_proc begin
   set_global_var(GVAR_ENEMY_GUN_RUNNERS, 1);
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_GUNRUNNR_LVL1);

   dude_look_at_self;
   if (global_var(GVAR_ENEMY_GUN_RUNNERS) == 1) then begin
      float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), FLOAT_MSG_RED);
   end
   else begin
      get_reaction
      if (self_tile != local_var(LVAR_Home_Tile)) then
         start_dialog_at_node(Moat06);
      else
         start_dialog_at_node(Moat00);
   end
end

procedure critter_p_proc begin
   if (self_tile != DestTile and DestTile != 0) then begin
      self_walk_to_tile(DestTile);
   end
   else begin
      self_rotate(2);
   end
   if (self_can_see_dude) then begin
      if (global_var(GVAR_ENEMY_GUN_RUNNERS) == 1) then begin
         attack(dude_obj);
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_GUN_RUNNERS, 1);
   end
end

procedure destroy_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_GUN_RUNNERS, 1);
   end
   inc_good_critter
end

procedure timed_event_p_proc begin
   if (fixed_param == EVENT_HOSTILE) then begin
      if (tile_distance_objs(self_obj, dude_obj) < 5) then begin
         set_global_var(GVAR_ENEMY_GUN_RUNNERS, 1);
         attack(dude_obj);
      end
   end
   else if (fixed_param == EVENT_ALLOW_PASSAGE) then begin
      self_walk_to_tile(allow_passage_hex);
   end
end

procedure Moat00 begin
   Reply(101);
   NOption(103, Moat02, 4);
   if (local_var(5) == 0) then begin
      NOption(104, Moat05, 4);
      NOption(115, Moat03, 4);
   end
   else begin
      NOption(119, Moat04, 4);
      NOption(118, Moat04, 4);
   end
   BOption(111, MoatCombat, 4);
   NLowOption(102, Moat01);
end

procedure Moat01 begin
   NMessage(107);
   add_timer_event(self_obj, game_ticks(10), 1);
   BottomReact
end

procedure Moat02 begin
   NMessage(107);
   add_timer_event(self_obj, game_ticks(10 * 2), 1);
   BottomReact
end

procedure Moat03 begin
   NMessage(116);
   DestTile := allow_passage_hex;
   set_local_var(5, 1);
end

procedure Moat04 begin
   NMessage(117);
   DestTile := allow_passage_hex;
end

procedure Moat05 begin
   NMessage(113);
   DestTile := allow_passage_hex;
   set_local_var(5, 1);
end

// Fo1in2:
procedure Moat06 begin
   NMessage(200);
   DestTile := allow_passage_hex;
end

procedure MoatCombat begin
   add_timer_event(self_obj, game_ticks(10), EVENT_HOSTILE);
   BottomReact
end

procedure MoatEnd begin
end
