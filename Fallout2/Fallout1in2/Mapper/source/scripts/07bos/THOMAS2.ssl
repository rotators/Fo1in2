/*

   Brotherhood - Thomas

*/

/* Include Files */
#include "define.h"
//#include "necropolis.h"

#define NAME                    SCRIPT_THOMAS2
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;

procedure thomasend;
procedure thomas00;
procedure thomas01;
procedure thomas02;
procedure thomas03;
procedure thomas04;
procedure thomas05;
procedure thomas06;
procedure thomas07;
procedure thomas08;
procedure thomas09;
procedure thomas10;
procedure thomas11;
procedure thomas12;
procedure thomas13;
procedure thomas14;
procedure thomas15;
procedure thomas16;
procedure thomas17;
procedure thomas18;
procedure thomas19;
procedure thomas20;
procedure thomas21;
procedure thomas22;

variable tmp_hostile;
variable Only_Once := 1;

procedure start begin
   if Only_Once then begin
      set_self_team(TEAM_BROTHERHOOD);
      set_self_ai(AI_BROTHERHOOD_KNIGHT);
   end
end

procedure combat
begin
   tmp_hostile := 1;
end

procedure critter_p_proc
begin
   if (global_var(GVAR_ENEMY_BROTHERHOOD)) then begin
      tmp_hostile := 1;
   end
   if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
      tmp_hostile := 0;
   end
   if (tmp_hostile) then begin
      set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
      tmp_hostile := 0;
      attack(dude_obj);
   end
end

procedure pickup_p_proc
begin
   if (source_obj == dude_obj) then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_BOS);

   dude_look_at_self;
   get_reaction
   start_gdialog(685, self_obj, 4, -1, -1);
   gsay_start;
   if (local_var(4) != 1) then begin
      set_local_var(4, 1);
      if (local_var(1) == 1) then begin
         call thomas01;
      end
      else begin
         call thomas00;
      end
   end
   else begin
      if (local_var(1) == 1) then begin
         if (local_var(6) != 0) then begin
            call thomas09;
         end
         else begin
            call thomas08;
         end
      end
      else begin
         if (local_var(6) != 0) then begin
            call thomas20;
         end
         else begin
            call thomas19;
         end
      end
   end
   gsay_end;
   end_dialogue;
end

procedure destroy_p_proc begin
   set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
   inc_good_critter
end

procedure look_at_p_proc
begin
   script_overrides;
   display_msg(mstr(100));
end

procedure thomasend
begin
end

procedure thomas00
begin
   Reply(101);
   NOption(102, thomas05, 4);
   NOption(103, thomas06, 4);
   NOption(104, thomas04, 4);
   NOption(105, thomasend, 4);
   NLowOption(106, thomas02);
end

procedure thomas01
begin
   Reply(108);
   NOption(102, thomas05, 4);
   NOption(103, thomas06, 4);
   NOption(104, thomas04, 4);
   NOption(105, thomasend, 4);
   NLowOption(106, thomas02);
end

procedure thomas02
begin
   BMessage(109);
end

procedure thomas03
begin
   BMessage(110);
end

procedure thomas04
begin
   BMessage(mstr(111) + dude_name + mstr(112));
end

procedure thomas05
begin
   NMessage(113);
end

procedure thomas06
begin
   if (dude_is_male) then begin
      Reply(114);
   end
   else begin
      Reply(115);
   end
   call thomas10;
end

procedure thomas07
begin
   Reply(125);
   call thomas10;
end

procedure thomas08
begin
   if (local_var(5) != 0) then begin
      set_local_var(5, 1);
      Reply(126);
   end
   else begin
      Reply(127);
   end
   call thomas10;
end

procedure thomas09
begin
   Reply(125);
   NOption(102, thomas05, 4);
   NOption(103, thomas06, 4);
   NOption(104, thomas04, 4);
   NOption(105, thomas21, 4);
   NLowOption(107, thomas02);
end

procedure thomas10
begin
   NOption(118, thomas11, 4);
   NOption(119, thomas12, 4);
   NOption(120, thomas13, 4);
   NOption(121, thomas14, 4);
   NOption(122, thomas15, 4);
   NOption(123, thomas16, 4);
   NOption(124, thomas17, 4);
   NLowOption(106, thomas02);
end

procedure thomas11
begin
   gfade_out(1);
   gfade_in(1);
   display_msg(mstr(130));
   set_local_var(6, 1);
end

procedure thomas12
begin
   gfade_out(1);
   gfade_in(1);
   display_msg(mstr(132));
   set_local_var(6, 1);
end

procedure thomas13
begin
   gfade_out(1);
   gfade_in(1);
   display_msg(mstr(134));
   set_local_var(6, 1);
end

procedure thomas14
begin
   gfade_out(1);
   gfade_in(1);
   display_msg(mstr(135));
   set_local_var(6, 1);
end

procedure thomas15
begin
   gfade_out(1);
   gfade_in(1);
   display_msg(mstr(136));
   set_local_var(6, 1);
end

procedure thomas16
begin
   gfade_out(1);
   gfade_in(1);
   display_msg(mstr(137));
   set_local_var(6, 1);
end

procedure thomas17
begin
   NMessage(138);
end

procedure thomas18
begin
   BMessage(139);
end

procedure thomas19
begin
   if (local_var(5) != 0) then begin
      set_local_var(5, 1);
      Reply(140);
   end
   else begin
      Reply(127);
   end
   call thomas10;
end

procedure thomas20
begin
   Reply(140);
   NOption(102, thomas03, 4);
   NOption(103, thomas07, 4);
   NOption(104, thomas04, 4);
   NOption(105, thomas22, 4);
   NLowOption(107, thomas02);
end

procedure thomas21
begin
   NMessage(142);
end

procedure thomas22
begin
   BMessage(143);
end
