/*

   Brotherhood - Jennifer

*/

/* Include Files */
#include "define.h"
//#include "necropolis.h"

#define NAME                    SCRIPT_JENNIFER
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;

procedure Jennifer00;
procedure Jennifer01;
procedure Jennifer01a;
procedure Jennifer01b;
procedure Jennifer02;
procedure Jennifer05;
procedure Jennifer07;
procedure Jennifer08;
procedure Jennifer11;
procedure Jennifer13;
procedure Jennifer14;
procedure Jennifer15;
procedure Jennifer16;
procedure Jennifer17;
procedure Jennifer18;
procedure Jennifer19;
procedure Jennifer20;
procedure Jennifer21;
procedure Jennifer22;
procedure Jennifer23;
procedure Jennifer25;
procedure Jennifer26;
procedure Jennifer27;
procedure Jennifer28;
procedure Jennifer29;
procedure Jennifer30;
procedure Jennifer31;
procedure JenniferCharm;
procedure JenniferEnd;
procedure JenniferRandom1;
procedure JenniferRandom2;
procedure JenniferRandom3;
procedure JenniferBackground1;
procedure combat;
procedure weapon_check;

procedure JenniferUpReact;
procedure JenniferDownReact;
procedure JenniferBottomReact;
procedure JenniferBigDownReact;

variable known;
variable armed;
variable warned;
variable first_time := 1;
variable last_seen;
variable flag1;
variable flag2;
variable line2flag;
variable line5flag;
variable line14flag;
variable tmp_hostile;
variable Only_Once := 1;

procedure start begin
   if Only_Once then begin
      set_self_team(TEAM_BROTHERHOOD);
      set_self_ai(AI_BROTHERHOOD_PALADIN);
      Only_Once := 0;
   end
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_BOS);

   dude_look_at_self;
   get_reaction
   if (not(first_time)) then begin
      if bad_critter_reaction then begin
         call JenniferRandom3;
      end
      else begin
         call JenniferRandom2;
      end
   end
   else begin
      first_time := 0;
      start_dialog(self_obj, 4);
      gsay_start;
      call Jennifer01;
      gsay_end;
      end_dialogue;
   end
end

procedure weapon_check begin
   if (dude_is_armed) then begin
      armed := 1;
   end
   else begin
      armed := 0;
   end
end

procedure Jennifer00 begin
   warned := 1;
   float_msg(self_obj, mstr(102), FLOAT_MSG_NORMAL);
   float_msg(self_obj, mstr(103), FLOAT_MSG_NORMAL);
end

procedure Jennifer01 begin
   Reply(104);
   if (dude_is_female) then begin
      NOption(105, Jennifer14, 5);
   end
   else begin
      NOption(106, JenniferCharm, 5);
      NLowOption(107, Jennifer11);
   end
   GOption(108, Jennifer01a, 5);
   BOption(109, Jennifer01b, 4);
   NOption(110, Jennifer02, 4);
   NLowOption(111, Jennifer13);
end

procedure Jennifer01a begin
   UpReact
   call Jennifer02;
end

procedure Jennifer01b begin
   BigDownReact
   call Jennifer20;
end

procedure Jennifer02 begin
   line2flag := 1;
   NMessage(112);
   Reply(113);
   NOption(114, JenniferUpReact, 5);
   if (not(line5flag)) then begin
      NOption(115, Jennifer05, 4);
   end
   Goodbyes;
   giq_option(4, 0, exit_line, JenniferEnd, NEUTRAL_REACTION);
end

procedure JenniferUpReact begin
   UpReact
end

procedure Jennifer05 begin
   line5flag := 1;
   NMessage(116);
   call Jennifer07;
end

procedure Jennifer07 begin
   Reply(117);
   GOption(118, JenniferUpReact, 4);
   NOption(119, Jennifer08, 4);
   BOption(120, JenniferDownReact, 4);
end

procedure JenniferDownReact begin
   DownReact
end

procedure Jennifer08 begin
   Reply(121);
   NOption(122, JenniferUpReact, 5);
   NOption(123, Jennifer29, 6);
   if (dude_is_female) then begin
      if (not(line14flag)) then begin
         NOption(124, Jennifer14, 5);
      end
   end
   else begin
      if (not(flag1) and not(flag2) and (dude_is_male)) then begin
         NOption(125, JenniferCharm, 5);
      end
   end
   NOption(126, JenniferEnd, 4);
end

procedure Jennifer11 begin
   Reply(127);
   NLowOption(128, Jennifer13);
end

procedure Jennifer13 begin
   NMessage(129);
end

procedure Jennifer14 begin
   line14flag := 1;
   TopReact
   NMessage(130);
   Reply(131);
   NOption(132, Jennifer16, 8);
   NOption(133, Jennifer15, 4);
   NOption(134, Jennifer17, 4);
end

procedure Jennifer15 begin
   Reply(135);
   NOption(136, Jennifer17, 4);
   NOption(137, Jennifer17, 4);
end

procedure Jennifer16 begin
   Reply(138);
   NOption(139, Jennifer18, 8);
   NOption(140, Jennifer17, 4);
end

procedure Jennifer17 begin
   Reply(141);
   if (not(line2flag)) then begin
      NOption(142, Jennifer02, 4);
   end
   if (not(line5flag)) then begin
      NOption(143, Jennifer05, 4);
   end
   NOption(144, JenniferEnd, 4);
end

procedure Jennifer18 begin
   NMessage(145);
   Reply(146);
   NOption(147, Jennifer19, 4);
   Goodbyes;
   giq_option(4, 0, exit_line, JenniferEnd, NEUTRAL_REACTION);
end

procedure Jennifer19 begin
   NMessage(148);
   Reply(149);
   Goodbyes;
   giq_option(4, 0, exit_line, JenniferEnd, NEUTRAL_REACTION);
end

procedure Jennifer20 begin
   Reply(150);
   BOption(151, JenniferBottomReact, 5);
   GOption(152, JenniferUpReact, 4);
   BOption(153, JenniferDownReact, 4);
end

procedure JenniferBottomReact begin
   BottomReact
end

procedure Jennifer21 begin
   Reply(154);
   NOption(155, Jennifer22, 4);
   NOption(156, JenniferEnd, 4);
end

procedure Jennifer22 begin
   NMessage(157);
end

procedure Jennifer23 begin
   TopReact
   flag1 := 1;
   flag2 := 0;
   last_seen := game_time;
   GMessage(163);
   Reply(164);
   if (line2flag == 0) then begin
      NOption(165, Jennifer02, 4);
   end
   if (line5flag == 0) then begin
      NOption(166, Jennifer05, 4);
   end
   NOption(167, JenniferEnd, 4);
   NOption(168, JenniferEnd, 4);
end

procedure Jennifer25 begin
   flag1 := 0;
   flag2 := 1;
   NMessage(163);
   Reply(164);
   if (not(line2flag)) then begin
      NOption(165, Jennifer02, 4);
   end
   if (not(line5flag)) then begin
      NOption(166, Jennifer05, 4);
   end
   NOption(167, JenniferEnd, 4);
   NOption(168, JenniferEnd, 4);
end

procedure Jennifer26 begin
   Reply(169);
   BOption(170, JenniferBigDownReact, 4);
   NOption(171, Jennifer27, 4);
   NOption(172, JenniferEnd, 4);
end

procedure JenniferBigDownReact begin
   BigDownReact
end

procedure Jennifer27 begin
   Reply(173);
   if (not(line2flag)) then begin
      NOption(174, Jennifer02, 4);
   end
   if (not(line5flag)) then begin
      NOption(175, Jennifer05, 4);
   end
   NOption(176, JenniferEnd, 4);
end

procedure Jennifer28 begin
   Reply(177);
   NOption(178, Jennifer27, 4);
   BOption(179, Jennifer27, 4);
   NOption(180, JenniferEnd, 4);
end

procedure Jennifer29 begin
   Reply(181);
   NOption(182, Jennifer30, 4);
   BOption(183, JenniferBottomReact, 4);
end

procedure Jennifer30 begin
   NMessage(184);
   NMessage(185);
   Reply(186);
   NOption(187, Jennifer31, 7);
   GOption(188, JenniferUpReact, 4);
   BOption(189, JenniferDownReact, 4);
   if (not(line2flag)) then begin
      NOption(190, Jennifer02, 4);
   end
end

procedure Jennifer31 begin
   Reply(191);
   NOption(192, JenniferEnd, 4);
   BOption(193, JenniferDownReact, 4);
   if (not(line2flag)) then begin
      NOption(194, Jennifer02, 4);
   end
end

procedure JenniferCharm begin
   variable LVar0 := 0;
   LVar0 := do_check(dude_obj, STAT_ch, 0);
   if (is_success(LVar0)) then begin
      if (is_critical(LVar0)) then begin
         BigUpReact
         flag1 := 1;
         call Jennifer23;
      end
      else begin
         call Jennifer25;
      end
   end
   else begin
      if (is_critical(LVar0)) then begin
         call Jennifer28;
      end
      else begin
         call Jennifer26;
      end
   end
end

procedure JenniferEnd begin
end

procedure JenniferRandom1 begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   if (not(LVar0)) then begin
      LVar0 := random(1, 10);
   end
   if ((game_time_hour > 800) and (game_time_hour < 1700)) then begin
      if (LVar0 > 10) then begin
         LVar0 := 1;
      end
      LVar1 := mstr(195);
      if (LVar0 == 2) then begin
         LVar1 := mstr(196);
      end
      else if (LVar0 == 3) then begin
         LVar1 := mstr(197);
      end
      else begin
         if (LVar0 == 4) then begin
            LVar1 := mstr(198);
         end
         else if (LVar0 == 5) then begin
            LVar1 := mstr(199);
         end
         else if (LVar0 == 6) then begin
            LVar1 := mstr(200);
         end
         else if (LVar0 == 7) then begin
            LVar1 := mstr(201);
         end
         else begin
            if ((last_seen - game_time) > 86400) then begin
               if (LVar0 == 8) then begin
                  LVar1 := mstr(202);
               end
               if (LVar0 == 9) then begin
                  LVar1 := mstr(203);
               end
               if (LVar0 == 10) then begin
                  LVar1 := mstr(204);
               end
            end
            else begin
               LVar0 := 1;
            end
         end
      end
   end
   else begin
      if (LVar0 > 6) then begin
         LVar0 := 1;
      end
      LVar1 := mstr(205);
      if (LVar0 == 2) then begin
         LVar1 := mstr(206);
      end
      else if (LVar0 == 3) then begin
         LVar1 := mstr(207);
      end
      else if (LVar0 == 4) then begin
         LVar1 := mstr(208);
      end
      else if (LVar0 == 5) then begin
         LVar1 := mstr(209);
      end
      else if (LVar0 == 6) then begin
         LVar1 := mstr(210);
      end
   end
   LVar0 := LVar0 + 1;
   last_seen := game_time;
   float_msg(self_obj, LVar1, FLOAT_MSG_NORMAL);
end

procedure JenniferRandom2 begin
   variable LVar0 := 0;
   variable LVar1 := 0;

   if (not(LVar0)) then begin
      LVar0 := random(1, 5);
   end
   if (LVar0 > 5) then begin
      LVar0 := 1;
   end
   LVar1 := mstr(211);
   if (LVar0 == 2) then begin
      LVar1 := mstr(212) + dude_name + mstr(213);
   end
   else if (LVar0 == 3) then begin
      LVar1 := mstr(214);
   end
   else if (LVar0 == 4) then begin
      LVar1 := mstr(215) + dude_name + mstr(216);
   end
   else if (LVar0 == 5) then begin
      LVar1 := mstr(217);
   end

   LVar0 := LVar0 + 1;
   float_msg(self_obj, LVar1, FLOAT_MSG_NORMAL);
end

procedure JenniferRandom3 begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   if (not(LVar0)) then begin
      LVar0 := random(1, 8);
   end
   if (LVar0 > 8) then begin
      LVar0 := 1;
   end

   LVar1 := mstr(218);
   if (LVar0 == 2) then begin
      LVar1 := mstr(219);
   end
   else if (LVar0 == 3) then begin
      LVar1 := mstr(220);
   end
   else if (LVar0 == 4) then begin
      LVar1 := mstr(221);
   end
   else if (LVar0 == 5) then begin
      LVar1 := mstr(222);
   end
   else if (LVar0 == 6) then begin
      LVar1 := mstr(223);
   end
   else if (LVar0 == 7) then begin
      LVar1 := mstr(224);
   end
   else if (LVar0 == 8) then begin
      LVar1 := mstr(225);
   end

   LVar0 := LVar0 + 1;
   float_msg(self_obj, LVar1, FLOAT_MSG_NORMAL);
end

procedure JenniferBackground1 begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   if (not(LVar0)) then begin
      LVar0 := random(1, 11);
   end
   if ((game_time_hour > 800) and (game_time_hour < 1700)) then begin
      if (LVar0 > 11) then begin
         LVar0 := 1;
      end
      if (LVar0 == 1) then begin
         LVar1 := mstr(226);
      end
      else if (LVar0 == 2) then begin
         LVar1 := mstr(227);
      end
      else if (LVar0 == 3) then begin
         LVar1 := dude_name + mstr(228);
      end
      else if (LVar0 == 4) then begin
         LVar1 := mstr(229);
      end
      else if (LVar0 == 5) then begin
         LVar1 := mstr(230);
      end
      else if (LVar0 == 6) then begin
         LVar1 := mstr(231);
      end
      else if (LVar0 == 7) then begin
         LVar1 := mstr(232);
      end
      else if (LVar0 == 8) then begin
         LVar1 := mstr(233);
      end
      else if (LVar0 == 9) then begin
         LVar1 := mstr(234);
      end
      else if (LVar0 == 10) then begin
         LVar1 := mstr(235);
      end
      else if (LVar0 == 11) then begin
         LVar1 := mstr(236);
      end
   end
   else begin
      if (LVar0 == 1) then begin
         LVar1 := mstr(237);
      end
      else if (LVar0 == 2) then begin
         LVar1 := mstr(238);
      end
      else if (LVar0 == 3) then begin
         LVar1 := mstr(239);
      end
      else if (LVar0 == 4) then begin
         LVar1 := mstr(240);
      end
      else if (LVar0 == 5) then begin
         LVar1 := mstr(241);
      end
   end
   LVar0 := LVar0 + 1;
   float_msg(self_obj, LVar1, FLOAT_MSG_NORMAL);
   last_seen := game_time;
end

procedure combat begin
   tmp_hostile := 1;
end

procedure critter_p_proc begin
   if (global_var(GVAR_ENEMY_BROTHERHOOD)) then begin
      tmp_hostile := 1;
   end
   if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
      tmp_hostile := 0;
   end
   if (tmp_hostile) then begin
      set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if (warned == 0) then begin
         if (self_can_see_dude) then begin
            if (armed == 0) then begin
               call weapon_check;
            end
            if (armed) then begin
               call Jennifer00;
            end
         end
      end
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      tmp_hostile := 1;
   end
end

procedure destroy_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
   end
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   if (known) then begin
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(101));
   end
end
