/*

   Brotherhood - Paladin A

*/

/* Include Files */
#include "define.h"
//#include "necropolis.h"

#define NAME                    SCRIPT_PALADINA
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BOS)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure timed_event_p_proc;

procedure PaladinARandom;
procedure PaladinABackground;

variable Only_Once := 1;
variable tmp_hostile;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_BROTHERHOOD);
      set_self_ai(AI_BROTHERHOOD_PALADIN);
      add_timer_event(self_obj, game_ticks(300), 1);
   end
end

procedure PaladinARandom
begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   if (not(LVar0)) then begin
      LVar0 := random(1, 9);
   end
   if (LVar0 > 10) then begin
      LVar0 := 1;
   end
   LVar1 := mstr(101);
   if (LVar0 == 2) then begin
      LVar1 := mstr(102);
   end
   else begin
      if (LVar0 == 3) then begin
         LVar1 := mstr(103);
      end
      else begin
         if (LVar0 == 4) then begin
            LVar1 := mstr(104) + dude_name + mstr(105);
         end
         else begin
            if (LVar0 == 5) then begin
               LVar1 := mstr(106);
            end
            else begin
               if (LVar0 == 6) then begin
                  LVar1 := mstr(107);
               end
               else begin
                  if (LVar0 == 7) then begin
                     LVar1 := mstr(108);
                  end
                  else begin
                     if (LVar0 == 8) then begin
                        LVar1 := mstr(109);
                     end
                     else begin
                        if (LVar0 == 9) then begin
                           LVar1 := mstr(110);
                        end
                        else begin
                           LVar0 := 1;
                        end
                     end
                  end
               end
            end
         end
      end
   end
   LVar0 := LVar0 + 1;
   float_msg(self_obj, LVar1, FLOAT_MSG_NORMAL);
end

procedure PaladinABackground
begin
   variable LVar0 := 0;
   add_timer_event(self_obj, game_ticks(300), 1);
   if (random(0, 1)) then begin
      LVar0 := mstr(112);
   end
   else begin
      LVar0 := mstr(113);
   end
   float_msg(self_obj, LVar0, FLOAT_MSG_NORMAL);
end

procedure critter_p_proc
begin
   if (global_var(GVAR_ENEMY_BROTHERHOOD)) then begin
      tmp_hostile := 1;
   end
   if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
      tmp_hostile := 0;
   end
   if (tmp_hostile) then begin
      set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
      tmp_hostile := 0;
      attack(dude_obj);
   end
end

procedure pickup_p_proc
begin
   if (source_obj == dude_obj) then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc
begin
   dude_look_at_self;
   call PaladinARandom;
end

procedure destroy_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
   end
   inc_good_critter
end

procedure look_at_p_proc
begin
   script_overrides;
   display_msg(mstr(100));
end

procedure timed_event_p_proc
begin
   call PaladinABackground;
end
