/*

   Ian - Party Member, Shady Sands

*/

#include "define.h"

#define NAME                    SCRIPT_IAN
#define TOWN_REP_VAR            (GVAR_TOWN_REP_SHADYSANDS)

#include "command.h"
#include "modreact.h"

#define PARTY_NODE_X                         Node1000
#undef  set_default_party_follow
#define set_default_party_follow             set_follow_close
#undef  def_weapon_use_msg
#define def_weapon_use_msg                   mstr(173)
#undef  def_wait_msg
#define def_wait_msg                         mstr(145)
#undef  def_nowait_msg
#define def_nowait_msg                       mstr(203)
#undef  def_end_msg
#define def_end_msg                          mstr(144)
#undef  def_gear_msg
#define def_gear_msg                         mstr(2000)

procedure start;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure description_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure use_obj_on_p_proc;
procedure push_p_proc;

procedure join_party;
procedure hire_Ian;
procedure rejoin_party;

procedure Ian01;
procedure Ian02;
procedure Ian03;
procedure Ian04;
procedure Ian05;
procedure Ian06;
procedure Ian07;
procedure Ian08;
procedure Ian09;
procedure Ian10;
procedure Ian11;
procedure Ian12;
procedure Ian12a;
procedure Ian13;
procedure Ian14;
procedure Ian15;
procedure Ian16;
procedure Ian17;
procedure Ian17a;
procedure Ian18;
procedure Ian19;
procedure Ian20;
procedure Ian21;

procedure Node999;
procedure Node1000;
procedure Node1001;
procedure Node1002;
procedure Node1003;
procedure Node1004;
procedure Node1005;
procedure Node1006;
procedure Node1007;
procedure Node1008;
procedure Node1009;
procedure Node1010;
procedure Node1100;

procedure ask_places;
procedure map_commentary;
procedure IanTactics;
procedure IanClose;
procedure IanModerate;
procedure IanFar;
procedure IanCombatTactics;
procedure IanSniper;
procedure IanNearCombat;
procedure IanFreeCombat;

procedure IanHolsterWeapon;
procedure IanRemoveArmor;

variable tmp_hostile;
variable item;
variable line151flag;
variable line152flag;
variable line153flag;
variable line154flag;
variable line155flag;
variable line162flag;
variable line163flag;
variable line164flag;
variable line165flag;
variable line166flag;
variable line167flag;
variable line170flag;
variable line172flag;

variable AskAgain := 0;

#define LVAR_WAITING                      (10)
#define LVAR_FOLLOW_DISTANCE              (11)
#define LVAR_TEAM                         (12)

#define float_ian(x)                      float_msg(self_obj, mstr(x), FLOAT_MSG_NORMAL)
#define ian_joins_party                   party_add_self;                                                      \
                                          add_timer_event(self_obj, game_ticks(1), EVENT_FLOAT_JOIN);          \
                                          set_self_team(TEAM_PLAYER)
#define ian_hired                         (global_var(GVAR_IAN_HIRELING_STATUS) > 1)
#define dude_has_free_slot_for_ian        fo1in2_party_limit_disabled or ((dude_at_max_party_size == false) and (Ian_In_Party == false))
#define EVENT_FLOAT_JOIN                  (2)

procedure Node998 begin
end
procedure Node999 begin
end

procedure start begin
end

procedure push_p_proc begin
   if (Ian_In_Party == false) then begin
      script_overrides;
   end
   else begin
      if (random(0, 1) == 1) then
         float_ian(random(310, 313));
   end
end

procedure timed_event_p_proc begin
   if (fixed_param == EVENT_FLOAT_JOIN) then begin
      float_msg(self_obj, mstr(2520), FLOAT_MSG_NORMAL);
   end
end

procedure critter_p_proc begin
   if (Ian_In_Party) then begin
      party_member_follow_dude
   end
   else if (self_team == TEAM_PLAYER) then begin
      set_self_abandon_party;
   end

   if (self_can_see_dude) and global_var(GVAR_ENEMY_SHADY_SANDS) then begin
      tmp_hostile := 1;
   end

   if (tmp_hostile) then begin
      tmp_hostile := 0;
      set_self_abandon_party;
      attack(dude_obj);
   end
   else begin
      call map_commentary;
   end
end

procedure description_p_proc begin
   variable PerceptionRoll := 0;
   PerceptionRoll := do_check(dude_obj, STAT_pe, 1);
   if is_success(PerceptionRoll) or  dude_perk(PERK_bonus_awareness) then begin
      script_overrides;
      display_msg(mstr(130));
   end
end

procedure destroy_p_proc begin
   set_global_var(GVAR_IAN_HIRELING_STATUS, 3);
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;

   if (global_var(GVAR_IAN_HIRELING_STATUS) == 0) then
      display_msg(mstr(100));
   else
      display_msg(mstr(113));
end

procedure map_enter_p_proc begin
   if shady_invaded and CUR_AREA_SHADY_SANDS and not(Ian_In_Party) then begin
      invasion_kill_critter;
   end

   if CUR_MAP_SHADYW then begin
      if (map_first_run) then begin
         set_self_team(TEAM_SHADY_SANDS);
      end
   end
end

procedure pickup_p_proc begin
   if (global_var(GVAR_IAN_HIRELING_STATUS) < 2) then begin
      tmp_hostile := 1;
   end
   else begin
      script_overrides;
   end
end

procedure talk_p_proc begin
   set_tma_data(NAME, 1000, -1, -1, 1109, 1109);

   if Ian_In_Party then
      self_look_at_dude;
   dude_look_at_self;
   get_reaction

   if (Ian_In_Party or party_is_waiting) then begin
      gdialog_set_barter_mod(255);
   end

   if (global_var(GVAR_ENEMY_SHADY_SANDS) and (global_var(GVAR_IAN_HIRELING_STATUS) != 2)) then
      start_dialog_at_node(Ian14);
   else if (global_var(GVAR_IAN_HIRELING_STATUS) == 0) then
      start_dialog_at_node(Ian02);
   else if ((Ian_In_Party) or (party_is_waiting)) then
      start_dialog_at_node(Node1000);
   else if (global_var(GVAR_IAN_HIRELING_STATUS) == 3) then
      start_dialog_at_node(Ian21);
   else
      start_dialog_at_node(Ian12);

   if (Ian_In_Party and (global_var(GVAR_IAN_JOINS_GIVE_EXP) == 0)) then begin
      set_global_var(GVAR_IAN_JOINS_GIVE_EXP, 1);
      give_xp_msg(EXP_HIRED_IAN, mstr(169));
   end

   reset_tma_data;
end

procedure use_obj_on_p_proc begin

   // TODO: Investigate this
   if (Ian_In_Party) then begin
      item := obj_pid(obj_being_used_with);
      if ((item != 40) and (item != 71) and (item != 81) and (item != 103) and (item != 144)) then begin
         script_overrides;
         if (obj_item_subtype(obj_being_used_with) != item_type_weapon) then begin
            rm_obj_from_inven(dude_obj, obj_being_used_with);
            add_obj_to_inven(self_obj, obj_being_used_with);
         end
         else begin
            if ((item == 4) or (item == 8) or (item == 18) or (item == 120) or (item == 22) or (item == 9) or (item == 16) or (item == 24) or (item == 241) or (item == 116) or (item == 236) or (item == 234) or (item == 235) or (item == 21)) then begin
               rm_obj_from_inven(dude_obj, obj_being_used_with);
               add_obj_to_inven(self_obj, obj_being_used_with);
               float_msg(self_obj, gen_mstr(215), FLOAT_MSG_NORMAL);
            end
            else begin
               float_msg(self_obj, message_str(SCRIPT_MODREACT, 109), FLOAT_MSG_GREEN);
            end
         end
      end
   end

end

procedure join_party begin
   if dude_has_free_slot_for_ian then begin
      set_global_var(GVAR_IAN_HIRELING_STATUS, 2);
      set_global_var(GVAR_DESTROY_VATS_5, 4);
      set_global_var(GVAR_IAN_DUDE_LAST_LEVEL, dude_level);

      ian_joins_party;
      Reply(150);
   end
   else begin
      Reply(2500);
      NOption(2510, Node999, 004);
   end
end

procedure rejoin_party begin
   if dude_has_free_slot_for_ian then begin
      set_global_var(GVAR_IAN_HIRELING_STATUS, 2);
      set_global_var(GVAR_DESTROY_VATS_5, 4);

      end_party_waiting;
      Reply(150);
   end
   else begin
      Reply(2500);
      NOption(2510, Node999, 004);
   end
end

procedure hire_Ian begin
   dude_caps_adjust(-100);
   call join_party;
end

procedure Ian01 begin
   BMessage(101);
end

procedure Ian02 begin
   Reply(102);
   BOption(103, Ian03, 4);
   NOption(mstr(104) + dude_name + mstr(105), Ian04, 4);
   NLowOption(106, Ian05);
end

procedure Ian03 begin
   BMessage(107);
end

procedure Ian04 begin
   Reply(108);
   set_global_var(GVAR_IAN_HIRELING_STATUS, 1);
   NOption(109, Ian06, 4);
   NOption(110, Ian07, 5);
end

procedure Ian05 begin
   NMessage(111);
end

procedure Ian06 begin
   Reply(112);
   NOption(114, Ian18, 4);
   NOption(115, Ian13, 4);
   NOption(149, Ian17, 4);
   NOption(116, Ian08, 5);
end

procedure Ian07 begin
   if (AskAgain == 0) then
      Reply(117);
   else
      Reply(2601);

   NOption(118, Ian09, 4);
   NOption(119, Ian08, 4);

   if ian_hired then begin
      NOption(133, Ian11, 4);
      NOption(134, Ian09, 4);
      NOption(136, Ian10, 4);
      NOption(2015, Node999, 001);
   end
end

procedure Ian08 begin
   Reply(120);
   NOption(121, Ian10, 4);
   NOption(122, Ian11, 5);
end

procedure Ian09 begin
   Reply(123);

   if ian_hired then begin
      AskAgain := 1;
      NOption(2600, Ian07, 001);
   end
   else
      giq_option(4, SCRIPT_MODREACT, 104, Node999, NEUTRAL_REACTION);
end

procedure Ian10 begin
   Reply(125);
   NOption(126, Ian09, 4);

   if ian_hired then
      NOption(2015, Node999, 001);
   else
      giq_option(4, SCRIPT_MODREACT, 101, Node999, NEUTRAL_REACTION);
end

procedure Ian11 begin
   Reply(128);
   if ian_hired then begin
      AskAgain := 1;
      NOption(2600, Ian07, 001);
   end
   else begin
      NOption(129, Ian07, 4);
      giq_option(4, SCRIPT_MODREACT, 101, Node999, NEUTRAL_REACTION);
   end
end

procedure Ian12 begin
   Reply(mstr(131) + dude_name + mstr(132));
   call Ian12a;
end

procedure Ian12a begin
   NOption(133, Ian11, 4);
   NOption(134, Ian09, 4);
   NOption(135, Ian07, 4);
   NOption(136, Ian10, 4);
   NOption(137, Ian13, 4);
   NOption(149, Ian17, 4); // Ask to hire Ian
   NOption(138, Node999, 4);
end

procedure Ian13 begin
   // Some Fallout 1 stuff. We have to use mark_on_map to make it work in Fo2
   // Keeping the Fo1 variables anyway, because they might be needed elswhere.
   //if (not(global_var(WORLDMAPLIST_THE_HUB))) then begin
      set_global_var(GVAR_WORLDMAPLIST_THE_HUB, 1);
      mark_on_map(AREA_HUB)
   //end
   //if (not(global_var(WORLDMAPLIST_JUNKTOWN))) then begin
      set_global_var(GVAR_WORLDMAPLIST_JUNKTOWN, 1);
      mark_on_map(AREA_JUNKTOWN)
   //end

   Reply(139);
   if Ian_In_Party then begin
      NOption(140, Node1000, 4);
   end
   else begin
      NOption(140, Ian12, 4);
   end

   /*if (Ian_In_Party) then begin
      NOption(140, Ian15, 4);
   end
   else begin
      NOption(140, Ian12, 4);
   end*/
end

procedure Ian14 begin
   tmp_hostile := 1;
   BMessage(141);
end

// Primary dialog node:
procedure Ian15 begin
   Reply(mstr(142) + dude_name + mstr(143));
   NOption(145, Ian16, 4);
   NOption(146, Ian13, 4);
   NOption(173, Ian20, 4);
   NOption(2000, IanCombatTactics, 4);
   giq_option(4, SCRIPT_TYCHO, 159, IanTactics, NEUTRAL_REACTION);
   NOption(144, Node999, 4);
   giq_option(-3, SCRIPT_CARVLEAD, 139, Node999, NEUTRAL_REACTION);
end

procedure Ian16 begin
   set_global_var(GVAR_IAN_HIRELING_STATUS, 3);
   set_party_waiting;
   NMessage(147);
end

procedure Ian17 begin
   if (local_var(LVAR_reaction_level) == 1) then begin
      BMessage(148);
   end
   else if (local_var(LVAR_reaction_level) >= 2) then begin
      // If dude's party is too big, decline:
      if dude_has_free_slot_for_ian then begin
         Reply(156);
         if (dude_caps >= 100) then begin
            GOption(157, hire_Ian, 4);
         end
         NOption(159, Ian17a, 6);
         NOption(158, Node999, 4);
      end
      else begin
         Reply(2501);
         NOption(2510, Node999, 004);
      end

   end
end

procedure Ian17a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 20))) then begin
      Reply(160);
      GOption(g_more, join_party, 4);
   end
   else begin
      DownReact
      BMessage(161);
   end
end

procedure Ian18 begin
   Reply(124);
   UpReact
   NOption(g_more, Ian19, 4);
end

procedure Ian19 begin
   Reply(127);
   call Ian12a;
end

procedure Ian20 begin
   NMessage(174);
   call Ian15;
end

procedure Ian21 begin
   Reply(202);
   NOption(203, rejoin_party, 4);
   NOption(204, Node999, 4);
   NLowOption(gen_mstr(196), rejoin_party);
end

procedure map_commentary begin
   if (CUR_MAP_JUNKKILL) then begin
      if is_killian_alive and (tile_distance(self_tile, 27883) < 4)  then begin
         if (not(line151flag)) then begin
            float_msg(self_obj, mstr(151), FLOAT_MSG_NORMAL);
            line151flag := 1;
         end
      end
   end
   else if (CUR_MAP_JUNKCSNO) then begin
      if is_gizmo_alive and (tile_distance(self_tile, 27919) < 4) then begin
         if (not(line152flag)) then begin
            float_msg(self_obj, mstr(152), FLOAT_MSG_NORMAL);
            line152flag := 1;
         end
      end
   end
   else if (CUR_MAP_HALLDED) then begin
      if (not(line153flag)) then begin
         float_msg(self_obj, mstr(153), FLOAT_MSG_NORMAL);
         line153flag := 1;
      end
   end
   else if (CUR_MAP_GLOWENT) then begin
      if (not(line154flag)) then begin
         float_msg(self_obj, mstr(154), FLOAT_MSG_NORMAL);
         if (global_var(GVAR_KATJA_HIRELING_STATUS) == 2) then begin
            float_msg(Katja_ptr, message_str(SCRIPT_KATJA, 185), FLOAT_MSG_PURPLE);
         end
         line154flag := 1;
      end
   end
   else if (CUR_MAP_MBENT) then begin
      if (not(line155flag)) then begin
         float_msg(self_obj, mstr(155), FLOAT_MSG_NORMAL);
         line155flag := 1;
      end
   end
   else if (CUR_MAP_HUBDWNTN) and (self_elevation == 0) then begin
      if (tile_distance(self_tile, 24890) < 4) then begin
         if (not(line162flag)) then begin
            float_msg(self_obj, mstr(162), FLOAT_MSG_NORMAL);
            line162flag := 1;
         end
      end
      else if (tile_distance(self_tile, 14116) < 4) then begin
         if (not(line165flag)) then begin
            float_msg(self_obj, mstr(165), FLOAT_MSG_NORMAL);
            line165flag := 1;
         end
      end
      else if (tile_distance(self_tile, 18464) < 4) then begin
         if (not(line166flag)) then begin
            float_msg(self_obj, mstr(166), FLOAT_MSG_NORMAL);
            line166flag := 1;
         end
      end
      else if (tile_distance(self_tile, 21730) < 4) then begin
         if (not(line167flag)) then begin
            float_msg(self_obj, mstr(167), FLOAT_MSG_NORMAL);
            line167flag := 1;
         end
      end
   end
   else if (CUR_MAP_HUBOLDTN) then begin
      if (tile_distance(self_tile, 16082) < 4) then begin
         if (line163flag == 0) then begin
            float_msg(self_obj, mstr(163), FLOAT_MSG_NORMAL);
            line163flag := 1;
         end
      end
   end
   else if (CUR_MAP_HUBWATER) then begin
      if (tile_distance(self_tile, 22497) < 4) then begin
         if (line164flag == 0) then begin
            float_msg(self_obj, mstr(164), FLOAT_MSG_NORMAL);
            line164flag := 1;
         end
      end
   end
   else if (CUR_MAP_VAULT13) then begin
      if (line170flag == 0) then begin
         float_msg(self_obj, mstr(170), FLOAT_MSG_NORMAL);
         line170flag := 1;
      end
   end
end

procedure IanTactics begin
   gsay_reply(SCRIPT_TYCHO, 160);

   if (local_var(LVAR_FOLLOW_DISTANCE) != FOLLOW_DISTANCE_CLOSE) then
      giq_option(4, SCRIPT_TYCHO, message_str(SCRIPT_TYCHO, 161), IanClose, NEUTRAL_REACTION);

   if (local_var(LVAR_FOLLOW_DISTANCE) != FOLLOW_DISTANCE_MEDIUM) then
      giq_option(4, SCRIPT_TYCHO, message_str(SCRIPT_TYCHO, 162), IanModerate, NEUTRAL_REACTION);

   if (local_var(LVAR_FOLLOW_DISTANCE) != FOLLOW_DISTANCE_FAR) then
      giq_option(4, SCRIPT_TYCHO, message_str(SCRIPT_TYCHO, 163), IanFar, NEUTRAL_REACTION);
end

procedure IanClose begin
   set_follow_close;

   /*set_local_var(4, 0);
   set_local_var(5, 0);
   set_local_var(6, 0);
   set_global_var(GVAR_DESTROY_VATS_5, 2);*/
   NMessage(201);
   call Ian15;
end

procedure IanModerate begin
   set_follow_medium;

   /*set_local_var(4, 0);
   set_local_var(5, 0);
   set_local_var(6, 0);
   set_global_var(GVAR_DESTROY_VATS_5, 4);*/

   NMessage(201);
   call Ian15;
end

procedure IanFar begin
   set_follow_far;

   /*set_local_var(4, 0);
   set_local_var(5, 0);
   set_local_var(6, 0);
   set_global_var(GVAR_DESTROY_VATS_5, 6);*/
   NMessage(201);
   call Ian15;
end

procedure IanCombatTactics begin
   Reply(2001);

   if (self_is_armed) then
      GOption(2010, IanHolsterWeapon, 4);

   if (self_wearing_armor) then
      GOption(2011, IanRemoveArmor, 4);

   GOption(2012, IanSniper, 4);
   GOption(2013, IanNearCombat, 4);
   GOption(2014, IanFreeCombat, 4);
   GOption(2015, Ian15, 4);
end

procedure IanHolsterWeapon begin
   inven_unwield(self_obj);
   Reply(201);
   call IanCombatTactics;
end

procedure IanRemoveArmor begin
   remove_armor(self_obj)
   Reply(201);
   call IanCombatTactics;
end

procedure IanSniper begin
   GMessage(2100);
   //set_self_ai( AI_PARTY_IAN_AGGRESSIVE );
   call IanCombatTactics;
end

procedure IanNearCombat begin
   GMessage(2100);
   //set_self_ai( AI_PARTY_IAN_BERSERK );
   call IanCombatTactics;
end

procedure IanFreeCombat begin
   GMessage(2100);
   //set_self_ai( AI_IAN );
   call IanCombatTactics;
end

// party stuff
procedure Node1000 begin
   if party_is_waiting then begin
      Reply(202);
   end
   else begin
      Reply(mstr(142) + dude_name + mstr(143));
   end

   NOption(110, ask_places, 004);
   if not(CUR_AREA_HUB) and not(CUR_AREA_JUNKTOWN) and (not(junktown_visible_on_map) or not(hub_visible_on_map)) then
      NOption(146, Ian13, 4);

   party_member_default_options;
end

procedure ask_places begin
   if CUR_AREA_SHADY_SANDS then begin
      call Ian07;
   end
   else begin
      if CUR_AREA_JUNKTOWN then begin
         if is_killian_alive then
            GMessage(2610);
         else if not(is_killian_alive) and is_gizmo_alive then
            GMessage(2612);
         else
            GMessage(2611);
      end
      else if CUR_AREA_HUB then
         GMessage(2620);
      else if CUR_AREA_RAIDERS then begin
         if (get_raiders_alive < 16) then
            GMessage(2631);
         else
            GMessage(2630);
      end
      else if CUR_AREA_NECROPOLIS then
         GMessage(2640);
      else
         GMessage(2650);

      call Node1000;
   end
end

procedure Node1001 begin
   // heal yourself
   obj_heal(self_obj)
   global_temp := 0;
   if (party_healed_max) then begin
      Reply(300);
   end else if (party_healed_good) then begin
      Reply(301);
   end else if (party_healed_hurt) then begin
      Reply(302);
   end else begin
      Reply(303);
   end

   party_member_default_options;
end
procedure Node1002 begin
   set_global_var(GVAR_IAN_HIRELING_STATUS, 3);

   // wait here
   set_party_waiting;
   Reply(147);
   party_member_default_options;
end
procedure Node1003 begin
   // put your weapon away
   inven_unwield(self_obj);
   Reply(201);
   party_member_default_options;
end
procedure Node1004 begin
   // follow close
   set_follow_close;
   Reply(201);
   party_member_default_options;
end
procedure Node1005 begin
   // follow medium
   set_follow_medium;
   Reply(201);
   party_member_default_options;
end
procedure Node1006 begin
   // follow far
   set_follow_far;
   Reply(201);
   party_member_default_options;
end
procedure Node1007 begin
   // distance
   Reply(201);
   party_member_def_follow_options;
end
procedure Node1008 begin
   // gear
   Reply(2001);
   party_member_def_gear_options;
end
procedure Node1009 begin
   // remove armor
   remove_armor(self_obj)
   Reply(201);
   party_member_default_options;
end
procedure Node1010 begin
   // weapons that can be used
   Reply(174);
   party_member_default_options;
end
procedure Node1100 begin
   // join me
   if (dude_charisma <= 1) then begin
      set_self_abandon_party;
      Reply(2500);
      NOption(g_mstr(10007), Node999, 001);
   end else if (dude_at_max_party_size and not(fo1in2_party_limit_disabled)) then begin
      set_self_abandon_party;
      Reply(2500);
      NOption(g_mstr(10007), Node999, 001);
   end else begin
      set_global_var(GVAR_IAN_HIRELING_STATUS, 2);
      end_party_waiting;
      Reply(150);
      party_member_default_options;
   end
end
