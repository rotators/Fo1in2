/*

   The Player

*/

#include "define.h"
#include "command.h"
#include "sfall/sfall.h"

#define NAME                    SCRIPT_OBJ_DUDE

#include "cheats.h"

procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;

procedure KillCheck;
procedure PoisonCheck;

variable ShootOverseer := 0;
variable gun_ptr := 0;
variable GunSoundAnim := 0;

variable SecondsFLAG;
variable SecondsLeft;
variable Zero;

#define EVENT_END_GAME                 (3)
#define EVENT_TIMEOUT                  (5)
#define EVENT_SHOOT_OVERSEER           (6)
#define EVENT_SHOOT_OVERSEER_AUTO      (7)
#define EVENT_ALLOW_PLAYER_CONTROL     (8)
#define EVENT_COUNTDOWN_MASTER         (11)
#define EVENT_COUNTDOWN_VATS           (12)

procedure start begin
   // Save the start date to check the water counter / days remaining, etc.
   // 864000 is Dec the 5th 00:00 o clock.
   // We have to do this, because reasons.
   if (global_var(GVAR_VAULT13_WATER_DAYS_COUNTER) <= 0) then begin
      set_global_var(GVAR_VAULT13_WATER_DAYS_COUNTER, 864000);
   end
end

procedure combat_p_proc begin
variable SecondsCombat;

   if (fixed_param == COMBAT_SUBTYPE_TURN) then begin
      if CUR_AREA_MILITARY_BASE then begin// For military base explosion countdown, displaying nice 5-second increment updates of "time left" amount:
         if (vats_destruction_started and (global_var(GVAR_QUEST_VAULT13_3_KILL_VATS) == 2)) then begin//   (each combat round in Fallout is treated as exactly 5 in-game seconds, which is 50 ticks)
            if global_var(GVAR_VATS_BLOWN_CUTSCENE_DONE) != 1 then begin
               SecondsCombat := (global_var(GVAR_VATS_COUNTDOWN) - (game_time / 10));
               if (SecondsCombat <= 0) then begin
                  set_global_var(GVAR_VATS_BLOWN_CUTSCENE_DONE, 1);
                  play_gmovie(VATSEXPLODE_MOVIE);//------ Military Base goes boom and dies, sweet!
                  signal_end_game;
               end
               else begin
                  display_msg(message_str(SCRIPT_MBENT, 100) + SecondsCombat + message_str(SCRIPT_MBENT, 101));//   "Time Left : XXX Seconds"
               end
            end
         end
      end
      else if CUR_AREA_CATHEDRAL then begin
         if not(global_var(GVAR_MASTER_BLOWN_CUTSCENE)) then begin
            if ((global_var(GVAR_COUNTDOWN_TO_DESTRUCTION) != 0) and master_killed) then begin
               SecondsCombat := 240 - ((game_time / 10) - global_var(GVAR_COUNTDOWN_TO_DESTRUCTION));
               if (((game_time / 10) - global_var(GVAR_COUNTDOWN_TO_DESTRUCTION)) >= 240) then begin
                  set_global_var(GVAR_MASTER_BLOWN_CUTSCENE, 1);
                  play_gmovie(CATHEXPLODE_MOVIE);//------ Cathedral and Master's Vault go pfoom. Look at the pretty lights, Ma!
                  signal_end_game;
               end
               else begin
                  display_msg(message_str(SCRIPT_MASTER2, 100) + SecondsCombat + message_str(SCRIPT_MASTER2, 101));//   "Time Left : XXX Seconds"
               end
            end
         end
      end
   end

   call PoisonCheck;
end

procedure critter_p_proc begin
   call PoisonCheck;
end

procedure look_at_p_proc begin
variable Item;

   debug("playing for " + GAME_TIME_IN_DAYS + " days.");
   debug("necrip: " + get_necropolis_days_left);
   debug("v13 invasion: " + get_v13_days_left);
   //set_global_var(GVAR_VAULT_13_INVASION_DAYS, global_var(GVAR_VAULT_13_INVASION_DAYS) + 250);

   if global_var(GVAR_ENABLE_DEBUG_MENU) or debug_mode then begin
      if (dude_poison_stat > 0) or (dude_rads > 0) then begin
         debug("Current poison: " + dude_poison_stat + ". " + "Current rads: " + dude_rads + ". " + "Current time: " + game_time_hour + ". ");
      end
   end
end

procedure description_p_proc begin
   if (global_var(GVAR_ENABLE_DEBUG_MENU) == 1) then begin
      if not(combat_is_initialized) then begin
         set_tma_data(NAME, 1000, -1, -1, 1109, 1109);
         start_dialog_at_node(Cheater00a);
      end
   end
end

procedure map_enter_p_proc begin
   // TEST
   /*variable Item := create_object(PID_DEHYDRATION_STRONG, 0, 0);
   add_obj_to_inven(dude_obj, Item);
   set_global_var(GVAR_OBJ_DUDE_USE_DRUG, Item);*/
end

procedure map_update_p_proc begin
   variable days_since_exposed;

   if CUR_AREA_MILITARY_BASE then begin
      if (vats_destruction_started and (global_var(GVAR_QUEST_VAULT13_3_KILL_VATS) == 2)) then begin
         if global_var(GVAR_VATS_BLOWN_CUTSCENE_DONE) != 1 then begin
            add_timer_event(dude_obj, 0, EVENT_COUNTDOWN_VATS);
         end
      end
   end
   else if CUR_AREA_CATHEDRAL then begin
      if ((global_var(GVAR_COUNTDOWN_TO_DESTRUCTION) != 0) and master_killed) then begin
         if not(global_var(GVAR_MASTER_BLOWN_CUTSCENE)) then begin
            add_timer_event(dude_obj, 0, EVENT_COUNTDOWN_MASTER);
         end
      end
   end

   // Fo2 MUTATION CODE
   if (global_var(GVAR_HAVE_MUTATED) == 0) then begin
      if (global_var(GVAR_MUTATE_STAGE) > 0) then begin
         days_since_exposed := GAME_TIME_IN_DAYS - global_var(GVAR_MUTATE_WHEN);
         //debug_msg("days since exposed "+days_since_exposed);
         if (days_since_exposed > 30) then begin
            if (global_var(GVAR_MUTATE_STAGE) < 5) then begin
               display_msg(mstr(140));
               set_global_var(GVAR_MUTATE_STAGE, 5);
               set_global_var(GVAR_HAVE_MUTATED, 1);
            end
         end
         else if (days_since_exposed > 25) then begin
            if (global_var(GVAR_MUTATE_STAGE) < 4) then begin
               display_msg(mstr(130));
               set_global_var(GVAR_MUTATE_STAGE, 4);
            end
         end
         else if (days_since_exposed > 20) then begin
            if (global_var(GVAR_MUTATE_STAGE) < 3) then begin
               display_msg(mstr(120));
               set_global_var(GVAR_MUTATE_STAGE, 3);
            end
         end
         else if (days_since_exposed > 15) then begin
            if (global_var(GVAR_MUTATE_STAGE) < 2) then begin
               display_msg(mstr(110));
               set_global_var(GVAR_MUTATE_STAGE, 2);
            end
         end
      end//if mutate_stage > 0
   end//if have_mutated = 0

   // Used to make the player use drugs outside of critter scripts
   // Example: Dehydration encounters.
   if (global_var(GVAR_OBJ_DUDE_USE_DRUG) != 0) then begin
      variable Drink := global_var(GVAR_OBJ_DUDE_USE_DRUG);
      set_global_var(GVAR_OBJ_DUDE_USE_DRUG, 0);

      // Water flask isn't a drug item, Nuka Cola has no effect
      // TODO: Rewrite this to check if item is a drug and if not, delete it for better mod compatibility.
      if (obj_pid(Drink) == PID_WATER_FLASK or obj_pid(DRINK) == PID_NUKA_COLA) then begin
         if (obj_pid(Drink) == PID_NUKA_COLA) then dude_caps_adjust(1);
         rm_obj_from_inven(dude_obj, Drink);
         destroy_object(Drink);
      end
      else begin
         use_obj_on_obj(Drink, dude_obj);
         // Weak has 1 effect timer, strong has 2 effect timers. Added like this, so that in the future I will remember what I have done. :>
         if (obj_pid(Drink) == PID_DEHYDRATION_WEAK) then
            set_global_var(GVAR_DEHYDRATION_TIMER, game_time + (ONE_GAME_MINUTE * 4320));
         else if (obj_pid(DRINK) == PID_DEHYDRATION_STRONG) then
            set_global_var(GVAR_DEHYDRATION_TIMER, game_time + (ONE_GAME_MINUTE * 4320) + (ONE_GAME_MINUTE * 4320));
      end
   end

   // Shows the status box on the main interface.
   /*if (global_var(GVAR_DEHYDRATION_TIMER) > game_time) then begin
      if not(is_iface_tag_active(global_var(GVAR_DEHYDRATION_BOX))) then begin

         // TODO: Add check for available box
         set_global_var(GVAR_DEHYDRATION_BOX, 5);

         set_iface_tag_text(global_var(GVAR_DEHYDRATION_BOX), gen_mstr(305), 1);
         show_iface_tag(global_var(GVAR_DEHYDRATION_BOX));
      end
   end
   else begin
      if is_iface_tag_active(global_var(GVAR_DEHYDRATION_BOX)) then begin
         display_msg(gen_mstr(306));
         hide_iface_tag(global_var(GVAR_DEHYDRATION_BOX));
         set_global_var(GVAR_DEHYDRATION_BOX, -1);
      end
   end*/
end

procedure timed_event_p_proc begin
   if fixed_param == EVENT_END_GAME then begin
      debug_red("EVENT_END_GAME");
      game_ui_enable;
      set_story_finished;
      kill_critter_type(PID_OVERSEER, 1);
   end
   else if fixed_param == EVENT_TIMEOUT then begin
      debug_red("EVENT_TIMEOUT");
      game_ui_disable;
      add_timer_event(dude_obj, 5, EVENT_SHOOT_OVERSEER);
   end
   else if fixed_param == EVENT_SHOOT_OVERSEER then begin
      debug_red("EVENT_SHOOT_OVERSEER");
      call KillCheck;

      if (ShootOverseer == 1) then begin
         variable dude_armed := 0;
         if dude_is_armed then dude_armed := 1;

         gun_ptr := create_object(PID_10MM_PISTOL, 0, 0);
         add_obj_to_inven(dude_obj, gun_ptr);

         if ((anim_busy(dude_obj) != 0) or (anim_busy(dude_obj) == 0)) then begin
            wield_obj_critter(dude_obj, gun_ptr);
         end

         set_global_var(GVAR_OVERSEER_KILLED, 2);

         // If player was armed when entering the cutscene, we need a slightly longer delay due to the weapon swap animation
         if (dude_armed == 0) then
            add_timer_event(dude_obj, 13, EVENT_SHOOT_OVERSEER_AUTO); // original was 25
         else
            add_timer_event(dude_obj, 22, EVENT_SHOOT_OVERSEER_AUTO);
      end
      else begin
         add_timer_event(dude_obj, 25, EVENT_ALLOW_PLAYER_CONTROL); // original cutscene behavior, give player the chance to attack the overseer no matter what
      end
   end
   else if fixed_param == EVENT_SHOOT_OVERSEER_AUTO then begin
      debug_red("EVENT_SHOOT_OVERSEER_AUTO");
      if global_var(GVAR_DUDE_SHOOTS_OVERSEER) < 1 then begin
         if ((anim_busy(dude_obj) != 0) or (anim_busy(dude_obj) == 0)) then begin
            // If the player had another weapon equipped at first, the cutscene breaks
            // So we have to clear his animations first, just to make sure it'll work in any case
            // Also had to increase the timer in EVENT_SHOOT_OVERSEER to make it feel smoother
            reg_anim_clear(dude_obj);

            reg_anim_clear(map_var(0)); // Overseer pointer
            reg_anim_begin();
            reg_anim_animate(dude_obj, ANIM_point, -1);

            GunSoundAnim := sfx_build_weapon_name(1, gun_ptr, 0, map_var(0));

            reg_anim_play_sfx(dude_obj, GunSoundAnim, -1);
            reg_anim_animate(dude_obj, ANIM_fire_single, -1);

            GunSoundAnim := sfx_build_char_name(map_var(0), 20, 3);

            reg_anim_play_sfx(map_var(0), GunSoundAnim, 0);
            reg_anim_animate(map_var(0), ANIM_fall_back, 0);
            reg_anim_animate(dude_obj, ANIM_unpoint, 0);
            reg_anim_end();

            add_timer_event(dude_obj, game_ticks(11), EVENT_ALLOW_PLAYER_CONTROL);
         end
      end
      set_global_var(GVAR_DUDE_SHOOTS_OVERSEER, 1);
   end
   else if fixed_param == EVENT_ALLOW_PLAYER_CONTROL then begin
      debug_red("EVENT_ALLOW_PLAYER_CONTROL");
      game_ui_enable;
      set_global_var(GVAR_OVERSEER_END_SEQ, 7);
      add_timer_event(dude_obj, game_ticks(1), EVENT_END_GAME);
   end

   /*******************************************************************
      Run the Mariposa and Cathedral bomb countdown
   *******************************************************************/
   else if fixed_param == EVENT_COUNTDOWN_MASTER then begin
      if CUR_MAP_CHILDRN1 or CUR_MAP_CHILDRN2 or CUR_MAP_MSTRLR12 or CUR_MAP_MSTRLR34 then begin
         if not(global_var(GVAR_MASTER_BLOWN_CUTSCENE)) then begin
            SecondsLeft := 240 - ((game_time / 10) - global_var(GVAR_COUNTDOWN_TO_DESTRUCTION));
            if (((game_time / 10) - global_var(GVAR_COUNTDOWN_TO_DESTRUCTION)) >= 240) then begin
               Zero := 0;
               display_msg(message_str(SCRIPT_MASTER2, 100) + Zero + message_str(SCRIPT_MASTER2, 101));
               set_global_var(GVAR_MASTER_BLOWN_CUTSCENE, 1);
               play_gmovie(CATHEXPLODE_MOVIE);//------ Cathedral and Master's Vault go boom. Look at the pretty lights, Ma!
               signal_end_game;
            end
            else if ((SecondsLeft % 5) == 0) and (SecondsFLAG == 0)  then begin
               SecondsFLAG := 1;
               display_msg(message_str(SCRIPT_MASTER2, 100) + SecondsLeft + message_str(SCRIPT_MASTER2, 101));
            end
            else begin
               if (SecondsLeft % 5) then begin
                  SecondsFLAG := 0;
               end
            end
            add_timer_event(dude_obj, 10, EVENT_COUNTDOWN_MASTER);
         end
      end
   end
   else if fixed_param == EVENT_COUNTDOWN_VATS then begin
      if (cur_map_index > MAP_LAFOLLWR) and (cur_map_index < MAP_MSTRLR12) then begin
         if global_var(GVAR_VATS_BLOWN_CUTSCENE_DONE) != 1 then begin
            SecondsLeft := (global_var(GVAR_VATS_COUNTDOWN) - (game_time / 10));
            if (SecondsLeft <= 0) then begin
               Zero := 0;
               display_msg(message_str(SCRIPT_MBENT, 100) + Zero + message_str(SCRIPT_MBENT, 101));
               set_global_var(GVAR_VATS_BLOWN_CUTSCENE_DONE, 1);
               play_gmovie(VATSEXPLODE_MOVIE);//------ Military Base goes boom and dies, sweet!
               signal_end_game;
            end
            else if ((SecondsLeft % 5) == 0) and (SecondsFLAG == 0)  then begin
               SecondsFLAG := 1;
               display_msg(message_str(SCRIPT_MBENT, 100) + SecondsLeft + message_str(SCRIPT_MBENT, 101));
            end
            else begin
               if (SecondsLeft % 5) then begin
                  SecondsFLAG := 0;
               end
            end
            add_timer_event(dude_obj, 10, EVENT_COUNTDOWN_VATS);
         end
      end
   end
end

/*******************************************************************
   This, as in vanilla, checks if the PC is a "bad guy", and if so,
   you'll slaughter the Overseer when he delivers the news.
   Was under "fixed_param == 6" in timed_event -- Now has its own code routine. [Sduibek]
*******************************************************************/
procedure KillCheck begin
   ShootOverseer := 0;
   if (dude_trait(TRAIT_bloody_mess)) then begin
      ShootOverseer := 1;
   end
   else begin
      if has_rep_childkiller then begin
         ShootOverseer := 1;
      end
      else if has_rep_berserker then begin
         ShootOverseer := 1;
      end
      else if (check_general_rep < -1) then begin
         ShootOverseer := 1;
      end
   end
end

procedure PoisonCheck begin
   // "Poison has left your system"
   if (dude_poison_stat > 0) then begin
      if not(is_loading_game) then begin
         set_global_var(GVAR_DUDE_OBJ_POISONED, 1);// tracker
      end
   end
   else if (global_var(GVAR_DUDE_OBJ_POISONED) == 1) then begin// if player is no longer actually poisoned and PlayerIsPoisoned tracker is still flagged
      set_global_var(GVAR_DUDE_OBJ_POISONED, 0);// << Clear the "Player Is Poisoned" tracker
      if not(is_loading_game) then begin
         display_msg(gen_mstr(214));// "The poison has left your system."
      end
   end
end
