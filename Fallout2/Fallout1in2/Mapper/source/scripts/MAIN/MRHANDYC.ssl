/*

   Mr. Handy - Party Member, Military Base

*/

#include "define.h"

#define NAME                    SCRIPT_MRHANDYC

#include "command.h"
#include "modreact.h"

procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure push_p_proc;

import variable field_change;

procedure MrHandyC00;
procedure MrHandyC01;
procedure MrHandyC02;
procedure MrHandyC03;
procedure MrHandyC04;
procedure MrHandyC05;
procedure MrHandyC06;
procedure MrHandyC07;
procedure MrHandyC08;
procedure MrHandyC09;
procedure MrHandyC10;
procedure MrHandyC11;
procedure MrHandyC11A;
procedure MrHandyC12;
procedure MrHandyC13;
procedure MrHandyC14;
procedure MrHandyC15;

procedure Node998;
procedure Node999;

procedure Node001;
procedure Node002;
procedure Node003;

procedure Node1001;
procedure Node1002;
procedure Node1003;
procedure Node1004;
procedure Node1005;
procedure Node1006;
procedure Node1007;
procedure Node1008;
procedure Node1009;
procedure Node1010;
procedure Node1100;

procedure GetDate;
procedure Heal_Robo(variable bonus);

variable initial := 0;
variable tmp_hostile := 0;

#define LVAR_IS_PHYSICAL_DAMAGE_FIXED     (0) // (repair)
#define LVAR_IS_COMPUTER_FIXED            (1) // (science)
#define LVAR_ALREADY_TALKED               (2)
#define LVAR_CLEANUP_BEGINS               (3) // (ordered him to continue with his procedures)
#define LVAR_IS_RADIO_FIXED               (4) // (repair or radio)
#define LVAR_ALREADY_STOOD_UP             (5)
#define LVAR_ALREADY_DESTROYED_ITEMS      (6)
#define LVAR_DECLINED_REPROGRAMMING       (7)
#define LVAR_WAITING                      (10)
#define LVAR_FOLLOW_DISTANCE              (11)
#define LVAR_TEAM                         (12)
#define LVAR_Heal_Count                   (13)
#define LVAR_Heal_Dec_Time                (14)

#define float_handy(x)                    float_msg(self_obj, mstr(x), FLOAT_MSG_NORMAL)
#define handy_joins_party                 party_add_self;                                                   \
                                          add_timer_event(self_obj, game_ticks(1), 2);                        \
                                          set_self_team(TEAM_PLAYER)
#define dude_has_free_slot_for_handy      fo1in2_party_limit_disabled or ((dude_at_max_party_size == false) and (MrHandyC_In_Party == false))
#define EVENT_FLOAT_JOIN                  (2)
#define EVENT_CALIBRATE                   (3)

#define handy_is_fixed                    ((local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 1) and (local_var(LVAR_IS_COMPUTER_FIXED) == 1) and (local_var(LVAR_IS_RADIO_FIXED) == 1))

#define MULTI_TOOL 10
#define SUPER_TOOL 30

#undef  set_default_party_follow
#define set_default_party_follow             set_follow_medium
#define PARTY_NODE_X                         Node001
#undef  def_follow_msg
#define def_follow_msg                       mstr(1020)
#undef  def_heal_msg
#define def_heal_msg                         mstr(1014)
#undef  def_gear_msg
#define def_gear_msg                         mstr(1015)

procedure Node998 begin
end
procedure Node999 begin
end

procedure push_p_proc begin
   if (MrHandyC_In_Party == false) then begin
      script_overrides;
   end
   else begin
      //float_mrhandy(random(122,123));
   end
end

procedure timed_event_p_proc begin
   if (fixed_param == EVENT_FLOAT_JOIN) then begin
      debug("Mr.Handy is joining!");
   end
   else if (fixed_param == EVENT_CALIBRATE) then begin
      if (random(0, 1) == 1) then
         float_handy(random(1004, 1006));
   end
end


procedure start begin

end

procedure map_enter_p_proc begin
   if map_first_run then begin
      if global_var(GVAR_MR_HANDYC_HIRELING_INIT) != 1 then begin// init reset lvars
         set_global_var(GVAR_MR_HANDYC_HIRELING_INIT, 1);
         set_local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED, 0);
         set_local_var(LVAR_IS_COMPUTER_FIXED, 0);
         set_local_var(LVAR_ALREADY_TALKED, 0);
         set_local_var(LVAR_CLEANUP_BEGINS, 0);
         set_local_var(LVAR_IS_RADIO_FIXED, 0);
         set_local_var(LVAR_ALREADY_STOOD_UP, 0);
         set_local_var(LVAR_ALREADY_DESTROYED_ITEMS, 0);
         set_local_var(LVAR_DECLINED_REPROGRAMMING, 0);
      end
   end
end

procedure damage_p_proc begin
   if source_obj == dude_obj then begin
      if handy_is_fixed then begin
         set_global_var(GVAR_MR_HANDYC_HIRELING_STATUS, 2);
         if MrHandyC_In_Party then begin
            set_self_abandon_party;
         end
         tmp_hostile := 1;
      end
   end
end

procedure destroy_p_proc begin
   set_global_var(GVAR_MR_HANDYC_HIRELING_STATUS, 3);
end

procedure combat_p_proc begin
   if (fixed_param == COMBAT_SUBTYPE_TURN) then begin
      if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) or (local_var(LVAR_IS_COMPUTER_FIXED) == 0) or (local_var(LVAR_IS_RADIO_FIXED) == 0) then begin// Don't do anything if not fixed.
         script_overrides;
      end
   end
end

procedure critter_p_proc begin
   if (MrHandyC_In_Party) then begin
      party_member_follow_dude
   end
   else if (self_team == TEAM_PLAYER) then begin
      set_self_abandon_party;
   end

   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin

      if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) then begin
         script_overrides;
         anim(self_obj, ANIM_fall_back_sf, 0);
      end
      else if (local_var(LVAR_ALREADY_STOOD_UP) == 0) then begin
         set_local_var(LVAR_ALREADY_STOOD_UP, 1);
         play_sfx("MAHANDKD");// default Stand-Up sound is MAHANDCJ
         anim(self_obj, ANIM_back_to_standing, 0);
      end
      else if (local_var(LVAR_ALREADY_TALKED) == 0) and (local_var(LVAR_CLEANUP_BEGINS) == 0) then begin
         if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
            if handy_is_fixed then begin
               set_local_var(LVAR_ALREADY_TALKED, 1);
               dialogue_system_enter;
            end
         end
      end
      else if (local_var(LVAR_CLEANUP_BEGINS) == 1) then begin
         if local_var(LVAR_ALREADY_DESTROYED_ITEMS) == 0 then begin
            variable KillBox_ptr := 0;
            set_local_var(LVAR_ALREADY_DESTROYED_ITEMS, 1);
            KillBox_ptr := create_object(PID_DEAD_TRAVELER, 0, 0);// <-- Dead Traveler (Ghoul)  Was : create_object(PID_IGUANA_STAND, 0, 0);// <-- Bob's Iguana Stand. MAX_SIZE = 1000, biggest of all containers. -1 = NO SCRIPT ATTACHED.
            move_to(KillBox_ptr, 0, 0);
            //inven_unwield;
            move_obj_inven_to_obj(self_obj, KillBox_ptr);
            destroy_object(KillBox_ptr);
         end
         else begin
            if (self_tile != 20530) then begin
               self_walk_to_tile(20530);
            end
            else begin
               set_local_var(LVAR_CLEANUP_BEGINS, 2);
               set_global_var(GVAR_MRHANDYC_NO_DESTROY_MSG, 1);
               set_global_var(GVAR_MR_HANDYC_HIRELING_STATUS, 3);
               field_change := "off";

               explosion(self_tile, self_elevation, 0);
               explosion(tile_num_in_direction(self_tile, 5, 1), self_elevation, 0);
               explosion(tile_num_in_direction(self_tile, 0, 1), self_elevation, 0);
               explosion(tile_num_in_direction(self_tile, 5, 2), self_elevation, 0);
               explosion(tile_num_in_direction(self_tile, 0, 2), self_elevation, 0);

               give_xp_msg(EXP_HANDYC_CLEANUP, mstr(117));

               critter_dmg(self_obj, random(256, 384), DMG_explosion);
            end
         end
      end

   end
end

procedure description_p_proc begin
   script_overrides;
// if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) and (local_var(LVAR_IS_COMPUTER_FIXED) == 0) then begin// neither fixed
//    script_overrides;
//
   if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) then begin// still need physical fix
      script_overrides;
      display_msg(mstr(100));//{100}{}{This robot is non-functional. The layer of dust on it suggests that it hasn't been active in a while.}
   end
   else begin
      if (local_var(LVAR_IS_COMPUTER_FIXED) == 0) then begin// still need software fix
         script_overrides;
         if (dude_iq > (dude_perception +  dude_perk(PERK_bonus_awareness))) then begin
            if (is_success(do_check(dude_obj, STAT_iq, 0))) then begin
               display_msg(mstr(102));//{102}{}{The hardware is not a problem; it must be the software.}
            end
         end
         else begin
            if (is_success(do_check(dude_obj, STAT_pe,  dude_perk(PERK_bonus_awareness)))) then begin
               display_msg(mstr(102));//{102}{}{The hardware is not a problem; it must be the software.}
            end
            else begin
               display_msg(mstr(101));//{101}{}{The robot is now powered on, but is still not functional.}
            end
         end
      end
      else begin
         if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 1) and (local_var(LVAR_IS_COMPUTER_FIXED) == 1) and (local_var(LVAR_IS_RADIO_FIXED) == 0) then begin// not fixed radio
            script_overrides;
            display_msg(mstr(123));//{123}{}{The robot's radio is broken.}
         end
         else begin
            display_msg(mstr(119));//{119}{}{This Mr. Handy robot is in moderate shape, but is functional.}
         end
      end
   end
   script_overrides;
end

procedure talk_p_proc begin
   if MrHandyC_In_Party then
      self_look_at_dude;
   dude_look_at_self;

   if (MrHandyC_In_Party) then begin
      start_dialog_at_node(PARTY_NODE_X);
   end
   else if (not(MrHandyC_In_Party) and (global_var(GVAR_MR_HANDYC_HIRELING_STATUS) == 1)) then begin
      start_dialog_at_node(Node002);
   end
   else begin

      if (local_var(LVAR_CLEANUP_BEGINS) > 0) then begin
         script_overrides;
         display_msg(mstr(150));
      end
      else if (global_var(GVAR_MR_HANDYC_HIRELING_STATUS) > 0) and (global_var(GVAR_MR_HANDYC_HIRELING_STATUS) < 3)  then begin
         script_overrides;
         float_msg(self_obj, mstr(151), FLOAT_MSG_NORMAL);
      end
      else begin
         if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) then begin
            script_overrides;
            display_msg(mstr(103));//{103}{}{You cannot access the robot's functions, as it is disabled.}
         end
         else if handy_is_fixed then begin
            start_dialog_at_node(MrHandyC00);
         end
         else begin
            script_overrides;
            display_msg(mstr(122));//{122}{}{The interface systems are not responding to your input.}
         end
      end

   end

   reset_tma_data;
end

procedure use_skill_on_p_proc begin
   if (action_being_used == SKILL_STEAL) then begin
      if not(MrHandyC_In_Party) then begin
         script_overrides;
         display_msg(gen_mstr(211));
      end
   end
   else if (action_being_used == SKILL_SCIENCE) then begin
      if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) then begin// still need physical fix
         script_overrides;
         display_msg(mstr(103));//{103}{}{You cannot access the robot's functions, as it is disabled.}
      end
      else if (local_var(LVAR_IS_COMPUTER_FIXED) == 0) and (local_var(LVAR_IS_RADIO_FIXED) == 0) then begin// not already software fixed
         script_overrides;
         game_time_advance(game_ticks(300));

         if is_success(roll_vs_skill(dude_obj, SKILL_SCIENCE, 0)) then begin
            display_msg(mstr(105));//{105}{}{You reboot the onboard computer, and successfully restart the robot. You notice that the robot's radio is broken.}
            set_local_var(LVAR_IS_COMPUTER_FIXED, 1);
         end
         else begin
            display_msg(mstr(106));//{106}{}{You spend some time working on the robot's computer, but cannot get it restarted.}
         end
      end
      else if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 1) and (local_var(LVAR_IS_COMPUTER_FIXED) == 1) and (local_var(LVAR_IS_RADIO_FIXED) == 0) then begin// not fixed radio
         script_overrides;
         display_msg(mstr(123));//{123}{}{The robot's radio is broken.}
      end
   end
   else if (action_being_used == SKILL_REPAIR) then begin
      if MrHandyC_In_Party then begin
         script_overrides;
         call Heal_Robo(0);
      end
      else if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) then begin
         script_overrides;
         game_time_advance(game_ticks(12000));

         if is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 0)) then begin
            display_msg(mstr(101));//{101}{}{The robot is now powered on, but is still not functional.}
            set_local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED, 1);
         end
         else begin
            display_msg(mstr(104));//{104}{}{You tinker with the malfunctioning components, but need more time to make the fix.}
         end
      end
      else if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 1) and (local_var(LVAR_IS_COMPUTER_FIXED) == 1) and (local_var(LVAR_IS_RADIO_FIXED) == 0) then begin// not fixed radio
         script_overrides;
         game_time_advance(game_ticks(6000));

         if is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 0)) then begin
            display_msg(mstr(120));//{120}{}{You jury-rig the robot's radio system; it should be usable now.}
            set_local_var(LVAR_IS_RADIO_FIXED, 1);
         end
         else begin
            display_msg(mstr(104));//{104}{}{You tinker with the malfunctioning components, but need more time to make the fix.}
         end
      end
   end
end

procedure use_obj_on_p_proc begin
   variable tool;

   tool := obj_pid(obj_being_used_with);

   if MrHandyC_In_Party then begin
      if (tool == PID_MULTI_TOOL) then begin
         script_overrides;
         call Heal_Robo(MULTI_TOOL);
      end else if (tool == PID_SUPER_TOOL_KIT) then begin
         script_overrides;
         call Heal_Robo(SUPER_TOOL);
      end
   end
   else begin

      if (tool == PID_MULTI_TOOL) then begin
         if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 0) then begin
            script_overrides;
            game_time_advance(game_ticks(12000));

            // power on, but still not functional
            if is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 20)) then begin
               display_msg(mstr(101));
               set_local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED, 1);
            end
            else begin
               display_msg(mstr(104));
            end
         end
         else if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 1) and (local_var(LVAR_IS_COMPUTER_FIXED) == 1)  and (local_var(LVAR_IS_RADIO_FIXED) == 0) then begin// not fixed radio
            script_overrides;
            game_time_advance(game_ticks(6000));

            // power on, and functional
            if is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, 20)) then begin
               display_msg(mstr(120));
               set_local_var(LVAR_IS_RADIO_FIXED, 1);
            end
            else begin
               display_msg(mstr(104));
            end

         end
      end
      else if (tool == PID_RADIO) then begin
         if (local_var(LVAR_IS_PHYSICAL_DAMAGE_FIXED) == 1) and (local_var(LVAR_IS_COMPUTER_FIXED) == 1) and (local_var(LVAR_IS_RADIO_FIXED) == 0) then begin// not fixed radio
            script_overrides;

            game_time_advance(game_ticks(3000));

            rm_obj_from_inven(source_obj, obj_being_used_with);
            destroy_object(obj_being_used_with);

            display_msg(mstr(121));//{121}{}{You successfully replace the robot's radio .}
            set_local_var(LVAR_IS_RADIO_FIXED, 1);
         end
      end

   end
end

procedure MrHandyC00 begin
   Reply(107);
   NLowOption(108, MrHandyC01);
   NOption(109, MrHandyC02, 4);
   NOption(110, MrHandyC01, 4);
   if (global_var(GVAR_MR_HANDYC_HIRELING) == 1) then begin
      NOption(124, MrHandyC04, 6);
   end
end

procedure MrHandyC01 begin
   NMessage(111);
   set_local_var(LVAR_CLEANUP_BEGINS, 1);
end

procedure MrHandyC02 begin
   Reply(112);
   NOption(132, Node999, 4);
   NOption(114, MrHandyC03, 6);
   NOption(113, MrHandyC01, 4);
   if (local_var(LVAR_DECLINED_REPROGRAMMING) == 0) then begin
      NOption(139, MrHandyC10, 6);
   end
end

procedure MrHandyC15 begin
   Reply(112);
   NOption(114, MrHandyC03, 6);
   NOption(113, MrHandyC01, 4);
   if (local_var(LVAR_DECLINED_REPROGRAMMING) == 0) then begin
      NOption(139, MrHandyC10, 6);
   end
end

procedure MrHandyC03 begin
   Reply(115);
   NOption(116, MrHandyC01, 6);
   NOption(132, Node999, 4);
end

procedure MrHandyC04 begin
   Reply(125);
   NOption(126, MrHandyC05, 4);
   NOption(127, MrHandyC06, 4);
   NOption(132, MrHandyC15, 4);
end

procedure MrHandyC05 begin
   Reply(130);
   NOption(131, MrHandyC07, 4);
   NOption(132, MrHandyC15, 4);
end

procedure MrHandyC06 begin
   Reply(128);
   NOption(129, MrHandyC05, 4);
   NOption(132, MrHandyC15, 4);
end

procedure MrHandyC07 begin
   Reply(133);
   NOption(134, MrHandyC08, 4);
   NOption(132, MrHandyC15, 4);
end

procedure MrHandyC08 begin
   Reply(135);
   NOption(136, MrHandyC09, 4);
end

procedure MrHandyC09 begin
   Reply(137);

   if not(MrHandyC_In_Party) then begin
      NOption(138, MrHandyC02, 4);
      NOption(140, MrHandyC10, 4);
      NOption(141, MrHandyC02, 4);
   end

   if (MrHandyC_In_Party) then
      NOption(1030, Node999, 004);
end

procedure MrHandyC10 begin
   set_local_var(LVAR_DECLINED_REPROGRAMMING, 1);
   Reply(142);
   NOption(132, MrHandyC15, 4);
   if (global_var(GVAR_MR_HANDYC_HIRELING) == 1) then begin
      if dude_iq >= 7 then begin
         NOption(143, MrHandyC11, 7);
      end
      else
         NOption(143, MrHandyC11A, 4);
   end
   set_local_var(LVAR_DECLINED_REPROGRAMMING, 1);
end

procedure MrHandyC11 begin
   if is_success(roll_vs_skill(dude_obj, SKILL_SCIENCE, -30)) then begin
      Reply(144);
      NOption(136, MrHandyC13, 4);
   end
   else begin
      Reply(148);
      NOption(136, MrHandyC12, 4);
   end
end

procedure MrHandyC11A begin
   NMessage(152);
end

procedure MrHandyC12 begin
   BMessage(149);
   tmp_hostile := 1;
end

procedure MrHandyC13 begin
   Reply(145);
   NOption(146, MrHandyC14, 4);
end

procedure MrHandyC14 begin
   if dude_has_free_slot_for_handy then begin
      GMessage(147);
      set_global_var(GVAR_MR_HANDYC_HIRELING_STATUS, 1);
      set_self_team(TEAM_50);
      handy_joins_party;
   end
   else begin
      set_global_var(GVAR_MR_HANDYC_HIRELING_STATUS, 1);
      set_self_team(TEAM_50);
      set_party_waiting;

      Reply(2000);
      NOption(2010, Node999, 004);
   end
end

// Primary party node
procedure Node001 begin
   call GetDate;
   party_member_default_options;
end

procedure Node002 begin
   call GetDate;
   NOption(1040, Node003, 004);
   NOption(1060, Node999, 004);
end

// Handy rejoin:
procedure Node003 begin
   if dude_has_free_slot_for_handy then begin
      handy_joins_party;

      Reply(2002);
      NOption(1050, Node999, 004);
   end
   else begin
      Reply(2000);
      NOption(2010, Node999, 004);
   end
end

procedure GetDate begin
variable time1, time2, time3, time4;
variable time, date;
   time1 := floor(game_time_hour/1000);
   time2 := floor(game_time_hour/100)%10;
   time3 := floor(game_time_hour/10)%10;
   time4 := floor(game_time_hour%10);
   time := time1 + "" + time2 + ":" + time3 + "" + time4;
   date := get_month + "/" + get_day + "/" + get_year;

   Reply(mstr(1001) + time + " - " + date + ". " + mstr(1000));
end

procedure Node1001 begin
   // heal yourself
   obj_heal(self_obj)
   if (party_healed_max) then begin
      Reply(1100);
   end else if (party_healed_good) then begin
      Reply(1200);
   end else if (party_healed_hurt) then begin
      Reply(1300);
   end else begin
      Reply(1400);
   end
   party_member_default_options;
end

procedure Node1002 begin
   // wait here
   set_party_waiting;
   Reply(1501);
   party_member_default_options;
end

procedure Node1003 begin
   // put your weapon away
   inven_unwield(self_obj);
   Reply(1600);
   party_member_default_options;
end

procedure Node1004 begin
   // follow close
   set_follow_close;
   Reply(1700);
   party_member_default_options;
end

procedure Node1005 begin
   // follow medium
   set_follow_medium;
   Reply(1800);
   party_member_default_options;
end

procedure Node1006 begin
   // follow far
   set_follow_far;
   Reply(1900);
   party_member_default_options;
end

procedure Node1007 begin
   // distance
   Reply(1007);
   party_member_def_follow_options;
   flush_add_timer_event_sec(self_obj, 0, EVENT_CALIBRATE);
end

procedure Node1008 begin
   // gear
   Reply(1010);
   party_member_def_gear_options;
   flush_add_timer_event_sec(self_obj, 0, EVENT_CALIBRATE);
end

procedure Node1009 begin
   // remove armor
   remove_armor(self_obj)
   Reply(1009);
   party_member_default_options;
end

procedure Node1010 begin
   // weapons that can be used
   Reply(1011);
   party_member_default_options;
end

procedure Node1100 begin
   if (dude_at_max_party_size and not(fo1in2_party_limit_disabled))  then begin
      set_self_abandon_party;
      Reply(2000);
      NOption(g_mstr(10007), Node999, 004);
   end
   else begin
      end_party_waiting;
      Reply(2001);
      party_member_default_options;
   end
end

procedure Heal_Robo(variable bonus) begin
   if (local_var(LVAR_Heal_Count) < has_skill(source_obj, SKILL_SPEECH)) then begin
      if (skill_success(source_obj, SKILL_REPAIR, bonus)) then begin
         critter_heal(self_obj, Random(10, 40));
         set_local_var(LVAR_Heal_Count, local_var(LVAR_Heal_Count) + 50);
      end

      if (self_cur_hp != self_max_hp) then begin
         display_mstr(901);
      end else begin
         display_mstr(902);
      end
   end else begin
      display_mstr(900);
   end
end
