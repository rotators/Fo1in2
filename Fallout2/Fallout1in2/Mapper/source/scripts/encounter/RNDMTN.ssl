/*

   Random mountain encounter map

*/

#define NAME                    SCRIPT_RNDMTN

/* Include Files */
#include "voodoo.h"
#include "sfall/lib.arrays.h"

#include "define.h"
#include "command.h"

#include "updatmap.h"
#include "mapenc.h"
#include "cvgenenc.h"

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;

export variable random_seed_1;//FROM RNDDESRT
export variable random_seed_2;//FROM RNDDESRT
export variable random_seed_3;//FROM RNDDESRT

procedure choose_start;
procedure Patrick;

procedure Glow_table;//FROM RNDDESRT
procedure Glow1;//FROM RNDDESRT
procedure Glow2;//FROM RNDDESRT
procedure Glow3;//FROM RNDDESRT
procedure Glow4;//FROM RNDDESRT
procedure Glow5;//FROM RNDDESRT
procedure Glow6;//FROM RNDDESRT

procedure NORTH_table;
procedure NORTH1;
procedure NORTH2;
procedure NORTH3;
procedure NORTH4;
procedure NORTH5;
procedure NORTH6;

procedure South_table;
procedure South1;
procedure South2;
procedure South3;
procedure South4;
procedure South5;
procedure South6;

procedure Vats_table;//FROM RNDDESRT
procedure Vats1;//FROM RNDDESRT
procedure Vats2;//FROM RNDDESRT
procedure Vats3;//FROM RNDDESRT
procedure Vats4;//FROM RNDDESRT
procedure Vats5;//FROM RNDDESRT
procedure Vats6;//FROM RNDDESRT

procedure VAULT_table;// ---------------RNDMTN ONLY
procedure VAULT1;// ---------------RNDMTN ONLY
procedure VAULT2;// ---------------RNDMTN ONLY
procedure VAULT3;// ---------------RNDMTN ONLY
procedure VAULT4;// ---------------RNDMTN ONLY
procedure VAULT5;// ---------------RNDMTN ONLY
procedure VAULT6;// ---------------RNDMTN ONLY

#define EVENT_RADS   (1)

export variable signal_mutants;

variable rnd_critter;

procedure start begin
end

procedure roll_encounter begin
   Encounter_Num := random(1, 18);
   if (dude_luck > 8) then
      Encounter_Num := Encounter_Num + 2;
   else if (dude_luck > 7) then
      Encounter_Num := Encounter_Num + 1;
   else if (dude_luck < 3) then
      Encounter_Num := Encounter_Num - 1;

   if not(bounty_hunter_killed) and has_rep_childkiller and random(0, 1) then
      Encounter_Num := 7;
   else if (Encounter_Num <= 3) then
      Encounter_Num := 1;
   else if (Encounter_Num <= 5) then
      Encounter_Num := 2;
   else if (Encounter_Num <= 8) then
      Encounter_Num := 3;
   else if (Encounter_Num <= 12) then
      Encounter_Num := 4;
   else if (Encounter_Num <= 15) then
      Encounter_Num := 5;
   else
      Encounter_Num := 6;
end

procedure SpecialMapPos begin
   if CUR_MAP_CAVE1 then begin
      Area_List := [12666, 16067, 20266, 21888, 28901, 24506, 20326, 14300];
      Chest_List := [19929, 29304, 19863];
   end else if CUR_MAP_CAVE2 then begin
      Area_List := [24065, 26067, 18890, 18112, 19710, 25497];
      Chest_List := [18089, 17314, 27067];
      SceneryPos_List := [18913, 19510, 18490, 25268, 24275];
   end else if CUR_MAP_CAVE3 then begin
      Area_List := [19108, 19492, 20689];
      Chest_List := [21675, 18092, 17908];
   end else if CUR_MAP_CAVE4 then begin
      Area_List := [20896, 23902, 21320];
      Chest_List := [21491, 24301, 19697];
      SceneryPos_List := [21497, 24304, 24509, 22322, 22117, 21305, 21100];
   end else if CUR_MAP_CAVE5 then begin
      Area_List := [12666, 16067, 20265, 21888, 28901, 24506, 20326, 14899];
      Exit_List := [25318, 25306, 25896];
      Chest_List := [19929, 29304, 19863];
   end
   else if CUR_MAP_MINE1 then begin
      Area_List := [14514, 17899, 20707, 19889, 18271];
      Exit_List := [22527, 17112, 25309, 19888];
      Chest_List := [16498, 17268, 18887];
      SceneryPos_List := [14311, 14315, 14718, 17116, 17100, 17899, 20308, 20291, 20690, 18075, 17872, 18065, 18868, 20503];
   end
   else if CUR_MAP_MINE2 then begin
      Area_List := [22322, 22505, 18694, 17702, 15105, 21284, 19873, 17682, 14282];
      Exit_List := [11906, 20934, 24495, 16465, 14288, 16718, 21910, 20480];
      Chest_List := [13906, 19477, 12880];
      SceneryPos_List := [14505, 17502, 18494, 20102, 22322, 19882, 21484, 19671, 20477, 17482, 13882];
   end
   else if CUR_MAP_MINE3 then begin
      Area_List := [21474, 18895, 21111, 15505, 16881, 14691];
      Exit_List := [11906, 20934, 24495, 16465, 14288, 16718, 21910, 20480];
      Chest_List := [19682, 14708, 17122];
      SceneryPos_List := [15307, 17502, 17898, 18895, 19702, 22122, 17482, 19871, 21473, 22678];
   end
end

procedure LoadCritters begin
   variable tile, count, obj;
   baseElevation := 1;
   call Choose_Encounter;
   foreach i in Area_List begin
      AREABLK(i)
   end
end

procedure map_enter_p_proc begin
   set_cur_exit;

   if map_has_cavern then begin
      if (map_first_run and not(is_loading_game)) then begin
         if map_is_mine then
            display_msg(message_str(SCRIPT_SHADYWST, 202));
         else
            display_msg(message_str(SCRIPT_SHADYWST, 200));
         call SpecialMapPos;
         call LoadScenery;
         if Exit_List > 0 then call LoadExitScenery;
         if special_spawn_critters then call LoadCritters;
         if special_spawn_container then call LoadChests;

         if cave_is_toxic then
            add_timer_event(self_obj, game_ticks(random(5, 10)), EVENT_RADS);
      end
   end

   if (dude_elevation == 1) then begin
      Darkness;
      if (map_first_run) then
         display_msg(message_str(SCRIPT_SHADYWST, 201));
   end
   else if (dude_elevation == 0) then begin
      Lighting;
      dude_rot := random(0, 5);
      set_global_var(GVAR_MERCS_RANDOM_ENC_unsure, 0);
      if (map_first_run) and not(is_loading_game) then begin
         Ranger_rerolls := dude_perk(PERK_ranger);
         set_global_var(GVAR_AGGRO_FLAG_RND_ENC_unsure, 0);

         while (Encounter_Num == 0) do begin
            call roll_encounter;
            if (global_var(GVAR_WORLDMAP_TABLE) == 2) then
               call North_table;
            else if (global_var(GVAR_WORLDMAP_TABLE) == 3) then
               call South_table;
            else if (global_var(GVAR_WORLDMAP_TABLE) == 11) then
               call Vats_table;
            else if (global_var(GVAR_WORLDMAP_TABLE) == 12) then
               call Glow_table;
            else
               call Vault_table;
         end
      end
   end
end

procedure map_update_p_proc begin
   if (dude_elevation == 1) then
      Darkness;
   else
      Lighting;

   // For some reason HRP black borders make problems in cavern maps when coming back from cave to overworld.
   // Force-refresh window redraw because of this.
   if map_has_cavern then
      VOODOO_display_win_redraw;
end

procedure map_exit_p_proc begin
   set_car_exit_map
end

procedure timed_event_p_proc begin
   if (fixed_param == EVENT_RADS) then begin
      if (dude_elevation == 1) then
         radiation_inc(dude_obj, random(1, 4));
      add_timer_event(self_obj, game_ticks(random(5, 10)), EVENT_RADS);
   end
end

procedure Place_critter begin
   variable Facing := 0;
   variable Distance := 0;
   variable Ring := 0;
   Critter := create_object_sid(Critter_type, 0, 0, Critter_script);
   Ring := random(Inner_ring, Outer_ring);
   Facing := random(0, 5);
   Critter_tile := tile_num_in_direction(Critter_spawn_hex, Critter_direction, Ring);
   Distance := tile_num_in_direction(Critter_tile, Facing, (Ring / 2));
   if ((tile_distance(Critter_spawn_hex, Distance) <= Outer_ring) and (tile_distance(Critter_spawn_hex, Distance) >= Inner_ring)) then begin
      Critter_tile := tile_num_in_direction(Critter_tile, Facing, (Ring / 2));
   end
   critter_attempt_placement(Critter, Critter_tile, dude_elevation);
end

procedure choose_start begin
   if (global_var(GVAR_WORLDMAP_TABLE) == 2) then begin
      if (Encounter_Num == 1) then begin
         override_map_start(99, 87, 0, 2);
      end
      else if (Encounter_Num == 6) then begin
         override_map_start(81, 88, 0, 2);
      end
      else begin
         override_map_start(88, 93, 0, dude_rot);
      end
   end
   else if (global_var(GVAR_WORLDMAP_TABLE) == 3) then begin
      if (Encounter_Num == 1) then begin
         override_map_start(99, 87, 0, 2);
      end
      else if (Encounter_Num == 5) then begin
         override_map_start(82, 95, 0, 2);
      end
      else if (Encounter_Num == 6) then begin
         override_map_start(81, 88, 0, 2);
      end
      else begin
         override_map_start(88, 93, 0, dude_rot);
      end
   end
   else begin
      if (Encounter_Num == 5) then begin
         override_map_start(92, 93, 0, 2);
      end
      else if (Encounter_Num == 6) then begin
         override_map_start(92, 93, 0, 2);
      end
      else begin
         override_map_start(88, 93, 0, dude_rot);
      end
   end
   Critter_spawn_hex := dude_tile;
end

procedure Patrick begin
   variable Patrick := 0;

   display_msg(message_str(SCRIPT_RNDMTN, 121));

   Patrick := create_object_sid(PID_LEATHER_ARMOR_MALE, 0, 0, SCRIPT_PATRICK);
   critter_attempt_placement(Patrick, Critter_spawn_hex - 4, 0);
   obj_rotate(Patrick, rotation_to_tile(tile_num(Patrick), dude_tile));
   CritterXpos := (Critter_spawn_hex % 200) - 4;
   CritterYpos := Critter_spawn_hex / 200;
   Critter := create_object(PID_RUG_3, 0, 0);
   critter_attempt_placement(Critter, (CritterYpos * 200) + (CritterXpos - 3), 0);
   Critter := create_object(PID_CART, 0, 0);
   critter_attempt_placement(Critter, ((CritterYpos - 1) * 200) + (CritterXpos - 3), 0);
   Critter := create_object(PID_POT, 0, 0);
   critter_attempt_placement(Critter, ((CritterYpos + 1) * 200) + (CritterXpos - 3), 0);
   Critter := create_object(PID_CONTAINER_WOOD_CRATE, 0, 0);
   critter_attempt_placement(Critter, (CritterYpos * 200) + (CritterXpos - 2), 0);
   item_caps_adjust(Critter, fortune_finder(random(2, 6)));
   if (random(0, 1)) then begin
      Item := create_object(PID_IGUANA_ON_A_STICK, 0, 0);
      add_obj_to_inven(Critter, Item);
   end

   Critter := create_object(PID_CHAIR, 0, 0);
   critter_attempt_placement(Critter, (CritterYpos * 200) + (CritterXpos - 4), 0);
   Critter := create_object(PID_TRASH_3, 0, 0);
   critter_attempt_placement(Critter, ((CritterYpos + 1) * 200) + (CritterXpos - 2), 0);
   Critter := create_object(PID_CONTAINER_WOOD_CRATE, 0, 0);
   critter_attempt_placement(Critter, ((CritterYpos - 2) * 200) + (CritterXpos - 2), 0);
   Item := create_object(PID_NUKA_COLA, 0, 0);
   add_mult_objs_to_inven(Critter, Item, random(1, 2));
   Item := create_object(PID_BEER, 0, 0);
   add_mult_objs_to_inven(Critter, Item, random(1, 2));
   Critter := create_object(PID_TRASH_2, 0, 0);
   critter_attempt_placement(Critter, ((CritterYpos - 1) * 200) + (CritterXpos - 5), 0);
   if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
      Critter := create_object(PID_FIRE_PIT, 0, 0);
      critter_attempt_placement(Critter, ((CritterYpos + 4) * 200) + (CritterXpos - 2), 0);
      Critter := create_object(PID_BED_1, 0, 0);
      critter_attempt_placement(Critter, ((CritterYpos + 4) * 200) + (CritterXpos - 4), 0);
      Critter := create_object(PID_BEER, 0, 0);
      critter_attempt_placement(Critter, ((CritterYpos + 5) * 200) + (CritterXpos - 1), 0);
   end
   else begin
      Critter := create_object(PID_ROCKS_6, 0, 0);
      critter_attempt_placement(Critter, ((CritterYpos + 4) * 200) + (CritterXpos - 2), 0);
      Critter := create_object(PID_ROCKS_7, 0, 0);
      critter_attempt_placement(Critter, ((CritterYpos + 4) * 200) + (CritterXpos - 1), 0);
      Critter := create_object(PID_ROCKS_8, 0, 0);
      critter_attempt_placement(Critter, ((CritterYpos + 4) * 200) + (CritterXpos - 3), 0);
      Critter := create_object(PID_ROCKS_15, 0, 0);
      critter_attempt_placement(Critter, ((CritterYpos + 3) * 200) + (CritterXpos - 2), 0);
   end
   Critter := create_object(PID_CONTAINER_WOOD_CRATE, 0, 0);
   critter_attempt_placement(Critter, ((CritterYpos - 2) * 200) + (CritterXpos - 4), 0);

   Item := create_object(PID_DESERT_EAGLE, 0, 0);
   add_obj_to_inven(Patrick, Item);
   wield_obj_critter(Patrick, Item);

   Item := create_object(PID_44_MAGNUM_JHP, 0, 0);
   add_obj_to_inven(Patrick, Item);
   if (dude_perk(PERK_scrounger)) then begin
      Item := create_object(PID_10MM_AP, 0, 0);
      add_obj_to_inven(Patrick, Item);
   end

   Item := create_object(PID_LEATHER_ARMOR, 0, 0);
   add_obj_to_inven(Patrick, Item);
   wield_obj_critter(Patrick, Item);

   item_caps_adjust(Patrick, fortune_finder(random(25, 50)));
   call give_item(Patrick, {PID_KNIFE: 1, PID_CROWBAR: 1, PID_THROWING_KNIFE: 1, PID_BAG: 1, PID_FLARE: 1, PID_MULTI_TOOL: 1, PID_SUPER_STIMPAK: 1});
end

procedure NORTH_table begin
   ranger_perk_reroll_enc(1, 2, 4, 6, 7);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end

   if (Encounter_Num) then begin
      call choose_start;
      if (Encounter_Num == 1) then begin
         call NORTH1;
      end
      else if (Encounter_Num == 2) then begin
         call NORTH2;
      end
      else if (Encounter_Num == 3) then begin
         call NORTH3;
      end
      else if (Encounter_Num == 4) then begin
         call NORTH4;
      end
      else if (Encounter_Num == 5) then begin
         call NORTH5;
      end
      else if (Encounter_Num == 6) then begin
         call NORTH6;
      end
      else begin
         call hunters;
      end
   end
end

procedure South_table begin
   if ((Encounter_Num == 4) and (global_var(GVAR_RANDOM_ENC_SOMETHING) != 0)) then begin
      Encounter_Num := 5;
   end
   ranger_perk_reroll_enc(1, 2, 5, 6, 7);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING)) then begin
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
      debug_msg("Southern Mountain encounter type: " + Encounter_Num);
   end

   if (Encounter_Num) then begin
      call choose_start;
      if (Encounter_Num == 1) then begin
         call South1;
      end
      else if (Encounter_Num == 2) then begin
         call South2;
      end
      else if (Encounter_Num == 3) then begin
         call South3;
      end
      else if (Encounter_Num == 4) then begin
         call South4;
      end
      else if (Encounter_Num == 5) then begin
         call South5;
      end
      else if (Encounter_Num == 6) then begin
         call South6;
      end
      else begin
         call hunters;
      end
   end
end

procedure Vats_table begin
   ranger_perk_reroll_enc(1, 2, 3, 4, 7);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end

   if (Encounter_Num) then begin
      if debug_mode then begin
         debug_msg(" ");    display_msg("Mountain VATS loading Encounter_Num == " + Encounter_Num + " ");    debug_msg(" ");  debug_msg(" ");  debug_msg(" ");
      end
      call choose_start;
      if (Encounter_Num == 1) then begin
         call Vats1;
      end
      else if (Encounter_Num == 2) then begin
         call Vats2;
      end
      else if (Encounter_Num == 3) then begin
         call Vats3;
      end
      else if (Encounter_Num == 4) then begin
         call Vats4;
      end
      else if (Encounter_Num == 5) then begin
         call Vats5;
      end
      else if (Encounter_Num == 6) then begin
         call Vats6;
      end
      else begin
         call hunters;
      end
   end
end

procedure Glow_table begin
   ranger_perk_reroll_enc(1, 3, 4, 5, 7);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end

   if (Encounter_Num) then begin
      call choose_start;
      if (Encounter_Num == 1) then begin
         call Glow1;
      end
      else if (Encounter_Num == 2) then begin
         call Glow2;
      end
      else if (Encounter_Num == 3) then begin
         call Glow3;
      end
      else if (Encounter_Num == 4) then begin
         call Glow4;
      end
      else if (Encounter_Num == 5) then begin
         call Glow5;
      end
      else if (Encounter_Num == 6) then begin
         call Glow6;
      end
      else begin
         call hunters;
      end
   end
end

procedure Vats1 begin
   debug("vats1");
   display_msg(message_str(SCRIPT_RNDDESRT, 253));
   radiation_inc(dude_obj, random(15, 30));
   Tot_Critter_A := random(3, 4);
   Tot_Critter_B := 1;
   Outer_ring := (dude_perception / 3) + 4;
   Inner_ring := (dude_perception / 3) + 2;

   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      if (random(0, 1) == 1) then begin
         if (random(0, 3) == 0) then begin
            Item := create_object(PID_FLAMER, 0, 0);
         end
         else begin
            Item := create_object(PID_MINIGUN, 0, 0);
         end
      end
      else begin
         Item := create_object(PID_SPIKED_KNUCKLES, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_NIGHTKIN;
   Critter_script := SCRIPT_SUPAMBSH;
   while(Tot_Critter_B) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Item := create_object(PID_MINIGUN, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_5MM_JHP, 0, 0);
      add_obj_to_inven(Critter, Item);
      Tot_Critter_B := Tot_Critter_B - 1;
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Vats2 begin
   debug("vats2");

   // Fo1in2 - Fire Geckos:
   if fo1in2_fo2_critters_enabled and (random(0, 1) == 1) then begin
      display_msg(message_str(SCRIPT_RNDDESRT, 291));
      Tot_Critter_A := random(2, 5);
      Outer_ring := (dude_perception / 3) + 4;
      Inner_ring := (dude_perception / 3) + 2;

      Critter_type := PID_FIRE_GECKO;
      Critter_script := SCRIPT_ECGECKO;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 4);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   // Vanilla:
   else begin
      display_msg(message_str(SCRIPT_RNDDESRT, 254));
      if (random(0, 1)) then begin
         Critter_type := PID_CENTAUR_LESSER;
         Critter_script := SCRIPT_FLOATER;
      end
      else begin
         Critter_type := PID_FLOATER;
         Critter_script := SCRIPT_FLOATER;
      end
      Tot_Critter_A := random(3, 5);
      Outer_ring := (dude_perception / 3) + 4;
      Inner_ring := (dude_perception / 3) + 2;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 2);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Vats3 begin
   debug("vats3");
   display_msg(message_str(SCRIPT_RNDDESRT, 306));

   // Fo1in2 - Golden Geckos:
   if fo1in2_fo2_critters_enabled and (random(0, 1) == 1) then begin
      display_msg(message_str(SCRIPT_RNDDESRT, 401));
      Tot_Critter_A := random(3, 6);
      Outer_ring := (dude_perception / 3) + 4;
      Inner_ring := (dude_perception / 3) + 2;

      Critter_type := PID_GOLDEN_GECKO;
      Critter_script := SCRIPT_ECGECKO;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 4);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   // Vanilla:
   else begin
      Tot_Critter_A := random(1, 2);
      Outer_ring := (dude_perception / 3) + 4;
      Inner_ring := (dude_perception / 3) + 2;

      Critter_type := PID_FLOATER;
      Critter_script := SCRIPT_FLOATER;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 2);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end

      Critter_type := PID_CENTAUR_LESSER;
      Critter_script := SCRIPT_FLOATER;
      Tot_Critter_A := 1;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 2);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
      Outer_ring := (dude_perception / 2) + 3;
      Inner_ring := (dude_perception / 2) + 2;
      Tot_Critter_A := random(2, 3);

      Critter_type := PID_MEAN_SUPER_MUTANT;
      Critter_script := SCRIPT_MUTAMBSH;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 2);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end

      Critter_type := PID_NIGHTKIN;
      Critter_script := SCRIPT_SUPAMBSH;
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Item := create_object(PID_LASER_RIFLE, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 2);
      if (not(dude_item_count(PID_RADIO))) then begin
         Item := create_object(PID_RADIO, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Vats4 begin
   debug("vats4");

   // Fo1in2:
   if (random(0, 1) == 1) then begin
      display_msg(message_str(SCRIPT_RNDDESRT, 313));
      Tot_Critter_A := random(4, 6);
      if (day) then begin
         Outer_ring := 6;
         Inner_ring := 3;
      end
      else begin
         Outer_ring := 4;
         Inner_ring := 3;
      end
      Critter_type := PID_MANTIS;
      Critter_script := SCRIPT_MANTIS;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 5);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end

   end

   // Vanilla:
   else begin
      display_msg(message_str(SCRIPT_RNDDESRT, 256));
      Tot_Critter_A := random(1, 2);
      Outer_ring := (dude_perception / 2) + 4;
      Inner_ring := (dude_perception / 2) + 2;

      Critter_type := PID_MEAN_SUPER_MUTANT;
      Critter_script := SCRIPT_MUTAMBSH;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 2);
         call Place_critter;
         obj_rotate(Critter, random(3, 4));
         if (random(0, 1) == 1) then begin
            if (random(0, 1) == 1) then begin
               Item := create_object(PID_FLAMER, 0, 0);
            end
            else begin
               Item := create_object(PID_MINIGUN, 0, 0);
            end
         end
         else begin
            Item := create_object(PID_SPIKED_KNUCKLES, 0, 0);
         end
         add_obj_to_inven(Critter, Item);
         Tot_Critter_A := Tot_Critter_A - 1;
      end

      Critter_type := PID_NIGHTKIN;
      Critter_script := SCRIPT_SUPAMBSH;
      Tot_Critter_B := 1;
      while(Tot_Critter_B) do begin
         Critter_direction := random(0, 2);
         call Place_critter;
         obj_rotate(Critter, random(3, 4));
         Item := create_object(PID_MINIGUN, 0, 0);
         add_obj_to_inven(Critter, Item);
         Item := create_object(PID_5MM_JHP, 0, 0);
         add_obj_to_inven(Critter, Item);
         Tot_Critter_B := Tot_Critter_B - 1;
      end
      Outer_ring := (dude_perception / 3) + 4;
      Inner_ring := (dude_perception / 3) + 2;

      Critter_type := PID_FLOATER;
      Critter_script := SCRIPT_FLOATER;
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, random(3, 4));
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Vats5 begin
   debug("vats5");

   // Fo1in2 - Fire Geckos:
   if fo1in2_fo2_critters_enabled and ((random(0, 1) == 1) or military_base_destroyed) then begin
      display_msg(message_str(SCRIPT_RNDDESRT, 291));
      Tot_Critter_A := random(2, 4);
      Outer_ring := (dude_perception / 3) + 4;
      Inner_ring := (dude_perception / 3) + 2;

      Critter_type := PID_FIRE_GECKO;
      Critter_script := SCRIPT_ECGECKO;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 4);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   // Vanilla:
   else begin
      display_msg(message_str(SCRIPT_RNDDESRT, 306));

      Tot_Critter_A := random(1, 2);
      Outer_ring := (dude_perception / 3) + 4;
      Inner_ring := (dude_perception / 3) + 2;

      Critter_type := PID_FLOATER;
      Critter_script := SCRIPT_FLOATER;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 2);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end

      Critter_type := PID_CENTAUR_LESSER;
      Critter_script := SCRIPT_FLOATER;
      Tot_Critter_A := 1;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 2);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
      Outer_ring := (dude_perception / 2) + 3;
      Inner_ring := (dude_perception / 2) + 2;
      Tot_Critter_A := random(2, 3);

      Critter_type := PID_MEAN_SUPER_MUTANT;
      Critter_script := SCRIPT_MUTAMBSH;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 2);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end

      Critter_type := PID_NIGHTKIN;
      Critter_script := SCRIPT_SUPAMBSH;
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Item := create_object(PID_LASER_RIFLE, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 2);
      if (not(dude_item_count(PID_RADIO))) then begin
         Item := create_object(PID_RADIO, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Vats6 begin
   debug("vats6");
   display_msg(message_str(SCRIPT_RNDDESRT, 279));

   Item := create_object(PID_POT, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(8, 10)), 0);
   Item := create_object(PID_BOXES_2, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(5, 9)), 0);
   Item := create_object(PID_BOXES_3, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(5, 9)), 0);
   Item := create_object(PID_TRASH_CAN, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(5, 9)), 0);
   Item := create_object(PID_CHAIR, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(5, 9)), 0);
   if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
      Item := create_object(PID_BURNING_BARREL, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(8, 10)), 0);
      if (random(0, 1)) then begin
         Item := create_object(PID_BURNING_BARREL, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(8, 10)), 0);
      end
   end
   Outer_ring := (dude_perception / 2) + 3;
   Inner_ring := (dude_perception / 2) + 2;
   group_angle := random(0, 5);

   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   Tot_Critter_A := random(2, 3);
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_NIGHTKIN;
   Critter_script := SCRIPT_SUPAMBSH;
   Critter_direction := random(0, 2);
   Critter_direction := group_angle + (random(0, 2) - 1);
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   Item := create_object(PID_MINIGUN, 0, 0);
   add_obj_to_inven(Critter, Item);
   Item := create_object(PID_5MM_JHP, 0, 0);
   add_obj_to_inven(Critter, Item);
   Outer_ring := (dude_perception / 3) + 4;
   Inner_ring := (dude_perception / 3) + 2;
   Critter_type := PID_FLOATER;
   Critter_script := SCRIPT_FLOATER;
   Tot_Critter_A := 2;

   enc_group_angle(group_angle)

   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Glow1 begin
   variable LVar0 := 3;

   debug("Glow1");
   display_msg(message_str(SCRIPT_RNDDESRT, 280));
   radiation_inc(dude_obj, random(30, 60));
   Tot_Critter_A := random(2, 3);
   Outer_ring := (dude_perception / 2) + 3;
   Inner_ring := (dude_perception / 2) + 2;

   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 5);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   if (random(0, 1)) then begin
      Critter_type := PID_NIGHTKIN;
      Critter_script := SCRIPT_SUPAMBSH;
      Critter_direction := random(0, 5);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Item := create_object(PID_LASER_RIFLE, 0, 0);
      add_obj_to_inven(Critter, Item);
      if (dude_perk(PERK_scrounger)) then begin
         LVar0 := 5;
      end
      while(LVar0) do begin
         Item := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
         add_obj_to_inven(Critter, Item);
         LVar0 := LVar0 - 1;
      end
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Glow2 begin
   variable LVar0 := 0;

   debug("Glow2");
   display_msg(message_str(SCRIPT_RNDDESRT, 281));
   radiation_inc(dude_obj, random(30, 60));
   LVar0 := game_time_hour;
   Tot_Critter_A := random(3, 5);
   if ((LVar0 > 600) and (LVar0 < 1900)) then begin
      Outer_ring := (dude_perception / 3) + 4;
      Inner_ring := (dude_perception / 3) + 2;
   end
   else begin
      Outer_ring := (dude_perception / 3) + 2;
      Inner_ring := (dude_perception / 3) + 2;
   end

   Critter_type := PID_FLOATER;
   Critter_script := SCRIPT_FLOATER;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 5);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   if (random(0, 1)) then begin
      Critter_direction := random(0, 4);
      Critter_type := PID_CENTAUR_LESSER;
      Critter_script := SCRIPT_FLOATER;
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Glow3 begin
   debug("Glow3");
   radiation_inc(dude_obj, random(30, 60));

   // Fo1in2 - Fire Geckos:
   if fo1in2_fo2_critters_enabled and (random(0, 1) == 1) then begin
      display_msg(message_str(SCRIPT_RNDDESRT, 289));
      Tot_Critter_A := random(2, 5);
      Outer_ring := (dude_perception / 2) + 4;
      Inner_ring := (dude_perception / 2) + 2;

      Critter_type := PID_FIRE_GECKO;
      Critter_script := SCRIPT_ECGECKO;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 4);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   // Vanilla:
   else begin
      display_msg(message_str(SCRIPT_RNDDESRT, 282));
      Tot_Critter_A := random(4, 8);
      Outer_ring := (dude_perception / 2) + 4;
      Inner_ring := (dude_perception / 2) + 2;

      Critter_type := PID_RADSCORPION;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 4);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Glow4 begin
   debug("Glow4");

   display_msg(message_str(SCRIPT_RNDDESRT, 283));
   Outer_ring := (dude_perception / 3) + 4;
   Inner_ring := (dude_perception / 3) + 2;

   Critter_type := PID_FLOATER;
   Critter_script := SCRIPT_FLOATER;
   Tot_Critter_A := 1;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   radiation_inc(dude_obj, random(30, 60));
end

procedure Glow5 begin
   debug("Glow5");

   display_msg(message_str(SCRIPT_RNDDESRT, 284));
   radiation_inc(dude_obj, random(30, 60));

   Outer_ring := (dude_perception / 3) + 4;
   Inner_ring := (dude_perception / 3) + 2;

   group_angle := random(0, 5);
   Tot_Critter_A := 1 + random(0, 1);

   Critter_type := PID_FLOATER;
   Critter_script := SCRIPT_FLOATER;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   if (random(0, 1)) then begin
      Critter_type := PID_CENTAUR_LESSER;
      Critter_script := SCRIPT_FLOATER;
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      enc_group_angle(Critter_direction)
      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
   end
end

procedure Glow6 begin
   debug("Glow6");
   radiation_inc(dude_obj, random(30, 60));

   // Fo1in2 - Fire Geckos:
   if fo1in2_fo2_critters_enabled and (random(0, 1) == 1) then begin
      display_msg(message_str(SCRIPT_RNDDESRT, 289));
      radiation_inc(dude_obj, random(30, 60));
      Tot_Critter_A := random(2, 4);
      Outer_ring := (dude_perception / 2) + 4;
      Inner_ring := (dude_perception / 2) + 2;

      Critter_type := PID_FIRE_GECKO;
      Critter_script := SCRIPT_ECGECKO;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 4);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   // Vanilla:
   else begin
      display_msg(message_str(SCRIPT_RNDDESRT, 285));
      Outer_ring := (dude_perception / 3) + 4;
      Inner_ring := (dude_perception / 3) + 2;

      Critter_type := PID_CENTAUR_LESSER;
      Critter_script := SCRIPT_FLOATER;
      Critter_direction := random(2, 5);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      if (random(0, 1)) then begin
         Critter_type := PID_FLOATER;
         Critter_script := SCRIPT_FLOATER;
         Critter_direction := random(1, 4);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      end
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure VAULT_table begin
   ranger_perk_reroll_enc(1, 3, 5, 6, 7);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end

   if (Encounter_Num) then begin
      call choose_start;
      if (Encounter_Num == 1) then begin
         call VAULT1;
      end
      else if (Encounter_Num == 2) then begin
         call VAULT2;
      end
      else if (Encounter_Num == 3) then begin
         call VAULT3;
      end
      else if (Encounter_Num == 4) then begin
         call VAULT4;
      end
      else if (Encounter_Num == 5) then begin
         call VAULT5;
      end
      else if (Encounter_Num == 6) then begin
         call VAULT6;
      end
      else begin
         call hunters;
      end
   end
end

procedure NORTH1 begin
   if fo1in2_fluff_enc_disabled then begin
      call NORTH2;
   end
   else begin
      variable LVar0 := 0;//mainroll
      variable LVar1 := 0;//dmghp
      variable LVar2 := 0;//

      display_msg(message_str(SCRIPT_RNDMTN, 114));
      LVar0 := roll_vs_skill(dude_obj, SKILL_OUTDOORSMAN, ((20 * dude_perk(PERK_survivalist)) - (5 * dude_perception) ));
      if (not(is_success(LVar0))) then begin
         if ((random(1, 100) >= 95) or is_critical(LVar0)) then begin
            display_msg(message_str(SCRIPT_RNDMTN, 118));
            LVar1 := (random(7, 20) + 3);
            LVar2 := dude_cur_hp;
            if (LVar1 >= LVar2) then begin
               LVar1 := (LVar2 - 1);
            end

            reg_anim_clear(dude_obj);
            reg_anim_begin();
               reg_anim_animate(dude_obj, ANIM_fall_back_sf, -1);
               reg_anim_animate(dude_obj, ANIM_back_to_standing, -1);
            reg_anim_end();

            critter_heal(dude_obj, -LVar1);
            critter_injure(dude_obj, DAM_CRIP_LEG_LEFT);
            critter_injure(dude_obj, DAM_CRIP_LEG_RIGHT);
            critter_injure(dude_obj, DAM_CRIP_ARM_LEFT);
            critter_injure(dude_obj, DAM_CRIP_ARM_RIGHT);
            //display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 141));
            display_msg(message_str(SCRIPT_RNDMTN, 147));
         end
         else begin
            display_msg(message_str(SCRIPT_RNDMTN, 117));
            LVar1 := random(4, 16);
            LVar2 := dude_cur_hp;
            if (LVar1 >= LVar2) then begin
               LVar1 := (LVar2 - 1);
            end

            reg_anim_clear(dude_obj);
            reg_anim_begin();
               reg_anim_animate(dude_obj, ANIM_fall_back_sf, -1);
               reg_anim_animate(dude_obj, ANIM_back_to_standing, -1);
            reg_anim_end();

            critter_heal(dude_obj, -LVar1);
            display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 141));
            if (random(0, 3) == 0) then begin
               critter_injure(dude_obj, DAM_CRIP_LEG_LEFT);
               display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 139));
            end
            else begin
               critter_injure(dude_obj, DAM_CRIP_LEG_RIGHT);
               display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 140));
            end
         end
      end
      else begin
         display_msg(message_str(SCRIPT_RNDMTN, 115));
         if (is_critical(LVar0)) then begin
            display_msg(message_str(SCRIPT_RNDMTN, 116));
            critter_heal(dude_obj, random(5, 15));
         end
      end

   end
end

procedure NORTH2 begin
   // Fo1in2, Gecko encounter
   if fo1in2_fo2_critters_enabled and (random(0, 1) == 2) then begin
      display_msg(message_str(SCRIPT_RNDMTN, 200));
      Tot_Critter_A := random(2, 4);
      Outer_ring := 8;
      Inner_ring := 6;
      Critter_type := PID_GECKO;
      Critter_script := SCRIPT_ECGECKO;
      group_angle := random(0, 3);
      if (group_angle == 3) then begin
         group_angle := 4;
      end
      if (group_angle == 2) then begin
         group_angle := 4;
      end
      while(Tot_Critter_A) do begin
         Critter_direction := group_angle;
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   // Vanilla encounter:
   else begin
      display_msg(message_str(SCRIPT_RNDMTN, 105));
      Tot_Critter_A := random(2, 3);
      if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
         Outer_ring := 5;
         Inner_ring := 3;
      end
      else begin
         Outer_ring := 8;
         Inner_ring := 6;
      end
      Critter_type := PID_RADSCORPION;
      Critter_script := SCRIPT_RADSCORP;
      group_angle := random(0, 3);
      if (group_angle == 3) then begin
         group_angle := 4;
      end
      if (group_angle == 2) then begin
         group_angle := 4;
      end
      while(Tot_Critter_A) do begin
         Critter_direction := group_angle;
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end
   call Add_Mysterious_Stranger;
end

procedure NORTH3 begin
   if (global_var(GVAR_IS_PATRICK_DEAD) == 0) then begin
      call Patrick;
   end
   else begin
      if (random(0, 2) == 1) then
         call NORTH1;
      else
         call NORTH2;
   end
end

procedure NORTH4 begin
   variable LVar0 := 0;
   variable rnd_bush := 0;
   variable rnd_tile := 0;
   variable bush_pid := 0;

   // Fo1in2, Spore plants encounter
   if fo1in2_fo2_critters_enabled and (random(0, 6) == 1) then begin
      display_msg(message_str(SCRIPT_RNDMTN, 203));
      Tot_Critter_A := random(3, 7);
      Outer_ring := 6;
      Inner_ring := 3;

      Critter_type := PID_SPORE_PLANT;
      Critter_script := SCRIPT_ECPLANT;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 4);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;

         // Add some greenery:
         rnd_bush := random(0, 5);
         while(rnd_bush) do begin
            rnd_tile := tile_num_in_direction(tile_num(Critter), random(0, 5), random(1, 8));
            if (tile_is_blocked(rnd_tile, dude_elevation) == false) then begin
               bush_pid := random(PID_BUSH_GREEN_1, PID_BUSH_GREEN_2);
               create_object(bush_pid, rnd_tile, dude_elevation);
               rnd_bush := rnd_bush - 1;
            end
         end
      end

      // Create Mantis
      if (random(1, 3) == 1) then begin
         Tot_Critter_A := random(4, 6);
         if (day) then begin
            Outer_ring := 6;
            Inner_ring := 4;
         end
         else begin
            Outer_ring := 4;
            Inner_ring := 3;
         end

         Critter_type := PID_MANTIS;
         Critter_script := SCRIPT_MANTIS;
         while(Tot_Critter_A) do begin
            Critter_direction := random(0, 5);
            call Place_critter;
            obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
            Tot_Critter_A := Tot_Critter_A - 1;
         end
      end
   end

   // Vanilla:
   else begin
      LVar0 := roll_vs_skill(dude_obj, SKILL_OUTDOORSMAN, 20 * dude_perk(PERK_survivalist));
      if (is_success(LVar0)) then begin
         display_msg(message_str(SCRIPT_RNDMTN, 106));
         Outer_ring := (dude_perception / 2) + 2;
         Inner_ring := (dude_perception / 2) + 1;
      end
      else begin
         display_msg(message_str(SCRIPT_RNDMTN, 107));
         Outer_ring := 2;
         Inner_ring := 1;
      end
      Critter_direction := dude_rot;
      if (random(0, 1) == 1) then
         Critter_type := PID_SMALL_RADSCORPION; // Fo1in2 addition
      else
         Critter_type := PID_RADSCORPION;
      Critter_script := SCRIPT_RADSCORP;
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   end
end

procedure NORTH5 begin
   variable LVar0 := 1;

   // Fo1in2, Gecko encounter
   if fo1in2_fo2_critters_enabled and (random(0, 1) == 2) then begin
      display_msg(message_str(SCRIPT_RNDMTN, 200));
      Tot_Critter_A := random(2, 6);
      Outer_ring := 8;
      Inner_ring := 6;
      Critter_type := PID_GECKO;
      Critter_script := SCRIPT_ECGECKO;
      group_angle := random(0, 3);
      if (group_angle == 3) then begin
         group_angle := 4;
      end
      if (group_angle == 2) then begin
         group_angle := 4;
      end
      while(Tot_Critter_A) do begin
         Critter_direction := group_angle;
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   // Vanilla encounter:
   else begin
      display_msg(message_str(SCRIPT_RNDMTN, 108));
      Tot_Critter_A := random(2, 4);
      Outer_ring := 5;
      Inner_ring := 3;
      Critter_script := SCRIPT_WANRATS;
      while(Tot_Critter_A) do begin
         if (random(0, 4) == 4) then begin
            Critter_type := PID_GREATER_MOLE_RAT;
         end
         else begin
            Critter_type := PID_LESSER_MOLE_RAT;
         end
         Critter_direction := random(0, 2);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         if (LVar0) then begin
            LVar0 := random(2, 4);
            while(LVar0) do begin
               Item := create_object(PID_MUTATED_FRUIT, tile_num_in_direction(tile_num(Critter), random(0, 5), random(2, 4)), 0);
               LVar0 := LVar0 - 1;
            end
            LVar0 := 0;
         end
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end
   call Add_Mysterious_Stranger;
end

procedure NORTH6 begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   variable LVar2 := 0;

   display_msg(message_str(SCRIPT_RNDMTN, 100));
   Tot_Critter_A := 8;
   while(Tot_Critter_A) do begin
      LVar0 := random(0, 5);
      if (LVar0 == 4) then begin
         LVar1 := PID_ROCKS_13;
      end
      else begin
         if (LVar0 == 5) then begin
            LVar1 := PID_ROCKS_13 + 1;
         end
         else begin
            LVar1 := PID_ROCKS_15;
         end
      end
      LVar0 := random(0, 5);
      if ((LVar0 == 5) or (LVar0 == 0)) then begin
         Item := create_object(LVar1, tile_num_in_direction(dude_tile + random(0, 8) - 4, LVar0, random(1, 6)), 0);
      end
      else begin
         Item := create_object(LVar1, tile_num_in_direction(dude_tile + random(0, 8) - 4, LVar0, random(1, 9)), 0);
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   Tot_Critter_A := 10;
   while(Tot_Critter_A) do begin
      LVar1 := random(0, 3);
      if (LVar1 == 3) then begin
         LVar1 := 6;
      end
      LVar0 := random(0, 5);
      if ((LVar0 == 5) or (LVar0 == 0)) then begin
         Item := create_object(33554861 + LVar1, tile_num_in_direction(dude_tile + random(0, 4) - 2, LVar0, random(1, 6)), 0);
      end
      else begin
         Item := create_object(33554861 + LVar1, tile_num_in_direction(dude_tile + random(0, 4) - 2, LVar0, random(1, 9)), 0);
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   Tot_Critter_A := 3;
   while(Tot_Critter_A) do begin
      LVar0 := random(0, 5);
      if ((LVar0 == 5) or (LVar0 == 0)) then begin
         Item := create_object(PID_ROCKS_9, tile_num_in_direction(dude_tile + random(0, 4) - 2, LVar0, random(3, 6)), 0);
      end
      else begin
         Item := create_object(PID_ROCKS_9, tile_num_in_direction(dude_tile + random(0, 4) - 2, LVar0, random(3, 9)), 0);
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   LVar0 := roll_vs_skill(dude_obj, SKILL_OUTDOORSMAN, 20 * dude_perk(PERK_survivalist));
   if (is_success(LVar0)) then begin
      display_msg(message_str(SCRIPT_RNDMTN, 101));
      if (is_critical(LVar0)) then begin
         if (random(0, 1)) then begin
            display_msg(message_str(SCRIPT_RNDMTN, 102));
            Critter_type := PID_DEAD_TRAVELER;
            Critter_script := -1;
            Outer_ring := 10;
            Inner_ring := 10;
            Critter_direction := 2;
            call Place_critter;
            item_caps_adjust(Critter, fortune_finder(random(10, 60)));
            if (random(1, 4) == 4) then begin
               Item := create_object(PID_STIMPAK, 0, 0);
               add_obj_to_inven(Critter, Item);
            end
            if (random(1, 4) == 4) then begin
               Item := create_object(PID_10MM_PISTOL, 0, 0);
               add_obj_to_inven(Critter, Item);
            end
            if (random(1, 4) == 4) then begin
               Item := create_object(PID_10MM_JHP, 0, 0);
               add_mult_objs_to_inven(Critter, Item, 1 + dude_perk(PERK_scrounger));
            end
            if (random(1, 4) == 4) then begin
               Item := create_object(PID_LEATHER_ARMOR, 0, 0);
               add_obj_to_inven(Critter, Item);
               wield_obj_critter(Critter, Item);
            end
            if (random(1, 4) == 4) then begin
               Item := create_object(PID_BACKPACK, 0, 0);
               add_obj_to_inven(Critter, Item);
            end
            kill_critter(Critter, ANIM_fall_back_sf);
         end
         else begin
            display_msg(message_str(SCRIPT_RNDMTN, 111));
            Tot_Critter_A := random(1, 2);
            while(Tot_Critter_A) do begin
               Item := create_object(PID_GOLD_NUGGET, tile_num_in_direction(dude_tile + (random(0, 4) * ((2 * random(0, 1)) - 1)), random(0, 5), random(1, 6)), 0);
               Tot_Critter_A := Tot_Critter_A - 1;
            end
         end
      end
   end
   else begin
      LVar1 := random(1, 100);
      if (is_critical(LVar0) or (LVar1 >= 95)) then begin
         display_msg(message_str(SCRIPT_RNDMTN, 103));
         LVar2 := (random(5, 15) + 2);
         LVar0 := dude_cur_hp;
         if (LVar2 >= LVar0) then begin
            LVar2 := (LVar0 - 1);
         end
         reg_anim_clear(dude_obj);
         reg_anim_begin();
            reg_anim_animate(dude_obj, ANIM_fall_back_sf, -1);
            reg_anim_animate(dude_obj, ANIM_back_to_standing, -1);
         reg_anim_end();
         critter_heal(dude_obj, -LVar2);
         if random(0, 1) == 0 then begin
            critter_injure(dude_obj, DAM_CRIP_LEG_LEFT);
            display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 139));
         end
         else begin
            critter_injure(dude_obj, DAM_CRIP_LEG_RIGHT);
            display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 140));
         end
      end
      else begin
         display_msg(message_str(SCRIPT_RNDMTN, 104));
         LVar2 := (random(1, 4) + random(1, 4));
         LVar0 := dude_cur_hp;
         if (LVar2 >= LVar0) then begin
            LVar2 := (LVar0 - 1);
         end
         reg_anim_clear(dude_obj);
         reg_anim_begin();
            reg_anim_animate(dude_obj, ANIM_fall_back_sf, -1);
            reg_anim_animate(dude_obj, ANIM_back_to_standing, -1);
         reg_anim_end();
         critter_heal(dude_obj, -LVar2);
         display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 141));
      end
   end
end

procedure VAULT1 begin
   display_msg(message_str(SCRIPT_RNDMTN, 128));
   Outer_ring := (dude_perception / 4) + 5;
   Inner_ring := (dude_perception / 4) + 4;
   Critter_direction := random(0, 4);

   if (random(0, 1) == 1) then
      Critter_type := PID_SMALL_RADSCORPION;
   else
      Critter_type := PID_RADSCORPION;

   Critter_script := SCRIPT_RADSCOR2;
   call Place_critter;
   obj_rotate(Critter, random(0, 5));
   call Add_Mysterious_Stranger;
end

procedure VAULT2 begin
   display_msg(message_str(SCRIPT_RNDMTN, 135));
   Critter_type := PID_DEAD_TRAVELER;
   Critter_script := -1;
   Outer_ring := 6;
   Inner_ring := 4;
   Critter_direction := 1;
   call Place_critter;
   obj_rotate(Critter, random(0, 5));
   kill_critter(Critter, ANIM_fall_back_sf);
   if (random(0, 1)) then begin
      Item := create_object(PID_10MM_JHP, 0, 0);
      critter_attempt_placement(Item, tile_num(Critter), 0);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_STIMPAK, 0, 0);
      critter_attempt_placement(Item, tile_num(Critter), 0);
   end
end

procedure VAULT3 begin
   variable rnd_bush := 0;
   variable rnd_tile := 0;
   variable bush_pid := 0;

   // Fo1in2, Spore plants encounter
   if fo1in2_fo2_critters_enabled and (random(0, 6) == 1) then begin
      display_msg(message_str(SCRIPT_RNDMTN, 203));
      Tot_Critter_A := random(3, 7);
      Outer_ring := 5;
      Inner_ring := 2;

      Critter_type := PID_SPORE_PLANT;
      Critter_script := SCRIPT_ECPLANT;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 4);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;

         // Add some greenery:
         rnd_bush := random(0, 5);
         while(rnd_bush) do begin
            rnd_tile := tile_num_in_direction(tile_num(Critter), random(0, 5), random(1, 8));
            if (tile_is_blocked(rnd_tile, dude_elevation) == false) then begin
               bush_pid := random(PID_BUSH_GREEN_1, PID_BUSH_GREEN_2);
               create_object(bush_pid, rnd_tile, dude_elevation);
               rnd_bush := rnd_bush - 1;
            end
         end
      end

      // Create Mantis
      if (random(1, 3) == 1) then begin
         Tot_Critter_A := random(4, 6);
         if (day) then begin
            Outer_ring := 6;
            Inner_ring := 4;
         end
         else begin
            Outer_ring := 4;
            Inner_ring := 3;
         end

         Critter_type := PID_MANTIS;
         Critter_script := SCRIPT_MANTIS;
         while(Tot_Critter_A) do begin
            Critter_direction := random(0, 5);
            call Place_critter;
            obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
            Tot_Critter_A := Tot_Critter_A - 1;
         end
      end
   end

   // Vanilla:
   else begin
      display_msg(message_str(SCRIPT_RNDMTN, 129));
      Outer_ring := (dude_perception / 3) + 4;
      Inner_ring := (dude_perception / 3) + 2;
      Tot_Critter_A := random(2, 3);
      Critter_script := SCRIPT_WANRATS;
      while(Tot_Critter_A) do begin
         if (random(0, 3) == 3) then begin
            Critter_type := PID_GREATER_MOLE_RAT;
         end
         else begin
            Critter_type := PID_LESSER_MOLE_RAT;
         end
         Critter_direction := random(0, 4);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   call Add_Mysterious_Stranger;
end

procedure VAULT4 begin
  // Fo1in2, Geckos:
   if fo1in2_fo2_critters_enabled and (random(0, 2) == 1) then begin
      Tot_Critter_A := random(2, 6);
      if (Tot_Critter_A <= 4) then
         display_msg(message_str(SCRIPT_RNDMTN, 202));
      else
         display_msg(message_str(SCRIPT_RNDMTN, 201));

      Outer_ring := (dude_perception / 2) + 3;
      Inner_ring := (dude_perception / 2) + 1;
      Critter_type := PID_GECKO;
      Critter_script := SCRIPT_ECGECKO;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 4);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   // Vanilla:
   else begin
      display_msg(message_str(SCRIPT_RNDMTN, 130));
      Outer_ring := (dude_perception / 2) + 3;
      Inner_ring := (dude_perception / 2) + 1;
      Tot_Critter_A := random(4, 8);
      Critter_type := PID_RAT_CAVE;
      Critter_script := SCRIPT_WANRATS;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 5);
         call Place_critter;
         if (random(0, 1)) then begin
            obj_rotate(Critter, random(0, 5));
         end
         else begin
            obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         end
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end
   call Add_Mysterious_Stranger;
end

procedure VAULT5 begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   variable LVar2 := 0;

   LVar0 := do_check(dude_obj, STAT_ag, -1);
   if (not(is_success(LVar0))) then begin
      LVar2 := random(1, 100);
      if ((LVar2 >= 95) or is_critical(LVar0)) then begin
         display_msg(message_str(SCRIPT_RNDMTN, 132));
         LVar1 := random(5, 15);
         LVar2 := dude_cur_hp;
         if (LVar1 >= LVar2) then begin
            LVar1 := (LVar2 - 1);
         end
         reg_anim_clear(dude_obj);
         reg_anim_begin();
            reg_anim_animate(dude_obj, ANIM_fall_back_sf, -1);
            reg_anim_animate(dude_obj, ANIM_back_to_standing, -1);
         reg_anim_end();
         critter_heal(dude_obj, -LVar1);
         if (random(0, 1) == 0) then begin
            critter_injure(dude_obj, DAM_CRIP_LEG_LEFT);
            display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 139));
         end
         else begin
            critter_injure(dude_obj, DAM_CRIP_LEG_RIGHT);
            display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 140));
         end
      end
      else begin
         display_msg(message_str(SCRIPT_RNDMTN, 133));
         LVar1 := 5;
         LVar2 := dude_cur_hp;
         if (LVar1 >= LVar2) then begin
            LVar1 := (LVar2 - 1);
         end
         reg_anim_clear(dude_obj);
         reg_anim_begin();
            reg_anim_animate(dude_obj, ANIM_fall_back_sf, -1);
            reg_anim_animate(dude_obj, ANIM_back_to_standing, -1);
         reg_anim_end();
         critter_heal(dude_obj, -LVar1);
         display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 141));
      end
   end
   else begin
      display_msg(message_str(SCRIPT_RNDMTN, 131));
      display_msg(message_str(SCRIPT_RNDMTN, 101));
   end
end

procedure VAULT6 begin
   display_msg(message_str(SCRIPT_RNDMTN, 134));

   Outer_ring := 6;
   Inner_ring := 4;
   Tot_Critter_A := random(4, 6);

   Critter_type := PID_RAT_CAVE;
   Critter_script := SCRIPT_WANRAT2;
   while(Tot_Critter_A) do begin
      Critter_direction := 1;
      call Place_critter;
      obj_rotate(Critter, 4);
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   victim := Critter;
   if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
      Critter_type := PID_RADSCORPION;
      Critter_script := SCRIPT_RADSCORP;
      Outer_ring := 10;
      Inner_ring := 9;
      Critter_direction := 1;
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   end
   call Add_Mysterious_Stranger;
end

procedure South1 begin
   if fo1in2_fluff_enc_disabled then begin
      call NORTH2;
   end
   else begin
      variable LVar0 := 0;
      variable LVar1 := 0;
      variable LVar2 := 0;

      display_msg(message_str(SCRIPT_RNDMTN, 114));
      LVar0 := roll_vs_skill(dude_obj, SKILL_OUTDOORSMAN, ((20 * dude_perk(PERK_survivalist)) - (5 * dude_perception) ));
      if (not(is_success(LVar0))) then begin
         if ((random(1, 100) >= 95) or is_critical(LVar0)) then begin
            display_msg(message_str(SCRIPT_RNDMTN, 118));
            LVar1 := (random(7, 20) + 3);
            LVar2 := dude_cur_hp;
            if (LVar1 >= LVar2) then begin
               LVar1 := (LVar2 - 1);
            end

            reg_anim_clear(dude_obj);
            reg_anim_begin();
               reg_anim_animate(dude_obj, ANIM_fall_back_sf, -1);
               reg_anim_animate(dude_obj, ANIM_back_to_standing, -1);
            reg_anim_end();

            critter_heal(dude_obj, -LVar1);
            critter_injure(dude_obj, DAM_CRIP_LEG_LEFT);
            critter_injure(dude_obj, DAM_CRIP_LEG_RIGHT);
            critter_injure(dude_obj, DAM_CRIP_ARM_LEFT);
            critter_injure(dude_obj, DAM_CRIP_ARM_RIGHT);
            //display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 139));
            display_msg(message_str(SCRIPT_RNDMTN, 147));
         end
         else begin
            display_msg(message_str(SCRIPT_RNDMTN, 117));
            LVar1 := random(4, 16);
            LVar2 := dude_cur_hp;
            if (LVar1 >= LVar2) then begin
               LVar1 := (LVar2 - 1);
            end

            reg_anim_clear(dude_obj);
            reg_anim_begin();
               reg_anim_animate(dude_obj, ANIM_fall_back_sf, -1);
               reg_anim_animate(dude_obj, ANIM_back_to_standing, -1);
            reg_anim_end();

            critter_heal(dude_obj, -LVar1);
            display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 141));
            if (random(0, 3) == 0) then begin
               critter_injure(dude_obj, DAM_CRIP_LEG_LEFT);
               display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 139));
            end
            else begin
               critter_injure(dude_obj, DAM_CRIP_LEG_RIGHT);
               display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar1 + message_str(SCRIPT_RNDMTN, 140));
            end
         end
      end
      else begin
         display_msg(message_str(SCRIPT_RNDMTN, 115));
         if (is_critical(LVar0)) then begin
            display_msg(message_str(SCRIPT_RNDMTN, 116));
            critter_heal(dude_obj, random(5, 15));
         end
      end

   end
end

procedure South2 begin
   display_msg(message_str(SCRIPT_RNDMTN, 136));
   Tot_Critter_A := random(2, 6);
   Outer_ring := 7;
   Inner_ring := 4;

   Critter_type := PID_RADSCORPION;
   Critter_script := SCRIPT_RADSCORP;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 4);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   call Add_Mysterious_Stranger;
end

procedure South3 begin
   // Fo1in2, Geckos:
   if fo1in2_fo2_critters_enabled and (random(0, 1) == 1) then begin
      display_msg(message_str(SCRIPT_RNDMTN, 202));
      Tot_Critter_A := random(2, 6);
      Outer_ring := 7;
      Inner_ring := 4;

      Critter_type := PID_GOLDEN_GECKO;
      Critter_script := SCRIPT_ECGECKO;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 4);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   // Vanilla:
   else begin
      display_msg(message_str(SCRIPT_RNDMTN, 120));
      Tot_Critter_A := random(3, 8);
      Outer_ring := 5;
      Inner_ring := 2;

      Critter_type := PID_RAT_CAVE;
      Critter_script := SCRIPT_WANRATS;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 4);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end
   call Add_Mysterious_Stranger;
end

procedure South4 begin
   if (global_var(GVAR_IS_PATRICK_DEAD) == 0) and (random(0, 1) == 1) then begin
      call Patrick;
   end
   else begin
      call South3;
   end
end

procedure South5 begin
   display_msg(message_str(SCRIPT_RNDMTN, 122));
   Tot_Critter_A := 9;
   Outer_ring := 7;
   Inner_ring := 0;
   while(Tot_Critter_A) do begin
      variable rocks := 0;
      if (random(0, 2) == 0) then begin
         rocks := PID_ROCKS_7;
      end
      else begin
         rocks := PID_ROCKS_15;
      end
      Item := create_object(rocks, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(0, 11)), 0);
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   Item := create_object(PID_BONES_1, tile_num_in_direction(dude_tile + random(0, 4) - 2, random(0, 5), random(1, 8)), 0);
   Item := create_object(PID_BONES_2, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(2, 7)), 0);
   Item := create_object(PID_SPEAR, tile_num_in_direction(dude_tile + random(0, 4) - 2, random(0, 5), random(3, 7)), 0);
   Item := create_object(PID_KNIFE, tile_num_in_direction(dude_tile + random(0, 4) - 2, random(0, 5), random(2, 9)), 0);
   Item := create_object(PID_KNIFE, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(2, 7)), 0);
   Outer_ring := 9;
   Inner_ring := 3;
   Critter_script := -1;

   spawn_dead_critter(PID_PEASANT_BLACK, Critter_script, ANIM_fall_back_sf);
   spawn_dead_critter(PID_PEASANT_BLACK, Critter_script, ANIM_burned_to_nothing_sf);
   spawn_dead_critter(PID_MERCHANT, Critter_script, ANIM_burned_to_nothing_sf);
   spawn_dead_critter(PID_MERCHANT, Critter_script, ANIM_fall_back_sf);
   spawn_dead_critter(PID_PEASANT_YELLOW_FEMALE, Critter_script, ANIM_fall_back_sf);
   spawn_dead_critter(PID_LEATHER_ARMOR_MALE, Critter_script, ANIM_fall_back_sf);
   spawn_dead_critter(PID_ZOMBIE_GUARD, Critter_script, ANIM_fall_back_sf);
   spawn_dead_critter(PID_MERCHANT, Critter_script, ANIM_burned_to_nothing_sf);

   if (dude_luck >= 4) then begin
      Critter_type := PID_MALE_GUARD_METAL_BLACK;
      Critter_direction := random(0, 5);
      call Place_critter;
      obj_rotate(Critter, random(0, 5));
      Item := create_object(PID_10MM_AP, 0, 0);
      add_obj_to_inven(Critter, Item);
      if (dude_perk(PERK_scrounger)) then begin
         Item := create_object(PID_10MM_JHP, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      kill_critter(Critter, ANIM_fall_back_sf);
   end
   if (dude_luck >= 4) then begin
      if (random(0, 1)) then begin
         Item := create_object(PID_10MM_JHP, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0);
         if (dude_perk(PERK_scrounger)) then begin
            Item := create_object(PID_10MM_JHP, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0);
         end
      end
      if (random(0, 1)) then begin
         Item := create_object(PID_10MM_AP, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0);
         if (dude_perk(PERK_scrounger)) then begin
            Item := create_object(PID_10MM_AP, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0);
         end
      end
   end
   if (dude_luck >= 9) then begin
      if (random(0, 1)) then begin
         Item := create_object(PID_10MM_PISTOL, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0);
      end
      else begin
         if (random(0, 1)) then begin
            Item := create_object(PID_HUNTING_RIFLE, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0);
         end
         else begin
            Item := create_object(PID_SHOTGUN, tile_num_in_direction(dude_tile + random(0, 8) - 4, random(0, 5), random(3, 6)), 0);
         end
      end
   end
   Tot_Critter_A := 0;
   if (dude_luck <= 3) then begin
      Tot_Critter_A := random(2, 4);
   end
   else begin
      if (dude_luck < 7) then begin
         Tot_Critter_A := random(1, 2);
      end
   end
   Outer_ring := 7;
   Inner_ring := 4;
   Critter_type := PID_RADSCORPION;
   Critter_script := SCRIPT_RADSCORP;
   while(Tot_Critter_A) do begin
      Critter_direction := random(1, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
end

procedure South6 begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   variable LVar2 := 0;

   display_msg(message_str(SCRIPT_RNDMTN, 100));

   Tot_Critter_A := 8;
   while(Tot_Critter_A) do begin
      LVar0 := random(0, 5);
      if (LVar0 == 4) then begin
         LVar1 := PID_ROCKS_13;
      end
      else begin
         if (LVar0 == 5) then begin
            LVar1 := PID_ROCKS_13 + 1;
         end
         else begin
            LVar1 := PID_ROCKS_15;
         end
      end
      LVar0 := random(0, 5);
      if ((LVar0 == 5) or (LVar0 == 0)) then begin
         Item := create_object(LVar1, tile_num_in_direction(dude_tile + random(0, 8) - 4, LVar0, random(1, 6)), 0);
      end
      else begin
         Item := create_object(LVar1, tile_num_in_direction(dude_tile + random(0, 8) - 4, LVar0, random(1, 9)), 0);
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Tot_Critter_A := 10;
   while(Tot_Critter_A) do begin
      LVar1 := random(0, 3);
      if (LVar1 == 3) then begin
         LVar1 := 6;
      end
      LVar0 := random(0, 5);
      if ((LVar0 == 5) or (LVar0 == 0)) then begin
         Item := create_object(33554861 + LVar1, tile_num_in_direction(dude_tile + random(0, 4) - 2, LVar0, random(1, 6)), 0);
      end
      else begin
         Item := create_object(33554861 + LVar1, tile_num_in_direction(dude_tile + random(0, 4) - 2, LVar0, random(1, 9)), 0);
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Tot_Critter_A := 3;
   while(Tot_Critter_A) do begin
      LVar0 := random(0, 5);
      if ((LVar0 == 5) or (LVar0 == 0)) then begin
         Item := create_object(PID_ROCKS_9, tile_num_in_direction(dude_tile + random(0, 4) - 2, LVar0, random(3, 6)), 0);
      end
      else begin
         Item := create_object(PID_ROCKS_9, tile_num_in_direction(dude_tile + random(0, 4) - 2, LVar0, random(3, 9)), 0);
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   LVar0 := roll_vs_skill(dude_obj, SKILL_OUTDOORSMAN, 20 * dude_perk(PERK_survivalist));
   if (is_success(LVar0)) then begin
      display_msg(message_str(SCRIPT_RNDMTN, 101));
      if (is_critical(LVar0)) then begin
         if (random(0, 2) == 1) then begin
            display_msg(message_str(SCRIPT_RNDMTN, 102));
            Critter_type := PID_DEAD_TRAVELER;
            Critter_script := -1;
            Outer_ring := 10;
            Inner_ring := 10;
            Critter_direction := 2;
            call Place_critter;
            item_caps_adjust(Critter, fortune_finder(random(10, 60)));

            if (random(1, 4) == 4) then begin
               Item := create_object(PID_STIMPAK, 0, 0);
               add_obj_to_inven(Critter, Item);
            end
            if (random(1, 4) == 4) then begin
               Item := create_object(PID_10MM_PISTOL, 0, 0);
               add_obj_to_inven(Critter, Item);
            end
            if (random(1, 4) == 4) then begin
               Item := create_object(PID_10MM_JHP, 0, 0);
               add_mult_objs_to_inven(Critter, Item, 1 + dude_perk(PERK_scrounger));
            end
            if (random(1, 4) == 4) then begin
               Item := create_object(PID_LEATHER_ARMOR, 0, 0);
               add_obj_to_inven(Critter, Item);
               wield_obj_critter(Critter, Item);
            end
            if (random(1, 4) == 4) then begin
               Item := create_object(PID_BACKPACK, 0, 0);
               add_obj_to_inven(Critter, Item);
            end
            kill_critter(Critter, ANIM_fall_back_sf);
         end
         else begin
            display_msg(message_str(SCRIPT_RNDMTN, 111));
            Tot_Critter_A := random(1, 3);
            while(Tot_Critter_A) do begin
               Item := create_object(PID_GOLD_NUGGET, tile_num_in_direction(dude_tile + (random(0, 4) * ((2 * random(0, 1)) - 1)), random(0, 5), random(1, 6)), 0);
               Tot_Critter_A := Tot_Critter_A - 1;
            end
         end
      end
   end
   else begin
      LVar1 := random(1, 100);
      if (is_critical(LVar0) or (LVar1 >= 95)) then begin
         display_msg(message_str(SCRIPT_RNDMTN, 103));
         LVar2 := (random(5, 15) + 2);
         LVar0 := dude_cur_hp;
         if (LVar2 >= LVar0) then begin
            LVar2 := (LVar0 - 1);
         end
         reg_anim_clear(dude_obj);
         reg_anim_begin();
         reg_anim_animate(dude_obj, ANIM_fall_back_sf, -1);
         reg_anim_animate(dude_obj, ANIM_back_to_standing, -1);
         reg_anim_end();
         critter_heal(dude_obj, -LVar2);
         if random(0, 1) == 0 then begin
            critter_injure(dude_obj, DAM_CRIP_LEG_LEFT);
            display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 139));
         end
         else begin
            critter_injure(dude_obj, DAM_CRIP_LEG_RIGHT);
            display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 140));
         end
      end
      else begin
         display_msg(message_str(SCRIPT_RNDMTN, 104));
         LVar2 := (random(1, 4) + random(1, 4));
         LVar0 := dude_cur_hp;
         if (LVar2 >= LVar0) then begin
            LVar2 := (LVar0 - 1);
         end
         reg_anim_clear(dude_obj);
         reg_anim_begin();
         reg_anim_animate(dude_obj, ANIM_fall_back_sf, -1);
         reg_anim_animate(dude_obj, ANIM_back_to_standing, -1);
         reg_anim_end();
         critter_heal(dude_obj, -LVar2);
         display_msg(message_str(SCRIPT_RNDMTN, 138) + LVar2 + message_str(SCRIPT_RNDMTN, 141));
      end
   end
end
