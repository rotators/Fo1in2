/*

   Random city encounter map

*/

#define NAME                    SCRIPT_RNDCITY

/* Include Files */
#include "define.h"
#include "command.h"
#include "mapenc.h"
#include "updatmap.h"

procedure start;
procedure map_enter_p_proc;
procedure map_exit_p_proc;

procedure Place_critter;

procedure CITY_North_VANILLA_table;
procedure CITY_North_VANILLA_1;
procedure CITY_North_VANILLA_2;
procedure CITY_North_VANILLA_3;
procedure CITY_North_VANILLA_4;
procedure CITY_North_VANILLA_5;
procedure CITY_North_VANILLA_6;

variable party_elevation;
variable dude_start_hex;
variable start_attack;

//////////////////// ENTRIES FROM RNDDESRT: /////////////////////
procedure choose_start;

procedure Bone_table;// Same as Desert
procedure Bone_1;
procedure Bone_2;
procedure Bone_3;
procedure Bone_4;
procedure Bone_5;
procedure Bone_6;

procedure Necrop_table;// Same as Desert
procedure Necrop_1;
procedure Necrop_2;
procedure Necrop_3;
procedure Necrop_4;
procedure Necrop_5;
procedure Necrop_6;

procedure Vats_table;// Same as Desert
procedure Vats_1;
procedure Vats_2;
procedure Vats_3;
procedure Vats_4;
procedure Vats_5;
procedure Vats_6;

variable money;
variable random_seed_1;
variable random_seed_2;
variable random_seed_3;
variable random_seed_4;
variable random_seed_5;

variable Scorpions_Killed;

export variable signal_mutants;

procedure start begin
end

procedure roll_encounter begin
   Encounter_Num := random(1, 18);
   if (dude_luck >= 9) then begin
      Encounter_Num := Encounter_Num + 2;
   end
   else if (dude_luck >= 7) then begin
      Encounter_Num := Encounter_Num + 1;
   end
   else if (dude_luck == 3) then begin
      Encounter_Num := Encounter_Num - 1;
   end
   else if (dude_luck == 2) then begin
      Encounter_Num := Encounter_Num - 2;
   end
   else if (dude_luck == 1) then begin
      Encounter_Num := Encounter_Num - 3;
   end

   if (not(bounty_hunter_killed) and has_rep_childkiller and random(0, 1)) then begin
      Encounter_Num := 99;
   end
   else begin
      if (Encounter_Num <= 5) then begin
         Encounter_Num := 1;
      end
      else if (Encounter_Num <= 8) then begin
         Encounter_Num := 2;
      end
      else if (Encounter_Num <= 11) then begin
         Encounter_Num := 3;
      end
      else if (Encounter_Num <= 14) then begin
         Encounter_Num := 4;
      end
      else if (Encounter_Num <= 17) then begin
         Encounter_Num := 5;
      end
      else begin
         Encounter_Num := 6;
      end
   end
end

procedure map_enter_p_proc begin
   Lighting;

   if (map_first_run) then begin
      dude_pos := random(0, 2);
      dude_rot := random(0, 5);
      if (dude_pos == 0) then begin
         override_map_start(100, 100, 0, dude_rot);
      end
      else if (dude_pos == 1) then begin
         override_map_start(116, 83, 0, dude_rot);
      end
      else begin
         override_map_start(92, 110, 0, dude_rot);
      end
   end

   Critter_spawn_hex := dude_tile;

   Ranger_rerolls := dude_perk(PERK_ranger);
   set_global_var(GVAR_AGGRO_FLAG_RND_ENC_unsure, 0);
   while (Encounter_Num == 0) do begin
      call roll_encounter;
   end
   ranger_perk_reroll_enc(1, 2, 3, 5, 7);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
      debug_msg("global_var(GVAR_RANDOM_ENC_SOMETHING)");
   end

   if (global_var(GVAR_WORLDMAP_TABLE) == 0) then begin
      call CITY_North_VANILLA_table;
   end
   else if (global_var(GVAR_WORLDMAP_TABLE) == 1) then begin
      call CITY_North_VANILLA_table;//CITY_Coast_table;// Merge with Coast encounters. Maybe?
   end
   else if (global_var(GVAR_WORLDMAP_TABLE) == 9) or (global_var(GVAR_WORLDMAP_TABLE) == 10) then begin
      call Necrop_table;// Same as Desert
   end
   else if (global_var(GVAR_WORLDMAP_TABLE) == 11) then begin
      call Vats_table;// Same as Desert
   end
   else if (global_var(GVAR_WORLDMAP_TABLE) == 13) then begin
      call Bone_table;// Same as Desert
   end
   else begin
      call CITY_North_VANILLA_table;
      //display_msg("ERROR ! City encounter global_var(GVAR_WORLDMAP_TABLE) is out of range ! Please contact Sduibek and provide a savegame from this map.");
   end
end

procedure map_update_p_proc begin
   Lighting;
end

procedure map_exit_p_proc begin
   set_car_exit_map
end

procedure Place_critter begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   variable LVar2 := 0;
   Critter := create_object_sid(Critter_type, 0, 0, Critter_script);
   LVar2 := random(Inner_ring, Outer_ring);
   LVar0 := random(0, 5);
   Critter_tile := tile_num_in_direction(Critter_spawn_hex, Critter_direction, LVar2);
   LVar1 := tile_num_in_direction(Critter_tile, LVar0, LVar2 / 2);
   if ((tile_distance(Critter_spawn_hex, LVar1) <= Outer_ring) and (tile_distance(Critter_spawn_hex, LVar1) >= Inner_ring)) then begin
      Critter_tile := tile_num_in_direction(Critter_tile, LVar0, LVar2 / 2);
   end
   critter_attempt_placement(Critter, Critter_tile, dude_elevation);
end

procedure CITY_North_VANILLA_1 begin
   display_msg(message_str(SCRIPT_RNDCITY, 100));
   Outer_ring := (dude_enc_perception / 2) + 8;
   Inner_ring := (dude_enc_perception / 2) + 4;
   Tot_Critter_A := random(2, 3);
   group_angle := random(0, 5);
   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2 * 2) - 2);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      if (random(0, 2) == 0) then begin
         if (random(0, 1) == 1) then begin
            Item := create_object(PID_FLAMER, 0, 0);
         end
         else begin
            Item := create_object(PID_MINIGUN, 0, 0);
         end
      end
      else begin
         Item := create_object(PID_SPIKED_KNUCKLES, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_STIMPAK, 0, 0);
      add_mult_objs_to_inven(Critter, Item, 1);
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(5, 20)));
      end
      Item := create_object(PID_5MM_JHP, 0, 0);
      add_mult_objs_to_inven(Critter, Item, 1 + dude_perk(PERK_scrounger));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   if (random(0, 2) == 0) then begin
      Critter_direction := random(0, 5);
      Critter_script := SCRIPT_SUPAMBSH;
      Critter_type := PID_NIGHTKIN;
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Item := create_object(PID_MINIGUN, 0, 0);
      add_obj_to_inven(Critter, Item);
      item_caps_adjust(Critter, fortune_finder(random(5, 20)));
   end
   call Add_Mysterious_Stranger;
end

procedure CITY_North_VANILLA_2 begin
   variable LVar0 := 0;
   display_msg(message_str(SCRIPT_RNDCITY, 101));

   group_angle := random(0, 5);
   if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
      Critter := create_object(PID_BURNING_BARREL, 0, 0);
      Critter_tile := tile_num_in_direction(Critter_spawn_hex, group_angle, 4);
      critter_attempt_placement(Critter, Critter_tile, dude_elevation);
      Critter := create_object(PID_BURNING_BARREL, 0, 0);

      enc_group_angle(group_angle)

      Critter_tile := tile_num_in_direction(Critter_spawn_hex, Item, 4);
      critter_attempt_placement(Critter, Critter_tile, dude_elevation);
   end

   Outer_ring := (dude_enc_perception / 2) + 6;
   Inner_ring := (dude_enc_perception / 2) + 4;
   Tot_Critter_A := random(3, 6);
   Tot_Critter_B := random(3, 5);

   Critter_type := PID_GEN_THUG;
   Critter_script := SCRIPT_GENRAIDA;

   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end

      obj_rotate(Critter, Critter_direction);
      LVar0 := random(0, 2);
      if (LVar0 == 0) then begin
         if (random(0, 2) == 1) then
            Item := create_object(PID_44_MAGNUM_REVOLVER, 0, 0);
         else
            Item := create_object(PID_DESERT_EAGLE, 0, 0);
      end
      else begin
         if (LVar0 == 1) then begin
            Item := create_object(PID_BRASS_KNUCKLES, 0, 0);
         end
         else begin
            Item := create_object(PID_10MM_PISTOL, 0, 0);
         end
      end
      add_obj_to_inven(Critter, Item);
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(5, 25)));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   victim := Critter;
   Critter_type := PID_THUG_MALE_METAL;
   Critter_script := SCRIPT_GENRAIDC;

   enc_group_angle(group_angle)

   while(Tot_Critter_B) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      if (random(0, 1)) then begin
         Item := create_object(PID_KNIFE, 0, 0);
      end
      else begin
         Item := create_object(PID_SPEAR, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(4, 25)));
      end
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   attack_setup(Critter, victim);
   call Add_Mysterious_Stranger;
end

procedure CITY_North_VANILLA_3 begin
variable rnd_weapon;

   display_msg(message_str(SCRIPT_RNDCITY, 102));
   Tot_Critter_A := random(2, 4);
   Outer_ring := (dude_enc_perception / 2) + 4;
   Inner_ring := (dude_enc_perception / 2) + 3;
   group_angle := random(0, 5);

   Critter_type := PID_GEN_THUG;
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + random(0, 2 * 2) - 2;
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      obj_rotate(Critter, Critter_direction);
      rnd_weapon := random(0, 2);
      if rnd_weapon == 0 then begin
         Item := create_object(PID_10MM_PISTOL, 0, 0);
      end
      else if rnd_weapon == 1 then begin
         Item := create_object(PID_10MM_SMG, 0, 0);
      end
      else begin
         Item := create_object(PID_GREASE_GUN, 0, 0);
      end
      add_obj_to_inven(Critter, Item);

      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(4, 25)));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   Critter_direction := group_angle + random(0, 2 * 2) - 2;
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;

   enc_group_angle(Critter_direction)

   obj_rotate(Critter, Critter_direction);
   Item := create_object(PID_FIRST_AID_KIT, 0, 0);
   add_obj_to_inven(Critter, Item);

   item_caps_adjust(Critter, fortune_finder(random(18, 150)));
   if (random(0, 1)) then begin
      Item := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
      add_obj_to_inven(Critter, Item);
      if (dude_perk(PERK_scrounger)) then begin
         Item := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
   end

   if (random(0, 1)) then begin
      Item := create_object(PID_SLEDGEHAMMER, 0, 0);
      add_obj_to_inven(Critter, Item);
   end

   if (random(0, 1)) then begin
      Item := create_object(PID_44_MAGNUM_JHP, 0, 0);
      add_obj_to_inven(Critter, Item);
      if (dude_perk(PERK_scrounger)) then begin
         Item := create_object(PID_44_MAGNUM_JHP, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
   end

   if (random(0, 1)) then begin
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
   end

   if (start_attack == 0) then begin
      attack(dude_obj);
   end

   start_attack := 1;
   call Add_Mysterious_Stranger;
end

procedure CITY_North_VANILLA_4
begin
   display_msg(message_str(SCRIPT_RNDCITY, 103));
   Tot_Critter_A := random(5, 15);
   Outer_ring := (dude_enc_perception / 2) + 4;
   Inner_ring := (dude_enc_perception / 2) + 1;
   group_angle := random(0, 5);
   Item := random(0, 1);
   Critter_type := PID_RAT_CAVE;
   Critter_script := SCRIPT_WANRATS;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + random(0, 1 * 2) - 1;
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      if (Item) then begin
         if (random(0, 1)) then begin
            Critter_direction := 3;
         end
         else begin
            Critter_direction := 4;
         end
         obj_rotate(Critter, Critter_direction);
      end
      else begin
         if (random(0, 1)) then begin
            Critter_direction := 1;
         end
         else begin
            Critter_direction := 2;
         end
         obj_rotate(Critter, Critter_direction);
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   if (start_attack == 0) then begin
      attack(dude_obj);
   end
   start_attack := 1;
   call Add_Mysterious_Stranger;
end

procedure CITY_North_VANILLA_5 begin
variable rnd_weapon;

   display_msg(message_str(SCRIPT_RNDCITY, 104));
   Outer_ring := (dude_enc_perception / 2) + 6;
   Inner_ring := (dude_enc_perception / 2) + 2;
   Tot_Critter_A := random(3, 5);
   group_angle := random(0, 5);

   Critter_type := PID_GEN_THUG;
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + random(0, 1 * 2) - 1;
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));

      rnd_weapon := random(0, 2);
      if rnd_weapon == 0 then begin
         Item := create_object(PID_10MM_PISTOL, 0, 0);
      end
      else if rnd_weapon == 1 then begin
         Item := create_object(PID_10MM_SMG, 0, 0);
      end
      else begin
         Item := create_object(PID_GREASE_GUN, 0, 0);
      end
      add_obj_to_inven(Critter, Item);

      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(4, 25)));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_MAN_JEANS;
   Critter_script := SCRIPT_GENRAIDA;
   Critter_direction := group_angle + random(0, 1 * 2) - 1;
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   Item := create_object(PID_FIRST_AID_KIT, 0, 0);
   add_obj_to_inven(Critter, Item);
   item_caps_adjust(Critter, fortune_finder(random(19, 135)));

   if (random(0, 1)) then begin
      Item := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_SLEDGEHAMMER, 0, 0);
      add_obj_to_inven(Critter, Item);
   end

   if (random(0, 1)) then begin
      Item := create_object(PID_44_MAGNUM_JHP, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
   end

   if (start_attack == 0) then begin
      attack(dude_obj);
   end
   start_attack := 1;
   call Add_Mysterious_Stranger;
end

procedure CITY_North_VANILLA_6
begin
   display_msg(message_str(SCRIPT_RNDCITY, 105));
   Tot_Critter_A := random(3, 4);
   if (day) then begin
      Outer_ring := 4;
      Inner_ring := 2;
   end
   else begin
      Outer_ring := 3;
      Inner_ring := 2;
   end
   Critter_type := PID_RAT_CAVE;
   Critter_script := SCRIPT_WANRATS;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 5);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   if (start_attack == 0) then begin
      attack(dude_obj);
   end
   start_attack := 1;
   call Add_Mysterious_Stranger;
end

procedure Bone_table begin
   ranger_perk_reroll_enc(1, 3, 5, 7, -1);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);

   end
   if (Encounter_Num) then begin
      call choose_start;
      if (Encounter_Num == 1) then begin
         call Bone_1;
      end
      else if (Encounter_Num == 2) then begin
         call Bone_2;
      end
      else if (Encounter_Num == 3) then begin
         call Bone_3;
      end
      else if (Encounter_Num == 4) then begin
         call Bone_4;
      end
      else if (Encounter_Num == 5) then begin
         call Bone_5;
      end
      else if (Encounter_Num == 6) then begin
         call Bone_6;
      end
      else begin
         call hunters;
      end
   end
end

procedure Bone_1 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 307));
   Tot_Critter_A := random(2, 3);
   group_angle := random(0, 5);
   Outer_ring := (dude_enc_perception / 2) + 6;
   Inner_ring := (dude_enc_perception / 2) + 4;
   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 4) - 2);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      if (random(1, 4) == 1) then begin
         Item := create_object(PID_FLAMER, 0, 0);
      end
      else begin
         Item := create_object(PID_MINIGUN, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      if (random(1, 5) == 1) then begin
         Item := create_object(PID_ROCKET_LAUNCHER, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(5, 20)));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   if (random(0, 1)) then begin
      Critter_type := PID_NIGHTKIN;
      Critter_script := SCRIPT_SUPAMBSH;
      Critter_direction := group_angle + (random(0, 4) - 2);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Item := create_object(PID_MINIGUN, 0, 0);
      add_obj_to_inven(Critter, Item);
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(5, 20)));
      end
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Bone_2 begin
   variable LVar0 := 0;
   display_msg(message_str(SCRIPT_RNDDESRT, 308));
   group_angle := random(0, 5);
   if ((game_time_hour >= 1900) or (game_time_hour < 600) and random(0, 1)) then begin
      Critter := create_object(PID_FIRE_PIT, 0, 0);
      Critter_tile := tile_num_in_direction(Critter_spawn_hex, group_angle, 4);
      critter_attempt_placement(Critter, Critter_tile, dude_elevation);
      Critter := create_object(PID_FIRE_PIT, 0, 0);

      enc_group_angle(Item)

      Critter_tile := tile_num_in_direction(Critter_spawn_hex, Item, 4);
      critter_attempt_placement(Critter, Critter_tile, dude_elevation);
   end
   Critter_spawn_hex := Critter_spawn_hex + (random(0, 4) - 2 + ((random(0, 2) - 1) * 200));
   Outer_ring := (dude_enc_perception / 2) + 6;
   Inner_ring := (dude_enc_perception / 2) + 4;
   Tot_Critter_A := random(3, 5);
   Tot_Critter_B := random(3, 5);
   Critter_type := PID_GEN_THUG;
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      LVar0 := random(0, 2);
      if (LVar0 == 0) then begin
         if (random(0, 2) == 1) then
            Item := create_object(PID_44_MAGNUM_REVOLVER, 0, 0);
         else
            Item := create_object(PID_DESERT_EAGLE, 0, 0);
      end
      else begin
         if (LVar0 == 1) then begin
            Item := create_object(PID_BRASS_KNUCKLES, 0, 0);
         end
         else begin
            Item := create_object(PID_10MM_PISTOL, 0, 0);
         end
      end
      add_obj_to_inven(Critter, Item);
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(5, 25)));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   victim := Critter;
   Critter_type := PID_THUG_MALE_METAL;
   Critter_script := SCRIPT_GENRAIDC;

   enc_group_angle(group_angle)

   while(Tot_Critter_B) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      if (random(0, 1)) then begin
         Item := create_object(PID_KNIFE, 0, 0);
      end
      else begin
         Item := create_object(PID_SPEAR, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(4, 25)));
      end
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   attack_setup(Critter, victim);
   set_global_var(GVAR_MYST_STRANGER_ITEM, 2);
   call Add_Mysterious_Stranger;
end

procedure Bone_3 begin
variable rnd_weapon;

   display_msg(message_str(SCRIPT_RNDDESRT, 309));
   Outer_ring := (dude_enc_perception / 2) + 6;
   Inner_ring := (dude_enc_perception / 2) + 2;
   Tot_Critter_A := random(3, 7);
   group_angle := random(0, 5);

   Critter_type := PID_GEN_THUG;
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + random(0, 2 * 2) - 2;
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));

      rnd_weapon := random(0, 2);
      if rnd_weapon == 0 then begin
         if (random(0, 3) == 1) then
            Item := create_object(PID_ZIP_GUN, 0, 0);
         else
            Item := create_object(PID_10MM_PISTOL, 0, 0);
      end
      else if rnd_weapon == 1 then begin
         Item := create_object(PID_10MM_SMG, 0, 0);
      end
      else begin
         Item := create_object(PID_GREASE_GUN, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(4, 25)));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_MAN_JEANS;
   Critter_script := SCRIPT_GENRAIDA;
   Critter_direction := group_angle + random(0, 2 * 2) - 2;
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));

   if not(fo1in2_destroy_armor_enabled) then begin
      Item := create_object(PID_LEATHER_ARMOR, 0, 0);
      add_obj_to_inven(Critter, Item);
   end

   Item := create_object(PID_FIRST_AID_KIT, 0, 0);
   add_obj_to_inven(Critter, Item);
   item_caps_adjust(Critter, fortune_finder(random(25, 100)));
   if (random(0, 1)) then begin
      Item := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_SLEDGEHAMMER, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_44_MAGNUM_JHP, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Bone_4 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 310));
   Outer_ring := (dude_enc_perception / 2) + 6;
   Inner_ring := (dude_enc_perception / 2) + 2;
   Tot_Critter_A := random(2, 3);
   group_angle := random(0, 5);

   Critter_type := PID_GEN_THUG;
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + random(0, 2 * 2) - 2;
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      if (random(0, 1)) then begin
         Item := create_object(PID_10MM_PISTOL, 0, 0);
      end
      else begin
         Item := create_object(PID_10MM_SMG, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(4, 25)));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_MAN_JEANS;
   Critter_script := SCRIPT_GENRAIDA;
   Critter_direction := group_angle + random(0, 2 * 2) - 2;
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   Item := create_object(PID_FIRST_AID_KIT, 0, 0);
   add_obj_to_inven(Critter, Item);
   item_caps_adjust(Critter, fortune_finder(random(25, 100)));
   if (random(0, 1)) then begin
      Item := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_SLEDGEHAMMER, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_44_MAGNUM_JHP, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Bone_5 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 311));
   Outer_ring := (dude_enc_perception / 2) + 6;
   Inner_ring := (dude_enc_perception / 2) + 2;
   Tot_Critter_A := random(2, 3);
   group_angle := random(0, 5);

   Critter_type := PID_GEN_THUG;
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + random(0, 2 * 2) - 2;
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      if (random(0, 1)) then begin
         Item := create_object(PID_10MM_PISTOL, 0, 0);
      end
      else begin
         Item := create_object(PID_10MM_SMG, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(4, 25)));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_MAN_JEANS;
   Critter_script := SCRIPT_GENRAIDA;
   Critter_direction := group_angle + random(0, 2 * 2) - 2;
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));

   if not(fo1in2_destroy_armor_enabled) then begin
      Item := create_object(PID_LEATHER_ARMOR, 0, 0);
      add_obj_to_inven(Critter, Item);
   end

   Item := create_object(PID_FIRST_AID_KIT, 0, 0);
   add_obj_to_inven(Critter, Item);
   item_caps_adjust(Critter, fortune_finder(random(25, 100)));
   if (random(0, 1)) then begin
      Item := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_SLEDGEHAMMER, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_44_MAGNUM_JHP, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 2);
   call Add_Mysterious_Stranger;
end

procedure Bone_6 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 313));
   Tot_Critter_A := random(4, 6);
   if (day) then begin
      Outer_ring := 6;
      Inner_ring := 3;
   end
   else begin
      Outer_ring := 4;
      Inner_ring := 3;
   end
   Critter_type := PID_MANTIS;
   Critter_script := SCRIPT_MANTIS;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 5);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure choose_start begin
   dude_pos := random(0, 3);
   if (global_var(GVAR_WORLDMAP_TABLE) == 1) then begin
      if (Encounter_Num == 1) then begin
         override_map_start(93, 91, 0, 1);
      end
      else begin
         if (dude_pos == 0) then
            override_map_start(109, 72, 0, dude_rot);
         else if (dude_pos == 1) then
            override_map_start(131, 102, 0, dude_rot);
         else if (dude_pos == 2) then
            override_map_start(90, 112, 0, dude_rot);
         else
            override_map_start(80, 86, 0, dude_rot);
      end
   end
   else begin
      if (global_var(GVAR_WORLDMAP_TABLE) == 10) then begin
         if ((Encounter_Num == 1) or (Encounter_Num == 5) or (Encounter_Num == 6)) then begin
            override_map_start(100, 100, 0, dude_rot);
         end
         else begin
            if (dude_pos == 0) then
               override_map_start(109, 72, 0, dude_rot);
            else if (dude_pos == 1) then
               override_map_start(131, 102, 0, dude_rot);
            else if (dude_pos == 2) then
               override_map_start(90, 112, 0, dude_rot);
            else
               override_map_start(80, 86, 0, dude_rot);
         end
      end
      else begin
         if (dude_pos == 0) then
            override_map_start(109, 72, 0, dude_rot);
         else if (dude_pos == 1) then
            override_map_start(131, 102, 0, dude_rot);
         else if (dude_pos == 2) then
            override_map_start(90, 112, 0, dude_rot);
         else
            override_map_start(80, 86, 0, dude_rot);
      end
   end
   Critter_spawn_hex := dude_tile;
end

procedure CITY_North_VANILLA_table begin
   ranger_perk_reroll_enc(1, 2, 4, 6, 7);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end
   if (Encounter_Num) then begin
      call choose_start;
      if (Encounter_Num == 1) then
         call CITY_North_VANILLA_1;
      else if (Encounter_Num == 2) then
         call CITY_North_VANILLA_2;
      else if (Encounter_Num == 3) then
         call CITY_North_VANILLA_3;
      else if (Encounter_Num == 4) then
         call CITY_North_VANILLA_4;
      else if (Encounter_Num == 5) then
         call CITY_North_VANILLA_5;
      else if (Encounter_Num == 6) then
         call CITY_North_VANILLA_6;
      else
         call hunters;
   end
end

procedure Necrop_table begin
   ranger_perk_reroll_enc(2, 3, 5, 7, -1);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end
   if (Encounter_Num) then begin
      if (Encounter_Num == 1) then
         call Necrop_1;
      else if (Encounter_Num == 2) then
         call Necrop_2;
      else if (Encounter_Num == 3) then
         call Necrop_3;
      else if (Encounter_Num == 4) then
         call Necrop_4;
      else if (Encounter_Num == 5) then
         call Necrop_5;
      else if (Encounter_Num == 6) then
         call Necrop_6;
      else
         call hunters;
   end
end

procedure Necrop_1 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 139));
   Tot_Critter_A := random(4, 8);
   Tot_Critter_B := random(4, 8);
   Outer_ring := (dude_enc_perception / 2) + 6;
   Inner_ring := (dude_enc_perception / 2) + 3;
   group_angle := random(0, 5);

   Critter_script := SCRIPT_RADSCORP;
   Critter_spawn_hex := Critter_spawn_hex + (200 * (random(0, 4) - 2));
   while(Tot_Critter_A) do begin
      if (random(0, 3) == 3) then begin
         Critter_type := PID_NASTY_RADSCORPION;
      end
      else begin
         Critter_type := PID_RADSCORPION;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end

      obj_rotate(Critter, Critter_direction);
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   victim := Critter;
   Critter_script := SCRIPT_WANRATS;

   enc_group_angle(group_angle)

   while(Tot_Critter_B) do begin
      if (random(0, 2) == 2) then begin
         Critter_type := PID_GREATER_MOLE_RAT;
      end
      else begin
         Critter_type := PID_LESSER_MOLE_RAT;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   attack_setup(Critter, victim);
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Necrop_2 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 139));
   Tot_Critter_A := random(2, 4);
   Tot_Critter_B := random(2, 4);
   Outer_ring := (dude_enc_perception / 2) + 6;
   Inner_ring := (dude_enc_perception / 2) + 3;
   group_angle := random(0, 5);
   Critter_script := SCRIPT_RADSCORP;
   Critter_spawn_hex := Critter_spawn_hex + (200 * (random(0, 4) - 2));
   while(Tot_Critter_A) do begin
      if (random(0, 3) == 3) then begin
         Critter_type := PID_NASTY_RADSCORPION;
      end
      else begin
         Critter_type := PID_RADSCORPION;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   victim := Critter;
   Critter_script := SCRIPT_WANRATS;

   enc_group_angle(group_angle)

   while(Tot_Critter_B) do begin
      if (random(0, 2) == 2) then begin
         Critter_type := PID_GREATER_MOLE_RAT;
      end
      else begin
         Critter_type := PID_LESSER_MOLE_RAT;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   attack_setup(Critter, victim);
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Necrop_3 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 127));
   Tot_Critter_A := random(2, 5);
   Outer_ring := (dude_enc_perception / 3) + 4;
   Inner_ring := (dude_enc_perception / 3) + 2;
   group_angle := random(0, 5);
   Critter_type := PID_ZOMBIE_GUARD;
   Critter_script := SCRIPT_GENZOMBI;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Necrop_4 begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   variable LVar2 := 0;

   display_msg(message_str(SCRIPT_RNDDESRT, 128));
   Item := create_object(PID_BOXES_2, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(5, 8)), 0);
   Item := create_object(PID_BOXES_3, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(5, 8)), 0);
   Item := create_object(PID_TRASH_CAN, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(5, 8)), 0);

   if ((random(0, 3) == 3) or is_success(do_check(dude_obj, STAT_lu, -1))) then begin
      LVar1 := tile_num_in_direction(dude_tile, random(0, 5), random(0, 5));
      LVar2 := random(0, 4);
      if (LVar2 == 0) then begin
         LVar0 := create_object(PID_10MM_JHP, LVar1, 0);
      end
      else if (LVar2 == 1) then begin
         LVar0 := create_object(PID_10MM_AP, LVar1, 0);
      end
      else if (LVar2 == 2) then begin
         LVar0 := create_object(PID_223_FMJ, LVar1, 0);
      end
      else if (LVar2 == 3) then begin
         LVar0 := create_object(PID_44_MAGNUM_JHP, LVar1, 0);
      end
      else if (LVar2 == 4) then begin
         LVar0 := create_object(PID_44_FMJ_MAGNUM, LVar1, 0);
      end
   end

   LVar1 := tile_num_in_direction(dude_tile, random(0, 5), random(3, 5));
   LVar0 := create_object(PID_JUNK_TIRE, LVar1, 0);
   LVar1 := tile_num_in_direction(dude_tile, random(0, 5), random(3, 5));
   LVar0 := create_object(PID_METAL_BARREL_1, LVar1, 0);
   LVar1 := tile_num_in_direction(dude_tile, random(0, 5), random(3, 5));
   LVar0 := create_object(PID_ROCKS_3, LVar1, 0);

   Tot_Critter_A := random(2, 3);
   Outer_ring := (dude_enc_perception / 3) + 10;
   Inner_ring := (dude_enc_perception / 3) + 8;
   group_angle := random(0, 5);

   Critter_type := PID_ZOMBIE_GUARD;
   Critter_script := SCRIPT_GENZOMBI;

   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Necrop_5 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 127));
   Tot_Critter_A := random(2, 3);
   Outer_ring := (dude_enc_perception / 3) + 4;
   Inner_ring := (dude_enc_perception / 3) + 2;
   group_angle := random(0, 5);
   Critter_type := PID_ZOMBIE_GUARD;
   Critter_script := SCRIPT_GENZOMBI;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Necrop_6 begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   display_msg(message_str(SCRIPT_RNDDESRT, 130));
   Outer_ring := (dude_enc_perception / 3) + 4;
   Inner_ring := (dude_enc_perception / 3) + 2;
   if (random(0, 1)) then begin
      Critter_type := PID_MAN_JEANS;
   end
   else begin
      Critter_type := PID_WOMAN_YELLOW;
   end
   Critter_script := -1;
   Critter_direction := random(0, 5);
   call Place_critter;
   obj_rotate(Critter, random(0, 5));
   if (random(0, 3) == 3) then begin
      LVar1 := create_object(PID_STIMPAK, 0, 0);
      add_obj_to_inven(Critter, LVar1);
   end
   if (random(0, 3) == 3) then begin
      item_caps_adjust(Critter, fortune_finder(random(50, 100)));
   end
   if (random(0, 3) == 3) then begin
      LVar1 := create_object(PID_BACKPACK, 0, 0);
      add_obj_to_inven(Critter, LVar1);
   end
   if (random(0, 3) == 3) then begin
      LVar1 := create_object(PID_HUNTING_RIFLE, 0, 0);
      add_obj_to_inven(Critter, LVar1);
   end
   if (random(0, 3) == 3) then begin
      LVar1 := create_object(PID_10MM_PISTOL, 0, 0);
      add_obj_to_inven(Critter, LVar1);
   end

   if not(fo1in2_destroy_armor_enabled) then begin
      if (random(0, 3) == 3) then begin
         LVar1 := create_object(PID_LEATHER_ARMOR, 0, 0);
         add_obj_to_inven(Critter, LVar1);
      end
   end

   if (random(0, 3) == 3) then begin
      LVar1 := create_object(PID_ROPE, 0, 0);
      add_obj_to_inven(Critter, LVar1);
   end
   if (random(0, 3) == 3) then begin
      LVar1 := create_object(PID_DYNAMITE, 0, 0);
      add_obj_to_inven(Critter, LVar1);
   end
   LVar1 := create_object(PID_NUKA_COLA, 0, 0);
   add_obj_to_inven(Critter, LVar1);
   item_caps_adjust(Critter, fortune_finder(random(3, 9)));
   kill_critter(Critter, ANIM_fall_back_blood_sf);
end

procedure Vats_table begin
   ranger_perk_reroll_enc(1, 2, 3, 4, 7);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end

   if (Encounter_Num) then begin
      call choose_start;
      if (Encounter_Num == 1) then begin
         call Vats_1;
      end
      else if (Encounter_Num == 2) then begin
         call Vats_2;
      end
      else if (Encounter_Num == 3) then begin
         call Vats_3;
      end
      else if (Encounter_Num == 4) then begin
         call Vats_4;
      end
      else if (Encounter_Num == 5) then begin
         call Vats_5;
      end
      else if (Encounter_Num == 6) then begin
         call Vats_6;
      end
      else begin
         call hunters;
      end
   end

end

procedure Vats_1 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 253));
   radiation_inc(dude_obj, random(15, 30));
   Tot_Critter_A := random(3, 4);
   Tot_Critter_B := 1;
   Outer_ring := (dude_enc_perception / 3) + 6;
   Inner_ring := (dude_enc_perception / 3) + 3;
   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      if (random(0, 1) == 1) then begin
         if (random(0, 3) == 0) then begin
            Item := create_object(PID_FLAMER, 0, 0);
         end
         else begin
            Item := create_object(PID_MINIGUN, 0, 0);
         end
      end
      else begin
         Item := create_object(PID_SPIKED_KNUCKLES, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   Critter_type := PID_NIGHTKIN;
   Critter_script := SCRIPT_SUPAMBSH;
   while(Tot_Critter_B) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Item := create_object(PID_MINIGUN, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_5MM_JHP, 0, 0);
      add_obj_to_inven(Critter, Item);
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Vats_2 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 254));
   radiation_inc(dude_obj, random(15, 30));
   if (random(0, 1)) then begin
      Critter_type := PID_CENTAUR_LESSER;//   LESSER CENTAUR
      Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
   end
   else begin
      Critter_type := PID_FLOATER;//  FLOATER
      Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
   end
   Tot_Critter_A := random(3, 5);
   Outer_ring := (dude_enc_perception / 3) + 5;
   Inner_ring := (dude_enc_perception / 3) + 2;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Vats_3 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 306));
   radiation_inc(dude_obj, random(15, 30));
   Tot_Critter_A := random(1, 2);
   Outer_ring := (dude_enc_perception / 3) + 4;
   Inner_ring := (dude_enc_perception / 3) + 2;

   Critter_type := PID_FLOATER;
   Critter_script := SCRIPT_FLOATER;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_CENTAUR_LESSER;
   Critter_script := SCRIPT_FLOATER;
   Tot_Critter_A := 1;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   Outer_ring := (dude_enc_perception / 2) + 6;
   Inner_ring := (dude_enc_perception / 2) + 3;
   Tot_Critter_A := random(2, 3);

   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   Critter_type := PID_NIGHTKIN;
   Critter_script := SCRIPT_SUPAMBSH;
   Critter_direction := random(0, 2);
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   Item := create_object(PID_LASER_RIFLE, 0, 0);
   add_obj_to_inven(Critter, Item);
   Item := create_object(PID_MICRO_FUSION_CELL, 0, 0);
   add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 2);
   if (not(dude_item_count(PID_RADIO))) then begin
      Item := create_object(PID_RADIO, 0, 0);
      add_obj_to_inven(Critter, Item);
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Vats_4 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 256));
   radiation_inc(dude_obj, random(15, 30));
   Tot_Critter_A := random(3, 4);
   Outer_ring := (dude_enc_perception / 2) + 7;
   Inner_ring := (dude_enc_perception / 2) + 6;

   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, random(3, 4));
      if (random(0, 1) == 1) then begin
         if (random(0, 1) == 1) then begin
            Item := create_object(PID_FLAMER, 0, 0);
         end
         else begin
            Item := create_object(PID_MINIGUN, 0, 0);
         end
      end
      else begin
         Item := create_object(PID_SPIKED_KNUCKLES, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_NIGHTKIN;
   Critter_script := SCRIPT_SUPAMBSH;
   Tot_Critter_B := 1;
   while(Tot_Critter_B) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, random(3, 4));
      Item := create_object(PID_MINIGUN, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_5MM_JHP, 0, 0);
      add_obj_to_inven(Critter, Item);
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   Outer_ring := (dude_enc_perception / 3) + 5;
   Inner_ring := (dude_enc_perception / 3) + 3;

   Critter_type := PID_FLOATER;
   Critter_script := SCRIPT_FLOATER;
   Critter_direction := random(0, 2);
   call Place_critter;
   obj_rotate(Critter, random(3, 4));

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Vats_5 begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   LVar0 := random(1, 6);
   Skill_roll := roll_vs_skill(dude_obj, SKILL_OUTDOORSMAN, 20 * dude_perk(PERK_survivalist));
   radiation_inc(dude_obj, random(15, 30));
   if (is_success(Skill_roll)) then begin
      if (LVar0 == 1) then begin
         display_msg(message_str(SCRIPT_RNDDESRT, 109));
      end
      else begin
         display_msg(message_str(SCRIPT_RNDDESRT, 110) + LVar0 + message_str(SCRIPT_RNDDESRT, 111));
      end
   end
   else begin
      if (is_critical(Skill_roll)) then begin
         LVar1 := random(2, 4);
         if (LVar0 == 1) then begin
            display_msg(message_str(SCRIPT_RNDDESRT, 112) + LVar1 + message_str(SCRIPT_RNDDESRT, 113));
         end
         else begin
            display_msg(message_str(SCRIPT_RNDDESRT, 114) + LVar0 + message_str(SCRIPT_RNDDESRT, 115) + LVar1 + message_str(SCRIPT_RNDDESRT, 116));
         end
         critter_injure(dude_obj, DAM_KNOCKED_DOWN);//    DAM_KNOCKED_DOWN       2     <-- DOES NOT WORK!!!
      end
      else begin
         LVar1 := random(1, 2);
         if (LVar0 == 1) then begin
            if (LVar1 == 1) then begin
               display_msg(message_str(SCRIPT_RNDDESRT, 117));
            end
            else begin
               display_msg(message_str(SCRIPT_RNDDESRT, 118) + LVar1 + message_str(SCRIPT_RNDDESRT, 119));
            end
            critter_injure(dude_obj, DAM_KNOCKED_DOWN);//    DAM_KNOCKED_DOWN       2     <-- DOES NOT WORK!!!
         end
         else begin
            if (LVar1 == 1) then begin
               display_msg(message_str(SCRIPT_RNDDESRT, 120) + LVar0 + message_str(SCRIPT_RNDDESRT, 121));
            end
            else begin
               display_msg(message_str(SCRIPT_RNDDESRT, 122) + LVar0 + message_str(SCRIPT_RNDDESRT, 123) + LVar1 + message_str(SCRIPT_RNDDESRT, 124));
            end
            critter_injure(dude_obj, DAM_KNOCKED_DOWN);//    DAM_KNOCKED_DOWN       2     <-- DOES NOT WORK!!!
         end
      end
   end
   LVar0 := LVar0 * 3600;
   game_time_advance(game_ticks(LVar0));
end

procedure Vats_6 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 279));
   radiation_inc(dude_obj, random(15, 30));
   Item := create_object(PID_POT, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(8, 10)), 0);
   Item := create_object(PID_BOXES_2, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(5, 9)), 0);
   Item := create_object(PID_BOXES_3, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(5, 9)), 0);
   Item := create_object(PID_TRASH_CAN, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(5, 9)), 0);
   Item := create_object(PID_CHAIR, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(5, 9)), 0);
   if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
      Item := create_object(PID_BURNING_BARREL, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(8, 10)), 0);
      if (random(0, 1)) then begin
         Item := create_object(PID_BURNING_BARREL, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(8, 10)), 0);
      end
   end
   Outer_ring := (dude_enc_perception / 2) + 6;
   Inner_ring := (dude_enc_perception / 2) + 3;
   group_angle := random(0, 5);

   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   Tot_Critter_A := random(2, 3);
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_NIGHTKIN;
   Critter_script := SCRIPT_SUPAMBSH;
   Critter_direction := random(0, 2);
   Critter_direction := group_angle + (random(0, 2) - 1);
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   Item := create_object(PID_MINIGUN, 0, 0);
   add_obj_to_inven(Critter, Item);
   Item := create_object(PID_5MM_JHP, 0, 0);
   add_obj_to_inven(Critter, Item);
   Outer_ring := (dude_enc_perception / 3) + 5;
   Inner_ring := (dude_enc_perception / 3) + 3;
   Critter_type := PID_FLOATER;//  FLOATER
   Critter_script := SCRIPT_FLOATER;//   FLOATER.SSL
   Tot_Critter_A := 2;

   enc_group_angle(group_angle)

   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end
