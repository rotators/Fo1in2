/*

   Random desert encounter map

*/

#define NAME                    SCRIPT_RNDDESRT

/* Include Files */
#include "define.h"
#include "command.h"
#include "updatmap.h"
#include "mapenc.h"

#include "sfall/lib.arrays.h"

procedure start;
procedure map_enter_p_proc;
procedure map_exit_p_proc;

procedure choose_start;
procedure Place_critter;

procedure Bone_table;
procedure Bone1;
procedure Bone2;
procedure Bone3;
procedure Bone4;
procedure Bone5;
procedure Bone6;

procedure Death_table;
procedure Death1;
procedure Death2;
procedure Death3;
procedure Death4;
procedure Death5;
procedure Death6;

procedure Glow_table;
procedure Glow1;
procedure Glow2;
procedure Glow3;
procedure Glow4;
procedure Glow5;
procedure Glow6;

procedure Hub_table;
procedure Hub1;
procedure Hub2;
procedure Hub3;
procedure Hub4;
procedure Hub5;
procedure Hub6;

procedure Junk_table;
procedure Junk1;
procedure Junk2;
procedure Junk3;
procedure Junk4;
procedure Junk5;
procedure Junk6;

procedure Necrop_table;
procedure Necrop1;
procedure Necrop2;
procedure Necrop3;
procedure Necrop4;
procedure Necrop5;
procedure Necrop6;

procedure North_table;
procedure North1;
procedure North2;
procedure North3;
procedure North4;
procedure North5;
procedure North6;

procedure Raider_table;
procedure Raider1;
procedure Raider2;
procedure Raider3;
procedure Raider4;
procedure Raider5;
procedure Raider6;

procedure Shady_table;
procedure Shady1;
procedure Shady2;
procedure Shady3;
procedure Shady4;
procedure Shady5;
procedure Shady6;

procedure South_table;
procedure South1;
procedure South2;
procedure South3;
procedure South4;
procedure South5;
procedure South6;

procedure Steel_table;
procedure Steel1;
procedure Steel2;
procedure Steel3;
procedure Steel4;
procedure Steel5;
procedure Steel6;

procedure Vats_table;
procedure Vats1;
procedure Vats2;
procedure Vats3;
procedure Vats4;
procedure Vats5;
procedure Vats6;

procedure Geckos;
procedure Golden_Geckos;
procedure Gecko_Hunter;
procedure Gecko_Hunter_Revenge;

export variable random_seed_1;
export variable random_seed_2;
export variable random_seed_3;

variable rnd_critter;
variable party_elevation;

export variable signal_mutants;

// Gecko hunters
export variable hunter_a_ptr;
export variable hunter_b_ptr;

procedure start begin
end

procedure roll_encounter begin
   Encounter_Num := random(1, 18);
   if (dude_luck > 8) then begin
      Encounter_Num := Encounter_Num + 2;
   end
   else if (dude_luck > 6) then begin
      Encounter_Num := Encounter_Num + 1;
   end
   else if (dude_luck < 3) then begin
      Encounter_Num := Encounter_Num - 1;
   end

   if not(bounty_hunter_killed) and has_rep_childkiller and random(0, 1) then begin
      Encounter_Num := 7;
   end
   else if (Encounter_Num <= 3) then begin
      Encounter_Num := 1;
   end
   else if (Encounter_Num <= 5) then begin
      Encounter_Num := 2;
   end
   else if (Encounter_Num <= 8) then begin
      Encounter_Num := 3;
   end
   else if (Encounter_Num <= 12) then begin
      Encounter_Num := 4;
   end
   else if (Encounter_Num <= 15) then begin
      Encounter_Num := 5;
   end
   else begin
      Encounter_Num := 6;
   end
end

procedure map_enter_p_proc begin
   Lighting;
   dude_rot := random(0, 5);
   set_global_var(GVAR_MERCS_RANDOM_ENC_unsure, 0);
   if (map_first_run) and not(is_loading_game) then begin
      Ranger_rerolls := dude_perk(PERK_ranger);
      set_global_var(GVAR_AGGRO_FLAG_RND_ENC_unsure, 0);

      while (Encounter_Num == 0) do begin
         call roll_encounter;
      end

      if (global_var(GVAR_WORLDMAP_TABLE) == 0) then begin
         call North_table;
      end
      else if (global_var(GVAR_WORLDMAP_TABLE) == 1) then begin
         call South_table;
      end
      else if (global_var(GVAR_WORLDMAP_TABLE) == 5) then begin
         call Shady_table;
      end
      else if (global_var(GVAR_WORLDMAP_TABLE) == 2) or (global_var(GVAR_WORLDMAP_TABLE) == 6) then begin
         call Raider_table;
      end
      else if (global_var(GVAR_WORLDMAP_TABLE) == 7) then begin
         call Junk_table;
      end
      else if (global_var(GVAR_WORLDMAP_TABLE) == 8) then begin
         call Hub_table;
      end
      else if (global_var(GVAR_WORLDMAP_TABLE) == 9) then begin
         call Necrop_table;
      end
      else if (global_var(GVAR_WORLDMAP_TABLE) == 10) then begin
         call Steel_table;
      end
      else if (global_var(GVAR_WORLDMAP_TABLE) == 11) then begin
         call Vats_table;
      end
      else if (global_var(GVAR_WORLDMAP_TABLE) == 12) then begin
         call Glow_table;
      end
      else if (global_var(GVAR_WORLDMAP_TABLE) == 14) then begin
         call Death_table;
      end
      else if (global_var(GVAR_WORLDMAP_TABLE) == 13) then begin
         call Bone_table;
      end
      else begin
         if (random(0, 1)) then begin
            call North_table;
         end
         else begin
            call South_table;
         end
      end

   end
end

procedure map_update_p_proc begin
   Lighting;
end

procedure map_exit_p_proc begin
   set_car_exit_map
end

procedure Place_critter begin
   variable Facing := 0;
   variable Distance := 0;
   variable Ring := 0;
   Critter := create_object_sid(Critter_type, 0, 0, Critter_script);
   Ring := random(Inner_ring, Outer_ring);
   Facing := random(0, 5);
   Critter_tile := tile_num_in_direction(Critter_spawn_hex, Critter_direction, Ring);
   Distance := tile_num_in_direction(Critter_tile, Facing, (Ring / 2));
   if ((tile_distance(Critter_spawn_hex, Distance) <= Outer_ring) and (tile_distance(Critter_spawn_hex, Distance) >= Inner_ring)) then begin
      Critter_tile := tile_num_in_direction(Critter_tile, Facing, (Ring / 2));
   end
   critter_attempt_placement(Critter, Critter_tile, dude_elevation);
end

procedure choose_start begin
   dude_pos := random(0, 3);
   if (global_var(GVAR_WORLDMAP_TABLE) == 1) then begin
      if (Encounter_Num == 1) then begin
         override_map_start(93, 91, 0, 1);
      end
      else begin
         if (dude_pos == 0) then
            override_map_start(109, 72, 0, dude_rot);
         else if (dude_pos == 1) then
            override_map_start(131, 102, 0, dude_rot);
         else if (dude_pos == 2) then
            override_map_start(90, 112, 0, dude_rot);
         else
            override_map_start(80, 86, 0, dude_rot);
      end
   end
   else if (global_var(GVAR_WORLDMAP_TABLE) == 10) then begin
      if ((Encounter_Num == 1) or (Encounter_Num == 5) or (Encounter_Num == 6)) then begin
         override_map_start(100, 100, 0, dude_rot);
      end
      else begin
         if (dude_pos == 0) then
            override_map_start(109, 72, 0, dude_rot);
         else if (dude_pos == 1) then
            override_map_start(131, 102, 0, dude_rot);
         else if (dude_pos == 2) then
            override_map_start(90, 112, 0, dude_rot);
         else
            override_map_start(80, 86, 0, dude_rot);
      end
   end
   else begin
      if (dude_pos == 0) then
         override_map_start(109, 72, 0, dude_rot);
      else if (dude_pos == 1) then
         override_map_start(131, 102, 0, dude_rot);
      else if (dude_pos == 2) then
         override_map_start(90, 112, 0, dude_rot);
      else
         override_map_start(80, 86, 0, dude_rot);
   end
   Critter_spawn_hex := dude_tile;
   call Scenes(0);
end

procedure North_table begin
   ranger_perk_reroll_enc(1, 2, 3, 4, 7);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end
   if (Encounter_Num) then begin
      debug("Desert NORTH loading Encounter_Num == " + Encounter_Num + " ");
      call choose_start;

      //Encounter_Num := 1;

      if (Encounter_Num == 1) then begin
         call North1;
      end
      else if (Encounter_Num == 2) then begin
         call North2;
      end
      else if (Encounter_Num == 3) then begin
         call North3;
      end
      else if (Encounter_Num == 4) then begin
         call North4;
      end
      else if (Encounter_Num == 5) then begin
         call North5;
      end
      else if (Encounter_Num == 6) then begin
         call North6;
      end
      else begin
         call hunters;
      end

   end
end

procedure South_table begin
   ranger_perk_reroll_enc(2, 4, 5, 6, 7);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end
   if (Encounter_Num) then begin
      debug("Desert SOUTH loading Encounter_Num == " + Encounter_Num + " ");
      call choose_start;

      if (Encounter_Num == 1) then begin
         call South1;
      end
      else if (Encounter_Num == 2) then begin
         call South2;
      end
      else if (Encounter_Num == 3) then begin
         call South3;
      end
      else if (Encounter_Num == 4) then begin
         call South4;
      end
      else if (Encounter_Num == 5) then begin
         call South5;
      end
      else if (Encounter_Num == 6) then begin
         call South6;
      end
      else begin
         call hunters;
      end

   end
end

procedure Shady_table begin
   ranger_perk_reroll_enc(1, 3, 7, -1, -1);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end
   if (Encounter_Num) then begin
      debug("Desert SHADY loading Encounter_Num == " + Encounter_Num + " ");
      call choose_start;

      if (Encounter_Num == 1) then begin
         call Shady1;
      end
      else if (Encounter_Num == 2) then begin
         call Shady2;
      end
      else if (Encounter_Num == 3) then begin
         call Shady3;
      end
      else if (Encounter_Num == 4) then begin
         if not(shady_invaded) then begin
            if (global_var(GVAR_IS_DUC_ALIVE) < 2) then
               call Shady4;
            else
               call Shady3;
         end
         else begin
            call Vats4;//Nightkin, Mean Super Mutant, Floater
         end
      end
      else if (Encounter_Num == 5) then begin
         if (global_var(GVAR_LANCE_DEAD_ALREADY_SEEN) != 2) then
            call Shady5;
         else
            call Shady2;
      end
      else if (Encounter_Num == 6) then begin
         call Shady6;
      end
      else begin
         call hunters;
      end

   end
end

procedure Raider_table begin
   ranger_perk_reroll_enc(1, 3, 4, 7, -1);

   if (hub_invaded and (Encounter_Num == 3)) then begin
      Encounter_Num := 4;
   end

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end
   if (Encounter_Num) then begin
      debug("Desert RAIDER loading Encounter_Num == " + Encounter_Num + " ");
      call choose_start;

      if (Encounter_Num == 1) then begin
         call Raider1;
      end
      else if (Encounter_Num == 2) then begin
         call Raider2;
      end
      else if (Encounter_Num == 3) then begin
         call Raider3;
      end
      else if (Encounter_Num == 4) then begin
         call Raider4;
      end
      else if (Encounter_Num == 5) then begin
         call Raider5;
      end
      else if (Encounter_Num == 6) then begin
         call Raider6;
      end
      else begin
         call hunters;
      end

   end
end

procedure Junk_table begin
   ranger_perk_reroll_enc(1, 2, 3, 4, 7);

   if (junktown_invaded and (Encounter_Num == 5)) then begin
      Encounter_Num := random(1, 4);
   end

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end
   if (Encounter_Num) then begin
      debug("Desert JUNK loading Encounter_Num == " + Encounter_Num + " ");
      call choose_start;

      if (Encounter_Num == 1) then begin
         call Junk1;
      end
      else if (Encounter_Num == 2) then begin
         call Junk2;
      end
      else if (Encounter_Num == 3) then begin
         call Junk3;
      end
      else if (Encounter_Num == 4) then begin
         if not(junktown_invaded) then // if Junktown not invaded
            call Junk4;
         else
            call Vats4;//Nightkin, Mean Super Mutant, Floater
      end
      else if (Encounter_Num == 5) then begin
         call Junk5;
      end
      else if (Encounter_Num == 6) then begin
         call Junk6;
      end
      else begin
         call hunters;
      end

   end
end

procedure Hub_table begin
   ranger_perk_reroll_enc(2, 3, 4, 7, -1);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end

   if (Encounter_Num) then begin
      debug("Desert HUB loading Encounter_Num == " + Encounter_Num + " ");
      call choose_start;
      if (Encounter_Num == 1) then begin
         call Hub1;
      end
      else if (Encounter_Num == 2) then begin
         call Hub2;
      end
      else if (Encounter_Num == 3) then begin
         call Hub3;
      end
      else if (Encounter_Num == 4) then begin
         if not(hub_invaded) then
            call Hub4;
         else // if The Hub invaded
            call Vats4;//Nightkin, Mean Super Mutant, Floater
      end
      else if (Encounter_Num == 5) then begin
         call Hub5;
      end
      else if (Encounter_Num == 6) then begin
         call Hub6;
      end
      else begin
         call hunters;
      end
   end
end

procedure Necrop_table begin
   ranger_perk_reroll_enc(2, 3, 5, 7, -1);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end

   //Encounter_Num := 1;

   if (Encounter_Num) then begin
      debug("Desert NECROP loading Encounter_Num == " + Encounter_Num + " ");
      call choose_start;

      if (Encounter_Num == 1) then begin
         call Necrop1;
      end
      else if (Encounter_Num == 2) then begin
         call Necrop2;
      end
      else if (Encounter_Num == 3) then begin
         call Necrop3;
      end
      else if (Encounter_Num == 4) then begin
         call Necrop4;
      end
      else if (Encounter_Num == 5) then begin
         call Necrop5;
      end
      else if (Encounter_Num == 6) then begin
         call Necrop6;
      end
      else begin
         call hunters;
      end
   end

end

procedure Steel_table begin
   ranger_perk_reroll_enc(1, 2, 4, 7, -1);

   if (bos_invaded and (Encounter_Num == 6)) then begin
      Encounter_Num := random(1, 5);
   end
   if (hub_invaded and (Encounter_Num == 5)) then begin
      Encounter_Num := random(1, 4);
   end

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end
   if (Encounter_Num) then begin
      debug("Desert STEEL loading Encounter_Num == " + Encounter_Num + " ");
      call choose_start;

      if (Encounter_Num == 1) then begin
         if not(bos_invaded) then
            call Steel1;
         else
            call Vats4;//what encounter is this
      end
      else if (Encounter_Num == 2) then begin
         call Steel2;
      end
      else if (Encounter_Num == 3) then begin
         call Steel3;
      end
      else if (Encounter_Num == 4) then begin
         if not(bos_invaded) then
            call Steel4;
         else
            call Vats4;
      end
      else if (Encounter_Num == 5) then begin
         call Steel5;
      end
      else if (Encounter_Num == 6) then begin
         call Steel6;
      end
      else begin
         call hunters;
      end

   end
end

procedure Vats_table begin
   ranger_perk_reroll_enc(1, 2, 3, 4, 7);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end
   if (Encounter_Num) then begin
      debug("Desert VATS loading Encounter_Num == " + Encounter_Num + " ");
      call choose_start;

      if (Encounter_Num == 1) then begin
         call Vats1;
      end
      else if (Encounter_Num == 2) then begin
         call Vats2;
      end
      else if (Encounter_Num == 3) then begin
         call Vats3;
      end
      else if (Encounter_Num == 4) then begin
         call Vats4;
      end
      else if (Encounter_Num == 5) then begin
         call Vats5;
      end
      else if (Encounter_Num == 6) then begin
         call Vats6;
      end
      else begin
         call hunters;
      end

   end
end

procedure Glow_table begin
   ranger_perk_reroll_enc(1, 3, 4, 5, 7);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end
   if (Encounter_Num) then begin
      debug("Desert GLOW loading Encounter_Num == " + Encounter_Num + " ");
      call choose_start;

      if (Encounter_Num == 1) then begin
         call Glow1;
      end
      else if (Encounter_Num == 2) then begin
         call Glow2;
      end
      else if (Encounter_Num == 3) then begin
         call Glow3;
      end
      else if (Encounter_Num == 4) then begin
         call Glow4;
      end
      else if (Encounter_Num == 5) then begin
         call Glow5;
      end
      else if (Encounter_Num == 6) then begin
         call Glow6;
      end
      else begin
         call hunters;
      end

   end
end

procedure Bone_table begin
   ranger_perk_reroll_enc(1, 3, 5, 7, -1);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end
   if (Encounter_Num) then begin
      debug("Desert BONE loading Encounter_Num == " + Encounter_Num + " ");
      call choose_start;

      if (Encounter_Num == 1) then begin
         call Bone1;
      end
      else if (Encounter_Num == 2) then begin
         call Bone2;
      end
      else if (Encounter_Num == 3) then begin
         call Bone3;
      end
      else if (Encounter_Num == 4) then begin
         call Bone4;
      end
      else if (Encounter_Num == 5) then begin
         call Bone5;
      end
      else if (Encounter_Num == 6) then begin
         call Bone6;
      end
      else begin
         call hunters;
      end

   end
end

procedure Death_table begin
   ranger_perk_reroll_enc(1, 2, 4, 6, 7);

   if (global_var(GVAR_RANDOM_ENC_SOMETHING) > 0) then begin
      debug_msg(" ");  debug_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");  display_msg("Warning : GLOBALVAR 295 contains a value; Encounter_Num is now GVAR295 which is: " + global_var(GVAR_RANDOM_ENC_SOMETHING) + " ");
      Encounter_Num := global_var(GVAR_RANDOM_ENC_SOMETHING);
      set_global_var(GVAR_RANDOM_ENC_SOMETHING, 0);
   end
   if (Encounter_Num) then begin
      debug("Desert DEATH loading Encounter_Num == " + Encounter_Num + " ");
      call choose_start;

      if (Encounter_Num == 1) then begin
         call Death1;
      end
      else if (Encounter_Num == 2) then begin
         call Death2;
      end
      else if (Encounter_Num == 3) then begin
         call Death3;
      end
      else if (Encounter_Num == 4) then begin
         call Death4;
      end
      else if (Encounter_Num == 5) then begin
         call Death5;
      end
      else if (Encounter_Num == 6) then begin
         call Death6;
      end
      else begin
         call hunters;
      end

   end
end


procedure Shady1 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 146));
   Tot_Critter_A := 2;
   Tot_Critter_B := random(2, 3);
   set_global_var(GVAR_RND_ENC_RAIDERS_KILLED, 0);
   set_global_var(GVAR_RND_ENC_PEASANTS_HOSTILE, 0);
   set_global_var(GVAR_RND_ENC_PEASANTS_INIT, 0);
   set_global_var(GVAR_WATER_THIEF_2, Tot_Critter_B);
   set_global_var(GVAR_MYST_STRANGER_ITEM, 6);
   group_angle := random(0, 5);
   Outer_ring := 11;
   Inner_ring := 8;
   Critter_type := PID_PEASANT_YELLOW_FEMALE;
   Critter_script := SCRIPT_PEASVICT;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      item_caps_adjust(Critter, fortune_finder(random(1, 12)));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   victim := Critter;
   Critter_type := PID_TRAVELER_BALD_LEATHER;
   Critter_script := SCRIPT_GENRAIDA;

   enc_group_angle(group_angle)

   while(Tot_Critter_B) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Item := create_object(PID_SPEAR, 0, 0);
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      item_caps_adjust(Critter, fortune_finder(random(1, 13)));
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   attack_setup(Critter, victim);
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Shady2 begin
   if fo1in2_fluff_enc_disabled then
      call Shady3;
   else
      call dehydration_a;
end

procedure Shady3 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 169));
   Tot_Critter_A := random(2, 4);//was 1, 3
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 3;
   Critter_type := PID_RADSCORPION;
   Critter_script := SCRIPT_RADSCORP;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 4);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Shady4 begin
   if (global_var(GVAR_IS_DUC_ALIVE) == 0) then
      display_msg(message_str(SCRIPT_RNDDESRT, 170));
   else if (global_var(GVAR_IS_DUC_ALIVE) == 1) then
         display_msg(message_str(SCRIPT_RNDDESRT, 305));

   if (global_var(GVAR_IS_DUC_ALIVE) == 0) then begin
      Tot_Critter_B := random(4, 6);
      Outer_ring := (dude_perception / 2) + 7;
      Inner_ring := (dude_perception / 2) + 3;
      group_angle := dude_rot;
      set_global_var(GVAR_WATER_THIEF_2, 0);

      Critter_type := PID_PEASANT_YELLOW;
      Critter_script := SCRIPT_DUC;
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Item := create_object(PID_MUTATED_FRUIT, 0, 0);
      add_obj_to_inven(Critter, Item);

      Item := create_object(PID_10MM_JHP, 0, 0);
      add_mult_objs_to_inven(Critter, Item, 2 * (dude_perk(PERK_scrounger) + 1));
      Item := create_object(PID_10MM_AP, 0, 0);
      add_mult_objs_to_inven(Critter, Item, 1 * (dude_perk(PERK_scrounger) + 1));
      Item := create_object(PID_223_FMJ, 0, 0);
      add_mult_objs_to_inven(Critter, Item, 2 * (dude_perk(PERK_scrounger) + 1));

      Item := create_object(PID_STIMPAK, 0, 0);
      add_mult_objs_to_inven(Critter, Item, random(0, 4));
      Item := create_object(PID_FIRST_AID_KIT, 0, 0);
      add_mult_objs_to_inven(Critter, Item, random(0, 1));
      Item := create_object(PID_IGUANA_ON_A_STICK, 0, 0);
      add_mult_objs_to_inven(Critter, Item, random(0, 3));

      item_caps_adjust(Critter, fortune_finder(random(25, 100)));
      victim := Critter;
   end
   else if (global_var(GVAR_IS_DUC_ALIVE) == 1) then begin
      Tot_Critter_B := random(2, 3);
      Outer_ring := (dude_perception / 2) + 7;
      Inner_ring := (dude_perception / 2) + 3;
      group_angle := dude_rot;
      set_global_var(GVAR_WATER_THIEF_2, 1);
      set_global_var(GVAR_IS_DUC_ALIVE, (global_var(GVAR_IS_DUC_ALIVE) + 1));
   end

   Critter_type := PID_TOWNSMAN_LEATHER;
   Critter_script := SCRIPT_GENGRDC;
   while(Tot_Critter_B) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      if (global_var(GVAR_IS_DUC_ALIVE) == 0) then begin
         if (random(0, 1)) then begin
            Critter_direction := group_angle + (random(0, 4) - 2);
            while(Critter_direction < 0) do begin
               Critter_direction := Critter_direction + 6;
            end
            if (Critter_direction > 5) then begin
               Critter_direction := Critter_direction % 6;
            end
            obj_rotate(Critter, Critter_direction);
         end
         else begin
            obj_rotate(Critter, rotation_to_tile(tile_num(Critter), tile_num(victim)));
         end
      end
      else begin
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      end
      Item := create_object(PID_HUNTING_RIFLE, 0, 0);
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      Item := create_object(PID_223_FMJ, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);

      item_caps_adjust(Critter, fortune_finder(random(1, 6)));
      Tot_Critter_B := Tot_Critter_B - 1;
   end
end

procedure Shady5 begin
variable Lance_ptr;

   if ((global_var(GVAR_LANCE_STATUS) bwand 4) != 0) then begin
      display_msg(message_str(SCRIPT_RNDDESRT, 171));
      set_global_var(GVAR_LANCE_DEAD_ALREADY_SEEN, 2);
   end
   else
      display_msg(message_str(SCRIPT_RNDDESRT, 175));

   Outer_ring := (dude_perception / 2) + 4;
   Inner_ring := (dude_perception / 2) + 3;
   Critter_direction := dude_rot;
   Critter_type := PID_TOWNSMAN_LEATHER;
   Critter_script := SCRIPT_LANCE;
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   Lance_ptr := Critter;

   Item := create_object(PID_10MM_PISTOL, 0, 0);
   add_obj_to_inven(Critter, Item);
   wield_obj_critter(Critter, Item);

   Item := create_object(PID_10MM_JHP, 0, 0);
   add_mult_objs_to_inven(Critter, Item, 1 + dude_perk(PERK_scrounger));

   Item := create_object(PID_SPEAR, 0, 0);
   add_obj_to_inven(Critter, Item);

   Item := create_object(PID_IGUANA_ON_A_STICK, 0, 0);
   add_obj_to_inven(Critter, Item);

   item_caps_adjust(Critter, fortune_finder(random(8, 44)));

   if (global_var(GVAR_LANCE_STATUS) != 0) then
      kill_critter(Critter, ANIM_fall_back_blood_sf);

   // Create Mantis
   Tot_Critter_A := random(4, 6);
   if (day) then begin
      Outer_ring := 6;
      Inner_ring := 4;
   end
   else begin
      Outer_ring := 4;
      Inner_ring := 3;
   end

   Critter_type := PID_MANTIS;
   Critter_script := SCRIPT_MANTIS;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 5);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   if (Critter != 0 and Lance_ptr != 0) then
      attack_setup(Critter, Lance_ptr);

   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Shady6 begin
   variable LVar0 := 2;
   variable money;
   display_msg(message_str(SCRIPT_RNDDESRT, 172));

   Critter_direction := random(0, 5);
   money := create_object(PID_BOTTLE_CAPS, 0, 0);
   Critter_tile := tile_num_in_direction(Critter_spawn_hex, Critter_direction, 4);
   Item := create_object(PID_MUTATED_FRUIT, 0, 0);
   critter_attempt_placement(Item, Critter_tile, dude_elevation);
   if (dude_luck == 8) then begin
      money := 0;
      Item := create_object(PID_MUTATED_FRUIT, 0, 0);
      critter_attempt_placement(Item, Critter_tile, dude_elevation);
      Item := create_object(PID_10MM_JHP, 0, 0);
      critter_attempt_placement(Item, Critter_tile, dude_elevation);
      if (dude_perk(PERK_scrounger)) then begin
         Item := create_object(PID_10MM_JHP, 0, 0);
         critter_attempt_placement(Item, Critter_tile, dude_elevation);
      end
      Item := create_object(PID_BAG, 0, 0);
      critter_attempt_placement(Item, Critter_tile, dude_elevation);
      add_mult_objs_to_inven(Item, money, fortune_finder(6));
   end
   else if (dude_luck > 8) then begin
      Item := create_object(PID_MUTATED_FRUIT, 0, 0);
      critter_attempt_placement(Item, Critter_tile, dude_elevation);
      if (dude_perk(PERK_scrounger)) then begin
         LVar0 := 4;
      end
      while(LVar0) do begin
         Item := create_object(PID_10MM_JHP, 0, 0);
         critter_attempt_placement(Item, Critter_tile, dude_elevation);
         LVar0 := LVar0 - 1;
      end
      Item := create_object(PID_BAG, 0, 0);
      add_mult_objs_to_inven(Item, money, fortune_finder(122));
      critter_attempt_placement(Item, Critter_tile, dude_elevation);
      Item := create_object(PID_10MM_PISTOL, 0, 0);
      critter_attempt_placement(Item, Critter_tile, dude_elevation);
   end
   else begin
      Item := create_object(PID_MUTATED_FRUIT, 0, 0);
      critter_attempt_placement(Item, Critter_tile, dude_elevation);
      Item := create_object(PID_BAG, 0, 0);
      add_mult_objs_to_inven(Item, money, fortune_finder(4));
      critter_attempt_placement(Item, Critter_tile, dude_elevation);
   end
end

procedure Raider1 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 133));
   Outer_ring := (dude_perception / 3) + 5;
   Inner_ring := (dude_perception / 3) + 2;
   Tot_Critter_A := random(4, 6);
   group_angle := random(0, 5);
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      if (random(0, 1)) then begin
         if (random(0, 1)) then begin
            Critter_type := PID_TRAVELER_BALD_LEATHER;
         end
         else begin
            Critter_type := PID_GEN_TRAVELER;
         end
      end
      else begin
         Critter_type := PID_TRAVELER_3;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
      if (random(0, 1)) then begin
         if (random(0, 1)) then begin
            if (Critter_type == PID_TRAVELER_BALD_LEATHER) then
               Item := create_object(PID_HUNTING_RIFLE, 0, 0);
            else
               Item := create_object(PID_10MM_SMG, 0, 0);
         end
         else begin
            Item := create_object(PID_DESERT_EAGLE, 0, 0);
         end
      end
      else begin
         Item := create_object(PID_10MM_PISTOL, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      if (random(0, 1)) then begin
         Item := create_object(PID_BEER, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Raider2 begin
   if random(0, 1) then
      display_msg(message_str(SCRIPT_RNDDESRT, 197));
   else
      display_msg(message_str(SCRIPT_RNDDESRT, 143));

   Outer_ring := (dude_perception / 3) + 6;
   Inner_ring := (dude_perception / 3) + 3;
   Tot_Critter_A := random(3, 4);
   group_angle := random(0, 5);
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      if (random(0, 1)) then begin
         if (random(0, 1)) then begin
            Critter_type := PID_TRAVELER_BALD_LEATHER;
         end
         else begin
            Critter_type := PID_GEN_TRAVELER;
         end
      end
      else begin
         Critter_type := PID_TRAVELER_3;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
      if (random(0, 1)) then begin
         if (random(0, 1)) then begin
            if (Critter_type == PID_TRAVELER_BALD_LEATHER) then
               Item := create_object(PID_HUNTING_RIFLE, 0, 0);
            else
               Item := create_object(PID_10MM_SMG, 0, 0);
         end
         else begin
            Item := create_object(PID_DESERT_EAGLE, 0, 0);
         end
      end
      else begin
         Item := create_object(PID_10MM_PISTOL, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      if (random(0, 1)) then begin
         Item := create_object(PID_BEER, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Raider3 begin // Same as Raider1 in RNDMTN
   variable LVar0 := 0;
   display_msg(message_str(SCRIPT_RNDDESRT, 173));
   Inner_ring := (dude_perception / 2) + 4;
   Outer_ring := (dude_perception / 2) + 6;
   Tot_Critter_A := random(5, 7);
   Tot_Critter_B := random(2, 3);
   group_angle := random(0, 5);
   random_seed_1 := Tot_Critter_A;
   random_seed_2 := 0;
   random_seed_3 := 0;

   LVar0 := tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(7, 12));
   Create_EW_Red_Caravan(LVar0, 0)

   if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
      Critter := create_object(PID_BURNING_BARREL, 0, 0);
      Critter_tile := tile_num_in_direction(Critter_spawn_hex, group_angle, 5);
      critter_attempt_placement(Critter, Critter_tile, dude_elevation);
   end

   Critter_script := -1;
   spawn_dead_critter(PID_BRAHMIN, Critter_script, ANIM_fall_back_blood_sf);
   spawn_dead_critter(PID_BRAHMIN, Critter_script, ANIM_fall_back_blood_sf);

   Critter_script := SCRIPT_GENRAIDB;

   while(Tot_Critter_A) do begin
      if (random(0, 1)) then begin
         Critter_type := PID_TRAVELER_BALD_LEATHER;
      end
      else begin
         Critter_type := PID_GEN_TRAVELER;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);

      if (random(0, 1)) then begin
         if (random(0, 1)) then begin
            if (Critter_type == PID_TRAVELER_BALD_LEATHER) then begin
               Item := create_object(PID_223_FMJ, 0, 0);
            end
            else begin
               Item := create_object(PID_10MM_JHP, 0, 0);
            end
            add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
            if (Critter_type == PID_TRAVELER_BALD_LEATHER) then begin
               Item := create_object(PID_HUNTING_RIFLE, 0, 0);
            end
            else begin
               Item := create_object(PID_10MM_SMG, 0, 0);
            end
         end
         else begin
            Item := create_object(PID_10MM_JHP, 0, 0);
            add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
            Item := create_object(PID_10MM_PISTOL, 0, 0);
         end
      end
      else begin
         Item := create_object(PID_SPEAR, 0, 0);
      end

      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      Tot_Critter_A := Tot_Critter_A - 1;
   end
   victim := Critter;
   if (random(0, 1)) then begin
      Critter_type := PID_TRAVELER_BALD_LEATHER;
   end
   else begin
      Critter_type := PID_GEN_TRAVELER;
   end
   Critter_script := -1;
   Critter_direction := group_angle + (random(0, 2) - 1);
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;

   enc_group_angle(Critter_direction)

   if (random(0, 2) == 0) then begin
      Critter_direction := Critter_direction + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
   end
   obj_rotate(Critter, Critter_direction);

   if fo1in2_destroy_armor_enabled then begin
      Item := create_object(PID_LEATHER_ARMOR, 0, 0);
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);
   end

   Item := create_object(PID_KNIFE, 0, 0);
   add_obj_to_inven(Critter, Item);
   kill_critter(Critter, ANIM_fall_back_blood_sf);
   Critter_type := PID_TOWNSMAN_METAL;
   Critter_script := SCRIPT_GENGRDA;


   enc_group_angle(group_angle)

   while(Tot_Critter_B) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Item := create_object(PID_HUNTING_RIFLE, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_223_FMJ, 0, 0);
      add_obj_to_inven(Critter, Item);
      if (dude_perk(PERK_scrounger)) then begin
         Item := create_object(PID_223_FMJ, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   attack_setup(victim, Critter);
   Critter_type := PID_TOWNSMAN_METAL;
   Critter_script := -1;
   Critter_direction := group_angle + (random(0, 2) - 1);
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;

   enc_group_angle(Critter_direction)

   if (random(0, 2) == 0) then begin
      Critter_direction := Critter_direction + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
   end
   obj_rotate(Critter, Critter_direction);
   Item := create_object(PID_METAL_ARMOR, 0, 0);
   add_obj_to_inven(Critter, Item);
   Item := create_object(PID_HUNTING_RIFLE, 0, 0);
   add_obj_to_inven(Critter, Item);
   Item := create_object(PID_223_FMJ, 0, 0);
   add_obj_to_inven(Critter, Item);
   kill_critter(Critter, ANIM_fall_back_blood_sf);

   Critter_type := PID_MERCHANT;
   Critter_script := SCRIPT_GENMERCB;
   Critter_direction := random(0, 5);
   call Place_critter;
   critter_heal(Critter, -5);
   item_caps_adjust(Critter, fortune_finder(random(100, 300)));
   if (random(1, 10) > 6) then begin
      Item := create_object(PID_FIRST_AID_KIT, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   if (random(1, 10) > 6) then begin
      Item := create_object(PID_STIMPAK, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   if (random(1, 10) > 6) then begin
      Item := create_object(PID_FUZZY_PAINTING, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   if (random(1, 10) > 6) then begin
      Item := create_object(PID_LOCKPICKS, 0, 0);
      add_obj_to_inven(Critter, Item);
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Raider4 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 310));
   Outer_ring := (dude_perception / 3) + 6;
   Inner_ring := (dude_perception / 3) + 3;
   Tot_Critter_A := random(2, 3);
   group_angle := random(0, 5);
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      if (random(0, 1)) then begin
         if (random(0, 1)) then begin
            Critter_type := PID_TRAVELER_BALD_LEATHER;
         end
         else begin
            Critter_type := PID_GEN_TRAVELER;
         end
      end
      else begin
         Critter_type := PID_TRAVELER_3;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
      if (random(0, 1)) then begin
         if (random(0, 1)) then begin
            if (Critter_type == PID_TRAVELER_BALD_LEATHER) then begin
               Item := create_object(PID_HUNTING_RIFLE, 0, 0);
            end
            else begin
               Item := create_object(PID_10MM_SMG, 0, 0);
            end
         end
         else begin
            Item := create_object(PID_DESERT_EAGLE, 0, 0);
         end
      end
      else begin
         Item := create_object(PID_10MM_PISTOL, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      if (random(0, 1)) then begin
         Item := create_object(PID_BEER, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Raider5 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 198));
   Outer_ring := (dude_perception / 2) + 5;
   Inner_ring := (dude_perception / 2) + 2;
   Critter_direction := dude_rot;
   Critter_type := PID_MAN_JEANS;
   Critter_script := SCRIPT_LONERAID;
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   Item := create_object(PID_KNIFE, 0, 0);
   add_obj_to_inven(Critter, Item);
   if (random(0, 1)) then begin
      if (random(0, 1)) then begin
         Item := create_object(PID_10MM_SMG, 0, 0);
      end
      else begin
         Item := create_object(PID_DESERT_EAGLE, 0, 0);
      end
   end
   else begin
      Item := create_object(PID_10MM_PISTOL, 0, 0);
   end
   add_obj_to_inven(Critter, Item);
   if (random(0, 1)) then begin
      item_caps_adjust(Critter, fortune_finder(random(5, 10)));
   end
//
   if random(0, 1) then begin
      display_msg(message_str(SCRIPT_RNDDESRT, 196));
      Tot_Critter_A := random(3, 4);
      Outer_ring := (dude_perception / 2) + 6;
      Inner_ring := (dude_perception / 2) + 2;
      Critter_type := PID_RADSCORPION;
      Critter_script := SCRIPT_RADSCORP;
      while(Tot_Critter_A) do begin
         Critter_direction := random(4, 5);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
      set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
      call Add_Mysterious_Stranger;
   end
end

procedure Raider6 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 199));
   Tot_Critter_A := random(3, 5);
   Outer_ring := (dude_perception / 2) + 4;
   Inner_ring := (dude_perception / 2) + 2;
   Critter_script := -1;
   while(Tot_Critter_A) do begin
      if (random(0, 1)) then begin
         if (random(0, 1)) then begin
            Critter_type := PID_TRAVELER_BALD_LEATHER;
         end
         else begin
            Critter_type := PID_GEN_TRAVELER;
         end
      end
      else begin
         Critter_type := PID_TRAVELER_3;
      end
      Critter_direction := random(0, 5);
      call Place_critter;
      obj_rotate(Critter, random(0, 5));
      kill_critter(Critter, ANIM_fall_back_blood_sf);
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   spawn_dead_critter(PID_DOG, Critter_script, ANIM_fall_back_blood_sf);

   display_msg(message_str(SCRIPT_RNDDESRT, 196));
   Tot_Critter_A := random(3, 4);
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 2;
   Critter_type := PID_RADSCORPION;
   Critter_script := SCRIPT_RADSCORP;
   while(Tot_Critter_A) do begin
      Critter_direction := random(4, 5);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Junk1 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 200));
   Tot_Critter_A := random(3, 4);
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 2;
   Critter_type := PID_RADSCORPION;
   Critter_script := SCRIPT_RADSCORP;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 4);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Junk2 begin
   if fo1in2_fluff_enc_disabled then
      call Junk3;
   else
      call dehydration_a;
end

procedure Junk3 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 223));
   Tot_Critter_A := random(4, 6);
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 2;
   group_angle := random(0, 5);

   Critter_type := PID_COYOTE;
   Critter_script := SCRIPT_COYOTE;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, random(0, 5));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Junk4 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 224));
   Tot_Critter_A := random(2, 4);
   Outer_ring := (dude_perception / 2) + 5;
   Inner_ring := (dude_perception / 2) + 2;
   Critter_type := PID_TRAVELER_GEN_LEATHER;
   Critter_script := SCRIPT_JNKSCOUT;
   group_angle := random(0, 5);
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      if (random(1, 3) == 1) then begin
         obj_rotate(Critter, random(0, 5));
      end
      else begin
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      end
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      if (random(0, 1)) then begin
         Item := create_object(PID_HUNTING_RIFLE, 0, 0);
         add_obj_to_inven(Critter, Item);
         wield_obj_critter(Critter, Item);

         Item := create_object(PID_223_FMJ, 0, 0);
         add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   Item := create_object(PID_RADIO, 0, 0);
   add_obj_to_inven(Critter, Item);
end

procedure Junk5 begin
   variable LVar0 := 0;
   display_msg(message_str(SCRIPT_RNDDESRT, 225));
   Tot_Critter_A := random(1, 2);
   Tot_Critter_B := random(2, 6);// was 2, 12
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 2;
   group_angle := random(0, 5);

   LVar0 := tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(7, 12));
   Create_EW_Red_Caravan(LVar0, 0)

   LVar0 := tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(7, 12));
   Create_EW_Grey_Caravan(LVar0, 0)

   Critter_type := PID_PEASANT_ROBE;
   Critter_script := SCRIPT_GENMERCA;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, random(0, 5));

      item_caps_adjust(Critter, fortune_finder(random(50, 150)));
      Item := create_object(PID_10MM_AP, 0, 0);
      add_mult_objs_to_inven(Critter, Item, random(1, 4));
      Item := create_object(PID_10MM_JHP, 0, 0);
      add_mult_objs_to_inven(Critter, Item, random(1, 4));

      Item := create_object(PID_KNIFE, 0, 0);
      add_mult_objs_to_inven(Critter, Item, random(1, 4));

      Item := create_object(PID_MUTATED_FRUIT, 0, 0);
      add_mult_objs_to_inven(Critter, Item, random(4, 8));
      Item := create_object(PID_ROPE, 0, 0);
      add_mult_objs_to_inven(Critter, Item, random(0, 2));
      Item := create_object(PID_BROWN_BAG, 0, 0);
      add_mult_objs_to_inven(Critter, Item, random(0, 2));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_script := SCRIPT_GENGRDA;
   while(Tot_Critter_B) do begin
      rnd_critter := random(0, 1);
      if (rnd_critter == 0) then
         Critter_type := PID_STRANGER_HMMETL;
      else
         Critter_type := PID_MALE_GUARD_METAL_BLACK;

      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, random(0, 5));
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
      if (random(0, 1)) then begin
         Item := create_object(PID_DESERT_EAGLE, 0, 0);
         add_obj_to_inven(Critter, Item);
         wield_obj_critter(Critter, Item);

         Item := create_object(PID_44_MAGNUM_JHP, 0, 0);
         add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
      end
      else begin
         Item := create_object(PID_10MM_PISTOL, 0, 0);
         add_obj_to_inven(Critter, Item);
         wield_obj_critter(Critter, Item);

         Item := create_object(PID_10MM_JHP, 0, 0);
         add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
      end
      Tot_Critter_B := Tot_Critter_B - 1;
   end
end

procedure Junk6 begin
   variable LVar0 := 2;
   variable LVar1 := 0;
   display_msg(message_str(SCRIPT_RNDDESRT, 172));
   LVar1 := create_object(PID_BOTTLE_CAPS, 0, 0);
   Critter_direction := random(0, 5);
   Critter_tile := tile_num_in_direction(Critter_spawn_hex, Critter_direction, 4);
   if (dude_luck < 3) then begin
      Item := create_object(PID_MUTATED_FRUIT, 0, 0);
      critter_attempt_placement(Item, Critter_tile, dude_elevation);
   end
   else begin
      if (dude_luck == 8) then begin
         Item := create_object(PID_MUTATED_FRUIT, 0, 0);
         critter_attempt_placement(Item, Critter_tile, dude_elevation);
         Item := create_object(PID_10MM_JHP, 0, 0);
         critter_attempt_placement(Item, Critter_tile, dude_elevation);
         if (dude_perk(PERK_scrounger)) then begin
            Item := create_object(PID_10MM_JHP, 0, 0);
            critter_attempt_placement(Item, Critter_tile, dude_elevation);
         end
         Item := create_object(PID_BAG, 0, 0);
         critter_attempt_placement(Item, Critter_tile, dude_elevation);
         add_mult_objs_to_inven(Item, LVar1, fortune_finder(6));
      end
      else begin
         if (dude_luck > 8) then begin
            Item := create_object(PID_MUTATED_FRUIT, 0, 0);
            critter_attempt_placement(Item, Critter_tile, dude_elevation);
            if (dude_perk(PERK_scrounger)) then begin
               LVar0 := 4;
            end
            while(LVar0) do begin
               Item := create_object(PID_10MM_JHP, 0, 0);
               critter_attempt_placement(Item, Critter_tile, dude_elevation);
               LVar0 := LVar0 - 1;
            end
            Item := create_object(PID_BAG, 0, 0);
            add_mult_objs_to_inven(Item, LVar1, fortune_finder(122));
            critter_attempt_placement(Item, Critter_tile, dude_elevation);
            Item := create_object(PID_10MM_PISTOL, 0, 0);
            critter_attempt_placement(Item, Critter_tile, dude_elevation);
         end
         else begin
            Item := create_object(PID_MUTATED_FRUIT, 0, 0);
            critter_attempt_placement(Item, Critter_tile, dude_elevation);
            Item := create_object(PID_BAG, 0, 0);
            add_mult_objs_to_inven(Item, LVar1, fortune_finder(4));
            critter_attempt_placement(Item, Critter_tile, dude_elevation);
         end
      end
   end
end

procedure Hub1 begin
   if fo1in2_fluff_enc_disabled then
      call Hub2;
   else
      call dehydration_b;
end

procedure Hub2 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 133));
   Tot_Critter_A := random(3, 6);
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 2;
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      if (random(0, 1)) then begin
         if (random(0, 1)) then begin
            Critter_type := PID_MAN_JEANS;
         end
         else begin
            Critter_type := PID_LEATHER_JACKET_WOMAN;
         end
      end
      else begin
         Critter_type := PID_MALE_GUARD_METAL_BLACK;
      end
      Critter_direction := random(3, 5);
      call Place_critter;
      obj_rotate(Critter, random(0, 2));
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
      if ((Critter_type != PID_MALE_GUARD_METAL_BLACK) and random(0, 1)) then begin
         Item := create_object(PID_10MM_SMG, 0, 0);
      end
      else begin
         Item := create_object(PID_10MM_PISTOL, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      item_caps_adjust(Critter, fortune_finder(random(10, 30)));
      if (random(0, 3) == 3) then begin
         Item := create_object(PID_STIMPAK, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      if (random(0, 3) == 3) then begin
         Item := create_object(PID_BUFFOUT, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      if (random(0, 3) == 3) then begin
         Item := create_object(PID_IGUANA_ON_A_STICK, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      if (random(0, 3) == 3) then begin
         Item := create_object(PID_MEAT_ON_A_STICK, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 2);
   call Add_Mysterious_Stranger;
end

procedure Hub3 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 134));
   Tot_Critter_A := random(2, 3);
   Tot_Critter_B := random(1, 2);
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 2;

   Critter_type := PID_RADSCORPION;
   Critter_script := SCRIPT_RADSCORP;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 4);
      call Place_critter;
      Face_Critter(Critter, dude_obj);
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_NASTY_RADSCORPION;
   while(Tot_Critter_B) do begin
      Critter_direction := random(0, 4);
      call Place_critter;
      Face_Critter(Critter, dude_obj);
      Tot_Critter_B := Tot_Critter_B - 1;
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 2);
   call Add_Mysterious_Stranger;
end

procedure Hub4 begin
   debug("HUB4");

   display_msg(message_str(SCRIPT_RNDDESRT, 135));
   Outer_ring := (dude_perception / 2) + 5;
   Inner_ring := (dude_perception / 2) + 3;
   Tot_Critter_A := random(4, 6);
   Critter_script := SCRIPT_GENCOP;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      if (random(0, 1)) then begin
         Critter_type := PID_MALE_GUARD_METAL_BLACK;
      end
      else begin
         Critter_type := PID_WOMAN_YELLOW;
      end
      call Place_critter;
      obj_rotate(Critter, random(3, 5));
      item_caps_adjust(Critter, fortune_finder(random(20, 50)));
      if Critter_type == PID_WOMAN_YELLOW then begin
         if (get_item_count(Critter, PID_STIMPAK) <= 0) then begin
            Item := create_object(PID_STIMPAK, 0, 0);
            add_obj_to_inven(Critter, Item);
            Item := create_object(PID_STIMPAK, 0, 0);
            add_obj_to_inven(Critter, Item);
         end
         if (get_item_count(Critter, PID_SPIKED_KNUCKLES) <= 0) then begin
            Item := create_object(PID_SPIKED_KNUCKLES, 0, 0);
            add_obj_to_inven(Critter, Item);
            wield_obj_critter(Critter, Item);
         end
         if (get_item_count(Critter, PID_COMBAT_KNIFE) <= 0) then begin
            Item := create_object(PID_COMBAT_KNIFE, 0, 0);
            add_obj_to_inven(Critter, Item);
            wield_obj_critter(Critter, Item);
         end
      end
      else begin
         if (get_item_count(Critter, PID_STIMPAK) <= 0) then begin
            Item := create_object(PID_STIMPAK, 0, 0);
            add_obj_to_inven(Critter, Item);
         end
         if (get_item_count(Critter, PID_BRASS_KNUCKLES) <= 0) then begin
            Item := create_object(PID_BRASS_KNUCKLES, 0, 0);
            add_obj_to_inven(Critter, Item);
            wield_obj_critter(Critter, Item);
         end
         if (get_item_count(Critter, PID_10MM_PISTOL) <= 0) and (get_item_count(Critter, PID_DESERT_EAGLE) <= 0) then begin
            if (random(0, 1)) then begin
               if (get_item_count(Critter, PID_10MM_PISTOL) <= 0) then begin
                  Item := create_object(PID_10MM_PISTOL, 0, 0);
                  add_obj_to_inven(Critter, Item);
                  wield_obj_critter(Critter, Item);

                  if (random(0, 1)) then begin
                     if (get_item_count(Critter, PID_10MM_JHP) <= 0) then begin
                        Item := create_object(PID_10MM_JHP, 0, 0);
                        add_obj_to_inven(Critter, Item);
                     end
                  end
                  else if (get_item_count(Critter, PID_10MM_AP) <= 0) then begin
                     Item := create_object(PID_10MM_AP, 0, 0);
                     add_obj_to_inven(Critter, Item);
                  end
               end
            end
            else begin
               if (get_item_count(Critter, PID_10MM_PISTOL) <= 0) and (get_item_count(Critter, PID_DESERT_EAGLE) <= 0) then begin
                  if (get_item_count(Critter, PID_DESERT_EAGLE) <= 0) then begin
                     Item := create_object(PID_DESERT_EAGLE, 0, 0);
                     add_obj_to_inven(Critter, Item);
                     wield_obj_critter(Critter, Item);
                     if (random(0, 1)) then begin
                        if (get_item_count(Critter, PID_44_MAGNUM_JHP) <= 0) then begin
                           Item := create_object(PID_44_MAGNUM_JHP, 0, 0);
                           add_obj_to_inven(Critter, Item);
                        end
                     end
                     else if (get_item_count(Critter, PID_44_FMJ_MAGNUM) <= 0) then begin
                        Item := create_object(PID_44_FMJ_MAGNUM, 0, 0);
                        add_obj_to_inven(Critter, Item);
                     end
                  end
               end
            end

         end
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
end

procedure Hub5 begin
   variable LVar0 := 0;

   if not(hub_invaded) then begin
      display_msg(message_str(SCRIPT_RNDDESRT, 136));
   end
   else begin//BELOW : file is Invaded.MSG
      display_msg(message_str(SCRIPT_RNDDESRT, 174));
      LVar0 := do_check(dude_obj, STAT_pe, 0);
      if (is_success(LVar0)) then begin
         display_msg(message_str(SCRIPT_INVADED, 102));
         display_msg(message_str(SCRIPT_INVADED, 107));
      end
      else begin
         display_msg(message_str(SCRIPT_INVADED, 101));
         LVar0 := do_check(dude_obj, STAT_pe, 0);
         if (is_success(LVar0)) then begin
            display_msg(message_str(SCRIPT_INVADED, 106));
         end
         else begin
            display_msg(message_str(SCRIPT_INVADED, 105));
         end
      end
   end

   LVar0 := tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(7, 9));
   Create_EW_Grey_Caravan(LVar0, 0)

   Outer_ring := (dude_perception / 2) + 5;
   Inner_ring := (dude_perception / 2) + 3;

   Tot_Critter_A := random(4, 6);//was 5, 8
   Critter_script := SCRIPT_GENGRDA;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      if (random(0, 1)) then begin
         rnd_critter := random(0, 1);
         if (rnd_critter == 0) then
            Critter_type := PID_STRANGER_HMMETL;
         else
            Critter_type := PID_MALE_GUARD_METAL_BLACK;
      end
      else begin
         Critter_type := PID_WOMAN_YELLOW;
      end
      call Place_critter;
      obj_rotate(Critter, random(3, 5));
      //critter_mod_skill(Critter, SKILL_SMALL_GUNS, has_skill(Critter, SKILL_SMALL_GUNS) + 35); // Increase weapon skill a bit

      item_caps_adjust(Critter, fortune_finder(random(20, 50)));
      if (random(0, 1)) then begin
         Item := create_object(PID_10MM_SMG, 0, 0);
      end
      else begin
         Item := create_object(PID_DESERT_EAGLE, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      Tot_Critter_A := Tot_Critter_A - 1;
      if hub_invaded then begin
         kill_critter(Critter, ANIM_fall_back_blood_sf);
      end
   end

   Outer_ring := (dude_perception / 2) + 4;
   Inner_ring := (dude_perception / 2) + 2;
   Critter_type := PID_MERCHANT;
   Critter_script := SCRIPT_GENMERCA;
   call Place_critter;

   item_caps_adjust(Critter, fortune_finder(random(100, 300)));
   Item := create_object(PID_MUTATED_FRUIT, 0, 0);
   add_mult_objs_to_inven(Critter, Item, random(0, 4));
   Item := create_object(PID_IGUANA_ON_A_STICK, 0, 0);
   add_mult_objs_to_inven(Critter, Item, random(0, 4));
   Item := create_object(PID_STIMPAK, 0, 0);
   add_mult_objs_to_inven(Critter, Item, random(0, 2));
   Item := create_object(PID_FIRST_AID_KIT, 0, 0);
   add_mult_objs_to_inven(Critter, Item, random(0, 1));
   Item := create_object(PID_10MM_JHP, 0, 0);
   add_mult_objs_to_inven(Critter, Item, random(0, 3));
   Item := create_object(PID_10MM_AP, 0, 0);
   add_mult_objs_to_inven(Critter, Item, random(0, 3));
   Item := create_object(PID_5MM_JHP, 0, 0);
   add_mult_objs_to_inven(Critter, Item, random(0, 2));
   Item := create_object(PID_5MM_AP, 0, 0);
   add_mult_objs_to_inven(Critter, Item, random(0, 2));

   if hub_invaded then begin
      kill_critter(Critter, ANIM_fall_back_blood_sf);
      Outer_ring := (dude_perception / 2) + 6;
      Inner_ring := (dude_perception / 2) + 4;
      Tot_Critter_A := random(2, 3);
      Critter_type := PID_MEAN_SUPER_MUTANT;//187          Mean Super Mutant
      Critter_script := -1;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 2);
         call Place_critter;
         obj_rotate(Critter, random(3, 5));
         Tot_Critter_A := Tot_Critter_A - 1;
         kill_critter(Critter, ANIM_fall_back_blood_sf);
      end
   end
end

procedure Hub6 begin
   // "Quack" encounter - added by Fo1in2
   if (random(0, 3) == 1) and day and (global_var(GVAR_ENC_QUACK_DEAD) == 0) then begin
      Tot_Critter_A := random(2, 4);
      Outer_ring := (dude_perception / 2) + 5;
      Inner_ring := (dude_perception / 2) + 3;

      Critter_type := PID_ENC_QUACK;
      Critter_script := SCRIPT_ENCQUACK;
      call Place_critter;

   end
   else begin
      display_msg(message_str(SCRIPT_RNDDESRT, 137));
      Tot_Critter_A := random(2, 4);
      Outer_ring := (dude_perception / 2) + 6;
      Inner_ring := (dude_perception / 2) + 3;
      Critter_type := PID_BRAHMIN;
      Critter_script := SCRIPT_BRAHMIN;
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 5);
         call Place_critter;
         Tot_Critter_A := Tot_Critter_A - 1;
      end
      Critter_type := PID_PEASANT_5;
      Critter_script := -1; // TODO : Write a script for this guy.
      call Place_critter;
   end
end

procedure Necrop1 begin
   if fo1in2_fluff_enc_disabled then
      call Necrop2;
   else
      call dehydration_a;
end

procedure Necrop2 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 126));
   Tot_Critter_A := random(2, 4);
   Tot_Critter_B := random(2, 4);
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 3;
   group_angle := random(0, 5);

   Critter_script := SCRIPT_RADSCORP;
   Critter_spawn_hex := Critter_spawn_hex + (200 * (random(0, 4) - 2));
   while(Tot_Critter_A) do begin
      if (random(0, 3) == 3) then begin
         Critter_type := PID_NASTY_RADSCORPION;
      end
      else begin
         Critter_type := PID_RADSCORPION;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   victim := Critter;
   Critter_script := SCRIPT_WANRATS;

   enc_group_angle(group_angle)

   while(Tot_Critter_B) do begin
      if (random(0, 2) == 2) then begin
         Critter_type := PID_GREATER_MOLE_RAT;
      end
      else begin
         Critter_type := PID_LESSER_MOLE_RAT;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   attack_setup(Critter, victim);
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Necrop3 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 127));
   Tot_Critter_A := random(4, 8);//was 2, 4
   Outer_ring := (dude_perception / 3) + 4;
   Inner_ring := (dude_perception / 3) + 2;
   group_angle := random(0, 5);
   Critter_type := PID_ZOMBIE_GUARD;
   Critter_script := SCRIPT_GENZOMBI;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Necrop4 begin
   variable Item_hex := 0;
   variable Items_List := [PID_10MM_JHP, PID_10MM_AP, PID_223_FMJ, PID_44_MAGNUM_JHP, PID_ROPE, PID_FLARE, PID_SPEAR];

   display_msg(message_str(SCRIPT_RNDDESRT, 128));
   Item := create_object(PID_BOXES_2, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(5, 8)), 0);
   Item := create_object(PID_BOXES_3, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(5, 8)), 0);
   Item := create_object(PID_TRASH_CAN, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(5, 8)), 0);

   // Vanilla Fo1:
   if (random(0, 3) == 1) then begin
      Item_hex := tile_num_in_direction(dude_tile, random(0, 5), random(0, 5));
      Item := array_random_value(Items_List);
      Item := create_object(Item, Item_hex, 0);
   end

   //--- Fixt BEGIN
   Item_hex := tile_num_in_direction(dude_tile, random(0, 5), random(4, 12));
   Item := array_random_value(Items_List);
   Item := create_object(Item, Item_hex, 0);

   if (dude_luck >= 7) then begin
      Item_hex := tile_num_in_direction(dude_tile, random(0, 5), random(4, 12));
      Item := array_random_value(Items_List);
      Item := create_object(Item, Item_hex, 0);
   end

   Item_hex := tile_num_in_direction(dude_tile, random(0, 5), random(3, 5));
   Item := create_object(PID_JUNK_TIRE, Item_hex, 0);
   Item_hex := tile_num_in_direction(dude_tile, random(0, 5), random(3, 5));
   Item := create_object(PID_METAL_BARREL_1, Item_hex, 0);
   Item_hex := tile_num_in_direction(dude_tile, random(0, 5), random(3, 5));
   Item := create_object(PID_ROCKS_3, Item_hex, 0);

   if (random(0, 2) == 1) then begin
      Tot_Critter_A := 1;// was random(2, 3)
      Outer_ring := (dude_perception / 3) + 10;
      Inner_ring := (dude_perception / 3) + 8;
      group_angle := random(0, 5);
      Critter_type := PID_ZOMBIE_GUARD;
      Critter_script := SCRIPT_GENZOMBI;
      while(Tot_Critter_A) do begin
         Critter_direction := group_angle + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end
   //--- FIXT END
end

procedure Necrop5 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 127));
   Tot_Critter_A := random(3, 9);//was 1, 3
   Outer_ring := (dude_perception / 3) + 4;
   Inner_ring := (dude_perception / 3) + 2;
   group_angle := random(0, 5);
   Critter_type := PID_ZOMBIE_GUARD;
   Critter_script := SCRIPT_GENZOMBI;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure Necrop6 begin
   variable LVar0 := 0;
   variable LVar1 := 0;

   display_msg(message_str(SCRIPT_RNDDESRT, 130));
   Outer_ring := (dude_perception / 3) + 4;
   Inner_ring := (dude_perception / 3) + 2;

   if (random(0, 1)) then begin
      Critter_type := PID_MAN_JEANS;
   end
   else begin
      Critter_type := PID_WOMAN_YELLOW;
   end
   Critter_script := -1;
   Critter_direction := random(0, 5);
   call Place_critter;
   obj_rotate(Critter, random(0, 5));

   if (random(0, 3) == 3) then begin
      LVar1 := create_object(PID_STIMPAK, 0, 0);
      add_obj_to_inven(Critter, LVar1);
   end
   if (random(0, 3) == 3) then begin
      item_caps_adjust(Critter, fortune_finder(random(50, 100)));
   end
   if (random(0, 3) == 3) then begin
      LVar1 := create_object(PID_BACKPACK, 0, 0);
      add_obj_to_inven(Critter, LVar1);
   end
   if (random(0, 3) == 3) then begin
      LVar1 := create_object(PID_HUNTING_RIFLE, 0, 0);
      add_obj_to_inven(Critter, LVar1);
   end
   if (random(0, 3) == 3) then begin
      LVar1 := create_object(PID_10MM_PISTOL, 0, 0);
      add_obj_to_inven(Critter, LVar1);
   end

   if fo1in2_destroy_armor_enabled then begin
      if (random(0, 3) == 3) then begin
         LVar1 := create_object(PID_LEATHER_ARMOR, 0, 0);
         add_obj_to_inven(Critter, LVar1);
         wield_obj_critter(Critter, LVar1);
      end
   end

   if (random(0, 3) == 3) then begin
      LVar1 := create_object(PID_ROPE, 0, 0);
      add_obj_to_inven(Critter, LVar1);
   end
   if (random(0, 3) == 3) then begin
      LVar1 := create_object(PID_DYNAMITE, 0, 0);
      add_obj_to_inven(Critter, LVar1);
   end

   LVar1 := create_object(PID_NUKA_COLA, 0, 0);
   add_obj_to_inven(Critter, LVar1);
   item_caps_adjust(Critter, fortune_finder(random(3, 9)));
   kill_critter(Critter, ANIM_fall_back_blood_sf);
end

procedure Steel1 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 226));
   Tot_Critter_A := 2;
   Tot_Critter_B := 6;
   Outer_ring := (dude_perception / 3) + 8;
   Inner_ring := (dude_perception / 3) + 4;
   group_angle := random(0, 5);
   random_seed_1 := 0;

   Critter_script := SCRIPT_GENPALB;
   if (random(0, 1)) then begin
      Critter_type := PID_GEN_PALAIN_1;
   end
   else begin
      Critter_type := PID_GEN_PALAIN_2;
   end
   Critter_direction := group_angle + (random(0, 2) - 1);
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;

   enc_group_angle(Critter_direction)

   if (random(0, 2) == 0) then begin
      Critter_direction := Critter_direction + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
   end
   obj_rotate(Critter, Critter_direction);
   Item := create_object(PID_GATLING_LASER, 0, 0);
   add_obj_to_inven(Critter, Item);
   wield_obj_critter(Critter, Item);

   victim := Critter;
   Critter_script := SCRIPT_GENPALA;
   while(Tot_Critter_A) do begin
      if (random(0, 1)) then begin
         Critter_type := PID_JUNIOR_PALADIN;
      end
      else begin
         Critter_type := PID_GEN_JUNIOR_PALADIN;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Item := create_object(PID_MINIGUN, 0, 0);
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      if (random(1, 3) == 1) then begin
         Item := create_object(PID_ROCKET_LAUNCHER, 0, 0);
         add_obj_to_inven(Critter, Item);
         wield_obj_critter(Critter, Item);

         Item := create_object(PID_ROCKET_AP, 0, 0);
         add_mult_objs_to_inven(Critter, Item, random(1, 3));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   enc_group_angle(group_angle)
   while(Tot_Critter_B) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      if (random(1, 3) == 1) then begin
         Item := create_object(PID_FLAMER, 0, 0);
      end
      else begin
         Item := create_object(PID_MINIGUN, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      if (random(1, 2) == 1) then begin
         Item := create_object(PID_ROCKET_LAUNCHER, 0, 0);
         add_obj_to_inven(Critter, Item);
         wield_obj_critter(Critter, Item);

         Item := create_object(PID_ROCKET_AP, 0, 0);
         add_mult_objs_to_inven(Critter, Item, random(1, 3));
      end
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   attack_setup(victim, Critter);
   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Steel2 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 227));
   Tot_Critter_A := random(6, 10);
   Outer_ring := (dude_perception / 3) + 7;
   Inner_ring := (dude_perception / 3) + 3;
   Critter_type := PID_RADSCORPION;
   Critter_script := SCRIPT_RADSCORP;
   while(Tot_Critter_A) do begin
      Critter_direction := random(3, 5);
      call Place_critter;
      if (random(1, 3) == 1) then begin
         obj_rotate(Critter, random(0, 5));
      end
      else begin
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Steel3 begin
   if fo1in2_fluff_enc_disabled then
      call Steel4;
   else
      call dehydration_a;
end

procedure Steel4 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 250));
   Tot_Critter_A := random(5, 7);
   Outer_ring := (dude_perception / 3) + 6;
   Inner_ring := (dude_perception / 3) + 4;
   group_angle := dude_rot;
   random_seed_1 := 0;
   if (random(0, 1)) then begin
      Critter_type := PID_GEN_PALAIN_1;
   end
   else begin
      Critter_type := PID_GEN_PALAIN_2;
   end
   Critter_script := SCRIPT_GENPALB;
   Critter_direction := group_angle + (random(0, 2) - 1);
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;

   enc_group_angle(Critter_direction)

   if (random(0, 2) == 0) then begin
      Critter_direction := Critter_direction + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
   end
   obj_rotate(Critter, Critter_direction);
   Item := create_object(PID_GATLING_LASER, 0, 0);
   add_obj_to_inven(Critter, Item);
   wield_obj_critter(Critter, Item);

   Critter_script := SCRIPT_GENPALA;
   while(Tot_Critter_A) do begin
      if (random(0, 1)) then begin
         Critter_type := PID_JUNIOR_PALADIN;
      end
      else begin
         Critter_type := PID_GEN_JUNIOR_PALADIN;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      if (random(1, 3) == 1) then begin
         Item := create_object(PID_FLAMETHROWER_FUEL, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      Item := create_object(PID_MINIGUN, 0, 0);
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);
      Tot_Critter_A := Tot_Critter_A - 1;
   end
end

procedure Steel5 begin
   variable LVar0 := 0;

   display_msg(message_str(SCRIPT_RNDDESRT, 251));
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 3;

   LVar0 := tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(7, 12));
   Create_EW_Red_Caravan(LVar0, 0)

   LVar0 := tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(7, 12));
   Create_EW_Grey_Caravan(LVar0, 0)

   if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
      Critter := create_object(PID_BURNING_BARREL, 0, 0);
      Critter_tile := tile_num_in_direction(Critter_spawn_hex, random(0, 5), 5);
      critter_attempt_placement(Critter, Critter_tile, dude_elevation);
      Critter := create_object(PID_BURNING_BARREL, 0, 0);
      Critter_tile := tile_num_in_direction(Critter_spawn_hex, random(0, 5), 5);
      critter_attempt_placement(Critter, Critter_tile, dude_elevation);
   end
   Tot_Critter_A := random(1, 2);
   while(Tot_Critter_A) do begin
      Critter_type := PID_BRAHMIN;
      Critter_script := SCRIPT_BRAHMIN;
      Critter_direction := random(0, 5);
      call Place_critter;
      obj_rotate(Critter, random(0, 5));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   Tot_Critter_A := random(2, 4);
   Critter_type := PID_PEASANT_ROBE;
   Critter_script := SCRIPT_GENMERCA;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 5);
      call Place_critter;
      obj_rotate(Critter, random(0, 5));
      if (random(0, 1)) then begin
         Item := create_object(PID_MUTATED_FRUIT, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      if (random(0, 1)) then begin
         Item := create_object(PID_10MM_JHP, 0, 0);
         add_mult_objs_to_inven(Critter, Item, 2 * (dude_perk(PERK_scrounger) + 1));
      end
      if (random(0, 1)) then begin
         Item := create_object(PID_10MM_AP, 0, 0);
         add_mult_objs_to_inven(Critter, Item, 1 * (dude_perk(PERK_scrounger) + 1));
      end
      if (random(0, 1)) then begin
         Item := create_object(PID_223_FMJ, 0, 0);
         add_mult_objs_to_inven(Critter, Item, 2 * (dude_perk(PERK_scrounger) + 1));
      end
      if (random(0, 1)) then begin
         Item := create_object(PID_STIMPAK, 0, 0);
         add_mult_objs_to_inven(Critter, Item, random(0, 4));
      end
      if (random(0, 1)) then begin
         Item := create_object(PID_FIRST_AID_KIT, 0, 0);
         add_mult_objs_to_inven(Critter, Item, random(0, 1));
      end
      if (random(0, 1)) then begin
         Item := create_object(PID_IGUANA_ON_A_STICK, 0, 0);
         add_mult_objs_to_inven(Critter, Item, random(0, 3));
      end
      item_caps_adjust(Critter, fortune_finder(random(13, 32)));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   Tot_Critter_B := random(6, 8);
   Critter_script := SCRIPT_GENGRDA;
   while(Tot_Critter_B) do begin
      Critter_direction := random(0, 5);
      if (random(0, 1)) then begin
         Critter_type := PID_MALE_GUARD_METAL_BLACK;
      end
      else begin
         Critter_type := PID_TOWNSWOMAN_METAL;
      end
      call Place_critter;
      obj_rotate(Critter, random(0, 5));
      item_caps_adjust(Critter, fortune_finder(random(1, 15)));
      if (Critter_type == PID_TOWNSWOMAN_METAL) then begin
         if (random(0, 1)) then begin
            Item := create_object(PID_SHOTGUN_SHELLS, 0, 0);
            add_obj_to_inven(Critter, Item);
            if (dude_perk(PERK_scrounger)) then begin
               Item := create_object(PID_SHOTGUN_SHELLS, 0, 0);
               add_obj_to_inven(Critter, Item);
            end
            Item := create_object(PID_SHOTGUN, 0, 0);
         end
         else begin
            Item := create_object(PID_223_FMJ, 0, 0);
            add_obj_to_inven(Critter, Item);
            if (dude_perk(PERK_scrounger)) then begin
               Item := create_object(PID_223_FMJ, 0, 0);
               add_obj_to_inven(Critter, Item);
            end
            Item := create_object(PID_HUNTING_RIFLE, 0, 0);
         end
      end
      else begin
         Item := create_object(PID_10MM_JHP, 0, 0);
         add_obj_to_inven(Critter, Item);
         if (dude_perk(PERK_scrounger)) then begin
            Item := create_object(PID_10MM_JHP, 0, 0);
            add_obj_to_inven(Critter, Item);
         end
         Item := create_object(PID_10MM_PISTOL, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      if (random(0, 1)) then begin
         if (random(0, 2) == 0) then begin
            Item := create_object(PID_BOOZE, 0, 0);
         end
         else begin
            Item := create_object(PID_BEER, 0, 0);
         end
         add_obj_to_inven(Critter, Item);
      end
      Tot_Critter_B := Tot_Critter_B - 1;
   end
end

procedure Steel6 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 252));
   Tot_Critter_A := random(3, 4);
   Tot_Critter_B := random(12, 15);
   Outer_ring := (dude_perception / 3) + 7;
   Inner_ring := (dude_perception / 3) + 4;
   group_angle := random(0, 5);
   random_seed_1 := 0;
   Critter_script := SCRIPT_GENPALB;
   if (random(0, 1)) then begin
      Critter_type := PID_GEN_PALAIN_1;
   end
   else begin
      Critter_type := PID_GEN_PALAIN_2;
   end
   Critter_direction := group_angle + (random(0, 2) - 1);
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;

   enc_group_angle(Critter_direction)

   if (random(0, 2) == 0) then begin
      Critter_direction := Critter_direction + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
   end
   obj_rotate(Critter, Critter_direction);
   Item := create_object(PID_GATLING_LASER, 0, 0);
   add_obj_to_inven(Critter, Item);
   wield_obj_critter(Critter, Item);

   Critter_script := SCRIPT_GENPALA;
   while(Tot_Critter_A) do begin
      if (random(0, 1)) then begin
         Critter_type := PID_JUNIOR_PALADIN;
      end
      else begin
         Critter_type := PID_GEN_JUNIOR_PALADIN;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      if (random(0, 3) == 1) then begin
         Item := create_object(PID_ROCKET_LAUNCHER, 0, 0);
         add_obj_to_inven(Critter, Item);
         Item := create_object(PID_ROCKET_AP, 0, 0);
         add_mult_objs_to_inven(Critter, Item, random(1, 3));
      end
      else begin
         Item := create_object(PID_MINIGUN, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      wield_obj_critter(Critter, Item);
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   victim := Critter;
   Critter_type := PID_MAN_JEANS;
   Critter_script := SCRIPT_GENRAIDA;

   enc_group_angle(group_angle)

   while(Tot_Critter_B) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(Critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Item := create_object(PID_SPEAR, 0, 0);
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      if (random(0, 2)) then begin
         Item := create_object(PID_10MM_AP, 0, 0);
         add_obj_to_inven(Critter, Item);
         if (dude_perk(PERK_scrounger)) then begin
            Item := create_object(PID_10MM_AP, 0, 0);
            add_obj_to_inven(Critter, Item);
         end
         Item := create_object(PID_10MM_PISTOL, 0, 0);
         add_obj_to_inven(Critter, Item);
         wield_obj_critter(Critter, Item);
      end
      if (random(0, 1)) then begin
         Item := create_object(PID_STIMPAK, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   attack_setup(Critter, victim);
   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Vats1 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 253));
   radiation_inc(dude_obj, random(15, 30));

   Tot_Critter_A := random(3, 4);
   Tot_Critter_B := 1;
   Outer_ring := (dude_perception / 3) + 6;
   Inner_ring := (dude_perception / 3) + 3;
   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      if (random(0, 1) == 1) then begin
         if (random(0, 3) == 0) then begin
            Item := create_object(PID_FLAMER, 0, 0);
         end
         else begin
            Item := create_object(PID_MINIGUN, 0, 0);
         end
      end
      else begin
         Item := create_object(PID_SPIKED_KNUCKLES, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   Critter_type := PID_NIGHTKIN;
   Critter_script := SCRIPT_SUPAMBSH;
   while(Tot_Critter_B) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Item := create_object(PID_MINIGUN, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_5MM_JHP, 0, 0);
      add_obj_to_inven(Critter, Item);
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Vats2 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 254));

   if (random(0, 1) == 1) then begin
      if ((dude_luck <= 3) or (random(0, 10) == 10)) then begin
         Critter_type := PID_GREATER_CENTAUR;
         Critter_script := SCRIPT_FLOATER;
      end
      else begin
         Critter_type := PID_CENTAUR_LESSER;
         Critter_script := SCRIPT_FLOATER;
      end
   end
   else begin
      if ((dude_luck <= 3) or (random(0, 10) == 10)) then begin
         Critter_type := PID_BLOODY_FLOATER;
         Critter_script := SCRIPT_FLOATER;
      end
      else begin
         Critter_type := PID_FLOATER;
         Critter_script := SCRIPT_FLOATER;
      end
   end
   Tot_Critter_A := random(3, 5);
   Outer_ring := (dude_perception / 3) + 5;
   Inner_ring := (dude_perception / 3) + 2;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Vats3 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 306));

   Tot_Critter_A := random(1, 2);
   Outer_ring := (dude_perception / 3) + 4;
   Inner_ring := (dude_perception / 3) + 2;

   Critter_type := PID_FLOATER;
   Critter_script := SCRIPT_FLOATER;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_CENTAUR_LESSER;
   Critter_script := SCRIPT_FLOATER;
   Tot_Critter_A := 1;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 3;
   Tot_Critter_A := random(2, 3);

   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_NIGHTKIN;
   Critter_script := SCRIPT_SUPAMBSH;
   Critter_direction := random(0, 2);
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   Item := create_object(PID_LASER_RIFLE, 0, 0);
   add_obj_to_inven(Critter, Item);
   Item := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
   add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 2);
   if (not(dude_item_count(PID_RADIO))) then begin
      Item := create_object(PID_RADIO, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Vats4 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 256));

   Tot_Critter_A := random(3, 4);
   Outer_ring := (dude_perception / 2) + 7;
   Inner_ring := (dude_perception / 2) + 6;

   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, random(3, 4));
      if (random(0, 1) == 1) then begin
         if (random(0, 1) == 1) then begin
            Item := create_object(PID_FLAMER, 0, 0);
         end
         else begin
            Item := create_object(PID_MINIGUN, 0, 0);
         end
      end
      else begin
         Item := create_object(PID_SPIKED_KNUCKLES, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_NIGHTKIN;
   Critter_script := SCRIPT_SUPAMBSH;
   Tot_Critter_B := 1;
   while(Tot_Critter_B) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, random(3, 4));
      Item := create_object(PID_MINIGUN, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_5MM_JHP, 0, 0);
      add_obj_to_inven(Critter, Item);
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   Outer_ring := (dude_perception / 3) + 5;
   Inner_ring := (dude_perception / 3) + 3;

   Critter_type := PID_FLOATER;
   Critter_script := SCRIPT_FLOATER;
   Critter_direction := random(0, 2);
   call Place_critter;
   obj_rotate(Critter, random(3, 4));

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Vats5 begin
   if fo1in2_fluff_enc_disabled then
      call Vats4;
   else
      call dehydration_a;
end

procedure Vats6 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 279));

   Item := create_object(PID_POT, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(8, 10)), 0);
   Item := create_object(PID_BOXES_2, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(5, 9)), 0);
   Item := create_object(PID_BOXES_3, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(5, 9)), 0);
   Item := create_object(PID_TRASH_CAN, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(5, 9)), 0);
   Item := create_object(PID_CHAIR, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(5, 9)), 0);

   if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
      Item := create_object(PID_BURNING_BARREL, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(8, 10)), 0);
      if (random(0, 1)) then begin
         Item := create_object(PID_BURNING_BARREL, tile_num_in_direction(Critter_spawn_hex + random(0, 8) - 4, random(0, 5), random(8, 10)), 0);
      end
   end

   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 3;
   group_angle := random(0, 5);

   //--- Create Mutant
   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   Tot_Critter_A := random(2, 3);
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   //--- Create Mutant
   Critter_type := PID_NIGHTKIN;
   Critter_script := SCRIPT_SUPAMBSH;
   Critter_direction := random(0, 2);
   Critter_direction := group_angle + (random(0, 2) - 1);
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   Item := create_object(PID_MINIGUN, 0, 0);
   add_obj_to_inven(Critter, Item);
   Item := create_object(PID_5MM_JHP, 0, 0);
   add_obj_to_inven(Critter, Item);

   Outer_ring := (dude_perception / 3) + 5;
   Inner_ring := (dude_perception / 3) + 3;

   //--- Create Floater
   Critter_type := PID_FLOATER;
   Critter_script := SCRIPT_FLOATER;
   Tot_Critter_A := 2;

   enc_group_angle(group_angle)

   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Glow1 begin
   variable LVar0 := 3;

   display_msg(message_str(SCRIPT_RNDDESRT, 280));
   if fixt_enabled then begin
      radiation_inc(dude_obj, random(30, 60));
   end
   Tot_Critter_A := random(2, 3);
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 4;

   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 5);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   if (random(0, 1)) then begin
      Critter_type := PID_NIGHTKIN;
      Critter_script := SCRIPT_SUPAMBSH;
      Critter_direction := random(0, 5);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Item := create_object(PID_LASER_RIFLE, 0, 0);
      add_obj_to_inven(Critter, Item);
      if (dude_perk(PERK_scrounger)) then begin
         LVar0 := 5;
      end
      while(LVar0) do begin
         Item := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
         add_obj_to_inven(Critter, Item);
         LVar0 := LVar0 - 1;
      end
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Glow2 begin
   variable LVar0 := 0;

   display_msg(message_str(SCRIPT_RNDDESRT, 281));
   if fixt_enabled then begin
      radiation_inc(dude_obj, random(30, 60));
   end

   LVar0 := game_time_hour;
   Tot_Critter_A := random(3, 5);
   if ((LVar0 > 600) and (LVar0 < 1900)) then begin
      Outer_ring := (dude_perception / 3) + 5;
      Inner_ring := (dude_perception / 3) + 2;
   end
   else begin
      Outer_ring := (dude_perception / 3) + 2;
      Inner_ring := (dude_perception / 3) + 2;
   end

   Critter_type := PID_FLOATER;
   Critter_script := SCRIPT_FLOATER;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 5);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   if (random(0, 1)) then begin
      Critter_direction := random(0, 4);
      Critter_type := PID_CENTAUR_LESSER;
      Critter_script := SCRIPT_FLOATER;
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Glow3 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 282));
   if fixt_enabled then begin
      radiation_inc(dude_obj, random(30, 60));
   end
   Tot_Critter_A := random(4, 8);
   Outer_ring := (dude_perception / 2) + 8;
   Inner_ring := (dude_perception / 2) + 5;

   Critter_type := PID_RADSCORPION;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 4);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Glow4 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 283));
   if fixt_enabled then begin
      radiation_inc(dude_obj, random(30, 60));
   end
   else begin
      radiation_inc(dude_obj, random(15, 30));
   end
   Outer_ring := (dude_perception / 3) + 4;
   Inner_ring := (dude_perception / 3) + 2;

   Critter_type := PID_FLOATER;
   Critter_script := SCRIPT_FLOATER;
   Tot_Critter_A := 1;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
end

procedure Glow5 begin
   radiation_inc(dude_obj, random(30, 60));

   // Fo1in2 - Fire Geckos:
   if fo1in2_fo2_critters_enabled and (random(0, 1) == 1) then begin
      display_msg(message_str(SCRIPT_RNDDESRT, 290));
      radiation_inc(dude_obj, random(30, 60));
      Tot_Critter_A := random(2, 5);
      Outer_ring := (dude_perception / 3) + 5;
      Inner_ring := (dude_perception / 3) + 3;

      Critter_type := PID_FIRE_GECKO;
      Critter_script := SCRIPT_ECGECKO;
      while(Tot_Critter_A) do begin
         Critter_direction := group_angle + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
         call Place_critter;
         enc_group_angle(Critter_direction)
         if (random(0, 2) == 0) then begin
            Critter_direction := Critter_direction + (random(0, 2) - 1);
            while(Critter_direction < 0) do begin
               Critter_direction := Critter_direction + 6;
            end
            if (Critter_direction > 5) then begin
               Critter_direction := Critter_direction % 6;
            end
         end
         obj_rotate(Critter, Critter_direction);
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   // Vanilla:
   else begin
      display_msg(message_str(SCRIPT_RNDDESRT, 284));
      Outer_ring := (dude_perception / 3) + 5;
      Inner_ring := (dude_perception / 3) + 3;
      group_angle := random(0, 5);
      Tot_Critter_A := 2;

      Critter_type := PID_FLOATER;
      Critter_script := SCRIPT_FLOATER;
      while(Tot_Critter_A) do begin
         Critter_direction := group_angle + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
         call Place_critter;
         enc_group_angle(Critter_direction)
         if (random(0, 2) == 0) then begin
            Critter_direction := Critter_direction + (random(0, 2) - 1);
            while(Critter_direction < 0) do begin
               Critter_direction := Critter_direction + 6;
            end
            if (Critter_direction > 5) then begin
               Critter_direction := Critter_direction % 6;
            end
         end
         obj_rotate(Critter, Critter_direction);
         Tot_Critter_A := Tot_Critter_A - 1;
      end

      if (random(0, 1)) then begin
         Critter_type := PID_CENTAUR_LESSER;
         Critter_script := SCRIPT_FLOATER;
         Critter_direction := group_angle + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
         call Place_critter;
         enc_group_angle(Critter_direction)
         if (random(0, 2) == 0) then begin
            Critter_direction := Critter_direction + (random(0, 2) - 1);
            while(Critter_direction < 0) do begin
               Critter_direction := Critter_direction + 6;
            end
            if (Critter_direction > 5) then begin
               Critter_direction := Critter_direction % 6;
            end
         end
         obj_rotate(Critter, Critter_direction);
      end
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Glow6 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 285));
   if fixt_enabled then begin
      radiation_inc(dude_obj, random(30, 60));
   end
   Outer_ring := (dude_perception / 3) + 5;
   Inner_ring := (dude_perception / 3) + 2;

   Critter_type := PID_CENTAUR_LESSER;
   Critter_script := SCRIPT_FLOATER;
   Critter_direction := random(2, 5);
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   if (random(0, 1)) then begin
      Critter_type := PID_FLOATER;
      Critter_script := SCRIPT_FLOATER;
      Critter_direction := random(1, 4);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
end

procedure Death1 begin
   Outer_ring := (dude_perception / 3) + 8;
   Inner_ring := (dude_perception / 3) + 8;

   // Added quest check, so the Deathclaw doesn't appear before missing caravans.
   if (global_var(GVAR_KILL_DEATHCLAW) != 2) and (global_var(GVAR_MISSING_CARAVANS_STATUS) > 0) then begin
      display_msg(message_str(SCRIPT_RNDDESRT, 286));
      Critter_direction := random(0, 5);
      Critter_type := PID_DEATHCLAW;
      Critter_script := SCRIPT_DETHCLAW;
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   end
   else begin
      display_msg(message_str(SCRIPT_RNDDESRT, 287));
      Critter_type := PID_RADSCORPION;
      Critter_script := SCRIPT_RADSCORP;
      Tot_Critter_A := random(3, 5);
      while(Tot_Critter_A) do begin
         Critter_direction := random(0, 5);
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 2);
   call Add_Mysterious_Stranger;
end

procedure Death2 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 288));
   Outer_ring := (dude_perception / 3) + 5;
   Inner_ring := (dude_perception / 3) + 3;
   Critter_direction := random(0, 5);
   Critter_type := PID_CENTAUR_LESSER;
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));

   set_global_var(GVAR_MYST_STRANGER_ITEM, 2);
   call Add_Mysterious_Stranger;
end

procedure Death3 begin
   if fo1in2_fluff_enc_disabled then
      call Death2;
   else
      call dehydration_b;
end

procedure Death4 begin
   // Added quest check, so the Deathclaw doesn't appear before missing caravans.
   if (global_var(GVAR_KILL_DEATHCLAW) != 2) and (global_var(GVAR_MISSING_CARAVANS_STATUS) > 0) then begin
      display_msg(message_str(SCRIPT_RNDDESRT, 286));
      Outer_ring := (dude_perception / 3) + 5;
      Inner_ring := (dude_perception / 3) + 3;
      Critter_direction := random(0, 5);
      Critter_type := PID_DEATHCLAW;
      Critter_script := SCRIPT_DETHCLAW;
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   end
   else begin
      Outer_ring := (dude_perception / 2) + 6;
      Inner_ring := (dude_perception / 2) + 2;
      Tot_Critter_A := random(2, 4);
      group_angle := random(0, 5);
      Critter_type := PID_RADSCORPION;
      Critter_script := SCRIPT_RADSCORP;
      while(Tot_Critter_A) do begin
         Critter_direction := group_angle + (random(0, 4) - 2);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
         call Place_critter;

         enc_group_angle(Critter_direction)

         if (random(0, 2) == 0) then begin
            Critter_direction := Critter_direction + (random(0, 2) - 1);
            while(Critter_direction < 0) do begin
               Critter_direction := Critter_direction + 6;
            end
            if (Critter_direction > 5) then begin
               Critter_direction := Critter_direction % 6;
            end
         end
         obj_rotate(Critter, Critter_direction);
         Tot_Critter_A := Tot_Critter_A - 1;
      end
      display_msg(message_str(SCRIPT_RNDDESRT, 299));
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 2);
   call Add_Mysterious_Stranger;
end

procedure Death5 begin//   TRENT - Hub Deathclaw quest!
   Outer_ring := (dude_perception / 3) + 10;
   Inner_ring := (dude_perception / 3) + 10;
   if (not((global_var(GVAR_TRENT_STATUS) bwand 8) != 0)) then begin//check for Trent still alive? ToDo fixme TeamX's code -Sduibek
      display_msg(message_str(SCRIPT_RNDDESRT, 300));

      Critter_direction := dude_rot + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      Critter_type := PID_MAN_JEANS;
      Critter_script := SCRIPT_TRENT;

      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));

      Item := create_object(PID_DESERT_EAGLE, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
      item_caps_adjust(Critter, fortune_finder(random(20, 60)));
      Item := create_object(PID_STIMPAK, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_44_MAGNUM_JHP, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_44_FMJ_MAGNUM, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_10MM_SMG, 0, 0);
      add_obj_to_inven(Critter, Item);

      if fo1in2_destroy_armor_enabled then begin
         Item := create_object(PID_LEATHER_ARMOR, 0, 0);
         add_obj_to_inven(Critter, Item);
         wield_obj_critter(Critter, Item);
      end

      Item := create_object(PID_BACKPACK, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_BOOZE, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   else begin
      display_msg(message_str(SCRIPT_RNDDESRT, 301));

      Outer_ring := (dude_perception / 2) + 7;
      Inner_ring := (dude_perception / 2) + 4;
      Critter_direction := random(0, 5);
      if (random(0, 3) == 3) then begin
      Critter_type := PID_GREATER_MOLE_RAT;
      end
      else begin
         Critter_type := PID_LESSER_MOLE_RAT;
      end
      Critter_script := SCRIPT_WANRATS;
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));

      call Add_Mysterious_Stranger;
   end
end

// The Hub quest Deathclaw encounter:
procedure Death6 begin
   Outer_ring := (dude_perception / 2) + 5;
   Inner_ring := (dude_perception / 2) + 2;
   // Added quest check, so the Deathclaw doesn't appear before missing caravans.
   if (global_var(GVAR_KILL_DEATHCLAW) != 2) and (global_var(GVAR_MISSING_CARAVANS_STATUS) > 0) then begin
      display_msg(message_str(SCRIPT_RNDDESRT, 286));
      Critter_direction := random(0, 5);
      Critter_type := PID_DEATHCLAW;
      Critter_script := SCRIPT_DETHCLAW;
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   end

   // Deathclaw has been killed before:
   else begin
      display_msg(message_str(SCRIPT_RNDDESRT, 303));
      Critter_type := PID_RADSCORPION;
      Critter_script := SCRIPT_RADSCORP;
      Tot_Critter_A := random(3, 5);
      group_angle := random(0, 5);
      while (Tot_Critter_A) do begin
         Critter_direction := group_angle + (random(0, 4) - 2);
         while (Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
         call Place_critter();
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 2);
   call Add_Mysterious_Stranger;
end

procedure Bone1 begin
   Tot_Critter_A := random(2, 3);
   group_angle := random(0, 5);
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 4;

   Critter_type := PID_MEAN_SUPER_MUTANT;
   Critter_script := SCRIPT_MUTAMBSH;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 4) - 2);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      if (random(1, 4) == 1) then begin
         Item := create_object(PID_FLAMER, 0, 0);
      end
      else begin
         Item := create_object(PID_MINIGUN, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      if (random(1, 5) == 1) then begin
         Item := create_object(PID_ROCKET_LAUNCHER, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(5, 20)));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   if (random(0, 1)) then begin
      Critter_type := PID_NIGHTKIN;
      Critter_script := SCRIPT_SUPAMBSH;
      Critter_direction := group_angle + (random(0, 4) - 2);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Item := create_object(PID_MINIGUN, 0, 0);
      add_obj_to_inven(Critter, Item);
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(5, 20)));
      end
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 3);
   call Add_Mysterious_Stranger;
   display_msg(message_str(SCRIPT_RNDDESRT, 307));
end

procedure Bone2 begin
   variable LVar0 := 0;

   group_angle := random(0, 5);
   if ((game_time_hour >= 1900) or (game_time_hour < 600) and random(0, 1)) then begin
      Critter := create_object(PID_FIRE_PIT, 0, 0);
      Critter_tile := tile_num_in_direction(Critter_spawn_hex, group_angle, 4);
      critter_attempt_placement(Critter, Critter_tile, dude_elevation);
      Critter := create_object(PID_FIRE_PIT, 0, 0);

      enc_group_angle(Item)

      Critter_tile := tile_num_in_direction(Critter_spawn_hex, Item, 4);
      critter_attempt_placement(Critter, Critter_tile, dude_elevation);
   end
   Critter_spawn_hex := Critter_spawn_hex + (random(0, 4) - 2 + ((random(0, 2) - 1) * 200));
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 4;
   Tot_Critter_A := random(3, 5);
   Tot_Critter_B := random(3, 5);
   Critter_type := PID_GEN_THUG;
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      LVar0 := random(0, 2);
      if (LVar0 == 0) then begin
         Item := create_object(PID_DESERT_EAGLE, 0, 0);
      end
      else begin
         if (LVar0 == 1) then begin
            Item := create_object(PID_BRASS_KNUCKLES, 0, 0);
         end
         else begin
            Item := create_object(PID_10MM_PISTOL, 0, 0);
         end
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(5, 25)));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   victim := Critter;
   Critter_type := PID_THUG_MALE_METAL;
   Critter_script := SCRIPT_GENRAIDC;

   enc_group_angle(critter_direction)

   while(Tot_Critter_B) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;

      enc_group_angle(critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      if (random(0, 1)) then begin
         Item := create_object(PID_KNIFE, 0, 0);
      end
      else begin
         Item := create_object(PID_SPEAR, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(4, 25)));
      end
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   attack_setup(Critter, victim);
   set_global_var(GVAR_MYST_STRANGER_ITEM, 2);
   call Add_Mysterious_Stranger;
   display_msg(message_str(SCRIPT_RNDDESRT, 308));
end

procedure Bone3 begin
variable rnd_weapon;

   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 2;
   Tot_Critter_A := random(3, 7);
   group_angle := random(0, 5);
   Critter_type := PID_GEN_THUG;
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + random(0, 2 * 2) - 2;
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));

      rnd_weapon := random(0, 2);
      if rnd_weapon == 0 then begin
         Item := create_object(PID_10MM_PISTOL, 0, 0);
      end
      else if rnd_weapon == 1 then begin
         Item := create_object(PID_10MM_SMG, 0, 0);
      end
      else begin
         Item := create_object(PID_GREASE_GUN, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(4, 25)));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   Critter_type := PID_MAN_JEANS;
   Critter_script := SCRIPT_GENRAIDA;
   Critter_direction := group_angle + random(0, 2 * 2) - 2;
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));

   if fo1in2_destroy_armor_enabled then begin
      Item := create_object(PID_LEATHER_ARMOR, 0, 0);
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);
   end

   Item := create_object(PID_FIRST_AID_KIT, 0, 0);
   add_obj_to_inven(Critter, Item);
   item_caps_adjust(Critter, fortune_finder(random(25, 100)));
   if (random(0, 1)) then begin
      Item := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_SLEDGEHAMMER, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_44_MAGNUM_JHP, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   wield_obj_critter(Critter, Item);
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
   display_msg(message_str(SCRIPT_RNDDESRT, 309));
end

procedure Bone4 begin
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 2;
   Tot_Critter_A := random(2, 3);
   group_angle := random(0, 5);

   Critter_type := PID_GEN_THUG;
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + random(0, 2 * 2) - 2;
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      if (random(0, 1)) then begin
         Item := create_object(PID_10MM_PISTOL, 0, 0);
      end
      else begin
         Item := create_object(PID_10MM_SMG, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(4, 25)));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_MAN_JEANS;
   Critter_script := SCRIPT_GENRAIDA;
   Critter_direction := group_angle + random(0, 2 * 2) - 2;
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
   Item := create_object(PID_FIRST_AID_KIT, 0, 0);
   add_obj_to_inven(Critter, Item);
   item_caps_adjust(Critter, fortune_finder(random(25, 100)));
   if (random(0, 1)) then begin
      Item := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_SLEDGEHAMMER, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_44_MAGNUM_REVOLVER, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_44_MAGNUM_JHP, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   wield_obj_critter(Critter, Item);
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
   display_msg(message_str(SCRIPT_RNDDESRT, 310));
end

procedure Bone5 begin
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 2;
   Tot_Critter_A := random(2, 3);
   group_angle := random(0, 5);

   Critter_type := PID_GEN_THUG;
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + random(0, 2 * 2) - 2;
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      if (random(0, 1)) then begin
         Item := create_object(PID_10MM_PISTOL, 0, 0);
      end
      else begin
         Item := create_object(PID_10MM_SMG, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);
      if (random(0, 2) == 0) then begin
         item_caps_adjust(Critter, fortune_finder(random(4, 25)));
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Critter_type := PID_MAN_JEANS;
   Critter_script := SCRIPT_GENRAIDA;
   Critter_direction := group_angle + random(0, 2 * 2) - 2;
   while(Critter_direction < 0) do begin
      Critter_direction := Critter_direction + 6;
   end
   if (Critter_direction > 5) then begin
      Critter_direction := Critter_direction % 6;
   end
   call Place_critter;
   obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));

   if fo1in2_destroy_armor_enabled then begin
      Item := create_object(PID_LEATHER_ARMOR, 0, 0);
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);
   end

   Item := create_object(PID_FIRST_AID_KIT, 0, 0);
   add_obj_to_inven(Critter, Item);
   item_caps_adjust(Critter, fortune_finder(random(25, 100)));
   if (random(0, 1)) then begin
      Item := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_SLEDGEHAMMER, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_44_MAGNUM_JHP, 0, 0);
      add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
   end
   if (random(0, 1)) then begin
      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
   end
   wield_obj_critter(Critter, Item);
   set_global_var(GVAR_MYST_STRANGER_ITEM, 2);
   call Add_Mysterious_Stranger;
   display_msg(message_str(SCRIPT_RNDDESRT, 311));
end

procedure Bone6 begin
   Tot_Critter_A := random(4, 6);
   if (day) then begin
      Outer_ring := 6;
      Inner_ring := 3;
   end
   else begin
      Outer_ring := 4;
      Inner_ring := 3;
   end
   Critter_type := PID_MANTIS;
   Critter_script := SCRIPT_MANTIS;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 5);
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
   display_msg(message_str(SCRIPT_RNDDESRT, 313));
end

procedure North1 begin
   variable LVar0 := 0;

   debug("NORTH 1");

   Tot_Critter_A := random(1, 2);
   Tot_Critter_B := random(3, 5);
   group_angle := random(0, 5);
   if (is_success(do_check(dude_obj, STAT_pe, -2)) or dude_perk(PERK_bonus_awareness)) then begin
      display_msg(message_str(SCRIPT_RNDDESRT, 197));
      Outer_ring := (dude_perception / 3) + 7;
      Inner_ring := (dude_perception / 3) + 5;
   end
   else begin
      display_msg(message_str(SCRIPT_RNDDESRT, 105));
      LVar0 := 1;
      Outer_ring := 5;
      Inner_ring := 2;
   end

   Critter_type := PID_GEN_THUG;
   Critter_script := SCRIPT_GENRAIDA;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      if (LVar0) then begin
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      end
      else begin
         obj_rotate(Critter, random(0, 5));
      end
      if (random(0, 1)) then begin
         if (random(0, 1)) then begin
            Item := create_object(PID_DESERT_EAGLE, 0, 0);
         end
         else begin
            Item := create_object(PID_10MM_PISTOL, 0, 0);
         end
      end
      else begin
         Item := create_object(PID_KNIFE, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      item_caps_adjust(Critter, fortune_finder(random(1, 20)));
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   Outer_ring := Outer_ring + 2;
   Inner_ring := Inner_ring + 2;
   while(Tot_Critter_B) do begin
      if (random(0, 1)) then begin
         Critter_type := PID_TRAVELER_BALD_LEATHER;
      end
      else begin
         Critter_type := PID_GEN_TRAVELER;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      if (LVar0) then begin
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      end
      else begin
         obj_rotate(Critter, random(0, 5));
      end
      if (random(0, 1)) then begin
         if (random(0, 1)) then begin
            Item := create_object(PID_DESERT_EAGLE, 0, 0);
         end
         else begin
            Item := create_object(PID_10MM_PISTOL, 0, 0);
         end
      end
      else begin
         Item := create_object(PID_KNIFE, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      item_caps_adjust(Critter, fortune_finder(random(1, 25)));
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure North2 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 104));
   Tot_Critter_A := random(3, 6);
   Tot_Critter_B := random(4, 10);
   Outer_ring := (dude_perception / 2) + 6;
   Inner_ring := (dude_perception / 2) + 4;
   group_angle := random(0, 5);
   while(Tot_Critter_A) do begin
      if (random(0, 1) == 1) then begin
         Critter_type := PID_NASTY_RADSCORPION;
         Critter_script := SCRIPT_RADSCORP;
      end
      else begin
         Critter_type := PID_RADSCORPION;
         Critter_script := SCRIPT_RADSCORP;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      victim := Critter;

      enc_group_angle(critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   enc_group_angle(critter_direction)

   while(Tot_Critter_B) do begin
      if (random(0, 1) == 0) then begin
         Critter_type := PID_LESSER_MOLE_RAT;
         Critter_script := SCRIPT_WANRATS;
      end
      else begin
         Critter_type := PID_GREATER_MOLE_RAT;
         Critter_script := SCRIPT_WANRATS;
      end
      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      set_ai(Critter, AI_MOLE_RATS);
      set_team(Critter, TEAM_RATS);
      attack_setup(Critter, victim);

      enc_group_angle(critter_direction)

      if (random(0, 2) == 0) then begin
         Critter_direction := Critter_direction + (random(0, 2) - 1);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
      end
      obj_rotate(Critter, Critter_direction);
      Tot_Critter_B := Tot_Critter_B - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure North3 begin
   if fo1in2_fo2_critters_enabled and (random(1, 2) == 1) then begin
      if ((ghunter_status(HUNTER_FATHER_DEAD) + ghunter_status(HUNTER_SON_DEAD) > 0) and global_var(GVAR_GECKO_HUNTER_WARPARTY) > 1) then
         call Gecko_Hunter_Revenge;
      else if ((dude_perk(PERK_gecko_skinning_perk) == 0) and not(ghunters_killed) and day) then
         call Gecko_Hunter;
      else
         call Geckos;
   end
   else begin
      display_msg(message_str(SCRIPT_RNDDESRT, 106));
      Tot_Critter_A := random(4, 6);
      Outer_ring := (dude_perception / 2) + 5;
      Inner_ring := (dude_perception / 2) + 3;

      Critter_script := SCRIPT_RADSCORP;
      group_angle := random(0, 5);
      while(Tot_Critter_A) do begin
         if (random(0, 5) == 1) then
            Critter_type := PID_SMALL_RADSCORPION; // Fo1in2 addition
         else
            Critter_type := PID_RADSCORPION;

         Critter_direction := group_angle;
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end

      Critter_type := PID_MERCHANT;
      Critter_direction := random(0, 5);
      Outer_ring := 4;
      Inner_ring := 2;
      call Place_critter;
      obj_rotate(Critter, random(0, 5));
      item_caps_adjust(Critter, fortune_finder(random(40, 100)));
      if (random(0, 1)) then begin
         Item := create_object(PID_STIMPAK, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      kill_critter(Critter, ANIM_fall_back_blood_sf);

      set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
      call Add_Mysterious_Stranger;
   end
end

procedure North4 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 107));
   Tot_Critter_A := random(2, 4);
   group_angle := random(0, 5);
   Outer_ring := (dude_perception / 2) + 3;
   Inner_ring := dude_perception / 2;

   if (random(0, 3) == 1) then
      Critter_type := PID_SMALL_RADSCORPION; // Fo1in2 addition
   else
      Critter_type := PID_RADSCORPION;

   Critter_script := SCRIPT_RADSCORP;
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 3 * 2) - 3);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure North5 begin
   // Fo1in2, Geckos:
   if fo1in2_fo2_critters_enabled and (random(0, 2) == 1) then begin
      call Geckos;
   end

   // Vanilla:
   else begin
      display_msg(message_str(SCRIPT_RNDDESRT, 108));
      Tot_Critter_A := random(3, 6);//was 2, 6
      Outer_ring := (dude_perception / 2) + 8;
      Inner_ring := (dude_perception / 2) + 4;
      Critter_script := SCRIPT_WANRATS;
      while(Tot_Critter_A) do begin
         if (random(0, 3) == 3) then begin
            Critter_type := PID_GREATER_MOLE_RAT;
         end
         else begin
            Critter_type := PID_LESSER_MOLE_RAT;
         end
         Critter_direction := random(0, 2);
         call Place_critter;
         obj_rotate(Critter, random(0, 5));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end

procedure North6 begin
   if fo1in2_fluff_enc_disabled then
      call North5;
   else
      call dehydration_a;
end

procedure South1 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 131));
   Tot_Critter_A := random(6, 10);
   Outer_ring := 7;
   Inner_ring := 10;
   Critter_type := PID_BRAHMIN;
   Critter_script := SCRIPT_STAMPEDE;
   while(Tot_Critter_A) do begin
      Critter_direction := 1;
      call Place_critter;
      obj_rotate(Critter, 4);
      Tot_Critter_A := Tot_Critter_A - 1;
   end
end

procedure South2 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 132));
   Tot_Critter_A := random(6, 8);
   Outer_ring := (dude_perception / 2) + 5;
   Inner_ring := (dude_perception / 2) + 2;
   Critter_type := PID_RADSCORPION;
   Critter_script := SCRIPT_RADSCORP;
   group_angle := random(0, 5);
   while(Tot_Critter_A) do begin
      Critter_direction := group_angle + (random(0, 2 * 2) - 2);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 2);
   call Add_Mysterious_Stranger;
end

procedure South3 begin
   if fo1in2_fluff_enc_disabled then
      call South2;
   else
      call dehydration_a;
end

procedure South4 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 143));
   Tot_Critter_A := random(2, 5);
   Outer_ring := (dude_perception / 2) + 5;
   Inner_ring := (dude_perception / 2) + 2;
   Critter_script := SCRIPT_GENRAIDA;
   group_angle := random(0, 5);
   while(Tot_Critter_A) do begin
      if (random(0, 1)) then begin
         Critter_type := PID_TRAVELER_BALD_LEATHER;
      end
      else begin
         Critter_type := PID_GEN_TRAVELER;
      end
      Critter_direction := group_angle + (random(0, 1 * 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
      if (random(0, 1)) then begin
         if (random(0, 1)) then begin
            if (Critter_type == PID_TRAVELER_BALD_LEATHER) then begin
               Item := create_object(PID_223_FMJ, 0, 0);
            end
            else begin
               Item := create_object(PID_10MM_JHP, 0, 0);
            end
            add_obj_to_inven(Critter, Item);
            if (dude_perk(PERK_scrounger)) then begin
               if (Critter_type == PID_TRAVELER_BALD_LEATHER) then begin
                  Item := create_object(PID_223_FMJ, 0, 0);
               end
               else begin
                  Item := create_object(PID_10MM_JHP, 0, 0);
               end
               add_obj_to_inven(Critter, Item);
            end
            if (Critter_type == PID_TRAVELER_BALD_LEATHER) then begin
               Item := create_object(PID_HUNTING_RIFLE, 0, 0);
            end
            else begin
               Item := create_object(PID_10MM_SMG, 0, 0);
            end
         end
         else begin
            Item := create_object(PID_10MM_JHP, 0, 0);
            add_mult_objs_to_inven(Critter, Item, dude_perk(PERK_scrounger) + 1);
            Item := create_object(PID_10MM_PISTOL, 0, 0);
         end
      end
      else begin
         Item := create_object(PID_SPEAR, 0, 0);
      end
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      item_caps_adjust(Critter, fortune_finder(random(10, 30)));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 2);
   call Add_Mysterious_Stranger;
end

procedure South5 begin
   display_msg(message_str(SCRIPT_RNDDESRT, 144));
   Tot_Critter_A := random(4, 8);
   Outer_ring := (dude_perception / 2) + 7;
   Inner_ring := (dude_perception / 2) + 5;
   Critter_script := SCRIPT_MOLERAT2;
   group_angle := random(0, 5);
   while(Tot_Critter_A) do begin
      if (random(0, 4) == 4) then begin
         Critter_type := PID_GREATER_MOLE_RAT;
      end
      else begin
         Critter_type := PID_LESSER_MOLE_RAT;
      end
      Critter_direction := group_angle + (random(0, 2 * 2) - 2);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end
      call Place_critter;
      obj_rotate(Critter, random(0, 5));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 2);
   call Add_Mysterious_Stranger;
end

procedure South6 begin
   // Fo1in2, Geckos:
   if fo1in2_fo2_critters_enabled and (random(0, 2) == 1) then begin
      call Golden_Geckos;
   end

   else begin
      display_msg(message_str(SCRIPT_RNDDESRT, 145));
      Tot_Critter_A := random(2, 4);// was 3, 6
      Outer_ring := (dude_perception / 2) + 5;
      Inner_ring := (dude_perception / 2) + 3;
      group_angle := random(0, 5);
      Critter_type := PID_RADSCORPION;
      Critter_script := SCRIPT_RADSCORP;
      while(Tot_Critter_A) do begin
         Critter_direction := group_angle + (random(0, 2 * 2) - 2);
         while(Critter_direction < 0) do begin
            Critter_direction := Critter_direction + 6;
         end
         if (Critter_direction > 5) then begin
            Critter_direction := Critter_direction % 6;
         end
         call Place_critter;
         obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));
         Tot_Critter_A := Tot_Critter_A - 1;
      end
   end
   set_global_var(GVAR_MYST_STRANGER_ITEM, 2);
   call Add_Mysterious_Stranger;
end

procedure Geckos begin
   display_msg(message_str(SCRIPT_RNDDESRT, 400));
   Tot_Critter_A := random(3, 6);
   Outer_ring := (dude_perception / 2) + 8;
   Inner_ring := (dude_perception / 2) + 4;
   Critter_script := SCRIPT_ECGECKO;
   Critter_type := PID_GECKO;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, random(0, 5));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
end

procedure Golden_Geckos begin
   display_msg(message_str(SCRIPT_RNDDESRT, 401));
   Tot_Critter_A := random(3, 6);
   Outer_ring := (dude_perception / 2) + 8;
   Inner_ring := (dude_perception / 2) + 4;
   Critter_script := SCRIPT_ECGECKO;
   Critter_type := PID_GOLDEN_GECKO;
   while(Tot_Critter_A) do begin
      Critter_direction := random(0, 2);
      call Place_critter;
      obj_rotate(Critter, random(0, 5));
      Tot_Critter_A := Tot_Critter_A - 1;
   end
end

procedure Gecko_Hunter begin
   display_msg(mstr(403));

   // TODO: Add function to clear area of scenery

   Scenery_Creation_Hex := Critter_spawn_hex - 8;

   // Father
   Critter := create_object_sid(PID_TRAVELER_BALD_LEATHER, 0, 0, SCRIPT_ECHUNTRA);
   critter_attempt_placement(Critter, Scenery_Creation_Hex, 0);
   obj_rotate(Critter, 3);
   //Scenery_Creation_Hex := tile_num(Critter);

   Item := create_object(PID_10MM_SMG, 0, 0);
   add_obj_to_inven(Critter, Item);
   wield_obj_critter(Critter, Item);
   Item := create_object(PID_KNIFE, 0, 0);
   add_obj_to_inven(Critter, Item);
   Item := create_object(PID_HEALING_POWDER, 0, 0);
   add_obj_to_inven(Critter, Item);

   // Drop a spear
   Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
   Item := create_object(PID_SHARP_SPEAR, Scenery_Creation_Hex, 0);
   Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);

   // Son
   Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 2);
   Critter := create_object_sid(PID_PRIMITIVE_HUNTER_MALE, 0, 0, SCRIPT_ECHUNTRB);
   critter_attempt_placement(Critter, Scenery_Creation_Hex, 0);
   obj_rotate(Critter, 3);

   Item := create_object(PID_KNIFE, 0, 0);
   add_obj_to_inven(Critter, Item);
   Item := create_object(PID_SPEAR, 0, 0);
   add_obj_to_inven(Critter, Item);
   wield_obj_critter(Critter, Item);
   Item := create_object(PID_HEALING_POWDER, 0, 0);
   add_obj_to_inven(Critter, Item);

   // Scenery
   Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
   Scenery_Creation := create_object(PID_PLATE_W_MORTEL, Scenery_Creation_Hex, 0);
   Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);
   Scenery_Creation := create_object(PID_POT, Scenery_Creation_Hex, 0);
   Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 4);
   Scenery_Creation := create_object(PID_PLATE_SIMPLE, Scenery_Creation_Hex, 0);

   Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
   Scenery_Creation := create_object(PID_RUG_1, Scenery_Creation_Hex, 0);
   Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
   Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
   Scenery_Creation := create_object(PID_RUG_2, Scenery_Creation_Hex, 0);

   // Dead Geckos
   Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
   Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);

   Critter := create_object(PID_GECKO, 0, 0);
   critter_attempt_placement(Critter, Scenery_Creation_Hex, 0);
   obj_rotate(Critter, 2);
   kill_critter(Critter, ANIM_fall_front_sf);

   Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
   Critter := create_object(PID_GECKO, 0, 0);
   critter_attempt_placement(Critter, Scenery_Creation_Hex, 0);
   obj_rotate(Critter, 2);
   kill_critter(Critter, ANIM_fall_front_sf);

   Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
   Critter := create_object(PID_GECKO, 0, 0);
   critter_attempt_placement(Critter, Scenery_Creation_Hex, 0);
   obj_rotate(Critter, 3);
   kill_critter(Critter, ANIM_fall_front_sf);
end

procedure Gecko_Hunter_Revenge begin
   display_msg(mstr(404));

   Outer_ring := (dude_perception / 3) + 6;
   Inner_ring := (dude_perception / 3) + 3;
   Tot_Critter_A := global_var(GVAR_GECKO_HUNTER_WARPARTY);
   group_angle := random(0, 5);
   Critter_script := -1;

   // Father / Son
   if not(ghunter_status(HUNTER_FATHER_DEAD)) then begin
      Critter_script := SCRIPT_ECHUNTRA;
      Critter_type := PID_TRAVELER_BALD_LEATHER;
      debug("*** create father!");
   end
   else if not(ghunter_status(HUNTER_SON_DEAD)) then begin
      Critter_script := SCRIPT_ECHUNTRB;
      Critter_type := PID_PRIMITIVE_HUNTER_MALE;
      debug("*** create son!");
   end

   if (Critter_script > 0) then begin
      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));

      Item := create_object(PID_KNIFE, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_HEALING_POWDER, 0, 0);
      add_obj_to_inven(Critter, Item);
      Item := create_object(PID_10MM_SMG, 0, 0);
      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);
   end

   // Generic Tribesman
   Critter_script := SCRIPT_ECHUNTRC;
   while(Tot_Critter_A) do begin
      if (random(0, 2) == 1) then
         Critter_type := PID_TRAVELER_BALD_LEATHER;
      else
         Critter_type := PID_PRIMITIVE_HUNTER_MALE;

      Critter_direction := group_angle + (random(0, 2) - 1);
      while(Critter_direction < 0) do begin
         Critter_direction := Critter_direction + 6;
      end
      if (Critter_direction > 5) then begin
         Critter_direction := Critter_direction % 6;
      end

      call Place_critter;
      obj_rotate(Critter, rotation_to_tile(tile_num(Critter), dude_tile));

      if (random(0, 1)) then begin
         if (Critter_type == PID_TRAVELER_BALD_LEATHER) then
            Item := create_object(PID_GREASE_GUN, 0, 0);
         else
            Item := create_object(PID_10MM_SMG, 0, 0);
      end
      else
         Item := create_object(PID_DESERT_EAGLE, 0, 0);

      add_obj_to_inven(Critter, Item);
      wield_obj_critter(Critter, Item);

      if (random(0, 1)) then begin
         Item := create_object(PID_HEALING_POWDER, 0, 0);
         add_obj_to_inven(Critter, Item);
      end
      Tot_Critter_A := Tot_Critter_A - 1;
   end

   set_global_var(GVAR_MYST_STRANGER_ITEM, 1);
   call Add_Mysterious_Stranger;
end
