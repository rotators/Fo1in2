/*

   Junktown - Marcelles, the Crash House owner

*/

/* Include Files */
#include "define.h"
#include "maps/junkkill.h"

#define NAME                    SCRIPT_MARCELLE
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure map_update_p_proc;

procedure Marcelles00;
procedure Marcelles01;
procedure Marcelles02;
procedure Marcelles02a;
procedure Marcelles03;
procedure Marcelles04;
procedure Marcelles05;
procedure Marcelles06;
procedure Marcelles07;
procedure Marcelles08;
procedure Marcelles08a;
procedure Marcelles08b;
procedure Marcelles09;
procedure Marcelles10;
procedure Marcelles11;
procedure Marcelles12;
procedure Marcelles13;
procedure Marcelles14;
procedure Marcelles14a;
procedure Marcelles15;
procedure Marcelles16;
procedure Marcelles17;
procedure Marcelles17a;
procedure Marcelles18;
procedure Marcelles18a;
procedure Marcelles19;
procedure Marcelles19a;
procedure Marcelles19b;
procedure Marcelles20;
procedure Marcelles21;
procedure Marcelles22;
procedure Marcelles23;
procedure Marcelles24;
procedure Marcelles24a;
procedure Marcelles25;
procedure Marcelles26;
procedure Marcelles26a;
procedure Marcelles27;
procedure Marcelles28;
procedure Marcelles29;
procedure Marcelles29a;
procedure Marcelles30;
procedure Marcelles31;
procedure Marcelles32;
procedure Marcelles33;
procedure MarcellesEnd;

procedure Marcelles_charge_raider;
procedure go_to_room;

procedure MarcellesUpReact;

import variable JTRaider_ptr;
import variable Sinthia_ptr;
import variable Marcelle_ptr;
import variable messing_with_fridge;

variable night_person;
variable wake_time;
variable home_tile;
variable Bessy;
variable tmp_hostile;
variable message;
variable moving_disabled;
variable showing_room;

variable tmp_dest_tile := 19901;
variable room_tile := 19289;
variable waiting_tile := 19095;

variable line00flag;
variable line04flag;
variable line06flag;
variable line29flag;
variable Shooting;
variable sfx_name;

#define LVAR_Home_Tile                  (8)
#define LVAR_Home_Rotation              (9)

procedure start begin
   Marcelle_ptr := self_obj;
end

procedure critter_p_proc begin
   if (global_var(GVAR_DUDE_ENEMY_JUNK_CITIZEN) == 1) then begin
      if (self_can_see_dude) then begin
         attack(dude_obj);
      end
   end

   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin

      if (Shooting == 0) then begin
         if ((global_var(GVAR_SAVE_SINTHIA) != 2) and (map_var(3) != 0)) then begin
            dest_tile := waiting_tile;
            if (self_tile != waiting_tile) then begin
               if (local_var(5)) then begin
                  set_local_var(5, 0);
               end
               else begin
                  showing_room := 0;
                  rm_timer_event(self_obj);
                  dest_tile := waiting_tile;
               end
            end
            if (global_var(GVAR_SAVE_SINTHIA) == 0) then begin
               if (self_can_see_dude) and (tile_distance_objs(self_obj, dude_obj) < 12) and (not(line00flag)) then begin
                  if (self_tile == waiting_tile) then begin
                     dialogue_system_enter;
                  end
               end
            end
         end
         else if ((global_var(GVAR_SAVE_SINTHIA) == 2) or (map_var(0) == 2)) then begin
            if (self_tile == waiting_tile) then begin
               moving_disabled := 0;
               dest_tile := tmp_dest_tile;
            end
         end

         if ((moving_disabled == 0) and (local_var(5) == 0)) then begin
            if (self_tile != dest_tile) then begin
               self_walk_to_tile(dest_tile);
            end
         end

         if (showing_room) then begin
            dest_tile := room_tile;
            if (self_tile != dest_tile) then begin
               self_walk_to_tile(dest_tile);
            end
            else begin
               add_timer_event(self_obj, game_ticks(5), 1);
               showing_room := 0;
            end
         end
         else begin
            if (/*self_can_see_dude and*/ messing_with_fridge) then begin
               call Marcelles33;
            end
         end

         if (tile_distance(dude_tile, tmp_dest_tile) < 8) then begin
            if (local_var(5) == 1) then begin
               dest_tile := tmp_dest_tile;
               moving_disabled := 0;
            end
         end
      end

   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_JUNKTOWN, 1);
   end
end

procedure destroy_p_proc begin
   Marcelle_ptr := 0;
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_DUDE_ENEMY_JUNK_CITIZEN, 1);
      set_global_var(GVAR_ENEMY_JUNKTOWN, 1);
   end
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   if (local_var(4)) then begin
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(101));
   end
end

procedure map_update_p_proc begin
   if ((global_var(GVAR_SAVE_SINTHIA) == 0) and (line00flag == 0) and (map_var(3) != 0)) then begin
      move_to(self_obj, waiting_tile, 0);
      dest_tile := waiting_tile;
      showing_room := 0;
      if (local_var(5)) then begin
         set_local_var(5, 0);
      end
   end
end

procedure map_enter_p_proc begin
   if (local_var(LVAR_Home_Tile) == 0) then begin
      set_local_var(LVAR_Home_Tile, self_tile);
      set_local_var(LVAR_Home_Rotation, self_cur_rot);
   end
   else if (self_tile != waiting_tile) then begin
      critter_attempt_placement(self_obj, local_var(LVAR_Home_Tile), self_elevation);
      self_rotate(local_var(LVAR_Home_Rotation));
   end

   set_self_team(TEAM_JUNKTOWNER);
   home_tile := 19901;
   wake_time := 600;
   dest_tile := home_tile; // Added to fix Marcelle leaving them map if NumPathNodes > 6 in f2_res.ini
end

procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_JUNKKILL);

   dude_look_at_self;
   if (local_var(5) == 1) then begin
      float_msg(self_obj, message_str(SCRIPT_GENVAULT, 166), FLOAT_MSG_NORMAL);
   end
   else begin
      if ((self_tile != home_tile) and (self_tile != waiting_tile)) then begin
         script_overrides;
      end
      else begin
         get_reaction
         start_gdialog(339, self_obj, 4, -1, -1);
         gsay_start;
         if ((global_var(GVAR_SAVE_SINTHIA) == 0) and not(line00flag) and (map_var(3) != 0)) then begin
            call Marcelles00;
         end
         else if (global_var(GVAR_SAVE_SINTHIA) == 1) then begin
            call Marcelles03;
         end
         else if ((global_var(GVAR_SAVE_SINTHIA) == 2) and not(line04flag) and (map_var(0) != 2) and (local_var(7) == 0)) then begin
            call Marcelles04;
         end
         else if ((map_var(0) == 2) and not(line06flag)) then begin
            call Marcelles06;
         end
         else if ((global_var(GVAR_KILL_KILLIAN) == 2) and not(line29flag)) then begin
            call Marcelles29;
         end
         else if (not(local_var(4))) then begin
            call Marcelles07;
         end
         else if (local_var(1) < 2) then begin
            call Marcelles22;
         end
         else begin
            call Marcelles17;
         end
         gsay_end;
         end_dialogue;
      end
   end
   if (showing_room) then begin
      call go_to_room;
   end
end

procedure timed_event_p_proc begin
   if (fixed_param == 1) then begin
      add_timer_event(self_obj, game_ticks(2), 2);
   end
   else if (fixed_param == 2) then begin
      dest_tile := home_tile;
      moving_disabled := 0;
   end
   else if (fixed_param == 3) then begin
      if (tile_distance(self_tile, 18089) > 2) then begin
         self_run_to_tile(18089);
         add_timer_event(self_obj, 5, 3);
      end
      else begin
         add_timer_event(self_obj, 5, 4);
      end
   end
   else if (fixed_param == 4) then begin
      reg_anim_clear(JTRaider_ptr);
      reg_anim_begin();
      reg_anim_animate(JTRaider_ptr, ANIM_point, -1);
      reg_anim_animate(JTRaider_ptr, ANIM_fire_single, -1);
      reg_anim_animate(JTRaider_ptr, ANIM_unpoint, -1);
      reg_anim_end();
      critter_dmg(Sinthia_ptr, random(75, 100), DMG_normal_dam);
      add_timer_event(self_obj, 5, 5);
      if (self_item_count(PID_SHOTGUN) == 0) then begin
         Bessy := create_object(PID_SHOTGUN, 0, 0);
         add_obj_to_inven(self_obj, Bessy);
      end
      wield_obj_critter(self_obj, self_item(PID_SHOTGUN));
   end
   else if (fixed_param == 5) then begin
      reg_anim_clear(self_obj);
      reg_anim_begin();
      reg_anim_animate(self_obj, ANIM_point, -1);
      reg_anim_animate(self_obj, ANIM_fire_single, -1);
      sfx_name := sfx_build_weapon_name(1, self_item(PID_SHOTGUN), 0, JTRaider_ptr);
      reg_anim_play_sfx(self_obj, sfx_name, 0);
      reg_anim_animate(self_obj, ANIM_unpoint, -1);
      reg_anim_end();

      critter_dmg(JTRaider_ptr, random(75, 100), DMG_normal_dam);
      Shooting := 0;
      game_ui_enable;
   end
   else if (fixed_param == 6) then begin
      if (global_var(GVAR_SAVE_SINTHIA) != 2) then begin
         call Marcelles_charge_raider;
      end
   end
end

procedure Marcelles00 begin
   line00flag := 1;
   set_global_var(GVAR_SAVE_SINTHIA, 1);
   Reply(102);
   NOption(103, Marcelles02, 4);
   NOption(104, MarcellesUpReact, 4);
   NLowOption(105, Marcelles01);
end

procedure MarcellesUpReact begin
   UpReact
end

procedure Marcelles01 begin
   NMessage(106);
end

procedure Marcelles02 begin
   DownReact
   Reply(107);
   BOption(108, Marcelles02a, 4);
   NOption(109, MarcellesEnd, 4);
end

procedure Marcelles02a begin
   BigDownReact
   call Marcelles_charge_raider;
end

procedure Marcelles03 begin
   NMessage(110);
end

procedure Marcelles04 begin
   line04flag := 1;
   set_local_var(7, 1);
   Reply(111);
   NLowOption(112, Marcelles05);
   NOption(113, Marcelles05, 4);
end

procedure Marcelles05 begin
   NMessage(114);
   if (global_var(GVAR_RENT_TIME) < (GAME_TIME_IN_DAYS)) then begin
      set_global_var(GVAR_RENT_TIME, (GAME_TIME_IN_DAYS) + 1);
   end
   else begin
      set_global_var(GVAR_RENT_TIME, global_var(GVAR_RENT_TIME) + 1);
   end
   showing_room := 1;
   message := mstr(115);
end

procedure Marcelles06 begin
   line06flag := 1;
   BigDownReact
   Reply(116);
   NOption(117, MarcellesEnd, 4);
   NLowOption(118, MarcellesEnd);
end

procedure Marcelles07 begin
   set_local_var(4, 1);
   Reply(119);
   NOption(120, Marcelles12, 4);
   NOption(121, Marcelles13, 4);
   NOption(122, Marcelles14, 7);
   NLowOption(123, Marcelles08);
end

procedure Marcelles08 begin
   Reply(124);
   NLowOption(125, Marcelles09);
   NLowOption(126, Marcelles08a);
   NLowOption(127, Marcelles08b);
end

procedure Marcelles08a begin
   if (dude_caps >= 25) then begin
      dude_caps_adjust(-25);
      if (global_var(GVAR_RENT_TIME) < (GAME_TIME_IN_DAYS)) then begin
         set_global_var(GVAR_RENT_TIME, (GAME_TIME_IN_DAYS) + 1);
      end
      else begin
         set_global_var(GVAR_RENT_TIME, global_var(GVAR_RENT_TIME) + 1);
      end
      call Marcelles10;
   end
   else begin
      call Marcelles11;
   end
end

procedure Marcelles08b begin
   if (dude_caps >= 150) then begin
      dude_caps_adjust(-150);
      if (global_var(GVAR_RENT_TIME) < (GAME_TIME_IN_DAYS)) then begin
         set_global_var(GVAR_RENT_TIME, (GAME_TIME_IN_DAYS) + 7);
      end
      else begin
         set_global_var(GVAR_RENT_TIME, global_var(GVAR_RENT_TIME) + 7);
      end
      call Marcelles10;
   end
   else begin
      call Marcelles11;
   end
end

procedure Marcelles09 begin
   NMessage(128);
end

procedure Marcelles10 begin
   NMessage(129);
   showing_room := 1;
   message := mstr(130);
end

procedure Marcelles11 begin
   NMessage(131);
end

procedure Marcelles12 begin
   NMessage(132);
end

procedure Marcelles13 begin
   Reply(133);
   NOption(134, Marcelles08b, 4);
   NOption(135, Marcelles08a, 4);
   NOption(136, MarcellesEnd, 4);
end

procedure Marcelles14 begin
   Reply(137);
   NOption(138, Marcelles14a, 5);
   NOption(182, MarcellesEnd, 4);
end

procedure Marcelles14a begin
   if (dude_caps >= 50) then begin
      call Marcelles15;
   end
   else begin
      call Marcelles16;
   end
end

procedure Marcelles15 begin
   dude_caps_adjust(-50);
   NMessage(139);
end

procedure Marcelles16 begin
   DownReact
   NMessage(140);
end

procedure Marcelles17 begin
   Reply(141);
   NOption(142, Marcelles17a, 4);
   NOption(184, MarcellesEnd, 4);
   NLowOption(143, Marcelles17a);
end

procedure Marcelles17a begin
   if (global_var(GVAR_RENT_TIME) > (GAME_TIME_IN_DAYS)) then begin
      call Marcelles18;
   end
   else begin
      call Marcelles20;
   end
end

procedure Marcelles18 begin
   Reply(144);
   NOption(145, Marcelles18a, 4);
   NOption(146, MarcellesEnd, 4);
   NLowOption(147, Marcelles18a);
   NLowOption(148, MarcellesEnd);
end

procedure Marcelles18a begin
   DownReact
   showing_room := 1;
   message := mstr(149);
end

procedure Marcelles19 begin
   Reply(150);
   NLowOption(151, Marcelles09);
   NLowOption(152, Marcelles19a);
   NLowOption(153, Marcelles19b);
end

procedure Marcelles19a begin
   if (dude_caps >= 25) then begin
      dude_caps_adjust(-25);
      if (global_var(GVAR_RENT_TIME) < (GAME_TIME_IN_DAYS)) then begin
         set_global_var(GVAR_RENT_TIME, (GAME_TIME_IN_DAYS) + 1);
      end
      else begin
         set_global_var(GVAR_RENT_TIME, global_var(GVAR_RENT_TIME) + 1);
      end
      call Marcelles21;
   end
   else begin
      call Marcelles11;
   end
end

procedure Marcelles19b begin
   if (dude_caps >= 150) then begin
      dude_caps_adjust(-150);
      if (global_var(GVAR_RENT_TIME) < (GAME_TIME_IN_DAYS)) then begin
         set_global_var(GVAR_RENT_TIME, (GAME_TIME_IN_DAYS) + 7);
      end
      else begin
         set_global_var(GVAR_RENT_TIME, global_var(GVAR_RENT_TIME) + 7);
      end
      call Marcelles21;
   end
   else begin
      call Marcelles11;
   end
end

procedure Marcelles20 begin
   Reply(154);
   NOption(155, Marcelles19b, 4);
   NOption(156, Marcelles19a, 4);
   NOption(157, MarcellesEnd, 4);
end

procedure Marcelles21 begin
   UpReact
   NMessage(158);
end

procedure Marcelles22 begin
   Reply(159);
   NOption(160, Marcelles24, 4);
   NOption(184, MarcellesEnd, 4);
   NLowOption(161, Marcelles23);
end

procedure Marcelles23 begin
   NMessage(162);
end

procedure Marcelles24 begin
   Reply(163);
   NOption(164, Marcelles24a, 4);
end

procedure Marcelles24a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call Marcelles26;
   end
   else begin
      call Marcelles25;
   end
end

procedure Marcelles25 begin
   NMessage(165);
end

procedure Marcelles26 begin
   Reply(166);
   NOption(167, Marcelles27, 4);
   NOption(168, Marcelles26a, 4);
end

procedure Marcelles26a begin
   if (dude_caps >= 100) then begin
      dude_caps_adjust(-100);
      if (global_var(GVAR_RENT_TIME) < (GAME_TIME_IN_DAYS)) then begin
         set_global_var(GVAR_RENT_TIME, (GAME_TIME_IN_DAYS) + 1);
      end
      else begin
         set_global_var(GVAR_RENT_TIME, global_var(GVAR_RENT_TIME) + 1);
      end
      call Marcelles28;
   end
   else begin
      call Marcelles11;
   end
end

procedure Marcelles27 begin
   Reply(169);
   NOption(170, MarcellesEnd, 4);
   NOption(171, Marcelles26a, 4);
end

procedure Marcelles28 begin
   NMessage(172);
end

procedure Marcelles29 begin
   line29flag := 1;
   Reply(173);
   NOption(174, Marcelles31, 4);
   NOption(175, Marcelles29a, 4);
   NLowOption(176, Marcelles30);
end

procedure Marcelles29a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call Marcelles32;
   end
   else begin
      call Marcelles31;
   end
end

procedure Marcelles30 begin
   BottomReact
   BMessage(177);
end

procedure Marcelles31 begin
   BottomReact
   BMessage(178);
end

procedure Marcelles32 begin
   BigDownReact
   BMessage(179);
end

procedure Marcelles33 begin
   messing_with_fridge := 0;
   if (global_var(GVAR_RENT_TIME) <= (GAME_TIME_IN_DAYS)) then begin
      float_msg(self_obj, mstr(181), FLOAT_MSG_RED);
      if (local_var(6) == 1) then begin
         tmp_hostile := 1;
      end
      else begin
         set_local_var(6, 1);
      end
   end
end

procedure go_to_room begin
   showing_room := 1;
   moving_disabled := 1;
end

procedure MarcellesEnd begin
end

procedure Marcelles_charge_raider begin
   display_msg(mstr(183));
   add_timer_event(self_obj, 5, 3);
   game_ui_disable;
   Shooting := 1;
end
