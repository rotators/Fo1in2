/*

   Junktown - Skum Pitt main entrance door.

*/

#include "define.h"

#define NAME                    SCRIPT_SKUMDOOR

#include "command.h"

procedure start;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure description_p_proc;

procedure pick_door;

#define STATE_LOCKED    (0)
#define STATE_UNLOCKED  (1)

#define LVAR_Door_Status            (0)

import variable messing_with_SkumDoor;
import variable Neal_closing_door;
import variable Neal_ptr;
import variable SkumDoor_ptr;

variable Lock_Bonus := 0;
variable test;

procedure start begin
end

procedure damage_p_proc begin
   if (weapon_dmg_type(target_obj) == DMG_explosion) then begin
      messing_with_SkumDoor := 1;
      SkumDoor_ptr := 0;
      destroy_object(self_obj);
   end
   else begin
       display_msg(message_str(SCRIPT_DOOR, 193));
   end
end

procedure destroy_p_proc begin
   messing_with_SkumDoor := 1;
   SkumDoor_ptr := 0;
end

procedure map_enter_p_proc begin
   SkumDoor_ptr := self_obj;
   if not(is_loading_game) then begin
      if not(junktown_invaded) then begin
         if ((game_time_hour > 409) and (game_time_hour < 1400)) then begin
            obj_close(self_obj);
            obj_lock(self_obj);
         end
         else begin
            obj_unlock(self_obj);
         end
         set_local_var(LVAR_Door_Status, STATE_LOCKED);
      end
      else begin
         obj_unlock(self_obj);
         obj_close(self_obj);
      end
   end
end

procedure map_update_p_proc begin
   if not(junktown_invaded) then begin
      if ((game_time_hour > 409) and (game_time_hour < 1400)) then begin
         if ((local_var(LVAR_Door_Status) == STATE_LOCKED) and not(messing_with_SkumDoor)) then begin
            obj_close(self_obj);
            obj_lock(self_obj);
         end
      end
      else begin
         obj_unlock(self_obj);
      end
   end
end

procedure use_p_proc begin
   if not(junktown_invaded) then begin
      if source_obj == dude_obj then begin
         if (obj_is_locked(self_obj)) then begin
            script_overrides;
            display_msg(mstr(100));
         end
      end
      else if (Neal_ptr != 0) then begin
         if (source_obj == Neal_ptr) then begin
            set_local_var(LVAR_Door_Status, STATE_LOCKED);
            if (Neal_closing_door == 0) then begin
               script_overrides;
               obj_unlock(self_obj);
               obj_open(self_obj);
            end
            else begin
               script_overrides;
               obj_close(self_obj);
               obj_lock(self_obj);
            end
            if (messing_with_SkumDoor) then begin
               messing_with_SkumDoor := 3;
            end
            else begin
               add_timer_event(Neal_ptr, game_ticks(1), 8);
            end
         end
      end
   end
end

procedure use_obj_on_p_proc begin
   variable item := obj_pid(obj_being_used_with);
   
   if (item == PID_LOCKPICKS or item == PID_EXP_LOCKPICK_SET) then begin
      Lock_Bonus := 0;
      call pick_door;
   end
end

procedure use_skill_on_p_proc begin
   if (action_being_used == SKILL_LOCKPICK) then begin
      script_overrides;
      Lock_Bonus := -10;
      call pick_door;
   end
end

procedure description_p_proc begin
   if (local_var(LVAR_Door_Status) == STATE_LOCKED) then begin
      display_msg(message_str(SCRIPT_DOOR, 104));
   end
end

procedure pick_door begin
   if (obj_is_locked(self_obj)) then begin
      test := roll_vs_skill(source_obj, action_being_used, Lock_Bonus);

      if (is_success(test)) then begin
         display_msg(mstr(101));
         obj_unlock(self_obj);
         set_local_var(LVAR_Door_Status, STATE_UNLOCKED);
      end
      else if (is_critical(test)) then begin
         display_msg(mstr(103));
         jam_lock(self_obj);
      end
      else begin
         display_msg(mstr(102));
      end

      if source_obj == dude_obj then begin
         if ((game_time_hour >= 1300) and (game_time_hour < 1400)) then begin
            messing_with_SkumDoor := 1;
         end
      end

   end
   else
      display_msg(mstr(104));
end
