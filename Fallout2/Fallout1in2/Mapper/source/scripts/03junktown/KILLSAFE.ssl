#include "define.h"
#include "maps/junkkill.h"

#define NAME                    SCRIPT_KILLSAFE

#include "command.h"

procedure start;
procedure description_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;

procedure safe_bonus;

#define LVAR_Bonus_Items         (0)

variable item;
variable test;

import variable KillSafe_ptr;

procedure start begin
end

procedure description_p_proc begin
   script_overrides;
   if (obj_is_locked(self_obj)) then
      display_msg(mstr(105));
   else
      display_msg(mstr(101));
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure map_enter_p_proc begin
   variable i, item_list;

   KillSafe_ptr := self_obj;
   obj_close(self_obj);
   obj_lock(self_obj);

   if (map_first_run) then begin
      item_list := [PID_STIMPAK, PID_44_MAGNUM_JHP, PID_10MM_AP, PID_223_FMJ, PID_KNIFE];
      foreach (i in item_list) begin
         if (random(0, 3) == 3) then begin
            debug_msg("add bonus item to killian safe!");
            item := create_object(i, 0, 0);
            add_obj_to_inven(self_obj, item);
         end
      end
   end
end

procedure pickup_p_proc begin
   if (obj_is_locked(self_obj)) then begin
      script_overrides;
   end
end

procedure use_p_proc begin
   if (obj_is_locked(self_obj)) then begin
      script_overrides;
      display_msg(mstr(105));
      set_map_var(MVAR_dude_messing_with_Killians_home, 1);
   end
end

procedure use_obj_on_p_proc begin
   item := obj_pid(obj_being_used_with);

   if (item == PID_LOCKPICKS or item == PID_ELECTRONIC_LOCKPICKS or item == PID_ELEC_LOCKPICK_MKII) then begin
      script_overrides;
      set_map_var(MVAR_dude_messing_with_Killians_home, 1);
      if (not(obj_is_locked(self_obj))) then begin
         display_msg(mstr(101));
      end
      else begin
         test := roll_vs_skill(dude_obj, SKILL_LOCKPICK, -10);
         if (is_success(test)) then begin
            obj_unlock(self_obj);
            display_msg(mstr(103));
            call safe_bonus;
         end
         else if (is_critical(test)) then begin
            jam_lock(self_obj);
            display_msg(mstr(107));
         end
         else begin
            display_msg(mstr(104));
         end
      end
   end
end

procedure use_skill_on_p_proc begin
   if (action_being_used == SKILL_LOCKPICK) then begin
      script_overrides;
      set_map_var(MVAR_dude_messing_with_Killians_home, 1);
      if (not(obj_is_locked(self_obj))) then begin
         display_msg(mstr(101));
      end
      else begin
         test := roll_vs_skill(dude_obj, SKILL_LOCKPICK, -30);
         if (is_success(test)) then begin
            obj_unlock(self_obj);
            display_msg(mstr(103));
            call safe_bonus;
         end
         else if (is_critical(test)) then begin
            jam_lock(self_obj);
            display_msg(mstr(107));
         end
         else begin
            display_msg(mstr(104));
         end
      end
   end
end

procedure safe_bonus begin
   if (local_var(LVAR_Bonus_Items) == 0) then begin
      set_local_var(LVAR_Bonus_Items, 1);
      give_xp_msg(EXP_CRACKED_KILLIAN_SAFE, mstr(106));
   end
end
