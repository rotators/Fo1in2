/*

   Junktown - Doc Morbid

*/

/* Include Files */
#include "define.h"
//#include "necropolis.h"

#define NAME                    SCRIPT_MORBID
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure destroy_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;

procedure Morbid00;
procedure Morbid00a;
procedure Morbid01;
procedure Morbid02;
procedure Morbid03;
procedure Morbid04;
procedure Morbid04a;
procedure Morbid05;
procedure Morbid05a;
procedure Morbid06;
procedure Morbid07;
procedure Morbid08;
procedure Morbid09;
procedure Morbid09a;
procedure Morbid10;
procedure Morbid11;
procedure Morbid12;
procedure Morbid13;
procedure Morbid14;
procedure Morbid15;
procedure Morbid16;
procedure Morbid17;
procedure Morbid18;
procedure Morbid19;
procedure Morbid20;
procedure Morbid21;
procedure Morbid22;
procedure Morbid23;
procedure Morbid24;
procedure Morbid25;
procedure Morbid26;
procedure Morbid27;
procedure Morbid28;
procedure Morbid00L;
procedure Morbid00La;
procedure Morbid01L;
procedure Morbid02L;
procedure Morbid02La;
procedure Morbid03L;
procedure Morbid04L;
procedure Morbid05L;
procedure Morbid06L;
procedure Morbid07L;
procedure Morbid08L;
procedure Morbid09L;
procedure Morbid10L;
procedure Morbid00N;
procedure Morbid00Na;
procedure Morbid00Nb;
procedure Morbid01N;
procedure Morbid02N;
procedure Morbid03N;
procedure Morbid04N;

procedure get_eye;
procedure MorbidCombat;
procedure MorbidEnd;

procedure MorbidDownReact;

import variable fetch_dude;
import variable Morbid_ptr;
import variable ladder_down;
import variable ladder_up;
import variable Gretch_call;

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;

variable tmp_hostile;
variable heal;
variable COST;
variable BONUS;
variable DIAGNOSIS;
variable rndx;
variable getting_eye;
variable got_eye;
variable I_Hate_Player;

// by Sduibek for Fallout Fixt
procedure FetchEnd;
procedure FetchEnd2;
procedure FetchEnd3;
procedure FetchEnd4;
procedure FetchEnd5;

variable EyeHPloss;
variable CurrentHP;

#define LVAR_Sleeping                     (6)
#define LVAR_Elev_TP                      (9)


#define EVENT_TRANSITION         (3)

procedure start begin
   if (self_tile == 12498) and (self_elevation == 1) then begin
      move_to(self_obj, 13498, 1);
   end
end

procedure critter_p_proc begin
   if (global_var(GVAR_IS_MORBID_TEAM_HOSTILE) == 1) then begin
      if (self_can_see_dude) then begin
         attack(dude_obj);
      end
   end

   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if (getting_eye) then begin
         call get_eye;
      end
      else begin
         if ((game_time_hour > 2000) and (game_time_hour < 2330)) then begin
            if (self_elevation != 1) then begin
               use_obj(ladder_down);
            end
            else if ((local_var(LVAR_Elev_TP) == 0) or (local_var(LVAR_Elev_TP) == 3)) then begin
               if (self_tile != 12702) then begin// TABLE ON LEFT SIDE OF UNDERGROUND
                  self_walk_to_tile(12702);// TABLE ON LEFT SIDE OF UNDERGROUND
               end
            end
         end
         else if ((local_var(LVAR_Elev_TP) == 0) or (local_var(LVAR_Elev_TP) == 3)) then begin
            sleeping
         end

         if (local_var(LVAR_Elev_TP) == 1) then begin
            set_local_var(LVAR_Elev_TP, 2);
            add_timer_event(self_obj, 10 * 60 * 10, EVENT_TRANSITION);
         end
      end
   end

   if (global_var(GVAR_IS_MORBID_TEAM_HOSTILE) == 1) then begin
      if (self_can_see_dude) then begin
         if (I_Hate_Player == 0) then begin
            tmp_hostile := 1;
            I_Hate_Player := 1;
         end
      end
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure map_enter_p_proc begin
   if (self_tile == 12498) and (self_elevation == 1) then begin
      move_to(self_obj, 13498, 1);
   end

   set_self_team(TEAM_JUNKTOWN_MORBID);
   Morbid_ptr := self_obj;
   sleep_time := 2340;
   wake_time := 810;
   home_tile := 13501;
   sleep_tile := 14098;

   if (combat_is_initialized == 0) then begin
      sleeping
      if ((game_time_hour > 1700) and (game_time_hour < 2330)) then begin
         move_to(self_obj, 12702, 1);
      end
      else if ((game_time_hour >= 2330) or (game_time_hour < 800)) then begin
         move_to(self_obj, sleep_tile, 1);
      end
      else if ((local_var(LVAR_Elev_TP) == 0) or (local_var(LVAR_Elev_TP) == 3)) then begin
         move_to(self_obj, home_tile, 0);
      end
   end

   rm_timer_event(self_obj);
   add_timer_event(self_obj, game_ticks(random(10, 30)), 2);
end

procedure map_update_p_proc begin
   if (combat_is_initialized == 0) then begin
      if ((game_time_hour > 1700) and (game_time_hour < 2330)) then begin
         move_to(self_obj, 12702, 1);
      end
      else if ((game_time_hour >= 2330) or (game_time_hour < 800)) then begin
         move_to(self_obj, sleep_tile, 1);
      end
      else if ((local_var(LVAR_Elev_TP) == 0) or (local_var(LVAR_Elev_TP) == 3)) then begin
         rm_timer_event(self_obj);
         move_to(self_obj, home_tile, 0);
      end
   end
end

procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure talk_p_proc begin
   set_tma_data(NAME, 1000, 970, 970, 980, 982);

   dude_look_at_self;
   if ((game_time_hour >= 800) and (game_time_hour < 1700)) then begin
      set_local_var(6, 0);
   end
   if (local_var(6) == 1) then begin
      display_msg(mstr(232));
   end
   else if (local_var(LVAR_Elev_TP) != 0) then begin
      float_msg(self_obj, message_str(SCRIPT_ENEMY, 101), FLOAT_MSG_RED);
   end
   else begin
      get_reaction
      start_gdialog(104, self_obj, 4, -1, -1);
      gsay_start;
      if (got_eye) then begin
         call Morbid09L;
      end
      else if (self_elevation == 1) then begin
         if (not(local_var(5))) then begin
            call Morbid00L;
         end
         else begin
            call Morbid01L;
         end
      end
      else if ((GAME_TIME_IN_DAYS) >= 80) then begin
         if (not(local_var(7))) then begin
            call Morbid17;
         end
         else begin
            call Morbid21;
         end
      end
      else if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
         if (local_var(4)) then begin
            call Morbid04N;
         end
         else begin
            call Morbid00N;
         end
      end
      else if (local_var(4)) then begin
         if (local_var(LVAR_reaction_level) > BAD) then begin
            call Morbid13;
         end
         else begin
            call Morbid16;
         end
      end
      else if (local_var(LVAR_reaction_level) > BAD) then begin
         call Morbid00;
      end
      else begin
         call Morbid15;
      end
      gsay_end;
      end_dialogue;
   end
end

procedure timed_event_p_proc begin
   if (fixed_param == 1) then begin
      add_timer_event(self_obj, game_ticks(1), 2);
      critter_injure(dude_obj, DAM_BLIND);
      got_eye := 1;
      dialogue_system_enter;
      game_ui_enable;
   end
   else if (fixed_param == 2) then begin
      if ((self_elevation == 1) and (game_time_hour > 1700) and (game_time_hour < 2330)) then begin
         reg_anim_clear(self_obj);
         reg_anim_begin();
         reg_anim_animate(self_obj, ANIM_magic_hands_middle, -1);
         reg_anim_obj_move_to_tile(self_obj, 12901, -1);
         reg_anim_animate(self_obj, ANIM_magic_hands_ground, -1);
         reg_anim_obj_move_to_tile(self_obj, 12702, -1);
         reg_anim_end();
      end
      add_timer_event(self_obj, game_ticks(random(10, 30)), 2);
   end
   else if (fixed_param == EVENT_TRANSITION) then begin
      set_local_var(LVAR_Elev_TP, 3);
   end
end

procedure combat_p_proc begin
   if (fixed_param == COMBAT_SUBTYPE_TURN) then begin
      set_local_var(LVAR_Elev_TP, 1);
      if (self_elevation == 0) then begin
         script_overrides;
         self_run_to_tile(13099);
         use_obj(ladder_down);
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_IS_MORBID_TEAM_HOSTILE, 1);
   end
end

procedure destroy_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_IS_MORBID_TEAM_HOSTILE, 1);
      inc_inv_evil_crit
   end
end

procedure Morbid00 begin
   set_local_var(4, 1);
   Reply(101);
   NOption(102, Morbid03, 4);
   NOption(103, Morbid03, 5);
   NOption(104, Morbid02, 4);
   BLowOption(105, Morbid00a);
   NLowOption(106, Morbid03);
   if ((global_var(GVAR_GRETCH_PRIMECUTS) == 1) and (local_var(8) == 0)) then begin
      BOption(233, Morbid27, 4);
   end
end

procedure Morbid00a begin
   DownReact
   call Morbid01;
end

procedure Morbid01 begin
   NMessage(107);
end

procedure Morbid02 begin
   Reply(108);
   NOption(109, MorbidEnd, 4);
   BOption(110, MorbidDownReact, 4);
end

procedure MorbidDownReact begin
   DownReact
end

procedure Morbid03 begin
   NMessage(111);
   if ((dude_cur_hp == dude_max_hp) and not(dude_poison_stat) and (dude_rads < 31)) then begin
      call Morbid04;
   end
   else begin
      call Morbid09;
   end
end

procedure Morbid04 begin
   Reply(112);
   BOption(113, Morbid04a, 4);
   NOption(114, Morbid07, 4);
   BLowOption(129, Morbid04a);
   NLowOption(128, Morbid07);
end

procedure Morbid04a begin
   DownReact
   DownReact
   call Morbid05;
end

procedure Morbid05 begin
   Reply(115);
   NOption(116, Morbid07, 4);
   BOption(117, Morbid05a, 4);
   NLowOption(128, Morbid07);
   BLowOption(129, Morbid05a);
end

procedure Morbid05a begin
   DownReact
   DownReact
   call Morbid06;
end

procedure Morbid06 begin
   fetch_dude := 1;
   Gretch_call := 1;
   BMessage(118);
end

procedure Morbid07 begin
   if (dude_caps < 10) then begin
      call Morbid08;
   end
   else begin
      dude_caps_adjust(-10);
      NMessage(119);
   end
end

procedure Morbid08 begin
   DownReact
   Reply(120);
   BOption(223, FetchEnd, 4);
   NOption(221, FetchEnd5, 4);
   NOption(237, FetchEnd5, 4);
end

procedure Morbid09 begin
   variable LVar0 := 0;
   NMessage(121);
   DIAGNOSIS := mstr(122);
   if (dude_cur_hp == dude_max_hp) then begin
      DIAGNOSIS := DIAGNOSIS + mstr(178);
   end
   else if (dude_cur_hp > (dude_max_hp * 0.70000)) then begin
      DIAGNOSIS := DIAGNOSIS + mstr(179);
   end
   else if (dude_cur_hp > (dude_max_hp * 0.50000)) then begin
      DIAGNOSIS := DIAGNOSIS + mstr(180);
   end
   else if (dude_cur_hp > (dude_max_hp * 0.30000)) then begin
      DIAGNOSIS := DIAGNOSIS + mstr(181);
   end
   else begin
      DIAGNOSIS := DIAGNOSIS + mstr(182);
   end

   DIAGNOSIS := DIAGNOSIS + mstr(random(183, 186));
   if (dude_poison_stat) then begin
      DIAGNOSIS := DIAGNOSIS + mstr(random(187, 190));
   end
   LVar0 := dude_rads;
   if (LVar0 > 30) then begin
      if (LVar0 < 101) then begin
         DIAGNOSIS := DIAGNOSIS + mstr(191);
      end
      else if (LVar0 < 201) then begin
         DIAGNOSIS := DIAGNOSIS + mstr(192);
      end
      else if (LVar0 < 401) then begin
         DIAGNOSIS := DIAGNOSIS + mstr(193);
      end
      else begin
         DIAGNOSIS := DIAGNOSIS + mstr(194);
      end
   end
   if ((LVar0 > 30) and (LVar0 < 251)) then begin
      DIAGNOSIS := DIAGNOSIS + mstr(195);
   end
   heal := dude_max_hp - dude_cur_hp;
   if (local_var(LVAR_reaction_level) >= NEUTRAL) then begin
      COST := 3 * heal;
      if (dude_poison_stat) then begin
         COST := COST + 25;
      end
   end
   else begin
      COST := 4 * heal;
      if (dude_poison_stat) then begin
         COST := COST + 50;
      end
   end
   if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
      COST := COST * (3 / 2);
   end
   NMessage(DIAGNOSIS);
   call Morbid09a;
end

procedure Morbid09a begin
   Reply(mstr(123) + COST + mstr(124));
   NOption(125, Morbid12, 4);
   BOption(126, Morbid10, 4);
   NOption(127, Morbid11, 4);
   NLowOption(128, Morbid12);
   NLowOption(129, Morbid11);
end

procedure Morbid10 begin
   DownReact
   BMessage(130);
end

procedure Morbid11 begin
   NMessage(131);
end

procedure Morbid12 begin
   UpReact
   NMessage(132);

   gfade_out(1);
      rndx := 300 * heal;
      if (dude_poison_stat) then begin
         rndx := rndx + 1200;
      end
      critter_heal(dude_obj, dude_max_hp);
      poison(dude_obj, -dude_poison_stat);
      game_time_advance(game_ticks(rndx));
   gfade_in(1);

   if (dude_caps < COST) then begin
      call Morbid08;
   end
   else begin
      dude_caps_adjust(-COST);
      NMessage(133);
   end
end

procedure Morbid13 begin
   Reply(134);
   NOption(135, Morbid03, 4);
   NOption(136, Morbid14, 4);
   NLowOption(137, Morbid03);
   if ((global_var(GVAR_GRETCH_PRIMECUTS) == 1) and (local_var(8) == 0)) then
      BOption(233, Morbid27, 4);
end

procedure Morbid14 begin
   NMessage(138);
end

procedure Morbid15 begin
   Reply(139);
   NOption(140, Morbid03, 4);
   NOption(141, Morbid03, 4);
   NOption(142, Morbid02, 4);
   NLowOption(143, Morbid03);
end

procedure Morbid16 begin
   Reply(144);
   NOption(145, Morbid03, 4);
   NOption(146, Morbid14, 4);
   NLowOption(147, Morbid03);
end

procedure Morbid17 begin
   set_local_var(7, 1);
   if (local_var(LVAR_reaction_level) < NEUTRAL) then UpReactLevel

   Reply(148);
   NOption(149, Morbid03, 4);
   NOption(150, Morbid19, 4);
   NOption(151, Morbid18, 5);
   NLowOption(152, Morbid03);
   if ((global_var(GVAR_GRETCH_PRIMECUTS) == 1) and (local_var(8) == 0)) then
      BOption(233, Morbid27, 4);
end

procedure Morbid18 begin
   Reply(153);
   NOption(154, Morbid03, 5);
   NOption(155, Morbid20, 5);
   NOption(156, Morbid19, 5);
end

procedure Morbid19 begin
   NMessage(157);
end

procedure Morbid20 begin
   variable LVar0 := 0;
   LVar0 := mstr(158);
   if (not(global_var(GVAR_KILLIAN_DEAD))) then begin
      LVar0 := LVar0 + mstr(159);
   end
   LVar0 := LVar0 + mstr(160);
   Reply(LVar0);
   NOption(161, Morbid03, 4);
   NOption(162, Morbid19, 5);
end

procedure Morbid21 begin
   Reply(163);
   NOption(164, Morbid03, 4);
   NOption(165, Morbid19, 4);
   NLowOption(166, Morbid03);
   if ((global_var(GVAR_GRETCH_PRIMECUTS) == 1) and (local_var(8) == 0)) then
      BOption(233, Morbid27, 4);
end

procedure Morbid22 begin
   Reply(167);
   NOption(168, Morbid03, 4);
   NOption(169, Morbid03, 5);
   NLowOption(170, Morbid03);
end

procedure Morbid23 begin
   NMessage(171);
end

procedure Morbid24 begin
   NMessage(172);
end

procedure Morbid25 begin
   NMessage(173);
end

procedure Morbid26 begin
   Reply(174);
   NOption(175, Morbid03, 4);
   NOption(176, Morbid03, 5);
   NLowOption(177, Morbid03);
end

procedure Morbid27 begin
   set_local_var(8, 1);
   Reply(234);
   BOption(235, Morbid28, 4);
end

procedure Morbid28 begin
   BottomReact
   BMessage(236);
end

procedure Morbid00L begin
   Reply(204);
   set_local_var(5, 1);
   BOption(207, MorbidCombat, 4);
   NOption(208, Morbid00La, 6);
   NLowOption(209, MorbidCombat);
end

procedure Morbid00La begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call Morbid02L;
   end
   else begin
      call Morbid01L;
   end
end

procedure Morbid01L begin
   BMessage(210);
   Gretch_call := 1;
   fetch_dude := 1;
end

procedure Morbid02L begin
   Reply(211);
   NOption(212, Morbid02La, 5);
   if (global_var(GVAR_GRETCH_PRIMECUTS) == 1) then
      BOption(213, Morbid03L, 5);
end

procedure Morbid02La begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call Morbid04L;
   end
   else begin
      call Morbid01L;
   end
end

procedure Morbid03L begin
   if dude_is_male then
      BMessage(mstr(214) + mstr(205));
   else
      BMessage(mstr(214) + mstr(206));
   Gretch_call := 1;
   fetch_dude := 1;
end

procedure Morbid04L begin
   Reply(215);
   NOption(216, Morbid06L, 5);
   NOption(217, Morbid05L, 5);
end

procedure Morbid05L begin
   variable LVar0 := 0;
   LVar0 := mstr(218);
   LVar0 := LVar0 + mstr(220);
   Reply(LVar0);
   NOption(221, Morbid07L, 5);
   NOption(222, Morbid06L, 5);
end

procedure Morbid06L begin
   BMessage(223);
   Gretch_call := 1;
   fetch_dude := 1;
end

procedure Morbid07L begin
   Reply(224);
   NOption(225, Morbid08L, 5);
   NOption(226, Morbid06L, 5);
end

procedure Morbid08L begin
   NMessage(227);
   getting_eye := 1;
end

procedure Morbid09L begin
   got_eye := 0;
   Reply(229);
   NOption(230, Morbid10L, 5);
end

procedure Morbid10L begin
   NMessage(231);
end

procedure Morbid00N begin
   Reply(196);
   NOption(197, Morbid00Na, 4);
   NOption(198, Morbid00Nb, 5);
   NLowOption(199, Morbid03N);
end

procedure Morbid00Na begin
   if (dude_cur_hp < (dude_max_hp - 7)) then begin
      call Morbid03;
   end
   else begin
      call Morbid01;
   end
end

procedure Morbid00Nb begin
   if (dude_cur_hp < (dude_max_hp - 3)) then begin
      call Morbid03;
   end
   else begin
      call Morbid02N;
   end
end

procedure Morbid01N begin
   DownReact
   BMessage(200);
end

procedure Morbid02N begin
   NMessage(201);
end

procedure Morbid03N begin
   NMessage(202);
end

procedure Morbid04N begin
   Reply(203);
   NOption(197, Morbid00Na, 4);
   NOption(198, Morbid00Nb, 5);
   NLowOption(199, Morbid03N);
end

procedure get_eye begin
   CurrentHP := dude_cur_hp;
   EyeHPloss := (random(10, 15) - dude_luck);

   if (EyeHPloss < 1) then begin
      EyeHPloss := 1;
   end
   if (EyeHPloss > CurrentHP) then begin
      EyeHPloss := (EyeHPloss - 2);
   end

   self_run_to_tile(tile_num_in_direction(dude_tile, 1, 1));
   self_look_at_dude;
   rm_timer_event(self_obj);
   add_timer_event(self_obj, game_ticks(5), 1);
   game_ui_disable;

   if (EyeHPloss == 2) then begin
   end
   else begin
      critter_heal(dude_obj, -EyeHPloss);
   end

   game_ui_disable;
   display_msg(mstr(228));
   getting_eye := 0;
end

procedure MorbidCombat begin
   tmp_hostile := 1;
end

procedure MorbidEnd begin
end

procedure FetchEnd begin
   fetch_dude := 1;
   Gretch_call := 1;
end

procedure FetchEnd2 begin
   Reply(115);
   NOption(237, FetchEnd5, 4);
end

procedure FetchEnd3 begin
   Reply(224);
   NOption(208, FetchEnd4, 4);
end

procedure FetchEnd4 begin
   rm_timer_event(self_obj);
   reg_anim_clear(dude_obj);
   reg_anim_begin();
   reg_anim_animate(dude_obj, ANIM_fall_back_sf, -1);
   reg_anim_animate(dude_obj, ANIM_back_to_standing, -1);
   reg_anim_end();
   getting_eye := 1;
end

procedure FetchEnd5 begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -15)) or is_success(do_check(dude_obj, STAT_ch, -2))) then begin
      call FetchEnd3;
   end
   else begin
      call Morbid01L;
   end
end
