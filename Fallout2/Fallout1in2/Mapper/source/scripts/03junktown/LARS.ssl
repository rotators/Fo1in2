/*

   Junktown - Lars

*/

/* Include Files */
#include "define.h"
#include "junktown.h"

#define NAME                    SCRIPT_LARS
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure description_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

procedure Lars00;
procedure Lars01;
procedure Lars02;
procedure Lars03;
procedure Lars04;
procedure Lars05;
procedure Lars06;
procedure Lars07;
procedure Lars08;
procedure Lars09;
procedure Lars10;
procedure Lars11;
procedure Lars12;
procedure Lars13;
procedure Lars14;
procedure Lars15;
procedure Lars16;
procedure Lars17;
procedure Lars18;
procedure Lars19;
procedure Lars20;
procedure Lars21;
procedure Lars22;
procedure Lars23;
procedure Lars24;
procedure Lars25;
procedure Lars26;
procedure Lars27;
procedure LarsEnd;

procedure LarsKillNeal;

variable tmp_hostile;
variable initial := 0;
variable round_counter;
variable Lars_bust_Skulz;
variable Lars_kill_Neal;
variable nail_Gizmo;
variable wait_for_Lars;

#define LVAR_Here_Before   (4)

procedure start begin
end

procedure combat_p_proc begin
   if (cur_map_index != MAP_JUNKCSNO) then begin
      if (fixed_param == COMBAT_SUBTYPE_TURN) then begin
         round_counter := round_counter + 1;
      end
      if (round_counter > 3) then begin
         if (global_var(GVAR_ENEMY_JUNKTOWN) == 0) then begin
            set_global_var(GVAR_ENEMY_JUNKTOWN, 1);
            set_global_var(GVAR_PLAYER_REPUTATION, check_general_rep - 5);
         end
      end
   end
end

procedure critter_p_proc begin
   if (not(is_gizmo_alive) and (global_var(GVAR_LARS_DEAD) == 0) and (CUR_MAP_JUNKCSNO) and (combat_is_initialized == 0)) then begin //  JUNKTOWN - CASINO, GIZMO, SKUM PITT, BOXING, DOGMEAT
      destroy_object(self_obj);
   end
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if (map_var(0) == 1) then begin
         dude_caps_adjust(500);
         float_msg(self_obj, mstr(162), FLOAT_MSG_GREEN);
         set_map_var(0, 2);
      end
   end
   if (global_var(GVAR_ENEMY_JUNKTOWN) == 1) then begin
      if (self_can_see_dude) then begin
         attack(dude_obj);
      end
   end
end

procedure description_p_proc begin
   if (is_success(do_check(dude_obj, STAT_pe, dude_perk(PERK_bonus_awareness)))) then begin
      script_overrides;
      display_msg(mstr(103));
   end
   else begin
      script_overrides;
      display_msg(mstr(102));
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_JUNKTOWN, 1);
   end
end

procedure destroy_p_proc begin
   set_global_var(GVAR_LARS_DEAD, 1);
   if (CUR_MAP_JUNKCSNO) then begin
      script_overrides;
      display_msg(mstr(168));
   end
   rm_timer_event(self_obj);

   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_JUNKTOWN, 1);
   end
   inc_good_critter
   rm_timer_event(self_obj);
end

procedure look_at_p_proc begin
   script_overrides;
   if (local_var(LVAR_Here_Before)) then begin
      display_msg(mstr(101));
   end
   else begin
      display_msg(mstr(100));
   end
end

procedure map_enter_p_proc begin
   if (global_var(GVAR_LARS_DEAD) == 1) then begin
      destroy_object(self_obj);
   end
   else begin
      if (CUR_MAP_JUNKCSNO) then begin
         if not(is_gizmo_alive) then begin
            destroy_object(self_obj);
         end
         else begin
            set_self_team(TEAM_PLAYER);
         end
      end
      else begin
         set_self_team(TEAM_JUNKTOWN_GUARD);
         if (global_var(GVAR_LARS_N_KILLIAN_ON_CASINO) == 1) then begin
            if not(is_loading_game) then set_self_invisible;
         end
         else begin
            if not(is_loading_game) then set_self_visible;
         end
      end
   end
end

procedure pickup_p_proc begin
   float_msg(self_obj, mstr(104), FLOAT_MSG_NORMAL);
   tmp_hostile := 1;
end

procedure talk_p_proc begin
   set_tma_data(NAME, 1000, TMA_MSG_NAME_START, TMA_MSG_NAME_END, TMA_MSG_DONTKNOW_START, TMA_MSG_DONTKNOW_END);

   dude_look_at_self;
   get_reaction

   start_gdialog(518, self_obj, 4, -1, -1);
   gsay_start;

   if has_rep_childkiller then begin
      call Lars01;
   end
   else begin
      if (global_var(GVAR_ENEMY_JUNKTOWN) == 1) then begin
         call Lars27;
      end
      else if (not(is_gizmo_alive) and (global_var(GVAR_CAPTURE_GIZMO) != 2)) then begin
         call Lars26;
      end
      else if (global_var(GVAR_CAPTURE_GIZMO) == 1) then begin
         set_local_var(LVAR_Here_Before, 1);
         call Lars21;
      end
      else if (local_var(LVAR_Here_Before) == 0) then begin
         call Lars00;
      end
      else if (global_var(GVAR_BUST_SKULZ) == 2) then begin
         call Lars19;
      end
      else begin
         call Lars12;
      end
   end
   gsay_end;
   end_dialogue;

   if (nail_Gizmo) then begin
      nail_Gizmo := 0;
      set_global_var(GVAR_LARS_N_KILLIAN_ON_CASINO, 1);
      load_map(MAP_JUNKCSNO, 4);
   end
   else if ((global_var(GVAR_BUST_SKULZ) == 2) and (local_var(5) == 0)) then begin
      set_local_var(5, 1);
      gfade_out(1);
      set_global_var(GVAR_PLAYER_REPUTATION, check_general_rep + 3);
      give_xp_msg(EXP_ELIMINATE_SKULZ, mstr(174));
      game_time_advance(game_ticks(7200));
      gfade_in(1);
   end
   else if (wait_for_Lars) then begin
      gfade_out(1);
      game_time_advance(game_ticks(3000));
      set_gizmo_remains_timer;
      set_global_var(GVAR_CAPTURE_GIZMO, 2);
      gfade_in(1);
      wait_for_Lars := 0;
   end
   else if (Lars_kill_Neal) then begin
      Lars_kill_Neal := 0;
      set_global_var(GVAR_LARS_N_KILLIAN_ON_CASINO, 1);
      load_map(MAP_JUNKCSNO, 7);
   end
   else if (Lars_bust_Skulz) then begin
      Lars_bust_Skulz := 0;
      gfade_out(1);
      set_global_var(GVAR_BUST_SKULZ, 2);
      set_global_var(GVAR_DESTROY_VATS_11, 0);
      display_msg(mstr(167));
      gfade_in(1);
   end
end

procedure Lars00 begin
   Reply(105);
   NOption(106, Lars02, 4);
   NOption(107, Lars05, 4);
   NOption(108, Lars10, 4);
   NLowOption(109, Lars20);
   if (global_var(GVAR_BUST_SKULZ) == 1) then begin
      NOption(110, Lars13, 6);
   end
   if (global_var(GVAR_CAPTURE_GIZMO) == 1) then begin
      GOption(161, Lars22, 4);
   end
   if (global_var(GVAR_DESTROY_VATS_11) > (GAME_TIME_IN_DAYS)) then begin
      GOption(166, Lars24, 4);
   end
end

procedure Lars01 begin
   BMessage(111);
   tmp_hostile := 1;
end

procedure Lars02 begin
   Reply(112);
   NOption(113, Lars03, 4);
   Goodbyes;
   NOption(exit_line, LarsEnd, 4);
end

procedure Lars03 begin
   Reply(114);
   NOption(115, Lars04, 4);
   Goodbyes;
   NOption(exit_line, LarsEnd, 4);
end

procedure Lars04 begin
   DownReact
   BMessage(116);
end

procedure Lars05 begin
   Reply(117);
   NOption(118, Lars04, 4);
   NOption(119, Lars06, 4);
   NOption(120, Lars07, 6);
end

procedure Lars06 begin
   NMessage(121);
end

procedure Lars07 begin
   Reply(122);
   NOption(123, Lars08, 4);
   NOption(124, Lars09, 4);
end

procedure Lars08 begin
   set_global_var(GVAR_BUST_SKULZ, 1);
   NMessage(125);
end

procedure Lars09 begin
   NMessage(126);
end

procedure Lars10 begin
   variable LVar0 := 0;
   set_local_var(LVAR_Here_Before, 1);
   LVar0 := mstr(128) + dude_name + mstr(129);
   Reply(127);
   NOption(LVar0, Lars11, 4);
   NOption(130, Lars04, 4);
   if (global_var(GVAR_CAPTURE_GIZMO) == 1) then begin
      GOption(160, Lars22, 4);
   end
end

procedure Lars11 begin
   variable LVar0 := 0;
   LVar0 := mstr(131) + dude_name + mstr(132);
   Reply(LVar0);
   NOption(133, Lars05, 4);
   NOption(134, Lars02, 4);
   Goodbyes;
   NOption(exit_line, LarsEnd, 4);
end

procedure Lars12 begin
   if (local_var(1) > 1) then begin
      Reply(135);
   end
   else begin
      if (global_var(GVAR_CAPTURE_GIZMO) == 2) then begin
         Reply(171);
      end
      else begin
         Reply(136);
      end
   end
   if (not(global_var(GVAR_BUST_SKULZ))) then begin
      NOption(137, Lars18, 4);
   end
   NOption(138, LarsEnd, 4);
   if (global_var(GVAR_SHERRY_TELLS_ON_SKULZ) and (global_var(GVAR_BUST_SKULZ) == 1)) then begin
      NOption(139, Lars14, 4);
   end
   if (global_var(GVAR_DESTROY_VATS_11) > (GAME_TIME_IN_DAYS)) then begin
      GOption(166, Lars24, 4);
   end
end

procedure Lars13 begin
   set_local_var(LVAR_Here_Before, 1);
   Reply(140);
   NOption(141, Lars17, 4);
   if (global_var(GVAR_SHERRY_TELLS_ON_SKULZ)) then begin
      NOption(142, Lars16, 4);
   end
end

procedure Lars14 begin
   Reply(143);
   NOption(144, Lars15, 4);
   if (global_var(GVAR_SHERRY_TELLS_ON_SKULZ)) then begin
      NOption(145, Lars16, 4);
   end
end

procedure Lars15 begin
   Reply(146);
   NOption(147, LarsEnd, 4);
   if (global_var(GVAR_SHERRY_TELLS_ON_SKULZ)) then begin
      NOption(148, Lars16, 4);
   end
end

procedure Lars16 begin
   set_global_var(GVAR_BUST_SKULZ, 2);
   GMessage(149);
end

procedure Lars17 begin
   DownReact
   BMessage(150);
end

procedure Lars18 begin
   set_global_var(GVAR_BUST_SKULZ, 1);
   Reply(151);
   Goodbyes;
   NOption(exit_line, LarsEnd, 4);
end

procedure Lars19 begin
   NMessage(152);
end

procedure Lars20 begin
   NMessage(153);
end

procedure Lars21 begin
   Reply(155);
   GOption(156, Lars22, 4);
   NOption(157, Lars23, 4);
   NLowOption(172, Lars22);
   NLowOption(173, Lars23);
end

procedure Lars22 begin
   GMessage(158);
   nail_Gizmo := 1;
end

procedure Lars23 begin
   NMessage(159);
   wait_for_Lars := 1;
end

procedure Lars24 begin
   set_global_var(GVAR_AMBUSH_SKULLZ, 1);
   Reply(163);
   NOption(164, Lars25, 4);
   GOption(165, LarsKillNeal, 4);
   set_local_var(LVAR_Here_Before, 1);
end

procedure Lars25 begin
   Lars_bust_Skulz := 1;
   set_local_var(5, 1);
end

procedure Lars26 begin
   BMessage(169);
end

procedure Lars27 begin
   BMessage(170);
   rm_timer_event(self_obj);
   add_timer_event(self_obj, game_ticks(15), 1);
end

procedure LarsEnd begin
end

procedure LarsKillNeal begin
   Lars_kill_Neal := 1;
end



procedure timed_event_p_proc begin
   tmp_hostile := 1;
end
