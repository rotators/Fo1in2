/*

   Junktown - Shark

*/

/* Include Files */
#include "define.h"
#include "junktown.h"

#define NAME                    SCRIPT_SHARK
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

procedure Shark01;
procedure Shark01a;
procedure Shark02;
procedure Shark03;
procedure Shark04;
procedure Shark04a;
procedure Shark04b;
procedure Shark05;
procedure Shark06;
procedure Shark07;
procedure Shark08;
procedure SharkEnd;

procedure SharkCombat;

import variable removal_ptr;
import variable Trish_ptr;

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;

variable tmp_deset_tile := 7000;
variable tmp_hostile;
variable timer_set;
variable sleeping_disabled;
variable waypoint;

#define LVAR_Sleeping                     (5)

procedure start begin
end

procedure critter_p_proc
begin
   if (global_var(GVAR_DUDE_ENEMY_SKULZ) == 1) then begin
      if (self_can_see_dude) then begin
         attack(dude_obj);
      end
   end
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if (quest_join_skullz_active and (local_var(6) == 0)) then begin
         add_timer_event(self_obj, game_ticks(3), 3);
         set_local_var(6, 1);
      end
      else begin
         if (global_var(GVAR_BUST_SKULZ) != 2) then begin
            if (self_tile != tmp_deset_tile) then begin
               self_walk_to_tile(tmp_deset_tile);
            end
            else begin
               if (waypoint == 1) then begin
                  waypoint := 0;
                  tmp_deset_tile := 33519;
               end
            end
            if (sleeping_disabled == 0) then begin
               sleeping
            end
         end
      end
   end
end

procedure damage_p_proc
begin
   if ((source_obj == dude_obj) and (map_var(0) == 1)) then begin
      set_map_var(1, 1);
   end
end

procedure destroy_p_proc begin
   rm_timer_event(self_obj);

   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_DUDE_ENEMY_SKULZ, 1);
   end
   inc_evil_critter
   rm_timer_event(self_obj);
end

procedure look_at_p_proc
begin
   script_overrides;
   if (local_var(4)) then begin
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(101));
   end
end

procedure map_enter_p_proc
begin
   sleep_time := 2230;
   wake_time := 1530;
   home_tile := 20486;
   sleep_tile := 7000;
   set_self_team(TEAM_JUNKTOWN_SKULZ);
   set_self_ai(AI_JUNKTOWN_THUG);
   if ((global_var(GVAR_BUST_SKULZ) == 2) or quest_join_skullz_active) then begin
      move_to(self_obj, 7000, 0);
      if not(is_loading_game) then set_self_invisible;
      sleeping_disabled := 1;
      removal_ptr := self_obj;
   end
   else begin
      tmp_deset_tile := home_tile;
   end
end

procedure pickup_p_proc
begin
   tmp_hostile := 1;
end

procedure talk_p_proc begin
   set_tma_data_default;

   dude_look_at_self;
   start_gdialog(387, self_obj, 4, -1, -1);
   gsay_start;
   if (local_var(4) == 0) then begin
      call Shark01;
   end
   else begin
      if (local_var(1) < 2) then begin
         call Shark08;
      end
      else begin
         call Shark06;
      end
   end
   gsay_end;
   end_dialogue;
end

procedure timed_event_p_proc
begin
   if (fixed_param == 1) then begin
      waypoint := 1;
      tmp_deset_tile := 26495;
   end
   else begin
      if (fixed_param == 2) then begin
         if (Trish_ptr != 0) then begin
            attack(Trish_ptr);
         end
      end
      else begin
         if (fixed_param == 3) then begin
            float_msg(self_obj, mstr(126), FLOAT_MSG_RED);
            add_timer_event(self_obj, game_ticks(5), 1);
            sleeping_disabled := 1;
         end
      end
   end
end

procedure Shark01
begin
   set_local_var(4, 1);
   Reply(103);
   BOption(104, SharkCombat, 4);
   NOption(105, Shark02, 4);
   NOption(106, Shark03, 4);
   GOption(107, Shark01a, 5);
   NLowOption(108, Shark05);
end

procedure Shark01a
begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call Shark04;
   end
   else begin
      call Shark03;
   end
end

procedure Shark02
begin
   BMessage(109);
   call SharkCombat;
end

procedure Shark03
begin
   variable LVar0 := 0;
   LVar0 := mstr(110);
   if (dude_is_female) then begin
      LVar0 := LVar0 + mstr(111);
   end
   else begin
      LVar0 := LVar0 + mstr(112);
   end
   Reply(LVar0);
   NOption(113, SharkCombat, 4);
end

procedure Shark04
begin
   UpReactLevel
   Reply(114);
   NOption(115, timed_event_p_proc, 4);
   GOption(116, Shark04b, 4);
   NOption(117, Shark04a, 4);
   BOption(118, SharkCombat, 4);
end

procedure Shark04a
begin
   if (not(is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0)))) then begin
      DownReactLevel
   end
   call Shark05;
end

procedure Shark04b
begin
   UpReactLevel
   add_timer_event(self_obj, game_ticks(3), 2);
end

procedure Shark05
begin
   NMessage(119);
end

procedure Shark06
begin
   Reply(120);
   NOption(121, Shark07, 4);
   NOption(122, Shark03, 4);
   NLowOption(123, Shark05);
end

procedure Shark07
begin
   NMessage(124);
   call SharkCombat;
end

procedure Shark08
begin
   NMessage(125);
   call SharkCombat;
end

procedure SharkCombat
begin
   tmp_hostile := 1;
end

procedure SharkEnd
begin
end
