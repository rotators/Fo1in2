/*

   Junktown - Generic peasant

*/

/* Include Files */
#include "define.h"
#include "maps/junkent.h"

#define NAME                    SCRIPT_PEASANTC
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;

procedure PeasantC00;
procedure PeasantC00a;
procedure PeasantC01;
procedure PeasantC02;
procedure PeasantC03;
procedure PeasantC03a;
procedure PeasantC04;
procedure PeasantC05;
procedure PeasantC06;
procedure PeasantC07;
procedure PeasantCEnd;

#define LVAR_Sleeping                     (2)

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;

import variable removal_ptr;

procedure start begin
end

procedure look_at_p_proc begin
end

procedure description_p_proc begin
end

procedure critter_p_proc begin
   if (global_var(GVAR_DUDE_ENEMY_JUNK_CITIZEN) == 1) then begin
      if (self_can_see_dude) then begin
         call flee_dude;
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_JUNKTOWN, 1);
   end
end

procedure destroy_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_DUDE_ENEMY_JUNK_CITIZEN, 1);
      set_global_var(GVAR_ENEMY_JUNKTOWN, 1);
      dec_general_rep(5);
      inc_good_critter
   end
end

procedure map_enter_p_proc begin
   if (map_var(MVAR_talked_to_scared_peasant) == 1) then begin
      if not(is_loading_game) then set_self_invisible;
      removal_ptr := self_obj;
   end
   else begin
      sleep_time := random(2215, 2230);
      wake_time := random(715, 730);
      if ((GAME_TIME_IN_DAYS) < 80) then begin
         sleep_tile := 15275;
         home_tile := 14267;
      end
      else begin
         sleep_tile := 23524;
         home_tile := 23923;
      end
   end
   set_self_team(TEAM_JUNKTOWNER);
   set_self_ai(AI_PEASANT);
   if (not(night_person) and (game_time_hour >= wake_time) and (game_time_hour < sleep_time) or (night_person and ((game_time_hour >= wake_time) or (game_time_hour < sleep_time)))) then begin
      move_to(self_obj, home_tile, self_elevation);
   end
   if (night_person and (game_time_hour >= sleep_time) and (game_time_hour < wake_time) or (not(night_person) and ((game_time_hour >= sleep_time) or (game_time_hour < wake_time)))) then begin
      move_to(self_obj, sleep_tile, self_elevation);
   end
end

procedure map_update_p_proc begin
   sleeping
end

procedure pickup_p_proc begin
   set_local_var(1, 1);
   float_msg(self_obj, mstr(124), FLOAT_MSG_RED);
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_JUNKENT);

   dude_look_at_self;
   if (local_var(2) == 1) then begin
      float_msg(self_obj, message_str(SCRIPT_GENVAULT, 166), FLOAT_MSG_NORMAL);
   end
   else if (local_var(1) == 1) then begin
      float_msg(self_obj, mstr(124), FLOAT_MSG_RED);
   end
   else if ((GAME_TIME_IN_DAYS) < 80) then begin
      set_local_var(0, 1);

      if (global_var(GVAR_DUDE_ENEMY_JUNK_CITIZEN) == 1) then
         float_msg(self_obj, mstr(100), FLOAT_MSG_RED);
      else if (check_general_rep < -10) then
         float_msg(self_obj, mstr(101), FLOAT_MSG_LIGHT_RED);
      else if (dude_is_male) then
         float_msg(self_obj, mstr(random(102, 103)), FLOAT_MSG_GREEN);
      else
         float_msg(self_obj, mstr(random(102, 104)), FLOAT_MSG_GREEN);
   end
   else begin
      set_map_var(MVAR_talked_to_scared_peasant, 1);
      start_dialog_at_node(PeasantC00);
   end
end

procedure PeasantC00 begin
   Reply(105);
   NOption(106, PeasantCEnd, 4);
   NOption(107, PeasantC00a, 5);
   NLowOption(108, PeasantC01);
end

procedure PeasantC00a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call PeasantC03;
   end
   else begin
      call PeasantC02;
   end
end

procedure PeasantC01 begin
   NMessage(109);
end

procedure PeasantC02 begin
   NMessage(110);
end

procedure PeasantC03 begin
   Reply(111);
   BOption(112, PeasantC04, 5);
   NOption(113, PeasantC03a, 6);
   NOption(106, PeasantCEnd, 4);
end

procedure PeasantC03a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -10))) then begin
      call PeasantC06;
   end
   else begin
      call PeasantC05;
   end
end

procedure PeasantC04 begin
   set_local_var(1, 1);
   BMessage(114);
end

procedure PeasantC05 begin
   NMessage(115);
end

procedure PeasantC06 begin
   variable LVar0 := mstr(116);

   if not(is_killian_alive) then begin
      if not(is_gizmo_alive) then
         LVar0 := LVar0 + mstr(120);
      else
         LVar0 := LVar0 + mstr(119);
   end
   else begin
      if not(is_gizmo_alive) then
         LVar0 := LVar0 + mstr(118);
      else
         LVar0 := LVar0 + mstr(117);
   end
   Reply(LVar0);
   NOption(121, PeasantC07, 5);
   NOption(122, PeasantCEnd, 5);
end

procedure PeasantC07 begin
   NMessage(123);
end

procedure PeasantCEnd begin
end
