/*

   Junktown - generic CoC member

*/

#include "define.h"

#define NAME                    SCRIPT_JCHIDMEM
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "command.h"
#include "modreact.h"

procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;

procedure ChildEnd;
procedure child_heal;
procedure child_pois;
procedure Child00;
procedure Child01;
procedure Child02;
procedure Child03;
procedure Child04;
procedure Child04a;
procedure Child05;
procedure Child05a;
procedure Child05b;
procedure Child06;
procedure Child07;
procedure Child08;
procedure Child09;
procedure Child09a;
procedure Child10;
procedure Child11;
procedure Child12;
procedure Child13;
procedure Child14;
procedure Child15;
procedure Child16;
procedure Child17;

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;

variable initial := 0;
variable scared;
variable cost;
variable hp_injured;
variable healing_cost;
variable poison_cost;

#define LVAR_Sleeping                     (4)

procedure start begin
end

procedure critter_p_proc begin
   if (scared and (tile_distance_objs(self_obj, dude_obj) < 8) and (local_var(4) == 0)) then begin
      call flee_dude;
   end
   else begin
      sleeping
   end
end

procedure destroy_p_proc begin
   inc_inv_evil_crit
end

procedure map_enter_p_proc begin
   if junktown_invaded then begin
      destroy_object(self_obj);
   end
   wake_time := 700;
   sleep_time := 1900;
   set_self_team(TEAM_CATHEDRAL);
   if (local_var(6) == 0) then begin
      set_local_var(6, self_tile);
   end
   home_tile := local_var(6);
   sleep_tile := 15275;
   if ((GAME_TIME_IN_DAYS) < 80) then begin
      if not(is_loading_game) then set_self_invisible;
   end
   else begin
      if not(is_loading_game) then set_self_visible;
   end
end

procedure map_update_p_proc begin
   if ((GAME_TIME_IN_DAYS) < 80) then begin
      if not(is_loading_game) then set_self_invisible;
   end
   else begin
      if not(is_loading_game) then set_self_visible;
   end
end

procedure pickup_p_proc begin
   scared := 1;
end

procedure talk_p_proc begin
   set_tma_data(SCRIPT_CHILDMEM, 1000, -1, -1, TMA_MSG_DONTKNOW_START, TMA_MSG_DONTKNOW_END);

   dude_look_at_self;
   if (scared) then begin
      float_msg(self_obj, mstr(145), FLOAT_MSG_RED);
   end
   else if (local_var(5) == 0) then begin
      start_dialog_at_node(Child00);
   end
end

procedure ChildEnd begin
end

procedure child_heal begin
   game_time_advance(ONE_GAME_MINUTE * hp_injured);
   critter_heal(dude_obj, hp_injured);
   critter_uninjure(dude_obj, (DAM_CRIP_LEG_LEFT bwor DAM_CRIP_LEG_RIGHT bwor DAM_CRIP_ARM_LEFT bwor DAM_CRIP_ARM_RIGHT));
   dec_v13_days_left(1);
end

procedure child_pois begin
   if (dude_poison_stat != 0) then begin
      game_time_advance(ONE_GAME_HOUR * 3);
   end
   poison(dude_obj, -dude_poison_stat);
   dec_v13_days_left(1);
end

procedure Child00 begin
   Reply(100);
   NOption(101, Child04, 4);
   NOption(102, Child11, 5);
   if ((map_var(2) == 1) and (local_var(7) == 0)) then begin
      NOption(103, Child15, 5);
   end
   NLowOption(104, Child01);
end

procedure Child01 begin
   NMessage(105);
   if (dude_cur_hp < dude_max_hp) then begin
      call child_heal;
      call Child03;
   end
   else begin
      call Child02;
   end
end

procedure Child02 begin
   NMessage(106);
end

procedure Child03 begin
   critter_heal(dude_obj, dude_max_hp);
   poison(dude_obj, -dude_poison_stat);
   NMessage(107);
end

procedure Child04 begin
   if (local_var(1) == 3) then begin
      healing_cost := 5;
      poison_cost := 12;
   end
   else begin
      if (local_var(1) == 1) then begin
         healing_cost := 20;
         poison_cost := 50;
      end
      else begin
         healing_cost := 10;
         poison_cost := 25;
      end
   end
   hp_injured := dude_max_hp - dude_cur_hp;
   cost := hp_injured * healing_cost;
   if (dude_poison_stat != 0) then begin
      cost := cost + poison_cost;
   end
   if (hp_injured > 0) then begin
      NMessage(108);
   end
   if (dude_poison_stat != 0) then begin
      NMessage(109);
   end
   if (dude_rads > 50) then begin
      NMessage(110);
   end
   if (cost > 0) then begin
      Reply(mstr(111) + cost + mstr(112));
      NOption(113, Child04a, 4);
      NOption(114, ChildEnd, 4);
      NOption(115, Child09, 4);
      NOption(mstr(116) + round(cost * 0.75000) + mstr(117), Child05, 4);
   end
   else begin
      NMessage(146);
   end
end

procedure Child04a begin
   if (cost > dude_caps) then begin
      call Child08;
   end
   else begin
      call Child06;
   end
end

procedure Child05 begin
   Reply(118);
   NOption(119, Child05a, 4);
   BOption(120, Child05b, 4);
end

procedure Child05a begin
   if (cost > dude_caps) then begin
      call Child08;
   end
   else begin
      call Child06;
   end
end

procedure Child05b begin
   set_local_var(5, 1);
   call ChildEnd;
end

procedure Child06 begin
   if (dude_is_male) then begin
      Reply(121);
   end
   else begin
      Reply(122);
   end
   NOption(g_more, Child07, 1);
end

procedure Child07 begin
   gfade_out(1);
   dude_caps_adjust(-cost);
   call child_heal;
   call child_pois;
   gfade_in(1);
   NMessage(123);
end

procedure Child08 begin
   if (dude_caps > 0) then begin
      cost := dude_caps;
   end
   Reply(124);
   if (dude_caps > 0) then begin
      NOption(125, Child06, 4);
   end
   NOption(129, ChildEnd, 4);
end

procedure Child09 begin
   if (dude_caps > 0) then begin
      cost := dude_caps;
   end
   Reply(127);
   if (dude_caps > 0) then begin
      NOption(128, Child09a, 4);
   end
   NOption(129, ChildEnd, 4);
end

procedure Child09a begin
   if (cost > dude_caps) then begin
      call Child06;
   end
   else begin
      call Child10;
   end
end

procedure Child10 begin
   Reply(130);
   NOption(g_more, Child06, 1);
end

procedure Child11 begin
   Reply(131);
   NOption(132, ChildEnd, 4);
   NOption(133, Child12, 4);
end

procedure Child12 begin
   Reply(134);
   NOption(135, Child14, 4);
   NOption(136, Child13, 4);
end

procedure Child13 begin
   BMessage(137);
end

procedure Child14 begin
   Reply(138);
   NOption(139, ChildEnd, 4);
end

procedure Child15 begin
   set_local_var(7, 1);
   Reply(140);
   NOption(141, Child16, 5);
   NOption(142, ChildEnd, 5);
end

procedure Child16 begin
   Reply(143);
   NOption(144, ChildEnd, 5);
end

procedure Child17 begin
   scared := 1;
   BMessage(145);
end
