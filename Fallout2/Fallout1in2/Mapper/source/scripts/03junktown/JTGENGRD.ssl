/*

   Junktown - Generic guar

*/

/* Include Files */
#include "define.h"
//#include "maps/junkcsno.h"
#include "maps/junkkill.h"

#define NAME                    SCRIPT_JTGENGRD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure description_p_proc;
procedure destroy_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure damage_p_proc;

procedure JTGenGrd00;
procedure JTGenGrd00a;
procedure JTGenGrd00b;
procedure JTGenGrd01;
procedure JTGenGrd01a;
procedure JTGenGrd02;
procedure JTGenGrd02a;
procedure JTGenGrd03;
procedure JTGenGrd04;
procedure JTGenGrd05;
procedure JTGenGrd06;
procedure JTGenGrd06a;
procedure JTGenGrd07;
procedure JTGenGrd08;
procedure JTGenGrd08a;
procedure JTGenGrd09;
procedure JTGenGrd16;
procedure JTGenGrd18;
procedure JTGenGrd19;
procedure JTGenGrd20;
procedure JTGenGrdEnd;

import variable weapon_checked;
import variable sneak_checked;
import variable times_caught_sneaking;
import variable removal_ptr;

variable tmp_dest_tile := 7000;
variable tmp_hostile;
variable initial := 0;
variable sneaking;
variable warned_about_picking;
variable waypoint;
variable Shopguard_ptr;

#define LVAR_Home_Tile                  (5)
#define LVAR_Home_Rotation              (6)

#define shopguard_hex         (24874)
#define nightguard_hex        (26276)

#define is_shopguard          (Shopguard_ptr == self_obj)

procedure start begin
   if (CUR_MAP_JUNKKILL and self_tile == shopguard_hex) then begin
      Shopguard_ptr := self_obj;
   end
end

procedure critter_p_proc begin
   if not(combat_is_initialized) then begin
      if is_shopguard then begin
         if not(day) and (self_tile != nightguard_hex) then begin
            //self_walk_to_tile(nightguard_hex);
            move_to(self_obj, nightguard_hex, self_elevation);
         end
         else if day and (self_tile != local_var(LVAR_Home_Tile)) then begin
            //self_walk_to_tile(local_var(LVAR_Home_Tile));
            move_to(self_obj, local_var(LVAR_Home_Tile), self_elevation);
         end
         else if (self_cur_rot != local_var(LVAR_Home_Rotation)) then begin
            self_rotate(local_var(LVAR_Home_Rotation));
         end
      end
      else begin
         if (self_tile != local_var(LVAR_Home_Tile)) then begin
            self_walk_to_tile(local_var(LVAR_Home_Tile));
         end
         else if (self_cur_rot != local_var(LVAR_Home_Rotation)) then begin
            self_rotate(local_var(LVAR_Home_Rotation));
         end
      end
   end

   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      // Player spotted inside Darkwater's shop at night
      if is_shopguard then begin
         if (not(day) and (tmp_hostile != 1) and self_can_see_dude) then begin
            float_msg(self_obj, mstr(138), FLOAT_MSG_RED);
            tmp_hostile := 1;
         end
      end

      if ((CUR_MAP_JUNKKILL) or (CUR_MAP_JUNKENT)) then begin
         if (self_can_see_dude and (tile_distance_objs(self_obj, dude_obj) < 12)) then begin
            if (global_var(GVAR_ENEMY_JUNKTOWN) == 1) then begin
               float_msg(self_obj, mstr(138), FLOAT_MSG_RED);
               tmp_hostile := 1;
            end
            else if (dude_is_armed) and (local_var(4) == 0) and (map_var(2) == 0) and (global_var(GVAR_HIRED_BY_KILLIAN) == 0) and (global_var(GVAR_CAPTURE_GIZMO) == 0) and (CUR_MAP_JUNKKILL) then begin
               if (not(weapon_checked)) then begin
                  weapon_checked := 1;
                  add_timer_event(self_obj, game_ticks(10), 1);
                  dialogue_system_enter;
               end
            end
            else if (dude_is_sneaking and not(sneak_checked)) then begin
               sneaking := 1;
               sneak_checked := 1;
               add_timer_event(self_obj, game_ticks(5), 2);
               dialogue_system_enter;
            end
            else if (CUR_MAP_JUNKKILL) then begin
               if ((map_var(MVAR_dude_messing_with_Killians_door) == 1) and (tile_distance_objs(self_obj, dude_obj) < 8)) then begin
                  set_map_var(MVAR_dude_messing_with_Killians_door, 0);
                  float_msg(self_obj, mstr(136), FLOAT_MSG_RED);
                  if (warned_about_picking) then begin
                     tmp_hostile := 1;
                  end
                  else begin
                     warned_about_picking := 1;
                  end
               end
            end
         end
      end
      else if (CUR_MAP_JUNKCSNO) then begin
         if (map_var(2) == 2) then begin
            if (waypoint != 0) then begin
               if (tile_distance(self_tile, tmp_dest_tile) > 3) then begin
                  self_walk_to_tile(tmp_dest_tile);
               end
               else if (waypoint == 1) then begin
                  tmp_dest_tile := 23465;
                  waypoint := 2;
               end
               else if (waypoint == 2) then begin
                  tmp_dest_tile := 26855;
                  waypoint := 3;
               end
               else if (waypoint == 3) then begin
                  destroy_object(self_obj);
               end
            end
            else begin
               destroy_object(self_obj);
            end
         end
      end
   end

   if (global_var(GVAR_ENEMY_JUNKTOWN) == 1) then begin
      if (self_can_see_dude) then begin
         attack(dude_obj);
      end
   end
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure destroy_p_proc begin
   if (CUR_MAP_JUNKCSNO) then begin
      if (map_var(2) == 1) then begin
         set_map_var(1, (map_var(1) - 1));
      end
   end
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_JUNKTOWN, 1);
   end
   inc_good_critter
end

procedure map_enter_p_proc begin
   if (local_var(LVAR_Home_Tile) == 0) then begin
      set_local_var(LVAR_Home_Tile, self_tile);
      set_local_var(LVAR_Home_Rotation, self_cur_rot);
   end

   if not(is_loading_game) then begin
      if CUR_MAP_JUNKKILL then begin
         set_self_team(TEAM_JUNKTOWN_GUARD);
         critter_attempt_placement(self_obj, local_var(LVAR_Home_Tile), self_elevation);
         self_rotate(local_var(LVAR_Home_Rotation));
      end
      else if CUR_MAP_JUNKCSNO then begin
         set_self_team(TEAM_PLAYER);
         tmp_dest_tile := 23666;
         waypoint := 1;
         if (map_var(2) != 1) then begin
            destroy_object(self_obj);
         end
      end
   end
end

procedure pickup_p_proc begin
   float_msg(self_obj, mstr(random(136, 138)), FLOAT_MSG_RED);
   tmp_hostile := 1;
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_JUNKENT);

   dude_look_at_self;
   get_reaction

   if (is_shopguard and not(day)) then begin
      float_msg(self_obj, mstr(138), FLOAT_MSG_RED);
      tmp_hostile := 1;
   end
   else if (sneaking and (times_caught_sneaking >= 3)) then begin
      call JTGenGrd18;
   end
   else begin

      if (not(local_var(4)) and (dude_is_armed) or (sneaking and (times_caught_sneaking < 3))) then begin
         if (dude_is_armed) then begin
            start_dialog_at_node(JTGenGrd00);
         end
         else begin
            if (sneaking) then begin
               start_dialog_at_node(JTGenGrd06);
            end
         end
      end
      else begin
         if has_rep_childkiller then begin
            call JTGenGrd19;
         end
         else if (has_rep_berserker or (local_var(LVAR_reaction_level) == BAD)) then begin
            call JTGenGrd09;
         end
         else if (has_rep_champion or (local_var(LVAR_reaction_level) == GOOD)) then begin
            call JTGenGrd16;
         end
         else begin
            call JTGenGrd20;
         end
      end

   end
end

procedure timed_event_p_proc begin
   if (fixed_param == 1) then begin
      if (weapon_checked) then begin
         if (dude_is_armed) then begin
            float_msg(self_obj, mstr(134), FLOAT_MSG_NORMAL);
            add_timer_event(self_obj, game_ticks(5), 3);
         end
         else begin
            weapon_checked := 0;
         end
      end
   end
   else if (fixed_param == 2) then begin
      sneak_checked := 0;
   end
   else if (fixed_param == 3) then begin
      tmp_hostile := 1;
   end
   else if (fixed_param == 4) then begin
      float_msg(self_obj, mstr(139), FLOAT_MSG_NORMAL);
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_ENEMY_JUNKTOWN, 1);
   end
end

procedure JTGenGrd00 begin
   DownReact
   Reply(110);
   NOption(111, JTGenGrd01, 4);
   BOption(112, JTGenGrd00a, 4);
   giq_option(4, SCRIPT_MODREACT, 105, JTGenGrdEnd, NEUTRAL_REACTION);
   GOption(113, JTGenGrd00b, 6);
   NLowOption(114, JTGenGrd05);
end

procedure JTGenGrd00a begin
   DownReact
   call JTGenGrd02;
end

procedure JTGenGrd00b begin
   UpReact
   call JTGenGrd04;
end

procedure JTGenGrd01 begin
   Reply(115);
   NOption(116, JTGenGrd02, 4);
   NOption(117, JTGenGrd01a, 4);
end

procedure JTGenGrd01a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -20))) then begin
      call JTGenGrd03;
   end
   else begin
      call JTGenGrd02;
   end
end

procedure JTGenGrd02 begin
   Reply(118);
   NOption(119, JTGenGrdEnd, 4);
   BOption(120, JTGenGrd02a, 4);
end

procedure JTGenGrd02a begin
   tmp_hostile := 1;
end

procedure JTGenGrd03 begin
   set_local_var(4, 1);
   NMessage(121);
end

procedure JTGenGrd04 begin
   NMessage(122);
end

procedure JTGenGrd05 begin
   NMessage(123);
end

procedure JTGenGrd06 begin
   times_caught_sneaking := times_caught_sneaking + 1;
   add_timer_event(self_obj, game_ticks(5), 2);
   Reply(124);
   NOption(125, JTGenGrd07, 4);
   NOption(126, JTGenGrd06a, 5);
   NLowOption(127, JTGenGrd07);
end

procedure JTGenGrd06a begin
   variable LVar0 := 0;
   LVar0 := -5 * times_caught_sneaking;
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, LVar0))) then begin
      call JTGenGrd08;
   end
   else begin
      call JTGenGrd07;
   end
end

procedure JTGenGrd07 begin
   NMessage(128);
end

procedure JTGenGrd08 begin
   Reply(130);
   NOption(131, JTGenGrdEnd, 5);
   if (dude_is_male) then begin
      NOption(132, JTGenGrd08a, 5);
   end
   else begin
      NOption(133, JTGenGrd08a, 5);
   end
end

procedure JTGenGrd08a begin
   if (random(0, 1)) then begin
      DownReact
   end
   else begin
      UpReact
   end
end

procedure JTGenGrd09 begin
   float_msg(self_obj, mstr(random(101, 103)), FLOAT_MSG_RED);
end

procedure JTGenGrd16 begin
   float_msg(self_obj, mstr(random(104, 106)), FLOAT_MSG_NORMAL);
end

procedure JTGenGrd18 begin
   float_msg(self_obj, mstr(135), FLOAT_MSG_RED);
   add_timer_event(self_obj, game_ticks(5), 3);
end

procedure JTGenGrd19 begin
   display_msg(mstr(129));
   tmp_hostile := 1;
end

procedure JTGenGrd20 begin
   float_msg(self_obj, mstr(random(107, 109)), FLOAT_MSG_NORMAL);
end

procedure JTGenGrdEnd begin
end
