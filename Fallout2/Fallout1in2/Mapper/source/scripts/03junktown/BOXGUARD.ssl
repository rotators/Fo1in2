/*

   Junktown - boxing ring guard

*/

/* Include Files */
#include "define.h"
//#include "necropolis.h"

#define NAME                    SCRIPT_BOXGUARD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_JUNKTOWN)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure map_enter_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

variable home_tile := 7000;
variable tmp_hostile;
variable sfx_name;

import variable challenger_ptr;
import variable Saul_loses;
import variable Saul_wins;
import variable shot_challenger;

procedure start begin
end

procedure critter_p_proc begin
   if (global_var(GVAR_DUDE_ENEMY_JUNK_BOXER) == 1) then begin
      if (self_can_see_dude) then begin
         attack(dude_obj);
      end
   end
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if (Saul_loses) then begin
         if ((obj_pid(challenger_ptr) == PID_RADSCORPION) or (obj_pid(challenger_ptr) == PID_GREATER_MOLE_RAT)) then begin
            if (shot_challenger == 0) then begin
               Saul_loses := 0;
               self_rotate(5);
               float_msg(self_obj, mstr(random(100, 103)), FLOAT_MSG_NORMAL);
               reg_anim_clear(self_obj);
               reg_anim_begin();
               reg_anim_animate(self_obj, ANIM_point, -1);
               reg_anim_animate(self_obj, ANIM_fire_single, -1);
               sfx_name := sfx_build_weapon_name(1, self_item(PID_10MM_PISTOL), 2, challenger_ptr);
               reg_anim_play_sfx(dude_obj, sfx_name, -1);
               reg_anim_animate(challenger_ptr, ANIM_hit_from_front, 4);
               reg_anim_animate(self_obj, ANIM_point, -1);
               reg_anim_animate(self_obj, ANIM_fire_single, -1);
               sfx_name := sfx_build_weapon_name(1, self_item(PID_10MM_PISTOL), 2, challenger_ptr);
               reg_anim_play_sfx(dude_obj, sfx_name, -1);
               reg_anim_animate(challenger_ptr, ANIM_fall_back_blood, 4);
               reg_anim_animate(self_obj, ANIM_unpoint, -1);
               reg_anim_end();
               rm_timer_event(self_obj);
               add_timer_event(self_obj, game_ticks(5), 1);
            end
         end
         else begin
            shot_challenger := 1;
         end
      end
      else if (Saul_wins) then begin
         shot_challenger := 1;
      end
   end
end

procedure destroy_p_proc begin
   if (source_obj == dude_obj) then begin
      set_global_var(GVAR_DUDE_ENEMY_JUNK_BOXER, 1);
   end
   inc_neutral_critter
end

procedure map_enter_p_proc begin
   if map_first_run or (days_since_visited >= 7) then begin
      self_caps_adjust(random(10, 25));
   end

   if junktown_invaded then begin
      kill_critter(self_obj, ANIM_fall_front_sf);
   end
   if (local_var(0) == 0) then begin
      set_local_var(0, self_tile);
   end
   home_tile := local_var(0);
   set_self_team(TEAM_15);
end

procedure talk_p_proc begin
   dude_look_at_self;
   float_msg(self_obj, mstr(random(106, 107)), FLOAT_MSG_NORMAL);
end

procedure timed_event_p_proc begin
   Saul_loses := 1;
   shot_challenger := 1;
end
