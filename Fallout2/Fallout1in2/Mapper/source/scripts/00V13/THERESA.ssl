/*

   Vault 13 - Theresa

*/

/* Include Files */
#include "define.h"
#include "vault13.h"
#include "maps/vault13.h"

#define NAME                    SCRIPT_THERESA
#define TOWN_REP_VAR            (GVAR_TOWN_REP_V13)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

procedure Theresa01;
procedure Theresa02;
procedure Theresa02a;
procedure Theresa03;
procedure Theresa04;
procedure Theresa05;
procedure Theresa06;
procedure Theresa07;
procedure Theresa08;
procedure Theresa09;
procedure Theresa10;
procedure Theresa11;
procedure Theresa12;
procedure Theresa13;
procedure Theresa14;
procedure Theresa15;
procedure Theresa16;
procedure Theresa17;
procedure Theresa18;
procedure Theresa19;
procedure Theresa20;
procedure Theresa21;
procedure Theresa22;
procedure Theresa23;
procedure Theresa24;
procedure Theresa25;
procedure TheresaEnd;
procedure TheresaCombat;
procedure begin_meeting;
procedure say_lines;
procedure rebel_meeting;

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;

variable not_at_meeting := 1;
variable line;
variable tmp_hostile;
variable exp_flag;

#define LVAR_Sleeping                     (5)

procedure start begin
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if map_var(5) != 0 then begin
         if ((GAME_TIME_IN_DAYS) > map_var(5)) and (global_var(GVAR_QUEST_VAULT13_1_REBELS) != 2) then begin
            destroy_object(self_obj);
         end
      end
      if ((game_time_hour >= 1700) and (game_time_hour < 1710)) then begin
         if (global_var(GVAR_QUEST_VAULT13_1_REBELS) != 2) then begin
            if (not_at_meeting) then begin
               call rebel_meeting;
            end
         end
      end
      else begin
         sleeping
      end
   end
end

procedure rebel_meeting begin
   not_at_meeting := 0;
   add_timer_event(self_obj, game_ticks(3), 4);
end

procedure timed_event_p_proc begin
   if (fixed_param == 1) then begin
      not_at_meeting := 1;
   end
   else if (fixed_param == 2) then begin
      call begin_meeting;
   end
   else if (fixed_param == 3) then begin
      call say_lines;
   end
   else if (fixed_param == 4) then begin
      self_walk_to_tile(home_tile);
      add_timer_event(self_obj, game_ticks(10), 2);// was 60 ticks
   end
end

procedure begin_meeting begin
   self_walk_to_tile(home_tile);
   line := 1;
   add_timer_event(self_obj, game_ticks(10), 3);
end

procedure say_lines begin
   variable LVar0 := 0;
   LVar0 := mstr(159 + line);
   float_msg(self_obj, LVar0, FLOAT_MSG_NORMAL);
   line := line + 1;
   if (line < 11) then begin
      add_timer_event(self_obj, game_ticks(10), 3);
   end
   else begin
      add_timer_event(self_obj, game_ticks(600), 1);
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_local_var(8, 1);
   end
end

procedure destroy_p_proc begin
   if global_var(GVAR_QUEST_VAULT13_1_REBELS) == 1 then begin
      set_global_var(GVAR_QUEST_VAULT13_1_REBELS, 2);
      give_xp_msg(EXP_DISBAND_REBELS, mstr(178));
      dec_general_rep(4);
   end
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure map_enter_p_proc begin
   if (v13_invaded) then begin
      invasion_kill_critter_V13;
   end

   if (not(local_var(4))) then begin
      set_local_var(4, self_tile);
   end
   home_tile := local_var(4);
   set_self_team(TEAM_87);
   sleep_tile := home_tile;
   sleep_time := 1915;
   wake_time := 715;
end

procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_VAULT13);

   dude_look_at_self;
   if (map_var(5) == 250) then begin
      set_map_var(5, (GAME_TIME_IN_DAYS) + 3);
   end
   get_reaction
   if (local_var(5) == 1) then begin
      float_msg(self_obj, message_str(SCRIPT_GENVAULT, 166), FLOAT_MSG_NORMAL);
   end
   else if (global_var(GVAR_VAULT_13_HOSTILE) or local_var(8)) then begin
      float_msg(self_obj, mstr(174), FLOAT_MSG_RED);
   end
   else begin
      if (global_var(GVAR_QUEST_VAULT13_4_WATERCHIP) == 2) then begin
         start_dialog_at_node(Theresa24);
      end
      else if (global_var(GVAR_QUEST_VAULT13_1_REBELS) == 2) then begin
         start_dialog_at_node(Theresa23);
      end
      else if ((global_var(GVAR_QUEST_VAULT13_1_REBELS) != 2) and (game_time_hour >= 1700) and (game_time_hour < 1710)) then begin
         start_dialog_at_node(Theresa15);
      end
      else begin
         if (local_var(LVAR_reaction_level) >= NEUTRAL) then begin
            start_dialog_at_node(Theresa01);
         end
         else begin
            start_dialog_at_node(Theresa14);
         end
      end
   end

   if (exp_flag) then begin
      exp_flag := 0;
      give_xp_msg(EXP_CALMING_REBELS, mstr(173));
   end

   if ((game_time_hour >= 1700) and (game_time_hour <= 1710)) then begin
   end
   else if (global_var(GVAR_QUEST_VAULT13_1_REBELS) != 2) and (local_var(5) == 0) and local_var(6) then begin
      float_msg(self_obj, mstr(176), FLOAT_MSG_NORMAL);
   end
end

procedure Theresa01 begin
   Reply(mstr(101) + dude_name + mstr(102));
   NOption(103, Theresa02, 4);
   NOption(104, Theresa03, 4);
   NLowOption(105, Theresa04);
end

procedure Theresa02 begin
   set_local_var(6, 1);
   if global_var(GVAR_QUEST_VAULT13_1_REBELS) == 0 then begin
      set_global_var(GVAR_QUEST_VAULT13_1_REBELS, 1);
   end
   Reply(106);
   BOption(107, Theresa05, 4);
   NOption(108, Theresa06, 4);
   NOption(109, Theresa07, 4);
   NOption(110, Theresa02a, 6);
end

procedure Theresa02a begin
   variable LVar0 := 0;
   if (not(local_var(7))) then begin
      set_local_var(7, 1);
      LVar0 := roll_vs_skill(dude_obj, SKILL_SPEECH, 0);
      if (is_success(LVar0)) then begin
         call Theresa08;
      end
      else begin
         call Theresa09;
      end
   end
   else begin
      call Theresa25;
   end
end

procedure Theresa03 begin
   Reply(111);
   NOption(112, Theresa07, 4);
   NOption(113, Theresa06, 4);
end

procedure Theresa04 begin
   NMessage(114);
end

procedure Theresa05 begin
   DownReact
   Reply(115);
   NOption(116, Theresa09, 4);
   NOption(117, Theresa02a, 6);
end

procedure Theresa06 begin
   NMessage(118);
end

procedure Theresa07 begin
   set_local_var(6, 1);
   if global_var(GVAR_QUEST_VAULT13_1_REBELS) == 0 then begin
      set_global_var(GVAR_QUEST_VAULT13_1_REBELS, 1);
   end
   Reply(119);
   NOption(120, Theresa11, 4);
   NOption(121, Theresa12, 4);
end

procedure Theresa08 begin
   UpReact
   set_global_var(GVAR_QUEST_VAULT13_1_REBELS, 2);
   line := 10;
   exp_flag := 1;
   Reply(122);
   NOption(123, TheresaEnd, 4);
end

procedure Theresa09 begin
   DownReact
   NMessage(124);
end

procedure Theresa10 begin
   NMessage(125);
end

procedure Theresa11 begin
   DownReact
   Reply(126);
   NOption(127, TheresaEnd, 4);
   NOption(128, Theresa02a, 6);
end

procedure Theresa12 begin
   UpReact
   Reply(129);
   NOption(130, Theresa13, 4);
   if (global_var(GVAR_WORLDMAPLIST_SHADY_SANDS) != 0) then begin
      NOption(131, Theresa13, 4);
   end
end

procedure Theresa13 begin
   NMessage(132);
end

procedure Theresa14 begin
   NMessage(133);
end

procedure Theresa15 begin
   set_local_var(6, 1);
   if global_var(GVAR_QUEST_VAULT13_1_REBELS) == 0 then begin
      set_global_var(GVAR_QUEST_VAULT13_1_REBELS, 1);
   end
   Reply(134);
   BOption(135, Theresa16, 4);
   NOption(136, Theresa17, 4);
   NOption(137, Theresa18, 6);
   NLowOption(138, TheresaEnd);
end

procedure Theresa16 begin
   DownReact
   Reply(139);
   NOption(140, Theresa20, 4);
   NOption(141, TheresaEnd, 4);
end

procedure Theresa17 begin
   Reply(142);
   NOption(143, Theresa19, 4);
   NOption(144, Theresa21, 6);
end

procedure Theresa18 begin
   Reply(145);
   NOption(146, Theresa21, 6);
   NOption(147, Theresa19, 6);
end

procedure Theresa19 begin
   Reply(148);
   BOption(149, TheresaCombat, 4);
   NOption(150, TheresaEnd, 4);
end

procedure Theresa20 begin
   Reply(151);
   NOption(152, Theresa17, 4);
   NOption(153, Theresa21, 6);
end

procedure Theresa21 begin
   if (local_var(7)) then begin
      call Theresa25;
   end
   else begin
      set_local_var(7, 1);
      if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
         exp_flag := 1;
         set_global_var(GVAR_QUEST_VAULT13_1_REBELS, 2);
         line := 10;
         NMessage(154);
      end
      else begin
         Reply(155);
         BOption(156, TheresaCombat, 4);
         NOption(157, TheresaEnd, 4);
      end
   end
end

procedure Theresa22 begin
   set_global_var(GVAR_QUEST_VAULT13_1_REBELS, 2);
   line := 10;
   exp_flag := 1;
   Reply(158);
   NOption(159, TheresaEnd, 4);
end

procedure Theresa23 begin
   Reply(170);
   NOption(171, TheresaEnd, 4);
   NLowOption(138, TheresaEnd);
end

procedure Theresa24 begin
   if (global_var(GVAR_QUEST_VAULT13_1_REBELS) != 2) then begin
      set_global_var(GVAR_QUEST_VAULT13_1_REBELS, 2);
      exp_flag := 0;
      line := 10;
   end
   NMessage(172);
end

procedure Theresa25 begin
   NMessage(175);
end

procedure TheresaEnd begin
end

procedure TheresaCombat begin
   tmp_hostile := 1;
end
