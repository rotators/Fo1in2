/*

   V13 - ?

*/

/* Include Files */
#include "define.h"
#include "vault13.h"

#define NAME                    SCRIPT_VALTCUPL
#define TOWN_REP_VAR            (GVAR_TOWN_REP_V13)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;

procedure ValtCupl00;
procedure ValtCupl00a;
procedure ValtCupl01;
procedure ValtCupl02;
procedure ValtCupl03;
procedure ValtCupl04;
procedure ValtCupl05;
procedure ValtCupl06;
procedure ValtCupl07;
procedure ValtCuplEnd;

variable rndx;
variable initial := 0;
variable tmp_hostile;

procedure start begin
   if not(initial) then begin
      set_self_team(TEAM_VAULT13);
      initial := 1;
   end
end

procedure map_enter_p_proc begin
   if (v13_invaded) then begin
      invasion_kill_critter_V13;
   end
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_VAULT13);

   dude_look_at_self;
   get_reaction

   if (local_var(4)) then begin
      if (local_var(LVAR_reaction_level) < NEUTRAL) then begin
         start_dialog_at_node(ValtCupl07);
      end
      else begin
         start_dialog_at_node(ValtCupl06);
      end
   end
   else begin
      start_dialog_at_node(ValtCupl00);
   end
end

procedure ValtCupl00 begin
   set_local_var(4, 1);
   Reply(101);
   NOption(102, ValtCupl02, 4);
   NOption(103, ValtCupl03, 4);
   NOption(104, ValtCupl00a, 5);
   NLowOption(105, ValtCupl01);
end

procedure ValtCupl00a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call ValtCupl04;
   end
   else begin
      call ValtCupl01;
   end
end

procedure ValtCupl01 begin
   BigDownReact
   BMessage(106);
end

procedure ValtCupl02 begin
   Reply(107);
   NOption(108, ValtCupl01, 4);
   NOption(109, ValtCupl03, 4);
end

procedure ValtCupl03 begin
   BigUpReact
   GMessage(110);
end

procedure ValtCupl04 begin
   Reply(111);
   NOption(112, ValtCupl03, 5);
   NOption(113, ValtCupl05, 5);
end

procedure ValtCupl05 begin
   NMessage(114);
end

procedure ValtCupl06 begin
   NMessage(115);
end

procedure ValtCupl07 begin
   NMessage(116);
end

procedure ValtCuplEnd begin
end
