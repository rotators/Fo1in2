/*

   Vault 13 - Vault Door entry terminal

*/

/* Include Files */
#include "define.h"
#include "vault13.h"

#define NAME                    SCRIPT_V13COMP

#include "command.h"

/* Standard Script Procedures */
procedure start;
procedure description_p_proc;
procedure use_p_proc;

procedure Banished;

import variable vault_door_ptr;

#define LVAR_VaultAccess      (0)
#define LVAR_DoorStatus       (1)

procedure start begin
end

procedure description_p_proc begin
   display_msg(mstr(103));
end

procedure use_p_proc begin
   script_overrides;

   if (local_var(LVAR_DoorStatus) > 0) then begin
      display_msg(mstr(123));
   end
   else begin
      play_sfx("SLDOORSO");
      if (get_days_passed < 1) then begin
         if (local_var(LVAR_VaultAccess) == 1) then begin
            display_msg(mstr(101));
            float_msg(self_obj, mstr(102), FLOAT_MSG_NORMAL);
         end
         else begin
            display_msg(mstr(100));
            set_local_var(LVAR_VaultAccess, 1);
         end
      end
      else begin
         if (global_var(GVAR_GAME_CONTINUES) == 0) then begin
            toggle_v13_door
         end
         else
            call Banished;
      end
   end
end

procedure Banished begin
   display_msg(mstr(101));
   if (global_var(GVAR_OVERSEER_KILLED) == 1) then
      float_msg(self_obj, mstr(random(109, 115)), FLOAT_MSG_RED);
   else
      float_msg(self_obj, mstr(random(104, 108)), FLOAT_MSG_YELLOW);
end
