//
// ---TRAP SCRIPT---  Sduibek
//
// I think this is unused.
//
#include "define.h"
#include "command.h"

procedure start;
procedure description_p_proc;
procedure spatial_p_proc;//    script_action == spatial_proc
procedure use_skill_on_p_proc;

variable fired;

import variable removal_ptr;


procedure start begin
end

procedure description_p_proc
begin
   variable LVar0 := 0;
   script_overrides;
   if (not(local_var(0))) then begin
      if (is_success(do_check(dude_obj, STAT_pe, dude_perk(PERK_bonus_awareness) - 3))) then begin
         LVar0 := message_str(SCRIPT_VLASER, 101);
         if (is_success(roll_vs_skill(dude_obj, SKILL_TRAPS, 0))) then begin
            LVar0 := LVar0 + message_str(SCRIPT_VLASER, 102);
         end
         set_local_var(0, 1);
      end
      else begin
         LVar0 := 0;
      end
   end
   else begin
      LVar0 := message_str(SCRIPT_VLASER, 101);
   end
   if (LVar0 != 0) then begin
      display_msg(LVar0);
   end
end

procedure spatial_p_proc
begin
   if (fired) then begin
      if (source_tile != self_tile) then begin
         fired := 0;
      end
   end
   else begin
      if (map_var(7) == 1) then begin
         if (map_var(9) == 0) then begin
            display_msg(message_str(SCRIPT_VLASER, 100));
            critter_dmg(source_obj, random(10, 20), DMG_laser);
            fired := 1;
         end
      end
   end
end

procedure use_skill_on_p_proc
begin
   if (action_being_used == SKILL_TRAPS) then begin//-- TRAPS
      if (local_var(0) == 1) then begin
         script_overrides;
         if (is_success(roll_vs_skill(source_obj, SKILL_TRAPS, 0))) then begin
            display_msg(message_str(SCRIPT_VLASER, 103));
            set_map_var(9, 1);
            move_to(self_obj, 7000, 0);
            removal_ptr := self_obj;
         end
         else begin
            display_msg(message_str(SCRIPT_VLASER, 104));
         end
      end
   end
end
