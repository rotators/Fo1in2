/*

   Radio item

*/

#include "define.h"
#include "mbase.h"
#include "maps/mbent.h"

#define NAME                    SCRIPT_RADIO

#include "command.h"

procedure start;
procedure talk_p_proc;
procedure use_p_proc;

procedure Radio01;
procedure Radio02;
procedure Radio02a;
procedure Radio03;
procedure Radio03a;
procedure Radio04;
procedure Radio05;
procedure Radio06;
procedure Radio07;
procedure Radio08;
procedure Radio10;
procedure Radio11;
procedure Radio12;
procedure Radio13;
procedure Radio14;
procedure Radio21;
procedure Radio22;
procedure Radio23;
procedure Radio23a;
procedure Radio24;
procedure Radio25;
procedure Radio31;
procedure Radio36;
procedure Radio36a;
procedure Radio37;
procedure RadioEnd;
procedure RadioAlert;
procedure RadioEnt;
procedure RadioStrg1;
procedure RadioStrg2;
procedure RadioVats1;

procedure Radio_Action;//  Fallout Fixt
procedure Radio40;//    Fallout Fixt

import variable field_change;

variable MutantsTricked;


procedure start begin
end

procedure Radio_Action begin
   if (CUR_MAP_MBSTRG12) then begin
      if (dude_elevation == 0) then
         call RadioStrg1;
      else
         call RadioStrg2;
   end
   else if (CUR_MAP_MBVATS12) then begin
      if (dude_elevation == 0) then
         call RadioVats1;
      else
         call Radio40;
   end
   else begin
      call Radio08;
   end
end

procedure talk_p_proc begin
   if (CUR_MAP_MBENT) then
      call RadioEnt;
   else
      call Radio_Action;

   if (MutantsTricked) then begin
      MutantsTricked := 0;
      give_xp_msg(EXP_TRICKING_MUTANTS, mstr(139));
   end
end

procedure use_p_proc begin
   if (CUR_MAP_MBENT) then begin
      dialogue_system_enter;
   end
   else begin
      call Radio_Action;
   end
end

procedure Radio01 begin
   set_map_var(MVAR_radio_trick, 1);
   MutantsTricked := 1;
   NMessage(106);
end

procedure Radio02 begin
   Reply(107);
   NOption(108, RadioAlert, 4);
   NOption(109, Radio04, 5);
   NOption(110, Radio02a, 4);
end

procedure Radio02a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call Radio06;
   end
   else begin
      call Radio04;
   end
end

procedure Radio03 begin
   Reply(111);
   NOption(112, Radio04, 6);
   NOption(113, Radio05, 6);
   NOption(114, Radio03a, 6);
end

procedure Radio03a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call Radio05;
   end
   else begin
      call Radio04;
   end
end

procedure Radio04 begin
   set_global_var(GVAR_VATS_ALERT, 1);
   NMessage(115);
end

procedure Radio05 begin
   set_map_var(MVAR_radio_trick, 1);
   MutantsTricked := 1;
   NMessage(116);
end

procedure Radio06 begin
   set_map_var(MVAR_radio_trick, 1);
   MutantsTricked := 1;
   NMessage(117);
end

procedure Radio07
begin
   set_map_var(MVAR_radio_trick, 1);
   MutantsTricked := 1;
   NMessage(118);
end

procedure Radio08 begin
   display_msg(mstr(119));
end

procedure Radio10 begin
   display_msg(mstr(120));
end

procedure Radio11 begin
   variable LVar0 := 0;
   LVar0 := mstr(121);
   if (is_success(do_check(dude_obj, STAT_iq, 0))) then begin
      LVar0 := LVar0 + " " + mstr(122);
   end
   display_msg(LVar0);
end

procedure Radio12 begin
   if get_force_fields_off then begin
      set_force_fields_on;
   end
   else begin
      set_force_fields_off;
   end
   display_msg(mstr(123));
end

procedure Radio13 begin
   display_msg(mstr(124));
end

procedure Radio14 begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   if (dude_iq > dude_perception) then begin
      LVar0 := 4;
   end
   else begin
      LVar0 := 1;
   end
   LVar1 := mstr(125);
   if (is_success(do_check(dude_obj, LVar0, 0))) then begin
      LVar1 := LVar1 + mstr(126);
   end
   display_msg(LVar1);
end

procedure Radio21 begin
   if get_force_fields_off then begin
      set_force_fields_on;
   end
   else begin
      set_force_fields_off;
   end
end

procedure Radio22 begin
   display_msg(mstr(127));
end

procedure Radio23 begin
   Reply(128);
   NLowOption(129, Radio24);
   NOption(130, Radio23a, 4);
end

procedure Radio23a begin
   if (local_var(1) or not(is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 10)))) then begin
      call Radio24;
   end
   else begin
      call Radio25;
   end
end

procedure Radio24 begin
   set_global_var(GVAR_VATS_ALERT, 1);
   NMessage(131);
end

procedure Radio25 begin
   set_local_var(1, 1);
   NMessage(132);
end

procedure Radio31 begin
   if get_force_fields_off then begin
      set_force_fields_on;
   end
   else begin
      set_force_fields_off;
   end
   display_msg(mstr(123));
end

procedure Radio36 begin
   Reply(133);
   NLowOption(134, Radio37);
   NOption(135, Radio37, 4);
   if (map_var(6)) then begin
      NOption(136, Radio36a, 4);
   end
   NOption(137, RadioEnd, 4);
end

procedure Radio36a begin
   set_map_var(MVAR_BOS_FLOAT, 0);
end

procedure Radio37 begin
   NMessage(138);
   set_local_var(0, 1);
end

procedure RadioEnd begin
end

procedure RadioAlert begin
   set_global_var(GVAR_VATS_ALERT, 1);
end

procedure RadioEnt begin
   if (map_var(MVAR_radio_used_at_entry)) then begin
      call Radio08;
   end
   else begin
      set_map_var(MVAR_radio_used_at_entry, 1);
      start_gdialog(361, self_obj, 4, -1, -1);
      gsay_start;
      Reply(101);
      NLowOption(102, Radio01);
      NOption(103, Radio02, 4);
      NOption(104, Radio03, 5);
      NOption(105, Radio07, 6);
      gsay_end;
      end_dialogue;
   end
end

procedure RadioStrg1 begin
   if (global_var(GVAR_RADIO_COMPUTER_OFF)) then begin
      call Radio14;
   end
   else if (global_var(GVAR_FIELD_COMPUTER_MODIFIED)) then begin
      call Radio12;
   end
   else if (global_var(GVAR_VATS_ALERT)) then begin
      if (map_var(12) == 3) then begin
         call Radio13;
      end
      else begin
         call Radio11;
      end
   end
end

procedure RadioStrg2 begin
   if (global_var(GVAR_RADIO_COMPUTER_OFF)) then begin
      call Radio14;
   end
   else if (global_var(GVAR_FIELD_COMPUTER_MODIFIED)) then begin
      call Radio21;
   end
   else if (global_var(GVAR_VATS_ALERT)) then begin
      call Radio22;
   end
   else begin
      call Radio23;
   end
end

procedure RadioVats1 begin
   if (global_var(GVAR_RADIO_COMPUTER_OFF)) then begin
      call Radio12;
   end
   else if (map_var(6) and map_var(MVAR_BOS_FLOAT) and not(local_var(0))) then begin
      call Radio36;
   end
   else if (global_var(GVAR_FIELD_COMPUTER_MODIFIED)) then begin
      call Radio31;
   end
   else if (global_var(GVAR_VATS_ALERT)) then begin
      call Radio22;
   end
   else begin
      call Radio23;
   end
end

procedure Radio40 begin
   display_msg(mstr(120));
end
