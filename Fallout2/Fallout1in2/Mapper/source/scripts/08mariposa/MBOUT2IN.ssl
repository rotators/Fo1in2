#include "define.h"
#include "maps/mbent.h"

#define NAME                    SCRIPT_MBOUT2IN

#include "command.h"

procedure start;
procedure look_at_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure alert;

procedure damage_p_proc;

procedure start begin
end

procedure look_at_p_proc begin
   set_map_var(MVAR_MBDoor_ptr, self_obj);
end

procedure use_p_proc begin
   script_overrides;
   if (source_obj == Katja_ptr) then begin
      float_msg(Katja_ptr, message_str(SCRIPT_KATJA, 172), FLOAT_MSG_NORMAL);
      set_global_var(GVAR_MBASE_DOOR_HOLODISK, 2);
      obj_unlock(self_obj);
   end
   else begin
      if (not(obj_is_locked(self_obj))) then begin
         load_map(MAP_MBSTRG12, 12);
      end
      else if ((map_var(MVAR_know_door_code) == 1) or (global_var(GVAR_MBASE_DOOR_HOLODISK) == 1)) then begin
         display_msg(mstr(101));
         set_global_var(GVAR_MBASE_DOOR_HOLODISK, 2);
         obj_unlock(self_obj);
      end
      else begin
         display_msg(mstr(100));
      end
   end
end

procedure use_obj_on_p_proc begin
variable Item := obj_pid(obj_being_used_with);

   if (Item == PID_MBASE_SEC_CODE) then begin
      if (global_var(GVAR_MBASE_DOOR_HOLODISK) == 0) then
         set_global_var(GVAR_MBASE_DOOR_HOLODISK, 1);

      call use_p_proc;
   end
   else if (Item == PID_ELECTRONIC_LOCKPICKS) then begin
      script_overrides;
      if (not(obj_is_locked(self_obj))) then begin
         display_msg(mstr(102));
      end
      else begin
         if (is_success(roll_vs_skill(dude_obj, SKILL_LOCKPICK, -40))) then begin
            set_global_var(GVAR_MBASE_DOOR_HOLODISK, 2);
            obj_unlock(self_obj);

            display_msg(mstr(103));
            give_xp(EXP_LOCKPICK_NEG_40);
         end
         else begin
            display_msg(mstr(104));
            set_local_var(0, local_var(0) + 1);
         end
      end
   end
   call alert;
end

procedure use_skill_on_p_proc begin
   if (action_being_used == SKILL_LOCKPICK) then begin
      if (not(obj_is_locked(self_obj))) then begin
         display_msg(mstr(102));
      end
      else begin
         script_overrides;
         if (is_success(roll_vs_skill(dude_obj, SKILL_LOCKPICK, -60))) then begin
            set_global_var(GVAR_MBASE_DOOR_HOLODISK, 2);
            obj_unlock(self_obj);

            display_msg(mstr(103));
            give_xp(EXP_LOCKPICK_NEG_60);
         end
         else begin
            display_msg(mstr(105));
            set_local_var(0, local_var(0) + 1);
         end
      end
   end
   call alert;
end

procedure alert begin
   if (local_var(0) > 2) then begin
      set_global_var(GVAR_VATS_ALERT, 1);
   end
end

procedure damage_p_proc begin
   set_local_var(0, local_var(0) + 1);
   display_msg(mstr(106));
   call alert;
end
