/*

   Mariposa - Outside Guard Mutant
               FENCE ENTRANCE

*/

/* Include Files */
#include "define.h"
#include "mbase.h"
#include "maps/mbent.h"

#define NAME                    SCRIPT_GENSUPR
#define TOWN_REP_VAR            (GVAR_TOWN_REP_MBASE)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

procedure VGateMut00;
procedure VGateMut03;
procedure VGateMut03a;
procedure VGateMut03b;
procedure VGateMut04;
procedure VGateMut05;
procedure VGateMut06;
procedure VGateMut07;
procedure VGateMut08;
procedure VGateMutAlert;
procedure VGateMutxx;

procedure bos_attack;

import variable removal_ptr;

variable initial := 0;
variable tmp_hostile;
variable round_count;
variable gate_tile := 22106;
variable guard_tile := 20902;
variable home_tile := 7000;
variable waypoint;

procedure start begin
   if not(initial) then begin
      initial := 1;
      set_self_team(TEAM_NECROPOLIS_MUTANT);
      set_self_ai(AI_SUPER_MUTANT_SGT);
      if (map_var(MVAR_radio_trick)) then begin
         move_to(self_obj, home_tile, 0);
      end
      else begin
         add_timer_event(self_obj, game_ticks(30), 1);
      end
   end
end

procedure map_enter_p_proc begin
   if (map_var(MVAR_radio_trick)) then begin
      destroy_object(self_obj);
   end
end

procedure combat_p_proc begin
   if (fixed_param == COMBAT_SUBTYPE_TURN) then begin
      round_count := round_count + 1;
   end
   if (round_count > 2) then begin
      call VGateMutAlert;
   end
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if (tmp_hostile) then begin
         tmp_hostile := 0;
         attack(dude_obj);
      end
      else begin
         if (global_var(GVAR_VATS_ALERT)) then begin
            tmp_hostile := 1;
         end
         else if (not(map_var(4))) then begin
            if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
               dialogue_system_enter;
            end
         end
      end
   end
   if (map_var(MVAR_radio_trick)) then begin
      if (not(waypoint)) then begin
         if (self_tile != 22312) then begin
            self_walk_to_tile(22312);
         end
         else begin
            waypoint := 1;
         end
      end
      else if (waypoint == 1) then begin
         if (self_tile != 26317) then begin
            self_walk_to_tile(26317);
         end
         else begin
            waypoint := 2;
         end
      end
      else if (waypoint == 2) then begin
         if (self_tile != 31517) then begin
            self_walk_to_tile(32319);
         end
         else begin
            waypoint := 3;
         end
      end
      else if (waypoint == 3) then begin
         removal_ptr := self_obj;
      end
   end
end

procedure destroy_p_proc begin
   inc_inv_evil_crit
end

procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure talk_p_proc begin
   set_tma_data(tma_source_generic, TMA_MSG_MBASE, -1, -1, 997, 999);

   dude_look_at_self;
   if bos_invading_mbase then begin
      float_msg(self_obj, mstr(random(101, 103)), FLOAT_MSG_RED);
      tmp_hostile := 1;
   end
   else if (global_var(GVAR_LIEUTENANTS_DEAD)) then begin
      call VGateMut08;
   end
   else begin
      if (dude_is_armed) and not(tmp_hostile) then begin
         if (random(0, 5) == 5) then begin
            call VGateMut00;
         end
         else begin
            tmp_hostile := 1;
         end
      end
      else begin
         start_dialog_at_node(VGateMut03);
      end
   end
end

procedure timed_event_p_proc begin
   if (not(map_var(MVAR_radio_trick))) then begin
      if (self_tile == guard_tile) then begin
         self_walk_to_tile(gate_tile);
      end
      else begin
         self_walk_to_tile(guard_tile);
      end
      add_timer_event(self_obj, game_ticks(30), 1);
   end
end

procedure VGateMut00 begin
   float_msg(self_obj, mstr(random(101, 103)), FLOAT_MSG_RED);
   tmp_hostile := 1;
end

procedure VGateMut03 begin
   Reply(random(104, 106));
   BLowOption(107, VGateMut04);
   BOption(108, VGateMut04, 4);
   NOption(109, VGateMut05, 5);
   NOption(110, VGateMut03a, 6);
   if dude_wearing_coc_robe then begin
      NOption(111, VGateMut03b, 6);
   end
end

procedure VGateMut03a begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call VGateMut07;
   end
   else begin
      call VGateMut06;
   end
end

procedure VGateMut03b begin
   coc_disguise_check;
   if DISGUISED and (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 25))) then begin
      call VGateMut07;
   end
   else begin
      call VGateMut06;
   end
end

procedure VGateMut04 begin
   tmp_hostile := 1;
   BMessage(random(112, 114));
end

procedure VGateMut05 begin
   Reply(115);
   NOption(116, VGateMutxx, 5);
   BOption(117, VGateMutAlert, 5);
end

procedure VGateMut06 begin
   tmp_hostile := 1;
   BMessage(random(118, 120));
end

procedure VGateMut07 begin
   set_map_var(4, 1);
   NMessage(random(121, 123));
end

procedure VGateMut08 begin
   float_msg(self_obj, mstr(random(124, 127)), FLOAT_MSG_RED);
   tmp_hostile := 1;
end

procedure VGateMutAlert begin
   set_global_var(GVAR_VATS_ALERT, 1);
   tmp_hostile := 1;
end

procedure VGateMutxx begin
   set_global_var(GVAR_ENTERING_VATS_HOW, 2);
   load_map(MAP_MBVATS12, 5);
end
