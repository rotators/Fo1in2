#include "define.h"

#define NAME                    SCRIPT_DEADCOMP

#include "command.h"

procedure start;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure use_p_proc;
procedure use_skill_on_p_proc;

procedure NecroDemoCompEgg00;
procedure NecroDemoCompEgg01;
procedure NecroDemoCompEgg02;
procedure NecroDemoCompEgg03;
procedure NecroDemoCompEgg04;
procedure NecroDemoCompEgg05;
procedure PlayGame;
procedure PlayDemo;
procedure CLS;

#define EVENT_FLOAT     (1)

variable Damage;
variable DisplayLine := 0;

// local_var(4) == Comp_Fixed
// local_var(5) == EXP_Earned
// local_var(6) == DemoExp
// local_var(7) == played_before
// local_var(8) == PreviousDisplayedLine
// local_var(9) == Heard500
// local_var(10) == Heard501
// local_var(11) == Heard502
//      12 is reserved, do not use
// local_var(13) == SeenAllMsgs
// local_var(14) == SeenDemo400
// local_var(15) == SeenDemo401
//  local_var(16) == Heard503

procedure start begin
end

procedure map_enter_p_proc begin
   add_timer_event(self_obj, game_ticks(6), EVENT_FLOAT);
end

procedure timed_event_p_proc begin
   if (fixed_param == EVENT_FLOAT and fo1in2_scrapheap_enabled) then begin
      if not(fo1_demo_completed) then begin
         if (dude_perception >= 5) then begin
            floater(1000 + DisplayLine);
            DisplayLine := DisplayLine + 1;
            if (DisplayLine > 3) then DisplayLine := 0;
         end
         flush_add_timer_event(self_obj, game_ticks(10), EVENT_FLOAT);
      end
   end
end

procedure use_p_proc begin
   script_overrides;
   if (fo1in2_scrapheap_enabled) then begin
      if fo1_demo_completed then begin
         display_msg(mstr(100));
      end
      else begin
         load_map(MAP_SCRAPHEAP, 0);
      end
   end
   else if fixt_enabled and (local_var(4) == 1) then begin
      start_gdialog(62, self_obj, 4, -1, -1);
      gsay_start;
      call NecroDemoCompEgg00;
      gsay_end;
      end_dialogue;
   end
   else begin
      display_msg(mstr(100));
   end
end

procedure use_skill_on_p_proc begin
   if fixt_enabled then begin
      script_overrides;
      if (action_being_used == SKILL_REPAIR) then begin
         if (is_success(roll_vs_skill(dude_obj, SKILL_REPAIR, -30))) then begin
            if (local_var(4) != 1) then begin
               display_msg(mstr(101));
               set_local_var(4, 1);
            end
         end
         else begin
            display_msg(mstr(104));
            Damage := random(1, 6);
            critter_heal(dude_obj, -Damage);
         end
      end
      if (action_being_used == SKILL_SCIENCE) then begin
         if (is_success(roll_vs_skill(dude_obj, SKILL_SCIENCE, -30))) then begin
            if (local_var(4) == 1) then begin
               start_gdialog(62, self_obj, 4, -1, -1);
               gsay_start;
               call NecroDemoCompEgg00;
               gsay_end;
               end_dialogue;
            end
            else begin
               display_msg(mstr(102));
            end
         end
      end
   end
end

procedure NecroDemoCompEgg00 begin
   Reply(105);
   if (dude_iq == 4) or (dude_iq == 5) then begin
      NOption(130, CLS, 4);
   end
   NLowOption(140, NecroDemoCompEgg01);
   NOption(106, NecroDemoCompEgg01, 6);
   NOption(107, CLS, 6);
end

procedure NecroDemoCompEgg01 begin
   Reply(mstr(108) + mstr(111));
   NOption(109, NecroDemoCompEgg02, 6);
   NOption(107, CLS, 6);
end

procedure NecroDemoCompEgg02 begin
   Reply(114);
   NOption(106, NecroDemoCompEgg03, 6);
   NOption(107, CLS, 6);
end

procedure NecroDemoCompEgg03 begin
   Reply(mstr(115) + mstr(120));
   NOption(113, NecroDemoCompEgg04, 6);
   NOption(126, NecroDemoCompEgg05, 6);
   NOption(107, CLS, 6);
end

procedure NecroDemoCompEgg04 begin
   Reply(117);
   NOption(116, PlayGame, 6);
end

procedure NecroDemoCompEgg05 begin
   Reply(117);
   NOption(116, PlayDemo, 6);
end

procedure PlayGame begin
   gfade_out(1);
   DisplayLine := random(500, 503);
   if ((local_var(9) == 1) and (local_var(10) == 1) and (local_var(11) == 1) and (local_var(16) == 1)) then begin
   end
   else begin
      while(((DisplayLine == 500) and (local_var(9) == 1)) or ((DisplayLine == 501) and (local_var(10) == 1)) or ((DisplayLine == 502) and (local_var(11) == 1)) or ((DisplayLine == 503) and (local_var(16) == 1))) do
      begin
         if (DisplayLine == 503) then begin
            if (local_var(16) == 1) then begin
               DisplayLine := random(500, 502);
            end
         end
         else if (DisplayLine == 500) then begin
            if (local_var(9) == 1) then begin
               DisplayLine := random(501, 503);
            end
         end
         else if (DisplayLine == 501) then begin
            if (local_var(10) == 1) then begin
               DisplayLine := random(502, 503);
            end
         end
         else if (DisplayLine == 502) then begin
            if (local_var(11) == 1) then begin
               if random(0, 2) then begin
                  DisplayLine := 503;
               end
               else begin
                  DisplayLine := random(500, 501);
               end
            end
         end
      end
      if (local_var(5) == 0) then begin
         set_local_var(5, 1);
         give_xp_msg(EXP_PLAY_FALLOUT, mstr(119));
         if (DisplayLine == 500) then begin
            set_local_var(9, 1);
         end
         else if (DisplayLine == 501) then begin
            set_local_var(10, 1);
         end
         else if (DisplayLine == 502) then begin
            set_local_var(11, 1);
         end
         else if (DisplayLine == 503) then begin
            set_local_var(16, 1);
         end
      end
      else begin
         if ((DisplayLine == 500) and (local_var(9) == 0)) then begin
            set_local_var(9, 1);
            give_xp_msg(EXP_PLAY_FALLOUT_SMALL, mstr(119));
         end
         else if ((DisplayLine == 501) and (local_var(10) == 0)) then begin
            set_local_var(10, 1);
            give_xp_msg(EXP_PLAY_FALLOUT_SMALL, mstr(119));
         end
         else if ((DisplayLine == 502) and (local_var(11) == 0)) then begin
            set_local_var(11, 1);
            give_xp_msg(EXP_PLAY_FALLOUT_SMALL, mstr(119));
         end
         else if ((DisplayLine == 503) and (local_var(16) == 0)) then begin
            set_local_var(16, 1);
            give_xp_msg(EXP_PLAY_FALLOUT_SMALL, mstr(119));
         end
      end
   end
   gfade_in(1);
   Reply(DisplayLine);
   if (local_var(7) == 0) then begin
      set_local_var(7, 1);
      NOption(110, CLS, 6);
   end
   else begin
      NOption(121, CLS, 6);
   end
end

procedure PlayDemo begin
   variable LVar0;
   LVar0 := random(400, 401);
   if (local_var(14) and local_var(15)) then begin
   end
   else begin
      if (LVar0 == 400) then begin
         if local_var(14) then begin
            LVar0 := 401;
            set_local_var(15, 1);
         end
         else begin
            set_local_var(14, 1);
         end
      end
      else if (LVar0 == 401) then begin
         if local_var(15) then begin
            LVar0 := 400;
            set_local_var(14, 1);
         end
         else begin
            set_local_var(15, 1);
         end
      end
   end
   gfade_out(1);
   gfade_in(1);
   Reply(LVar0);
   if (local_var(6) == 0) then begin
      set_local_var(6, 1);
      give_xp_msg(EXP_PLAY_FALLOUT_SMALL, mstr(155));
   end
   if (local_var(7) == 0) then begin
      NOption(153, CLS, 6);
   end
   else begin
      NOption(154, CLS, 6);
   end
end

procedure CLS begin
end
