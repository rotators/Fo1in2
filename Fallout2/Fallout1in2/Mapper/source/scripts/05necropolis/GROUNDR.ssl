/*

   Necropolis - Grounder

*/

/* Include Files */
#include "define.h"
//#include "necropolis.h"

#define NAME                    SCRIPT_GROUNDR
#define TOWN_REP_VAR            (GVAR_TOWN_REP_NECROPOLIS)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure timed_event_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure combat_p_proc;
procedure destroy_p_proc;
procedure combat_rads_inc;

procedure groundr00;
procedure groundr01;

procedure timetomove;
procedure set_sleep_tile;

variable tmp_hostile;
variable init := 0;
variable maxleash := 9;
variable noevent;
variable loopcount;
variable rndy;
variable dist;
variable sleep_tile;
variable new_tile;

procedure start begin
   if (not(init)) then begin
      init := 1;
      if (local_var(6) == 0) then begin
         set_local_var(6, self_tile);
         set_local_var(5, 1);
      end
      set_self_team(TEAM_NECROPOLIS_UNDERGROUND);
      set_self_ai(AI_GHOUL_COWARD);
   end
end

procedure timed_event_p_proc begin
   call timetomove;
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure description_p_proc begin
   script_overrides;
   display_msg(message_str(SCRIPT_GENGHOUL, 204));
end
procedure pickup_p_proc begin
   tmp_hostile := 1;
end

procedure talk_p_proc begin
   dude_look_at_self;
   get_reaction
   if (local_var(1) < 2) then begin
      call groundr01;
   end
   else begin
      call groundr00;
   end
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure groundr00 begin
   float_msg(self_obj, mstr(random(101, 104)), FLOAT_MSG_NORMAL);
end

procedure groundr01 begin
   float_msg(self_obj, mstr(random(105, 107)), FLOAT_MSG_NORMAL);
end

procedure critter_p_proc begin
   if (tmp_hostile > 0) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end
   else begin
      if (local_var(5)) then begin
         loopcount := loopcount + 1;
         if (loopcount > 40) then begin
            loopcount := 0;
            if (noevent == 0) then begin
               noevent := 1;
               add_timer_event(self_obj, game_ticks(random(5, 13)), 0);
            end
         end
      end
   end
end

procedure timetomove begin
   noevent := 0;
   set_local_var(7, self_tile);
   new_tile := tile_num_in_direction(local_var(7), random(0, 5), 2);
   if (tile_distance(local_var(6), new_tile) < maxleash) then begin
      self_walk_to_tile(new_tile);
   end
end

procedure set_sleep_tile begin
   if (local_var(6) == 21943) then begin
      sleep_tile := 21143;
   end
   else if (local_var(6) == 21541) then begin
      sleep_tile := 20537;
   end
   else if (local_var(6) == 21740) then begin
      sleep_tile := 20735;
   end
end

procedure combat_p_proc begin
end
