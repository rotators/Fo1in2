/*

   Necropolis - Garret

*/

/* Include Files */
#include "define.h"
//#include "necropolis.h"

#define NAME                    SCRIPT_GARRET
#define TOWN_REP_VAR            (GVAR_TOWN_REP_NECROPOLIS)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure garretend;
procedure garretcbt;
procedure goodstuff;
procedure neutstuff;
procedure badstuff;
procedure reward;
procedure done;
procedure garret00a;
procedure garret00b;
procedure garret00c;
procedure garret00ca;
procedure garret01a;
procedure garret01c;
procedure garret02a;
procedure garret02c;
procedure garret03c;
procedure garret04;
procedure give_flare;
procedure give_cola;

import variable Fridge_ptr;
import variable Garret_ptr;

variable Shotgun_ptr;
variable Shells_ptr;
variable Cola_ptr;
variable Flare_ptr;
variable Hostile;
variable init := 0;
variable maxleash := 9;
variable noevent;
variable loopcount;
variable new_tile;
variable gavelist;
variable moving;
variable stuff;
variable indlog;
variable robbed;
variable flare_count;
variable cola_count;
variable CASH;
variable THRONE;
variable target_hex := 20113;
variable my_hex;

procedure start begin
   if (not(init)) then begin
      if (local_var(7) == 0) then begin
         set_local_var(7, self_tile);
      end
      set_self_team(TEAM_NECROPOLIS_GANGER);
      set_self_ai(AI_GHOUL_NASTY);
      Garret_ptr := self_obj;
      init := 1;
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure pickup_p_proc begin
   Hostile := 1;
end

procedure critter_p_proc begin
   if (global_var(GVAR_ENEMY_NECROPOLIS) and self_can_see_dude) then begin
      attack(dude_obj);
   end
   else begin

      my_hex := self_tile;
      if (Hostile > 0) then begin
         set_global_var(GVAR_ENEMY_NECROPOLIS, 1);
         attack(dude_obj);
      end

      if (global_var(GVAR_SIGNAL_REWARD) bwand 1) then begin
         if (local_var(5) == 0) then begin
            moving := 1;
            float_msg(self_obj, mstr(114), FLOAT_MSG_NORMAL);
            set_local_var(5, 1);
         end
         else if (local_var(5) == 1) then begin
            moving := 1;
            if (my_hex != target_hex) then begin
               self_walk_to_tile(target_hex);
            end
            else begin
               set_local_var(5, 2);
               obj_unlock(Fridge_ptr);
               obj_open(Fridge_ptr);
               use_obj(Fridge_ptr);
            end
         end
         else if (local_var(5) == 2) then begin
            moving := 1;
            if (tile_distance_objs(self_obj, dude_obj) < 5) then begin
               call reward;
               set_local_var(5, 3);
               use_obj(Fridge_ptr);
               obj_close(Fridge_ptr);
               obj_lock(Fridge_ptr);
            end
         end
         else if (local_var(5) == 3) then begin
            moving := 1;
            target_hex := local_var(7);
            if (my_hex != target_hex) then begin
               self_walk_to_tile(target_hex);
            end
            else begin
               call done;
            end
         end
      end

   end
end

procedure destroy_p_proc begin
   set_global_var(GVAR_ENEMY_NECROPOLIS, 1);
   set_global_var(GVAR_GARRET_STATUS, 3);
   inc_inv_evil_crit
end

procedure talk_p_proc begin
   set_tma_data_generic(TMA_MSG_HALLDED);

   dude_look_at_self;
   if ((local_var(8) == 0) and (global_var(GVAR_SIGNAL_REWARD) bwand 2)) then begin
      set_local_var(8, 1);
      float_msg(self_obj, mstr(201), FLOAT_MSG_NORMAL);
      display_msg(mstr(202));
      stuff := create_object(PID_SMALL_ENERGY_CELL, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_MICRO_FUSION_CELL, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_BUFFOUT, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_MENTATS, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_STIMPAK, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_STIMPAK, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_FRAG_GRENADE, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_FRAG_GRENADE, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_PLASMA_GRENADE, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_PLASMA_GRENADE, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_PULSE_GRENADE, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_PULSE_GRENADE, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_5MM_JHP, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_5MM_JHP, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_5MM_JHP, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_5MM_JHP, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_5MM_AP, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_5MM_AP, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_5MM_AP, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
      stuff := create_object(PID_5MM_AP, 0, 0);
      add_obj_to_inven(dude_obj, stuff);
   end
   else begin
      if (moving) then begin
         display_msg(mstr(200));
      end
      else begin
         if (day) then begin
            get_reaction
            if (local_var(4)) then begin
               call garret02a;
            end
            else begin
               set_local_var(4, 1);
               if (local_var(LVAR_reaction_level) >= NEUTRAL) then begin
                  call garret04;
               end
               else begin
                  call garret01a;
               end
            end
         end
         else begin
            call garret00b;
         end
      end
   end
end

procedure garretend begin
end

procedure garretcbt begin
   Hostile := 1;
end

procedure goodstuff begin
   CASH := CASH + 100;
   dude_caps_adjust(100);
   call neutstuff;
   call badstuff;
end

procedure neutstuff begin
   CASH := CASH + 50;
   dude_caps_adjust(50);
   if (get_item_count(Fridge_ptr, PID_SHOTGUN)) then begin
      display_msg(mstr(204));
      Shotgun_ptr := get_item(Fridge_ptr, PID_SHOTGUN);
      rm_obj_from_inven(Fridge_ptr, Shotgun_ptr);
      add_obj_to_inven(dude_obj, Shotgun_ptr);
   end
   else begin
      robbed := 1;
   end
   if (get_item_count(Fridge_ptr, PID_SHOTGUN_SHELLS)) then begin
      display_msg(mstr(205));
      Shells_ptr := get_item(Fridge_ptr, PID_SHOTGUN_SHELLS);
      rm_obj_from_inven(Fridge_ptr, Shells_ptr);
      add_obj_to_inven(dude_obj, Shells_ptr);
   end
   else begin
      robbed := 1;
   end
   if (get_item_count(Fridge_ptr, PID_SHOTGUN_SHELLS)) then begin
      Shells_ptr := get_item(Fridge_ptr, PID_SHOTGUN_SHELLS);
      rm_obj_from_inven(Fridge_ptr, Shells_ptr);
      add_obj_to_inven(dude_obj, Shells_ptr);
   end
   else begin
      robbed := 1;
   end
end

procedure badstuff begin
   CASH := CASH + 50;
   dude_caps_adjust(50);
   flare_count := 0;
   call give_flare;
   call give_flare;
   call give_flare;
   call give_flare;
   cola_count := 0;
   call give_cola;
   call give_cola;
   call give_cola;
   call give_cola;
end

procedure reward begin
   CASH := 0;
   robbed := 0;
   display_msg(mstr(203));
   if (local_var(LVAR_reaction_level) >= GOOD) then begin
      call goodstuff;
   end
   else begin
      if (local_var(LVAR_reaction_level) >= NEUTRAL) then begin
         call neutstuff;
      end
      else begin
         call badstuff;
      end
   end
   if (flare_count) then begin
      if (flare_count > 1) then begin
         display_msg(mstr(206));
      end
      else begin
         display_msg(mstr(207));
      end
   end
   if (cola_count) then begin
      if (cola_count > 1) then begin
         display_msg(mstr(208));
      end
      else begin
         display_msg(mstr(209));
      end
   end
   display_msg(CASH + mstr(210));
   if (robbed) then begin
      float_msg(self_obj, mstr(121), FLOAT_MSG_NORMAL);
   end
   else begin
      float_msg(self_obj, mstr(201), FLOAT_MSG_NORMAL);
   end
end

procedure done begin
   moving := 0;
   set_local_var(5, 4);
end

procedure garret00a begin
   Reply(101);
   NOption(102, garretend, 4);
   NOption(103, garret01a, 4);
   NOption(104, garret02a, 5);
   NLowOption(112, garretend);
end

procedure garret00b begin
   float_msg(self_obj, mstr(105), FLOAT_MSG_NORMAL);
   call garretend;
end

procedure garret00c begin
   Reply(109);
   NOption(110, garret01c, 3);
   NOption(111, garret00ca, 5);
   NLowOption(112, garret02c);
end

procedure garret00ca begin
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then begin
      call garret03c;
   end
   else begin
      call garret02c;
   end
end

procedure garret01a begin
   if (indlog) then begin
      NMessage(113);
   end
   else begin
      float_msg(self_obj, mstr(113), FLOAT_MSG_NORMAL);
   end
   call garretend;
end

procedure garret01c begin
   NMessage(115);
   DownReact
   call garretend;
end

procedure garret02a begin
   DownReact
   if (indlog) then begin
      NMessage(116);
   end
   else begin
      float_msg(self_obj, mstr(116), FLOAT_MSG_NORMAL);
   end
   call garretend;
end

procedure garret02c begin
   NMessage(117);
   call garretend;
end

procedure garret03c begin
   NMessage(118);
   display_msg(mstr(119));
   NMessage(120);
   call garretend;
end

procedure garret04 begin
   start_gdialog(102, self_obj, 4, -1, -1);
   gsay_start;
   indlog := 1;
   call garret00a;
   indlog := 0;
   gsay_end;
   end_dialogue;
end

procedure give_flare begin
   if (get_item_count(Fridge_ptr, PID_FLARE)) then begin
      flare_count := flare_count + 1;
      Flare_ptr := get_item(Fridge_ptr, PID_FLARE);
      rm_obj_from_inven(Fridge_ptr, Flare_ptr);
      add_obj_to_inven(dude_obj, Flare_ptr);
   end
   else begin
      robbed := 1;
   end
end

procedure give_cola begin
   if (get_item_count(Fridge_ptr, PID_NUKA_COLA)) then begin
      cola_count := cola_count + 1;
      Cola_ptr := get_item(Fridge_ptr, PID_NUKA_COLA);
      rm_obj_from_inven(Fridge_ptr, Cola_ptr);
      add_obj_to_inven(dude_obj, Cola_ptr);
   end
   else begin
      robbed := 1;
   end
end

procedure damage_p_proc begin
   set_global_var(GVAR_ENEMY_NECROPOLIS, 1);
end
