//
// ---TRAP SCRIPT---  Sduibek
//
#include "define.h"

#define NAME                    SCRIPT_SETDOOR

#include "command.h"

procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure damage_p_proc;

procedure Locked_And_Trapped;
procedure Door_Locked;
procedure Door_Trapped;
variable Damage := 0;

variable Set_Off_Trap;

procedure start begin
end

procedure look_at_p_proc begin
   script_overrides;
   if (is_success(do_check(dude_obj, STAT_pe, 0))) then
      display_msg(mstr(101));
   else
      display_msg(mstr(100));
end

procedure description_p_proc begin
   script_overrides;
   if ((local_var(1) == 0) and (local_var(0) == 0)) then begin
      call Locked_And_Trapped;
   end
   else if (local_var(0) == 0) then begin
      call Door_Trapped;
   end
   else if (local_var(1) == 0) then begin
      call Door_Locked;
   end
   else begin
      display_msg(mstr(102));
   end
end

procedure use_p_proc begin
   variable LVar0 := 0;
   LVar0 := roll_vs_skill(source_obj, SKILL_TRAPS, 0);
   if ((local_var(1) == 0) and (local_var(0) == 0)) then begin
      script_overrides;
      if (is_success(LVar0)) then begin
         reg_anim_clear(source_obj);
         if source_obj == dude_obj then begin
            display_msg(mstr(106));
         end
         else begin
            display_msg(proto_data(obj_pid(source_obj), 1) + mstr(105));
         end
      end
      else begin
         display_msg(mstr(104));
         Set_Off_Trap := 1;
         Damage := random(10, 35) + (difficulty_level * random(5, 10));
         //play_sfx("WHN1XXX1");
         //critter_dmg(source_obj, Damage, DMG_explosion);

         // Fo1:
         //explosion(tile_num(source_obj), elevation(self_obj), random(10, 30));
         // Let's take damage values from Fixt, because vanilla is weak ass shit.
         explosion(source_tile, self_elevation, Damage);

         set_local_var(0, 1);
         set_local_var(2, local_var(2) + 1);
         display_msg(mstr(103));
      end
   end
   else begin
      if (local_var(0) == 0) then begin
         if (is_success(LVar0)) then begin
            script_overrides;
            reg_anim_clear(source_obj);
            if source_obj == dude_obj then begin
               display_msg(mstr(106));
            end
            else begin
               display_msg(proto_data(obj_pid(source_obj), 1) + mstr(105));
            end
         end
         else begin
            display_msg(mstr(104));
            Set_Off_Trap := 1;
            Damage := random(10, 35) + (difficulty_level * random(5, 10));
            //play_sfx("WHN1XXX1");
            //critter_dmg(source_obj, Damage, DMG_explosion);

            // Fo1:
            //explosion(tile_num(source_obj), elevation(self_obj), random(10, 30));
            // Let's take damage values from Fixt, because vanilla is weak ass shit.
            explosion(source_tile, self_elevation, Damage);

            set_local_var(0, 1);
            set_local_var(2, local_var(2) + 1);
         end
      end
      else begin
         if (local_var(1) == 0) then begin
            script_overrides;
            display_msg(mstr(103));
         end
      end
   end
end

procedure use_skill_on_p_proc begin
   variable LVar0 := 0;
   if ((action_being_used == SKILL_TRAPS) and (local_var(0) == 0)) then begin
      script_overrides;
      LVar0 := roll_vs_skill(source_obj, action_being_used, 0);
      if (is_success(LVar0)) then begin
         reg_anim_clear(source_obj);
         if source_obj == dude_obj then begin
            display_msg(mstr(106));
            set_local_var(0, 1);
            give_xp(EXP_TRAPS_NEG_30);
         end
         else begin
            display_msg(proto_data(obj_pid(source_obj), 1) + mstr(105));
         end
      end
      else begin
         display_msg(mstr(104));
         Set_Off_Trap := 1;
         Damage := random(10, 35) + (difficulty_level * random(5, 10));
         //play_sfx("WHN1XXX1");
         //critter_dmg(source_obj, Damage, DMG_explosion);

         // Fo1:
         //explosion(tile_num(source_obj), elevation(self_obj), random(10, 30));
         // Let's take damage values from Fixt, because vanilla is weak ass shit.
         explosion(source_tile, self_elevation, Damage);
         set_local_var(0, 1);
         set_local_var(2, local_var(2) + 1);
      end
   end
   else if ((action_being_used == SKILL_LOCKPICK) and (local_var(1) == 0)) then begin
      script_overrides;
      LVar0 := roll_vs_skill(source_obj, action_being_used, -20);
      if (is_success(LVar0)) then begin
         set_local_var(1, 1);
         display_msg(mstr(111));
         obj_unlock(self_obj);
         give_xp(EXP_LOCKPICK_NEG_30);
      end
      else begin
         if (is_critical(LVar0)) then begin
            jam_lock(self_obj);
            display_msg(mstr(112));
         end
         else begin
            display_msg(mstr(110));
         end
      end
   end
end

procedure use_obj_on_p_proc
begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   variable LVar2 := 0;
   LVar0 := obj_pid(obj_being_used_with);
   LVar1 := roll_vs_skill(source_obj, SKILL_TRAPS, 0);
   LVar2 := roll_vs_skill(source_obj, SKILL_LOCKPICK, 0);
   if (LVar0 == 84) then begin
      if ((local_var(1) == 0) and (local_var(0) == 0)) then begin
         script_overrides;
         if (is_success(LVar1)) then begin
            reg_anim_clear(source_obj);
            if source_obj == dude_obj then begin
               display_msg(mstr(106));
            end
            else begin
               display_msg(proto_data(obj_pid(source_obj), 1) + mstr(105));
            end
         end
         else begin
            display_msg(mstr(104));
            Set_Off_Trap := 1;
            Damage := random(10, 35) + (difficulty_level * random(5, 10));
            //play_sfx("WHN1XXX1");
            //critter_dmg(source_obj, Damage, DMG_explosion);

            // Fo1:
            //explosion(tile_num(source_obj), elevation(self_obj), random(10, 30));
            // Let's take damage values from Fixt, because vanilla is weak ass shit.
            explosion(source_tile, self_elevation, Damage);
            set_local_var(0, 1);
            set_local_var(2, local_var(2) + 1);
         end
         display_msg(mstr(108));
      end
      else begin
         if (local_var(0) == 0) then begin
            script_overrides;
            if (is_success(LVar1)) then begin
               reg_anim_clear(source_obj);
               if source_obj == dude_obj then begin
                  display_msg(mstr(106));
               end
               else begin
                  display_msg(proto_data(obj_pid(source_obj), 1) + mstr(105));
               end
            end
            else begin
               display_msg(mstr(104));
               Set_Off_Trap := 1;
            Damage := random(10, 35) + (difficulty_level * random(5, 10));
            //play_sfx("WHN1XXX1");
            //critter_dmg(source_obj, Damage, DMG_explosion);

            // Fo1:
            //explosion(tile_num(source_obj), elevation(self_obj), random(10, 30));
            // Let's take damage values from Fixt, because vanilla is weak ass shit.
            explosion(source_tile, self_elevation, Damage);
               set_local_var(0, 1);
               set_local_var(2, local_var(2) + 1);
            end
            display_msg(mstr(108));
         end
         else begin
            if (local_var(1) == 0) then begin
               script_overrides;
               if (is_success(LVar2)) then begin
                  set_local_var(1, 1);
                  display_msg(mstr(111));
                  give_xp(EXP_LOCKPICK_NEG_30);
                  obj_unlock(self_obj);
               end
               else begin
                  if (is_critical(LVar2)) then begin
                     rm_obj_from_inven(dude_obj, LVar0);
                     destroy_object(LVar0);
                     jam_lock(self_obj);
                     display_msg(mstr(109));
                  end
                  else begin
                     display_msg(mstr(110));
                  end
               end
            end
         end
      end
   end
   else begin
      script_overrides;
      LVar1 := roll_vs_skill(source_obj, SKILL_TRAPS, 0);
      if ((local_var(1) == 0) and (local_var(0) == 0)) then begin
         script_overrides;
         if (is_success(LVar1)) then begin
            reg_anim_clear(source_obj);
            if source_obj == dude_obj then begin
               display_msg(mstr(106));
            end
            else begin
               display_msg(proto_data(obj_pid(source_obj), 1) + mstr(105));
            end
         end
         else begin
            display_msg(mstr(104));
            Set_Off_Trap := 1;
            Damage := random(10, 35) + (difficulty_level * random(5, 10));
            //play_sfx("WHN1XXX1");
            //critter_dmg(source_obj, Damage, DMG_explosion);

            // Fo1:
            //explosion(tile_num(source_obj), elevation(self_obj), random(10, 30));
            // Let's take damage values from Fixt, because vanilla is weak ass shit.
            explosion(source_tile, self_elevation, Damage);
            set_local_var(0, 1);
            set_local_var(2, local_var(2) + 1);
         end
      end
      else begin
         if (local_var(0) == 0) then begin
            if (is_success(LVar1)) then begin
               reg_anim_clear(source_obj);
               if source_obj == dude_obj then begin
                  display_msg(mstr(106));
               end
               else begin
                  display_msg(proto_data(obj_pid(source_obj), 1) + mstr(105));
               end
            end
            else begin
               display_msg(mstr(104));
               Set_Off_Trap := 1;
            Damage := random(10, 35) + (difficulty_level * random(5, 10));
            //play_sfx("WHN1XXX1");
            //critter_dmg(source_obj, Damage, DMG_explosion);

            // Fo1:
            //explosion(tile_num(source_obj), elevation(self_obj), random(10, 30));
            // Let's take damage values from Fixt, because vanilla is weak ass shit.
            explosion(source_tile, self_elevation, Damage);
               set_local_var(0, 1);
               set_local_var(2, local_var(2) + 1);
            end
         end
         else begin
            if (local_var(1) == 0) then begin
               script_overrides;
               display_msg(mstr(107));
            end
         end
      end
   end
end

procedure map_enter_p_proc begin
   if (local_var(1) == 0) then
      obj_lock(self_obj);
   else
      obj_unlock(self_obj);
end

procedure map_update_p_proc begin
   if (local_var(1) == 0) then
      obj_lock(self_obj);
   else
      obj_unlock(self_obj);
end

procedure damage_p_proc begin
   if (weapon_dmg_type(target_obj) == DMG_explosion) then begin
      set_local_var(2, local_var(2) + 1);
      if (Set_Off_Trap == 0) then begin
         display_msg(mstr(104));
         explosion(self_tile, self_elevation, 80);
         set_local_var(0, 1);
         Set_Off_Trap := 1;
      end
      if (local_var(2) > 1) then begin
         if not(is_loading_game) then set_self_invisible;
      end
   end
   else begin
      display_msg(message_str(SCRIPT_DOOR, 193));
   end
end

procedure Locked_And_Trapped begin
   variable LVar0 := 0;
   variable LVar1 := 0;
   LVar0 := roll_vs_skill(dude_obj, SKILL_TRAPS, 0);
   LVar1 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 0);
   if (is_success(LVar0)) then begin
      if (is_critical(LVar0)) then begin
         if (is_success(LVar1)) then begin
            display_msg(mstr(113));
         end
         else if (is_critical(LVar1)) then begin
            display_msg(mstr(114));
         end
      end
      else begin
         if (is_success(LVar1)) then begin
            display_msg(mstr(115));
         end
         else if (is_critical(LVar1)) then begin
            display_msg(mstr(116));
         end
      end
   end
   else begin
      if (is_critical(LVar0)) then begin
         if (is_success(LVar1)) then begin
            display_msg(mstr(117));
         end
         else if (is_critical(LVar1)) then begin
            display_msg(mstr(118));
         end
      end
      else begin
         if (is_success(LVar1)) then begin
            display_msg(mstr(117));
         end
         else if (is_critical(LVar1)) then begin
            display_msg(mstr(118));
         end
      end
   end
end

procedure Door_Locked begin
   variable LVar0 := 0;
   LVar0 := roll_vs_skill(dude_obj, SKILL_LOCKPICK, 0);
   if (is_success(LVar0)) then begin
      display_msg(mstr(117));
   end
   else begin
      if (is_critical(LVar0)) then begin
         display_msg(mstr(117));
      end
   end
end

procedure Door_Trapped begin
   variable LVar0 := 0;
   LVar0 := roll_vs_skill(dude_obj, SKILL_TRAPS, 0);
   if (is_success(LVar0)) then begin
      if (is_critical(LVar0)) then begin
         display_msg(mstr(114));
      end
      else begin
         display_msg(mstr(116));
      end
   end
   else begin
      if (is_critical(LVar0)) then begin
         display_msg(mstr(118));
      end
      else begin
         display_msg(mstr(118));
      end
   end
end
